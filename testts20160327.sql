/*
SQLyog Enterprise v10.42 
MySQL - 5.6.17 : Database - testts
*********************************************************************
*/

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`testts` /*!40100 DEFAULT CHARACTER SET latin1 */;

USE `testts`;

/*Table structure for table `_cc_co_r4t_data` */

DROP TABLE IF EXISTS `_cc_co_r4t_data`;

CREATE TABLE `_cc_co_r4t_data` (
  `course_content_id` int(11) NOT NULL,
  `total` int(11) DEFAULT NULL,
  `coi_1` int(11) DEFAULT '0',
  `coi_2` int(11) DEFAULT '0',
  `coi_30` int(11) DEFAULT '0',
  `coi_39` int(11) DEFAULT '0',
  `coi_40` int(11) DEFAULT '0',
  PRIMARY KEY (`course_content_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_cc_co_r4t_data` */

insert  into `_cc_co_r4t_data`(`course_content_id`,`total`,`coi_1`,`coi_2`,`coi_30`,`coi_39`,`coi_40`) values (2,7,0,0,0,0,0),(3,7,1,1,1,0,0),(4,7,0,0,0,0,0),(5,7,1,1,1,1,0),(6,7,0,0,0,0,0),(7,7,0,0,0,0,0),(8,7,0,0,0,0,0),(11,7,0,0,0,0,0),(13,7,0,0,0,0,0),(14,7,0,0,0,0,0),(16,7,0,0,0,0,0),(17,7,0,0,0,0,0),(18,7,0,0,0,0,0),(90,7,0,0,0,0,0),(91,7,0,0,0,0,0),(92,7,0,0,0,0,0),(93,7,0,0,0,0,0),(95,7,0,0,0,0,0),(97,7,0,0,0,0,0),(102,7,0,0,0,0,0),(105,7,0,0,0,0,0),(106,7,0,0,0,0,0),(107,7,0,0,0,0,0),(108,7,0,0,0,0,0);

/*Table structure for table `_cc_co_r4tr_data` */

DROP TABLE IF EXISTS `_cc_co_r4tr_data`;

CREATE TABLE `_cc_co_r4tr_data` (
  `course_content_id` int(11) NOT NULL,
  `number_taker` int(11) DEFAULT NULL,
  `coi_1` int(11) DEFAULT '0',
  `coi_1_total` int(11) DEFAULT '0',
  `coi_2` int(11) DEFAULT '0',
  `coi_2_total` int(11) DEFAULT '0',
  `coi_30` int(11) DEFAULT '0',
  `coi_30_total` int(11) DEFAULT '0',
  PRIMARY KEY (`course_content_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_cc_co_r4tr_data` */

insert  into `_cc_co_r4tr_data`(`course_content_id`,`number_taker`,`coi_1`,`coi_1_total`,`coi_2`,`coi_2_total`,`coi_30`,`coi_30_total`) values (2,75,113,3,0,0,0,0),(3,75,0,0,0,0,0,0),(4,75,0,0,64,2,0,0),(5,75,0,0,0,0,0,0),(6,75,0,0,0,0,0,0),(7,75,0,0,0,0,0,0),(8,75,0,0,0,0,0,0),(11,75,0,0,0,0,0,0),(13,75,0,0,0,0,0,0),(14,75,74,2,36,1,150,4),(16,75,0,0,0,0,0,0),(17,75,0,0,0,0,0,0),(18,75,0,0,0,0,0,0);

/*Table structure for table `_co_so_r4tr_data` */

DROP TABLE IF EXISTS `_co_so_r4tr_data`;

CREATE TABLE `_co_so_r4tr_data` (
  `coi_id` int(11) NOT NULL,
  `soi_2` int(11) DEFAULT '0',
  `soi_2_total` int(11) DEFAULT '0',
  `soi_3` int(11) DEFAULT '0',
  `soi_3_total` int(11) DEFAULT '0',
  `soi_4` int(11) DEFAULT '0',
  `soi_4_total` int(11) DEFAULT '0',
  `soi_5` int(11) DEFAULT '0',
  `soi_5_total` int(11) DEFAULT '0',
  `soi_6` int(11) DEFAULT '0',
  `soi_6_total` int(11) DEFAULT '0',
  `soi_7` int(11) DEFAULT '0',
  `soi_7_total` int(11) DEFAULT '0',
  `soi_8` int(11) DEFAULT '0',
  `soi_8_total` int(11) DEFAULT '0',
  `soi_9` int(11) DEFAULT '0',
  `soi_9_total` int(11) DEFAULT '0',
  `soi_10` int(11) DEFAULT '0',
  `soi_10_total` int(11) DEFAULT '0',
  `soi_11` int(11) DEFAULT '0',
  `soi_11_total` int(11) DEFAULT '0',
  `soi_12` int(11) DEFAULT '0',
  `soi_12_total` int(11) DEFAULT '0',
  `soi_13` int(11) DEFAULT '0',
  `soi_13_total` int(11) DEFAULT '0',
  PRIMARY KEY (`coi_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_co_so_r4tr_data` */

insert  into `_co_so_r4tr_data`(`coi_id`,`soi_2`,`soi_2_total`,`soi_3`,`soi_3_total`,`soi_4`,`soi_4_total`,`soi_5`,`soi_5_total`,`soi_6`,`soi_6_total`,`soi_7`,`soi_7_total`,`soi_8`,`soi_8_total`,`soi_9`,`soi_9_total`,`soi_10`,`soi_10_total`,`soi_11`,`soi_11_total`,`soi_12`,`soi_12_total`,`soi_13`,`soi_13_total`) values (1,0,0,0,0,0,0,0,0,437,11040,0,0,0,0,0,0,0,0,0,0,0,0,0,0),(2,0,0,0,0,0,0,0,0,0,0,463,13455,463,13455,0,0,0,0,0,0,0,0,0,0),(30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,361,10005,0,0,0,0,0,0);

/*Table structure for table `_course_so_r4tr_data` */

DROP TABLE IF EXISTS `_course_so_r4tr_data`;

CREATE TABLE `_course_so_r4tr_data` (
  `course_id` int(11) NOT NULL,
  `pcm_time_index` tinyint(4) DEFAULT NULL,
  `soi_3` int(11) DEFAULT '0',
  `soi_3_total` int(11) DEFAULT '0',
  `soi_4` int(11) DEFAULT '0',
  `soi_4_total` int(11) DEFAULT '0',
  `soi_5` int(11) DEFAULT '0',
  `soi_5_total` int(11) DEFAULT '0',
  `soi_6` int(11) DEFAULT '0',
  `soi_6_total` int(11) DEFAULT '0',
  `soi_7` int(11) DEFAULT '0',
  `soi_7_total` int(11) DEFAULT '0',
  `soi_8` int(11) DEFAULT '0',
  `soi_8_total` int(11) DEFAULT '0',
  `soi_9` int(11) DEFAULT '0',
  `soi_9_total` int(11) DEFAULT '0',
  `soi_10` int(11) DEFAULT '0',
  `soi_10_total` int(11) DEFAULT '0',
  `soi_11` int(11) DEFAULT '0',
  `soi_11_total` int(11) DEFAULT '0',
  `soi_12` int(11) DEFAULT '0',
  `soi_12_total` int(11) DEFAULT '0',
  `soi_13` int(11) DEFAULT '0',
  `soi_13_total` int(11) DEFAULT '0',
  PRIMARY KEY (`course_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_course_so_r4tr_data` */

insert  into `_course_so_r4tr_data`(`course_id`,`pcm_time_index`,`soi_3`,`soi_3_total`,`soi_4`,`soi_4_total`,`soi_5`,`soi_5_total`,`soi_6`,`soi_6_total`,`soi_7`,`soi_7_total`,`soi_8`,`soi_8_total`,`soi_9`,`soi_9_total`,`soi_10`,`soi_10_total`,`soi_11`,`soi_11_total`,`soi_12`,`soi_12_total`,`soi_13`,`soi_13_total`) values (3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),(2,2,0,0,0,0,0,0,437,11040,463,13455,463,13455,0,0,361,10005,0,0,0,0,0,0),(1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),(4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);

/*Table structure for table `_genquestest` */

DROP TABLE IF EXISTS `_genquestest`;

CREATE TABLE `_genquestest` (
  `coi_id` int(11) DEFAULT NULL,
  `question_id` int(11) NOT NULL,
  PRIMARY KEY (`question_id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;

/*Data for the table `_genquestest` */

insert  into `_genquestest`(`coi_id`,`question_id`) values (1,82),(2,121),(30,55);

/*Table structure for table `_genrandtest` */

DROP TABLE IF EXISTS `_genrandtest`;

CREATE TABLE `_genrandtest` (
  `coi_id` int(11) DEFAULT NULL,
  `qcount` bigint(21) NOT NULL DEFAULT '0',
  `flag` int(1) NOT NULL DEFAULT '0',
  `total` int(1) NOT NULL DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `_genrandtest` */

insert  into `_genrandtest`(`coi_id`,`qcount`,`flag`,`total`) values (39,179,0,0),(40,105,0,0);

/*Table structure for table `_report_7cc` */

DROP TABLE IF EXISTS `_report_7cc`;

CREATE TABLE `_report_7cc` (
  `course_content_id` int(11) NOT NULL,
  `pcc_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`course_content_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_report_7cc` */

insert  into `_report_7cc`(`course_content_id`,`pcc_id`) values (2,NULL),(3,NULL),(4,2),(5,2),(6,2),(7,2),(8,2),(11,3),(13,3),(14,NULL),(16,14),(17,14),(18,14),(90,NULL),(91,90),(92,90),(93,90),(95,NULL),(97,95),(102,95),(105,NULL),(106,105),(107,105),(108,102);

/*Table structure for table `_report_7cc2co` */

DROP TABLE IF EXISTS `_report_7cc2co`;

CREATE TABLE `_report_7cc2co` (
  `course_content_id` int(11) NOT NULL,
  `1` float DEFAULT '0',
  `2` float DEFAULT '0',
  `30` float DEFAULT '0',
  `39` float DEFAULT '0',
  `40` float DEFAULT '0',
  PRIMARY KEY (`course_content_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_report_7cc2co` */

insert  into `_report_7cc2co`(`course_content_id`,`1`,`2`,`30`,`39`,`40`) values (2,0,0,0,0,0),(3,0,0,0,0,0),(4,0,0,0,0,0),(5,0,0,0,0,0),(6,0,0,0,0,0),(7,0,0,0,0,0),(8,0,0,0,0,0),(11,0,0,0,0,0),(13,0,0,0,0,0),(14,0,0,0,0,0),(16,0,0,0,0,0),(17,0,0,0,0,0),(18,0,0,0,0,0),(90,0,0,0,0,0),(91,0,0,0,0,0),(92,0,0,0,0,0),(93,0,0,0,0,0),(95,0,0,0,0,0),(97,0,0,0,0,0),(102,0,0,0,0,0),(105,0,0,0,0,0),(106,0,0,0,0,0),(107,0,0,0,0,0),(108,0,0,0,0,0);

/*Table structure for table `_report_7co2cc` */

DROP TABLE IF EXISTS `_report_7co2cc`;

CREATE TABLE `_report_7co2cc` (
  `coi_id` int(11) NOT NULL,
  `2` float DEFAULT '0',
  `3` float DEFAULT '0',
  `4` float DEFAULT '0',
  `5` float DEFAULT '0',
  `6` float DEFAULT '0',
  `7` float DEFAULT '0',
  `8` float DEFAULT '0',
  `11` float DEFAULT '0',
  `13` float DEFAULT '0',
  `14` float DEFAULT '0',
  `16` float DEFAULT '0',
  `17` float DEFAULT '0',
  `18` float DEFAULT '0',
  `90` float DEFAULT '0',
  `91` float DEFAULT '0',
  `92` float DEFAULT '0',
  `93` float DEFAULT '0',
  `95` float DEFAULT '0',
  `97` float DEFAULT '0',
  `102` float DEFAULT '0',
  `105` float DEFAULT '0',
  `106` float DEFAULT '0',
  `107` float DEFAULT '0',
  `108` float DEFAULT '0',
  PRIMARY KEY (`coi_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_report_7co2cc` */

insert  into `_report_7co2cc`(`coi_id`,`2`,`3`,`4`,`5`,`6`,`7`,`8`,`11`,`13`,`14`,`16`,`17`,`18`,`90`,`91`,`92`,`93`,`95`,`97`,`102`,`105`,`106`,`107`,`108`) values (1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),(2,54.902,0,54.902,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),(30,54.902,0,54.902,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),(39,54.902,0,54.902,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),(40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);

/*Table structure for table `_report_7coi` */

DROP TABLE IF EXISTS `_report_7coi`;

CREATE TABLE `_report_7coi` (
  `coi_id` int(11) NOT NULL,
  PRIMARY KEY (`coi_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_report_7coi` */

insert  into `_report_7coi`(`coi_id`) values (1),(2),(30),(39),(40);

/*Table structure for table `_report_7data` */

DROP TABLE IF EXISTS `_report_7data`;

CREATE TABLE `_report_7data` (
  `course_content_id` int(11) NOT NULL DEFAULT '0',
  `coi_id` int(11) NOT NULL DEFAULT '0',
  `rate` float DEFAULT '-1',
  `total` int(11) DEFAULT '0',
  PRIMARY KEY (`course_content_id`,`coi_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_report_7data` */

/*Table structure for table `_report_8coi` */

DROP TABLE IF EXISTS `_report_8coi`;

CREATE TABLE `_report_8coi` (
  `coi_id` int(11) NOT NULL,
  PRIMARY KEY (`coi_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_report_8coi` */

insert  into `_report_8coi`(`coi_id`) values (1),(2),(30),(39),(40);

/*Table structure for table `_report_8coi2soi` */

DROP TABLE IF EXISTS `_report_8coi2soi`;

CREATE TABLE `_report_8coi2soi` (
  `coi_id` int(11) NOT NULL,
  `3` float DEFAULT '0',
  `4` float DEFAULT '0',
  `5` float DEFAULT '0',
  `6` float DEFAULT '0',
  `7` float DEFAULT '0',
  `8` float DEFAULT '0',
  `9` float DEFAULT '0',
  `10` float DEFAULT '0',
  `11` float DEFAULT '0',
  `12` float DEFAULT '0',
  `13` float DEFAULT '0',
  PRIMARY KEY (`coi_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_report_8coi2soi` */

insert  into `_report_8coi2soi`(`coi_id`,`3`,`4`,`5`,`6`,`7`,`8`,`9`,`10`,`11`,`12`,`13`) values (1,50.7823,50.7823,50.7823,50.9266,50.7823,50.7823,50.7823,50.7823,50.9266,50.9266,50.7823),(2,50.0553,50.0553,50,50,50.0553,50.0553,50.0553,50,50.0553,49.4112,50.0553),(30,49.9233,49.9233,50.1422,50.1422,49.9233,49.9233,50.1422,50.1422,49.7552,50.1422,49.9233),(39,48.9247,48.9991,47.8679,48.9247,47.8679,48.9247,48.9991,48.9991,48.9247,48.9247,47.2447),(40,48.2127,48.2127,48.2127,48.2127,47.8559,48.2127,47.8559,48.2127,46.856,48.2127,46.856);

/*Table structure for table `_report_8data` */

DROP TABLE IF EXISTS `_report_8data`;

CREATE TABLE `_report_8data` (
  `soi_id` int(11) NOT NULL DEFAULT '0',
  `coi_id` int(11) NOT NULL DEFAULT '0',
  `rate` float DEFAULT '-1',
  PRIMARY KEY (`soi_id`,`coi_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_report_8data` */

insert  into `_report_8data`(`soi_id`,`coi_id`,`rate`) values (3,1,50.7823),(3,2,50.0553),(3,30,49.9233),(3,39,48.9247),(3,40,48.2127),(4,1,50.7823),(4,2,50.0553),(4,30,49.9233),(4,39,48.9991),(4,40,48.2127),(5,1,50.7823),(5,2,50),(5,30,50.1422),(5,39,47.8679),(5,40,48.2127),(6,1,50.9266),(6,2,50),(6,30,50.1422),(6,39,48.9247),(6,40,48.2127),(7,1,50.7823),(7,2,50.0553),(7,30,49.9233),(7,39,47.8679),(7,40,47.8559),(8,1,50.7823),(8,2,50.0553),(8,30,49.9233),(8,39,48.9247),(8,40,48.2127),(9,1,50.7823),(9,2,50.0553),(9,30,50.1422),(9,39,48.9991),(9,40,47.8559),(10,1,50.7823),(10,2,50),(10,30,50.1422),(10,39,48.9991),(10,40,48.2127),(11,1,50.9266),(11,2,50.0553),(11,30,49.7552),(11,39,48.9247),(11,40,46.856),(12,1,50.9266),(12,2,49.4112),(12,30,50.1422),(12,39,48.9247),(12,40,48.2127),(13,1,50.7823),(13,2,50.0553),(13,30,49.9233),(13,39,47.2447),(13,40,46.856);

/*Table structure for table `_report_8soi` */

DROP TABLE IF EXISTS `_report_8soi`;

CREATE TABLE `_report_8soi` (
  `soi_id` int(11) NOT NULL,
  PRIMARY KEY (`soi_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_report_8soi` */

insert  into `_report_8soi`(`soi_id`) values (3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13);

/*Table structure for table `_report_8soi2coi` */

DROP TABLE IF EXISTS `_report_8soi2coi`;

CREATE TABLE `_report_8soi2coi` (
  `soi_id` int(11) NOT NULL,
  `1` float DEFAULT '0',
  `2` float DEFAULT '0',
  `30` float DEFAULT '0',
  `39` float DEFAULT '0',
  `40` float DEFAULT '0',
  PRIMARY KEY (`soi_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_report_8soi2coi` */

insert  into `_report_8soi2coi`(`soi_id`,`1`,`2`,`30`,`39`,`40`) values (3,50.7823,50.0553,49.9233,48.9247,48.2127),(4,50.7823,50.0553,49.9233,48.9991,48.2127),(5,50.7823,50,50.1422,47.8679,48.2127),(6,50.9266,50,50.1422,48.9247,48.2127),(7,50.7823,50.0553,49.9233,47.8679,47.8559),(8,50.7823,50.0553,49.9233,48.9247,48.2127),(9,50.7823,50.0553,50.1422,48.9991,47.8559),(10,50.7823,50,50.1422,48.9991,48.2127),(11,50.9266,50.0553,49.7552,48.9247,46.856),(12,50.9266,49.4112,50.1422,48.9247,48.2127),(13,50.7823,50.0553,49.9233,47.2447,46.856);

/*Table structure for table `_report_9course` */

DROP TABLE IF EXISTS `_report_9course`;

CREATE TABLE `_report_9course` (
  `course_id` int(11) NOT NULL,
  PRIMARY KEY (`course_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_report_9course` */

insert  into `_report_9course`(`course_id`) values (1),(2),(3),(4);

/*Table structure for table `_report_9course2soi` */

DROP TABLE IF EXISTS `_report_9course2soi`;

CREATE TABLE `_report_9course2soi` (
  `course_id` int(11) NOT NULL,
  `3` float DEFAULT '0',
  `4` float DEFAULT '0',
  `5` float DEFAULT '0',
  `6` float DEFAULT '0',
  `7` float DEFAULT '0',
  `8` float DEFAULT '0',
  `9` float DEFAULT '0',
  `10` float DEFAULT '0',
  `11` float DEFAULT '0',
  `12` float DEFAULT '0',
  `13` float DEFAULT '0',
  PRIMARY KEY (`course_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_report_9course2soi` */

insert  into `_report_9course2soi`(`course_id`,`3`,`4`,`5`,`6`,`7`,`8`,`9`,`10`,`11`,`12`,`13`) values (1,50.7527,50.7527,50.7527,50.7527,50.7527,50.7527,50.7527,50.7527,50.7527,50.7527,50.7527),(2,49.7169,49.7169,49.7169,49.7169,49.7169,49.7169,49.7169,49.7169,49.7169,49.7169,49.7169),(3,50.2048,50.2048,50.2048,50.2048,50.2048,50.2048,50.2048,50.2048,50.2048,50.2048,50.2048),(4,47.1148,47.1148,47.1148,47.1148,47.1148,47.1148,47.1148,47.1148,47.1148,47.1148,47.1148);

/*Table structure for table `_report_9data` */

DROP TABLE IF EXISTS `_report_9data`;

CREATE TABLE `_report_9data` (
  `soi_id` int(11) NOT NULL DEFAULT '0',
  `course_id` int(11) NOT NULL DEFAULT '0',
  `rate` float DEFAULT '-1',
  PRIMARY KEY (`soi_id`,`course_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_report_9data` */

insert  into `_report_9data`(`soi_id`,`course_id`,`rate`) values (3,1,50.7527),(3,2,49.7169),(3,3,50.2048),(3,4,47.1148),(4,1,50.7527),(4,2,49.7169),(4,3,50.2048),(4,4,47.1148),(5,1,50.7527),(5,2,49.7169),(5,3,50.2048),(5,4,47.1148),(6,1,50.7527),(6,2,49.7169),(6,3,50.2048),(6,4,47.1148),(7,1,50.7527),(7,2,49.7169),(7,3,50.2048),(7,4,47.1148),(8,1,50.7527),(8,2,49.7169),(8,3,50.2048),(8,4,47.1148),(9,1,50.7527),(9,2,49.7169),(9,3,50.2048),(9,4,47.1148),(10,1,50.7527),(10,2,49.7169),(10,3,50.2048),(10,4,47.1148),(11,1,50.7527),(11,2,49.7169),(11,3,50.2048),(11,4,47.1148),(12,1,50.7527),(12,2,49.7169),(12,3,50.2048),(12,4,47.1148),(13,1,50.7527),(13,2,49.7169),(13,3,50.2048),(13,4,47.1148);

/*Table structure for table `_report_9soi` */

DROP TABLE IF EXISTS `_report_9soi`;

CREATE TABLE `_report_9soi` (
  `soi_id` int(11) NOT NULL,
  PRIMARY KEY (`soi_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_report_9soi` */

insert  into `_report_9soi`(`soi_id`) values (3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13);

/*Table structure for table `_report_9soi2course` */

DROP TABLE IF EXISTS `_report_9soi2course`;

CREATE TABLE `_report_9soi2course` (
  `soi_id` int(11) NOT NULL,
  `1` float DEFAULT '0',
  `2` float DEFAULT '0',
  `3` float DEFAULT '0',
  `4` float DEFAULT '0',
  PRIMARY KEY (`soi_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_report_9soi2course` */

insert  into `_report_9soi2course`(`soi_id`,`1`,`2`,`3`,`4`) values (3,50.7527,49.7169,50.2048,47.1148),(4,50.7527,49.7169,50.2048,47.1148),(5,50.7527,49.7169,50.2048,47.1148),(6,50.7527,49.7169,50.2048,47.1148),(7,50.7527,49.7169,50.2048,47.1148),(8,50.7527,49.7169,50.2048,47.1148),(9,50.7527,49.7169,50.2048,47.1148),(10,50.7527,49.7169,50.2048,47.1148),(11,50.7527,49.7169,50.2048,47.1148),(12,50.7527,49.7169,50.2048,47.1148),(13,50.7527,49.7169,50.2048,47.1148);

/*Table structure for table `_report_trcor` */

DROP TABLE IF EXISTS `_report_trcor`;

CREATE TABLE `_report_trcor` (
  `test_id` int(11) NOT NULL,
  `number_taker` int(11) DEFAULT NULL,
  `coi_1_rq` int(11) DEFAULT '0',
  `coi_1_nq` int(11) DEFAULT '0',
  `coi_1_rate` float DEFAULT '-1',
  `coi_2_rq` int(11) DEFAULT '0',
  `coi_2_nq` int(11) DEFAULT '0',
  `coi_2_rate` float DEFAULT '-1',
  `coi_30_rq` int(11) DEFAULT '0',
  `coi_30_nq` int(11) DEFAULT '0',
  `coi_30_rate` float DEFAULT '-1',
  `coi_39_rq` int(11) DEFAULT '0',
  `coi_39_nq` int(11) DEFAULT '0',
  `coi_39_rate` float DEFAULT '-1',
  `coi_40_rq` int(11) DEFAULT '0',
  `coi_40_nq` int(11) DEFAULT '0',
  `coi_40_rate` float DEFAULT '-1',
  PRIMARY KEY (`test_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_report_trcor` */

insert  into `_report_trcor`(`test_id`,`number_taker`,`coi_1_rq`,`coi_1_nq`,`coi_1_rate`,`coi_2_rq`,`coi_2_nq`,`coi_2_rate`,`coi_30_rq`,`coi_30_nq`,`coi_30_rate`,`coi_39_rq`,`coi_39_nq`,`coi_39_rate`,`coi_40_rq`,`coi_40_nq`,`coi_40_rate`) values (1,28,30,56,53.5714,40,84,47.619,56,112,50,42,84,50,0,0,-1),(2,126,124,252,49.2063,261,504,51.7857,251,504,49.8016,189,378,50,129,252,51.1905),(3,50,44,100,44,114,250,45.6,90,200,45,48,100,48,46,100,46),(4,26,131,260,50.3846,210,416,50.4808,176,338,52.071,180,364,49.4506,53,104,50.9615),(5,51,111,204,54.4118,208,408,50.9804,236,459,51.4161,106,204,51.9608,47,102,46.0784),(6,26,51,130,39.2308,73,156,46.7949,85,182,46.7033,69,156,44.2308,32,78,41.0256),(7,26,37,78,47.4359,77,156,49.359,58,104,55.7692,14,26,53.8462,45,104,43.2692),(8,26,13,26,50,29,78,37.1795,20,78,25.641,21,78,26.9231,19,52,36.5385),(9,51,28,102,27.451,38,102,37.2549,56,153,36.6013,56,153,36.6013,18,51,35.2941),(10,1,0,3,-1,0,3,-1,0,3,-1,0,2,-1,0,1,-1),(11,2,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1),(12,26,23,52,44.2308,25,78,32.0513,27,78,34.6154,6,52,11.5385,6,52,11.5385),(13,2,0,2,-1,0,8,-1,0,8,-1,0,2,-1,0,4,-1),(14,4,0,12,-1,0,20,-1,0,20,-1,0,28,-1,0,8,-1),(15,2,0,4,-1,0,6,-1,0,6,-1,0,4,-1,0,0,-1),(16,2,2,4,50,3,10,30,3,10,30,2,6,33.3333,0,2,-1);

/*Table structure for table `_report_trcor_chart` */

DROP TABLE IF EXISTS `_report_trcor_chart`;

CREATE TABLE `_report_trcor_chart` (
  `coi_id` int(11) NOT NULL,
  `coi_code` char(5) COLLATE utf8_unicode_ci DEFAULT NULL,
  `CTDL001` float DEFAULT '0',
  `012` float DEFAULT '0',
  `qww2` float DEFAULT '0',
  `CTDL_EX01` float DEFAULT '0',
  `CTDL005` float DEFAULT '0',
  `CTDL006` float DEFAULT '0',
  `CTDL007` float DEFAULT '0',
  `CTDL008` float DEFAULT '0',
  `CTDL009` float DEFAULT '0',
  `CTDL10` float DEFAULT '0',
  `CTDL01` float DEFAULT '0',
  `123` float DEFAULT '0',
  `CTDL-GT-15` float DEFAULT '0',
  `KTLT-2015` float DEFAULT '0',
  `KTLT-2014` float DEFAULT '0',
  PRIMARY KEY (`coi_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_report_trcor_chart` */

insert  into `_report_trcor_chart`(`coi_id`,`coi_code`,`CTDL001`,`012`,`qww2`,`CTDL_EX01`,`CTDL005`,`CTDL006`,`CTDL007`,`CTDL008`,`CTDL009`,`CTDL10`,`CTDL01`,`123`,`CTDL-GT-15`,`KTLT-2015`,`KTLT-2014`) values (1,'CTO5',53.5714,49.2063,44,50.3846,54.4118,39.2308,47.4359,50,27.451,0,44.2308,0,0,0,50),(2,'CTO3',47.619,51.7857,45.6,50.4808,50.9804,46.7949,49.359,37.1795,37.2549,0,32.0513,0,0,0,30),(30,'CTO4',50,49.8016,45,52.071,51.4161,46.7033,55.7692,25.641,36.6013,0,34.6154,0,0,0,30),(39,'CTO1',50,50,48,49.4506,51.9608,44.2308,53.8462,26.9231,36.6013,0,11.5385,0,0,0,33.3333),(40,'CTO2',0,51.1905,46,50.9615,46.0784,41.0256,43.2692,36.5385,35.2941,0,11.5385,0,0,0,0);

/*Table structure for table `_test_ques` */

DROP TABLE IF EXISTS `_test_ques`;

CREATE TABLE `_test_ques` (
  `question_id` int(11) NOT NULL,
  PRIMARY KEY (`question_id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;

/*Data for the table `_test_ques` */

/*Table structure for table `_tmp20163_previlege_041l5nlfujhta4om6iiar3t983` */

DROP TABLE IF EXISTS `_tmp20163_previlege_041l5nlfujhta4om6iiar3t983`;

CREATE TABLE `_tmp20163_previlege_041l5nlfujhta4om6iiar3t983` (
  `previlege_id` int(11) NOT NULL,
  PRIMARY KEY (`previlege_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp20163_previlege_041l5nlfujhta4om6iiar3t983` */

/*Table structure for table `_tmp20163_previlege_07007vl6q47qvdguvl9q3v3pg3` */

DROP TABLE IF EXISTS `_tmp20163_previlege_07007vl6q47qvdguvl9q3v3pg3`;

CREATE TABLE `_tmp20163_previlege_07007vl6q47qvdguvl9q3v3pg3` (
  `previlege_id` int(11) NOT NULL,
  PRIMARY KEY (`previlege_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp20163_previlege_07007vl6q47qvdguvl9q3v3pg3` */

insert  into `_tmp20163_previlege_07007vl6q47qvdguvl9q3v3pg3`(`previlege_id`) values (1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69),(70),(71),(72),(73),(74),(75),(76),(77),(78),(79),(80),(81),(82),(83),(84),(85),(86),(87),(88),(89),(90),(91),(92),(93),(94),(95),(96),(97),(98),(99),(100),(101),(102),(103),(104),(105),(106),(107),(108),(109),(110),(111),(112),(113),(114),(115),(116),(117),(118),(119),(120),(121),(122),(123),(124),(125),(126),(127),(128),(129),(130),(131),(132),(133),(134),(135),(136),(137),(138),(139),(140),(141),(142),(143),(144),(145),(146),(147),(148),(149),(150),(151),(152),(153),(154),(155),(156),(157),(158),(159),(160),(161),(162),(163),(164),(165),(166),(167),(168),(169),(170),(171),(172),(173),(174),(175),(176),(177),(178),(179),(180),(181),(182),(183);

/*Table structure for table `_tmp20163_previlege_371lbd029p4mgka4gi619vjfe6` */

DROP TABLE IF EXISTS `_tmp20163_previlege_371lbd029p4mgka4gi619vjfe6`;

CREATE TABLE `_tmp20163_previlege_371lbd029p4mgka4gi619vjfe6` (
  `previlege_id` int(11) NOT NULL,
  PRIMARY KEY (`previlege_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp20163_previlege_371lbd029p4mgka4gi619vjfe6` */

insert  into `_tmp20163_previlege_371lbd029p4mgka4gi619vjfe6`(`previlege_id`) values (1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69),(70),(71),(72),(73),(74),(75),(76),(77),(78),(79),(80),(81),(82),(83),(84),(85),(86),(87),(88),(89),(90),(91),(92),(93),(94),(95),(96),(97),(98),(99),(100),(101),(102),(103),(104),(105),(106),(107),(108),(109),(110),(111),(112),(113),(114),(115),(116),(117),(118),(119),(120),(121),(122),(123),(124),(125),(126),(127),(128),(129),(130),(131),(132),(133),(134),(135),(136),(137),(138),(139),(140),(141),(142),(143),(144),(145),(146),(147),(148),(149),(150),(151),(152),(153),(154),(155),(156),(157),(158),(159),(160),(161),(162),(163),(164),(165),(166),(167),(168),(169),(170),(171),(172),(173),(174),(175),(176),(177),(178),(179),(180),(181),(182),(183);

/*Table structure for table `_tmp20163_previlege_644fojk7piv6f3vs0ohp3vsja4` */

DROP TABLE IF EXISTS `_tmp20163_previlege_644fojk7piv6f3vs0ohp3vsja4`;

CREATE TABLE `_tmp20163_previlege_644fojk7piv6f3vs0ohp3vsja4` (
  `previlege_id` int(11) NOT NULL,
  PRIMARY KEY (`previlege_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp20163_previlege_644fojk7piv6f3vs0ohp3vsja4` */

insert  into `_tmp20163_previlege_644fojk7piv6f3vs0ohp3vsja4`(`previlege_id`) values (1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69),(70),(71),(72),(73),(74),(75),(76),(77),(78),(79),(80),(81),(82),(83),(84),(85),(86),(87),(88),(89),(90),(91),(92),(93),(94),(95),(96),(97),(98),(99),(100),(101),(102),(103),(104),(105),(106),(107),(108),(109),(110),(111),(112),(113),(114),(115),(116),(117),(118),(119),(120),(121),(122),(123),(124),(125),(126),(127),(128),(129),(130),(131),(132),(133),(134),(135),(136),(137),(138),(139),(140),(141),(142),(143),(144),(145),(146),(147),(148),(149),(150),(151),(152),(153),(154),(155),(156),(157),(158),(159),(160),(161),(162),(163),(164),(165),(166),(167),(168),(169),(170),(171),(172),(173),(174),(175),(176),(177),(178),(179),(180),(181),(182),(183);

/*Table structure for table `_tmp20163_previlege_6c5ateg9abfdpmp6peg1hp9nc3` */

DROP TABLE IF EXISTS `_tmp20163_previlege_6c5ateg9abfdpmp6peg1hp9nc3`;

CREATE TABLE `_tmp20163_previlege_6c5ateg9abfdpmp6peg1hp9nc3` (
  `previlege_id` int(11) NOT NULL,
  PRIMARY KEY (`previlege_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp20163_previlege_6c5ateg9abfdpmp6peg1hp9nc3` */

insert  into `_tmp20163_previlege_6c5ateg9abfdpmp6peg1hp9nc3`(`previlege_id`) values (1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69),(70),(71),(72),(73),(74),(75),(76),(77),(78),(79),(80),(81),(82),(83),(84),(85),(86),(87),(88),(89),(90),(91),(92),(93),(94),(95),(96),(97),(98),(99),(100),(101),(102),(103),(104),(105),(106),(107),(108),(109),(110),(111),(112),(113),(114),(115),(116),(117),(118),(119),(120),(121),(122),(123),(124),(125),(126),(127),(128),(129),(130),(131),(132),(133),(134),(135),(136),(137),(138),(139),(140),(141),(142),(143),(144),(145),(146),(147),(148),(149),(150),(151),(152),(153),(154),(155),(156),(157),(158),(159),(160),(161),(162),(163),(164),(165),(166),(167),(168),(169),(170),(171),(172),(173),(174),(175),(176),(177),(178),(179),(180),(181),(182),(183);

/*Table structure for table `_tmp20163_previlege_6d30805teiab0a3d4sotpbqkn4` */

DROP TABLE IF EXISTS `_tmp20163_previlege_6d30805teiab0a3d4sotpbqkn4`;

CREATE TABLE `_tmp20163_previlege_6d30805teiab0a3d4sotpbqkn4` (
  `previlege_id` int(11) NOT NULL,
  PRIMARY KEY (`previlege_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp20163_previlege_6d30805teiab0a3d4sotpbqkn4` */

insert  into `_tmp20163_previlege_6d30805teiab0a3d4sotpbqkn4`(`previlege_id`) values (1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69),(70),(71),(72),(73),(74),(75),(76),(77),(78),(79),(80),(81),(82),(83),(84),(85),(86),(87),(88),(89),(90),(91),(92),(93),(94),(95),(96),(97),(98),(99),(100),(101),(102),(103),(104),(105),(106),(107),(108),(109),(110),(111),(112),(113),(114),(115),(116),(117),(118),(119),(120),(121),(122),(123),(124),(125),(126),(127),(128),(129),(130),(131),(132),(133),(134),(135),(136),(137),(138),(139),(140),(141),(142),(143),(144),(145),(146),(147),(148),(149),(150),(151),(152),(153),(154),(155),(156),(157),(158),(159),(160),(161),(162),(163),(164),(165),(166),(167),(168),(169),(170),(171),(172),(173),(174),(175),(176),(177),(178),(179),(180),(181),(182),(183);

/*Table structure for table `_tmp20163_previlege_7g8scnkutb1g3j5t8676vsohm0` */

DROP TABLE IF EXISTS `_tmp20163_previlege_7g8scnkutb1g3j5t8676vsohm0`;

CREATE TABLE `_tmp20163_previlege_7g8scnkutb1g3j5t8676vsohm0` (
  `previlege_id` int(11) NOT NULL,
  PRIMARY KEY (`previlege_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp20163_previlege_7g8scnkutb1g3j5t8676vsohm0` */

insert  into `_tmp20163_previlege_7g8scnkutb1g3j5t8676vsohm0`(`previlege_id`) values (1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69),(70),(71),(72),(73),(74),(75),(76),(77),(78),(79),(80),(81),(82),(83),(84),(85),(86),(87),(88),(89),(90),(91),(92),(93),(94),(95),(96),(97),(98),(99),(100),(101),(102),(103),(104),(105),(106),(107),(108),(109),(110),(111),(112),(113),(114),(115),(116),(117),(118),(119),(120),(121),(122),(123),(124),(125),(126),(127),(128),(129),(130),(131),(132),(133),(134),(135),(136),(137),(138),(139),(140),(141),(142),(143),(144),(145),(146),(147),(148),(149),(150),(151),(152),(153),(154),(155),(156),(157),(158),(159),(160),(161),(162),(163),(164),(165),(166),(167),(168),(169),(170),(171),(172),(173),(174),(175),(176),(177),(178),(179),(180),(181),(182),(183);

/*Table structure for table `_tmp20163_previlege_855rp3fc1q08nr0od6jrkckh06` */

DROP TABLE IF EXISTS `_tmp20163_previlege_855rp3fc1q08nr0od6jrkckh06`;

CREATE TABLE `_tmp20163_previlege_855rp3fc1q08nr0od6jrkckh06` (
  `previlege_id` int(11) NOT NULL,
  PRIMARY KEY (`previlege_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp20163_previlege_855rp3fc1q08nr0od6jrkckh06` */

insert  into `_tmp20163_previlege_855rp3fc1q08nr0od6jrkckh06`(`previlege_id`) values (1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69),(70),(71),(72),(73),(74),(75),(76),(77),(78),(79),(80),(81),(82),(83),(84),(85),(86),(87),(88),(89),(90),(91),(92),(93),(94),(95),(96),(97),(98),(99),(100),(101),(102),(103),(104),(105),(106),(107),(108),(109),(110),(111),(112),(113),(114),(115),(116),(117),(118),(119),(120),(121),(122),(123),(124),(125),(126),(127),(128),(129),(130),(131),(132),(133),(134),(135),(136),(137),(138),(139),(140),(141),(142),(143),(144),(145),(146),(147),(148),(149),(150),(151),(152),(153),(154),(155),(156),(157),(158),(159),(160),(161),(162),(163),(164),(165),(166),(167),(168),(169),(170),(171),(172),(173),(174),(175),(176),(177),(178),(179),(180),(181),(182),(183);

/*Table structure for table `_tmp20163_previlege_a6u2ei59eooceb76938vhsb946` */

DROP TABLE IF EXISTS `_tmp20163_previlege_a6u2ei59eooceb76938vhsb946`;

CREATE TABLE `_tmp20163_previlege_a6u2ei59eooceb76938vhsb946` (
  `previlege_id` int(11) NOT NULL,
  PRIMARY KEY (`previlege_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp20163_previlege_a6u2ei59eooceb76938vhsb946` */

insert  into `_tmp20163_previlege_a6u2ei59eooceb76938vhsb946`(`previlege_id`) values (1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69),(70),(71),(72),(73),(74),(75),(76),(77),(78),(79),(80),(81),(82),(83),(84),(85),(86),(87),(88),(89),(90),(91),(92),(93),(94),(95),(96),(97),(98),(99),(100),(101),(102),(103),(104),(105),(106),(107),(108),(109),(110),(111),(112),(113),(114),(115),(116),(117),(118),(119),(120),(121),(122),(123),(124),(125),(126),(127),(128),(129),(130),(131),(132),(133),(134),(135),(136),(137),(138),(139),(140),(141),(142),(143),(144),(145),(146),(147),(148),(149),(150),(151),(152),(153),(154),(155),(156),(157),(158),(159),(160),(161),(162),(163),(164),(165),(166),(167),(168),(169),(170),(171),(172),(173),(174),(175),(176),(177),(178),(179),(180),(181),(182),(183);

/*Table structure for table `_tmp20163_previlege_a7ki3v46jg2r126jtbbnitu6n7` */

DROP TABLE IF EXISTS `_tmp20163_previlege_a7ki3v46jg2r126jtbbnitu6n7`;

CREATE TABLE `_tmp20163_previlege_a7ki3v46jg2r126jtbbnitu6n7` (
  `previlege_id` int(11) NOT NULL,
  PRIMARY KEY (`previlege_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp20163_previlege_a7ki3v46jg2r126jtbbnitu6n7` */

insert  into `_tmp20163_previlege_a7ki3v46jg2r126jtbbnitu6n7`(`previlege_id`) values (38),(45),(52),(67),(68),(69),(70),(71),(74),(119),(123),(132),(141),(155),(156),(161),(172),(176);

/*Table structure for table `_tmp20163_previlege_ch2v1kif2bfgilerpgn1lf97a3` */

DROP TABLE IF EXISTS `_tmp20163_previlege_ch2v1kif2bfgilerpgn1lf97a3`;

CREATE TABLE `_tmp20163_previlege_ch2v1kif2bfgilerpgn1lf97a3` (
  `previlege_id` int(11) NOT NULL,
  PRIMARY KEY (`previlege_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp20163_previlege_ch2v1kif2bfgilerpgn1lf97a3` */

/*Table structure for table `_tmp20163_previlege_cp6oosv632vnkaotlquhljoat0` */

DROP TABLE IF EXISTS `_tmp20163_previlege_cp6oosv632vnkaotlquhljoat0`;

CREATE TABLE `_tmp20163_previlege_cp6oosv632vnkaotlquhljoat0` (
  `previlege_id` int(11) NOT NULL,
  PRIMARY KEY (`previlege_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp20163_previlege_cp6oosv632vnkaotlquhljoat0` */

insert  into `_tmp20163_previlege_cp6oosv632vnkaotlquhljoat0`(`previlege_id`) values (1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69),(70),(71),(72),(73),(74),(75),(76),(77),(78),(79),(80),(81),(82),(83),(84),(85),(86),(87),(88),(89),(90),(91),(92),(93),(94),(95),(96),(97),(98),(99),(100),(101),(102),(103),(104),(105),(106),(107),(108),(109),(110),(111),(112),(113),(114),(115),(116),(117),(118),(119),(120),(121),(122),(123),(124),(125),(126),(127),(128),(129),(130),(131),(132),(133),(134),(135),(136),(137),(138),(139),(140),(141),(142),(143),(144),(145),(146),(147),(148),(149),(150),(151),(152),(153),(154),(155),(156),(157),(158),(159),(160),(161),(162),(163),(164),(165),(166),(167),(168),(169),(170),(171),(172),(173),(174),(175),(176),(177),(178),(179),(180),(181),(182),(183);

/*Table structure for table `_tmp20163_previlege_d86g59nli9noah6dbs5qu1gi22` */

DROP TABLE IF EXISTS `_tmp20163_previlege_d86g59nli9noah6dbs5qu1gi22`;

CREATE TABLE `_tmp20163_previlege_d86g59nli9noah6dbs5qu1gi22` (
  `previlege_id` int(11) NOT NULL,
  PRIMARY KEY (`previlege_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp20163_previlege_d86g59nli9noah6dbs5qu1gi22` */

/*Table structure for table `_tmp20163_previlege_dopsv46rgeauu8eqtvpc6ivgd5` */

DROP TABLE IF EXISTS `_tmp20163_previlege_dopsv46rgeauu8eqtvpc6ivgd5`;

CREATE TABLE `_tmp20163_previlege_dopsv46rgeauu8eqtvpc6ivgd5` (
  `previlege_id` int(11) NOT NULL,
  PRIMARY KEY (`previlege_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp20163_previlege_dopsv46rgeauu8eqtvpc6ivgd5` */

insert  into `_tmp20163_previlege_dopsv46rgeauu8eqtvpc6ivgd5`(`previlege_id`) values (1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69),(70),(71),(72),(73),(74),(75),(76),(77),(78),(79),(80),(81),(82),(83),(84),(85),(86),(87),(88),(89),(90),(91),(92),(93),(94),(95),(96),(97),(98),(99),(100),(101),(102),(103),(104),(105),(106),(107),(108),(109),(110),(111),(112),(113),(114),(115),(116),(117),(118),(119),(120),(121),(122),(123),(124),(125),(126),(127),(128),(129),(130),(131),(132),(133),(134),(135),(136),(137),(138),(139),(140),(141),(142),(143),(144),(145),(146),(147),(148),(149),(150),(151),(152),(153),(154),(155),(156),(157),(158),(159),(160),(161),(162),(163),(164),(165),(166),(167),(168),(169),(170),(171),(172),(173),(174),(175),(176),(177),(178),(179),(180),(181),(182),(183);

/*Table structure for table `_tmp20163_previlege_g7en5b479labf54pm3l5a1pre6` */

DROP TABLE IF EXISTS `_tmp20163_previlege_g7en5b479labf54pm3l5a1pre6`;

CREATE TABLE `_tmp20163_previlege_g7en5b479labf54pm3l5a1pre6` (
  `previlege_id` int(11) NOT NULL,
  PRIMARY KEY (`previlege_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp20163_previlege_g7en5b479labf54pm3l5a1pre6` */

insert  into `_tmp20163_previlege_g7en5b479labf54pm3l5a1pre6`(`previlege_id`) values (1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69),(70),(71),(72),(73),(74),(75),(76),(77),(78),(79),(80),(81),(82),(83),(84),(85),(86),(87),(88),(89),(90),(91),(92),(93),(94),(95),(96),(97),(98),(99),(100),(101),(102),(103),(104),(105),(106),(107),(108),(109),(110),(111),(112),(113),(114),(115),(116),(117),(118),(119),(120),(121),(122),(123),(124),(125),(126),(127),(128),(129),(130),(131),(132),(133),(134),(135),(136),(137),(138),(139),(140),(141),(142),(143),(144),(145),(146),(147),(148),(149),(150),(151),(152),(153),(154),(155),(156),(157),(158),(159),(160),(161),(162),(163),(164),(165),(166),(167),(168),(169),(170),(171),(172),(173),(174),(175),(176),(177),(178),(179),(180),(181),(182),(183);

/*Table structure for table `_tmp20163_previlege_gautvt0vtceqo9hv3u4q2aoln1` */

DROP TABLE IF EXISTS `_tmp20163_previlege_gautvt0vtceqo9hv3u4q2aoln1`;

CREATE TABLE `_tmp20163_previlege_gautvt0vtceqo9hv3u4q2aoln1` (
  `previlege_id` int(11) NOT NULL,
  PRIMARY KEY (`previlege_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp20163_previlege_gautvt0vtceqo9hv3u4q2aoln1` */

insert  into `_tmp20163_previlege_gautvt0vtceqo9hv3u4q2aoln1`(`previlege_id`) values (1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69),(70),(71),(72),(73),(74),(75),(76),(77),(78),(79),(80),(81),(82),(83),(84),(85),(86),(87),(88),(89),(90),(91),(92),(93),(94),(95),(96),(97),(98),(99),(100),(101),(102),(103),(104),(105),(106),(107),(108),(109),(110),(111),(112),(113),(114),(115),(116),(117),(118),(119),(120),(121),(122),(123),(124),(125),(126),(127),(128),(129),(130),(131),(132),(133),(134),(135),(136),(137),(138),(139),(140),(141),(142),(143),(144),(145),(146),(147),(148),(149),(150),(151),(152),(153),(154),(155),(156),(157),(158),(159),(160),(161),(162),(163),(164),(165),(166),(167),(168),(169),(170),(171),(172),(173),(174),(175),(176),(177),(178),(179),(180),(181),(182),(183);

/*Table structure for table `_tmp20163_previlege_gb79ng4et9gfmp76qb3h1igla1` */

DROP TABLE IF EXISTS `_tmp20163_previlege_gb79ng4et9gfmp76qb3h1igla1`;

CREATE TABLE `_tmp20163_previlege_gb79ng4et9gfmp76qb3h1igla1` (
  `previlege_id` int(11) NOT NULL,
  PRIMARY KEY (`previlege_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp20163_previlege_gb79ng4et9gfmp76qb3h1igla1` */

insert  into `_tmp20163_previlege_gb79ng4et9gfmp76qb3h1igla1`(`previlege_id`) values (1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69),(70),(71),(72),(73),(74),(75),(76),(77),(78),(79),(80),(81),(82),(83),(84),(85),(86),(87),(88),(89),(90),(91),(92),(93),(94),(95),(96),(97),(98),(99),(100),(101),(102),(103),(104),(105),(106),(107),(108),(109),(110),(111),(112),(113),(114),(115),(116),(117),(118),(119),(120),(121),(122),(123),(124),(125),(126),(127),(128),(129),(130),(131),(132),(133),(134),(135),(136),(137),(138),(139),(140),(141),(142),(143),(144),(145),(146),(147),(148),(149),(150),(151),(152),(153),(154),(155),(156),(157),(158),(159),(160),(161),(162),(163),(164),(165),(166),(167),(168),(169),(170),(171),(172),(173),(174),(175),(176),(177),(178),(179),(180),(181),(182),(183);

/*Table structure for table `_tmp20163_previlege_k3rsd6l7c8a9rkdb24nfpdisc3` */

DROP TABLE IF EXISTS `_tmp20163_previlege_k3rsd6l7c8a9rkdb24nfpdisc3`;

CREATE TABLE `_tmp20163_previlege_k3rsd6l7c8a9rkdb24nfpdisc3` (
  `previlege_id` int(11) NOT NULL,
  PRIMARY KEY (`previlege_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp20163_previlege_k3rsd6l7c8a9rkdb24nfpdisc3` */

insert  into `_tmp20163_previlege_k3rsd6l7c8a9rkdb24nfpdisc3`(`previlege_id`) values (1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69),(70),(71),(72),(73),(74),(75),(76),(77),(78),(79),(80),(81),(82),(83),(84),(85),(86),(87),(88),(89),(90),(91),(92),(93),(94),(95),(96),(97),(98),(99),(100),(101),(102),(103),(104),(105),(106),(107),(108),(109),(110),(111),(112),(113),(114),(115),(116),(117),(118),(119),(120),(121),(122),(123),(124),(125),(126),(127),(128),(129),(130),(131),(132),(133),(134),(135),(136),(137),(138),(139),(140),(141),(142),(143),(144),(145),(146),(147),(148),(149),(150),(151),(152),(153),(154),(155),(156),(157),(158),(159),(160),(161),(162),(163),(164),(165),(166),(167),(168),(169),(170),(171),(172),(173),(174),(175),(176),(177),(178),(179),(180),(181),(182),(183);

/*Table structure for table `_tmp20163_previlege_kfgthi58o7gap3ofj43armams3` */

DROP TABLE IF EXISTS `_tmp20163_previlege_kfgthi58o7gap3ofj43armams3`;

CREATE TABLE `_tmp20163_previlege_kfgthi58o7gap3ofj43armams3` (
  `previlege_id` int(11) NOT NULL,
  PRIMARY KEY (`previlege_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp20163_previlege_kfgthi58o7gap3ofj43armams3` */

insert  into `_tmp20163_previlege_kfgthi58o7gap3ofj43armams3`(`previlege_id`) values (1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69),(70),(71),(72),(73),(74),(75),(76),(77),(78),(79),(80),(81),(82),(83),(84),(85),(86),(87),(88),(89),(90),(91),(92),(93),(94),(95),(96),(97),(98),(99),(100),(101),(102),(103),(104),(105),(106),(107),(108),(109),(110),(111),(112),(113),(114),(115),(116),(117),(118),(119),(120),(121),(122),(123),(124),(125),(126),(127),(128),(129),(130),(131),(132),(133),(134),(135),(136),(137),(138),(139),(140),(141),(142),(143),(144),(145),(146),(147),(148),(149),(150),(151),(152),(153),(154),(155),(156),(157),(158),(159),(160),(161),(162),(163),(164),(165),(166),(167),(168),(169),(170),(171),(172),(173),(174),(175),(176),(177),(178),(179),(180),(181),(182),(183);

/*Table structure for table `_tmp20163_previlege_kiljc2u9jj20jqfqgfchp1d854` */

DROP TABLE IF EXISTS `_tmp20163_previlege_kiljc2u9jj20jqfqgfchp1d854`;

CREATE TABLE `_tmp20163_previlege_kiljc2u9jj20jqfqgfchp1d854` (
  `previlege_id` int(11) NOT NULL,
  PRIMARY KEY (`previlege_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp20163_previlege_kiljc2u9jj20jqfqgfchp1d854` */

insert  into `_tmp20163_previlege_kiljc2u9jj20jqfqgfchp1d854`(`previlege_id`) values (1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69),(70),(71),(72),(73),(74),(75),(76),(77),(78),(79),(80),(81),(82),(83),(84),(85),(86),(87),(88),(89),(90),(91),(92),(93),(94),(95),(96),(97),(98),(99),(100),(101),(102),(103),(104),(105),(106),(107),(108),(109),(110),(111),(112),(113),(114),(115),(116),(117),(118),(119),(120),(121),(122),(123),(124),(125),(126),(127),(128),(129),(130),(131),(132),(133),(134),(135),(136),(137),(138),(139),(140),(141),(142),(143),(144),(145),(146),(147),(148),(149),(150),(151),(152),(153),(154),(155),(156),(157),(158),(159),(160),(161),(162),(163),(164),(165),(166),(167),(168),(169),(170),(171),(172),(173),(174),(175),(176),(177),(178),(179),(180),(181),(182),(183);

/*Table structure for table `_tmp20163_previlege_l33tuvoqpc3qk9li9n4np56394` */

DROP TABLE IF EXISTS `_tmp20163_previlege_l33tuvoqpc3qk9li9n4np56394`;

CREATE TABLE `_tmp20163_previlege_l33tuvoqpc3qk9li9n4np56394` (
  `previlege_id` int(11) NOT NULL,
  PRIMARY KEY (`previlege_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp20163_previlege_l33tuvoqpc3qk9li9n4np56394` */

/*Table structure for table `_tmp20163_previlege_q4o7lasa0j86locdobn56280e5` */

DROP TABLE IF EXISTS `_tmp20163_previlege_q4o7lasa0j86locdobn56280e5`;

CREATE TABLE `_tmp20163_previlege_q4o7lasa0j86locdobn56280e5` (
  `previlege_id` int(11) NOT NULL,
  PRIMARY KEY (`previlege_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp20163_previlege_q4o7lasa0j86locdobn56280e5` */

insert  into `_tmp20163_previlege_q4o7lasa0j86locdobn56280e5`(`previlege_id`) values (1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69),(70),(71),(72),(73),(74),(75),(76),(77),(78),(79),(80),(81),(82),(83),(84),(85),(86),(87),(88),(89),(90),(91),(92),(93),(94),(95),(96),(97),(98),(99),(100),(101),(102),(103),(104),(105),(106),(107),(108),(109),(110),(111),(112),(113),(114),(115),(116),(117),(118),(119),(120),(121),(122),(123),(124),(125),(126),(127),(128),(129),(130),(131),(132),(133),(134),(135),(136),(137),(138),(139),(140),(141),(142),(143),(144),(145),(146),(147),(148),(149),(150),(151),(152),(153),(154),(155),(156),(157),(158),(159),(160),(161),(162),(163),(164),(165),(166),(167),(168),(169),(170),(171),(172),(173),(174),(175),(176),(177),(178),(179),(180),(181),(182),(183);

/*Table structure for table `_tmp20163_previlege_qq557n7bmi8la2mb8fs8ov1b94` */

DROP TABLE IF EXISTS `_tmp20163_previlege_qq557n7bmi8la2mb8fs8ov1b94`;

CREATE TABLE `_tmp20163_previlege_qq557n7bmi8la2mb8fs8ov1b94` (
  `previlege_id` int(11) NOT NULL,
  PRIMARY KEY (`previlege_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp20163_previlege_qq557n7bmi8la2mb8fs8ov1b94` */

insert  into `_tmp20163_previlege_qq557n7bmi8la2mb8fs8ov1b94`(`previlege_id`) values (1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69),(70),(71),(72),(73),(74),(75),(76),(77),(78),(79),(80),(81),(82),(83),(84),(85),(86),(87),(88),(89),(90),(91),(92),(93),(94),(95),(96),(97),(98),(99),(100),(101),(102),(103),(104),(105),(106),(107),(108),(109),(110),(111),(112),(113),(114),(115),(116),(117),(118),(119),(120),(121),(122),(123),(124),(125),(126),(127),(128),(129),(130),(131),(132),(133),(134),(135),(136),(137),(138),(139),(140),(141),(142),(143),(144),(145),(146),(147),(148),(149),(150),(151),(152),(153),(154),(155),(156),(157),(158),(159),(160),(161),(162),(163),(164),(165),(166),(167),(168),(169),(170),(171),(172),(173),(174),(175),(176),(177),(178),(179),(180),(181),(182),(183);

/*Table structure for table `_tmp20163_previlege_r7874ksr0o0a91l2un3kn2smh1` */

DROP TABLE IF EXISTS `_tmp20163_previlege_r7874ksr0o0a91l2un3kn2smh1`;

CREATE TABLE `_tmp20163_previlege_r7874ksr0o0a91l2un3kn2smh1` (
  `previlege_id` int(11) NOT NULL,
  PRIMARY KEY (`previlege_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp20163_previlege_r7874ksr0o0a91l2un3kn2smh1` */

insert  into `_tmp20163_previlege_r7874ksr0o0a91l2un3kn2smh1`(`previlege_id`) values (1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69),(70),(71),(72),(73),(74),(75),(76),(77),(78),(79),(80),(81),(82),(83),(84),(85),(86),(87),(88),(89),(90),(91),(92),(93),(94),(95),(96),(97),(98),(99),(100),(101),(102),(103),(104),(105),(106),(107),(108),(109),(110),(111),(112),(113),(114),(115),(116),(117),(118),(119),(120),(121),(122),(123),(124),(125),(126),(127),(128),(129),(130),(131),(132),(133),(134),(135),(136),(137),(138),(139),(140),(141),(142),(143),(144),(145),(146),(147),(148),(149),(150),(151),(152),(153),(154),(155),(156),(157),(158),(159),(160),(161),(162),(163),(164),(165),(166),(167),(168),(169),(170),(171),(172),(173),(174),(175),(176),(177),(178),(179),(180),(181),(182),(183);

/*Table structure for table `_tmp20163_previlege_sesaku3h7cvtnbm1hqnim388p7` */

DROP TABLE IF EXISTS `_tmp20163_previlege_sesaku3h7cvtnbm1hqnim388p7`;

CREATE TABLE `_tmp20163_previlege_sesaku3h7cvtnbm1hqnim388p7` (
  `previlege_id` int(11) NOT NULL,
  PRIMARY KEY (`previlege_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp20163_previlege_sesaku3h7cvtnbm1hqnim388p7` */

insert  into `_tmp20163_previlege_sesaku3h7cvtnbm1hqnim388p7`(`previlege_id`) values (1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69),(70),(71),(72),(73),(74),(75),(76),(77),(78),(79),(80),(81),(82),(83),(84),(85),(86),(87),(88),(89),(90),(91),(92),(93),(94),(95),(96),(97),(98),(99),(100),(101),(102),(103),(104),(105),(106),(107),(108),(109),(110),(111),(112),(113),(114),(115),(116),(117),(118),(119),(120),(121),(122),(123),(124),(125),(126),(127),(128),(129),(130),(131),(132),(133),(134),(135),(136),(137),(138),(139),(140),(141),(142),(143),(144),(145),(146),(147),(148),(149),(150),(151),(152),(153),(154),(155),(156),(157),(158),(159),(160),(161),(162),(163),(164),(165),(166),(167),(168),(169),(170),(171),(172),(173),(174),(175),(176),(177),(178),(179),(180),(181),(182),(183);

/*Table structure for table `_tmp20163_previlege_si9ab7b2v08g06glbolsvjm2m5` */

DROP TABLE IF EXISTS `_tmp20163_previlege_si9ab7b2v08g06glbolsvjm2m5`;

CREATE TABLE `_tmp20163_previlege_si9ab7b2v08g06glbolsvjm2m5` (
  `previlege_id` int(11) NOT NULL,
  PRIMARY KEY (`previlege_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp20163_previlege_si9ab7b2v08g06glbolsvjm2m5` */

insert  into `_tmp20163_previlege_si9ab7b2v08g06glbolsvjm2m5`(`previlege_id`) values (1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69),(70),(71),(72),(73),(74),(75),(76),(77),(78),(79),(80),(81),(82),(83),(84),(85),(86),(87),(88),(89),(90),(91),(92),(93),(94),(95),(96),(97),(98),(99),(100),(101),(102),(103),(104),(105),(106),(107),(108),(109),(110),(111),(112),(113),(114),(115),(116),(117),(118),(119),(120),(121),(122),(123),(124),(125),(126),(127),(128),(129),(130),(131),(132),(133),(134),(135),(136),(137),(138),(139),(140),(141),(142),(143),(144),(145),(146),(147),(148),(149),(150),(151),(152),(153),(154),(155),(156),(157),(158),(159),(160),(161),(162),(163),(164),(165),(166),(167),(168),(169),(170),(171),(172),(173),(174),(175),(176),(177),(178),(179),(180),(181),(182),(183);

/*Table structure for table `_tmp20163_previlege_tuab1luprq4pc277c5rf3mavq5` */

DROP TABLE IF EXISTS `_tmp20163_previlege_tuab1luprq4pc277c5rf3mavq5`;

CREATE TABLE `_tmp20163_previlege_tuab1luprq4pc277c5rf3mavq5` (
  `previlege_id` int(11) NOT NULL,
  PRIMARY KEY (`previlege_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp20163_previlege_tuab1luprq4pc277c5rf3mavq5` */

insert  into `_tmp20163_previlege_tuab1luprq4pc277c5rf3mavq5`(`previlege_id`) values (1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69),(70),(71),(72),(73),(74),(75),(76),(77),(78),(79),(80),(81),(82),(83),(84),(85),(86),(87),(88),(89),(90),(91),(92),(93),(94),(95),(96),(97),(98),(99),(100),(101),(102),(103),(104),(105),(106),(107),(108),(109),(110),(111),(112),(113),(114),(115),(116),(117),(118),(119),(120),(121),(122),(123),(124),(125),(126),(127),(128),(129),(130),(131),(132),(133),(134),(135),(136),(137),(138),(139),(140),(141),(142),(143),(144),(145),(146),(147),(148),(149),(150),(151),(152),(153),(154),(155),(156),(157),(158),(159),(160),(161),(162),(163),(164),(165),(166),(167),(168),(169),(170),(171),(172),(173),(174),(175),(176),(177),(178),(179),(180),(181),(182),(183);

/*Table structure for table `_tmp2016_questionanalyze_371lbd029p4mgka4gi619vjfe6` */

DROP TABLE IF EXISTS `_tmp2016_questionanalyze_371lbd029p4mgka4gi619vjfe6`;

CREATE TABLE `_tmp2016_questionanalyze_371lbd029p4mgka4gi619vjfe6` (
  `question_id` int(11) NOT NULL AUTO_INCREMENT,
  `question_type_id` int(11) NOT NULL,
  `user_id` int(11) DEFAULT NULL,
  `bloom_level_id` int(11) NOT NULL,
  `question_desc` text COLLATE utf8_unicode_ci,
  `question_in_test` tinyint(1) DEFAULT '0' COMMENT 'false: not in any test\n            true: in a test',
  `course_id` int(11) DEFAULT NULL,
  `course_content_id` int(11) DEFAULT NULL,
  `qgroup_id` int(11) DEFAULT NULL,
  `difficulty` float DEFAULT NULL,
  `discrimination` float DEFAULT NULL,
  `total_max` double DEFAULT '0',
  `total_cur` double DEFAULT '0',
  `low_right` int(11) DEFAULT '0',
  `high_right` int(11) DEFAULT '0',
  PRIMARY KEY (`question_id`),
  KEY `fk_creator_of_question` (`user_id`),
  KEY `fk_difficultity_level_of_questions_in_bloom_taxonomy` (`bloom_level_id`),
  KEY `fk_types_of_questions` (`question_type_id`),
  KEY `course_id` (`course_id`),
  KEY `course_content_id` (`course_content_id`),
  KEY `qgroup_id` (`qgroup_id`)
) ENGINE=InnoDB AUTO_INCREMENT=913 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp2016_questionanalyze_371lbd029p4mgka4gi619vjfe6` */

insert  into `_tmp2016_questionanalyze_371lbd029p4mgka4gi619vjfe6`(`question_id`,`question_type_id`,`user_id`,`bloom_level_id`,`question_desc`,`question_in_test`,`course_id`,`course_content_id`,`qgroup_id`,`difficulty`,`discrimination`,`total_max`,`total_cur`,`low_right`,`high_right`) values (903,2,1,4,'<p>Các giá trị của mảng A được sắp xếp theo thứ tự tăng dần từng bước như sau:</p><p>3, 2, 7, 9, 1, 6</p><p>2, 3, 7, 9, 1, 6</p><p>1, 2, 3, 7, 9, 6</p><p>1, 2, 3, 6, 7, 9</p><p>Mảng A được sắp xếp theo thuật toán {1}</p>',1,2,14,NULL,0.42,0,50,21,6,6),(904,2,1,4,'<p>Chương trình sau có {1} thời gian thực hiện</p><p>int x=0;</p><p>for(int i=0; i&lt;n*n; i++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(int j=0; j&lt;i; j++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x=x+i+1;</p>',1,2,14,NULL,0.48,0.142857,50,24,6,8),(905,1,1,4,'<p>Cho đoạn chương trình sau:</p><p>void main()</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int a=7, b=9, *p;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p = &amp;a;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a = ++b;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(\"%d%d%d\",a,b,p);</p><p>}</p><p>Kết quả sau khi thực hiện chương trình trên là:</p>',1,2,NULL,NULL,0.5,-0.285714,50,25,9,5),(906,1,1,1,'<p>Giao thức (protocol) trong truyền thông mạng được hiểu là:</p>',1,4,84,NULL,0.6,0.142857,50,30,7,9),(907,1,1,2,'<p>Số thập phân của 11000000 là:</p>',1,4,86,NULL,0.38,0.142857,50,19,3,5),(908,1,1,3,'<p>Byte đầu tiên của một địa chỉ IP có dạng : 00000001. Vậy nó thuộc lớp nào:</p>',1,4,86,NULL,0.48,0,50,24,6,6),(909,1,1,3,'<p>Xác định đường mạng (Net-id) của địa chỉ IP 190.12.67.9</p>',1,4,86,NULL,0.4,0.214286,50,20,4,7),(910,1,1,2,'<p>Thiết bị Hub cho phép:</p>',1,4,87,NULL,0.5,0.285714,50,25,5,9),(911,1,1,1,'<p>Đầu nối RJ-45 dùng trong kiến trúc mạng nào?</p>',1,4,87,NULL,0.4,0.142857,50,20,3,5),(912,1,1,1,'<p>Card mạng (NIC) hoạt động ở tầng nào trong mô hình OSI?</p>',1,4,87,NULL,0.48,-0.571429,50,24,12,4);

/*Table structure for table `_tmp2016_questionanalyze_644fojk7piv6f3vs0ohp3vsja4` */

DROP TABLE IF EXISTS `_tmp2016_questionanalyze_644fojk7piv6f3vs0ohp3vsja4`;

CREATE TABLE `_tmp2016_questionanalyze_644fojk7piv6f3vs0ohp3vsja4` (
  `question_id` int(11) NOT NULL AUTO_INCREMENT,
  `question_type_id` int(11) NOT NULL,
  `user_id` int(11) DEFAULT NULL,
  `bloom_level_id` int(11) NOT NULL,
  `question_desc` text COLLATE utf8_unicode_ci,
  `question_in_test` tinyint(1) DEFAULT '0' COMMENT 'false: not in any test\n            true: in a test',
  `course_id` int(11) DEFAULT NULL,
  `course_content_id` int(11) DEFAULT NULL,
  `qgroup_id` int(11) DEFAULT NULL,
  `difficulty` float DEFAULT NULL,
  `discrimination` float DEFAULT NULL,
  `total_max` double DEFAULT '0',
  `total_cur` double DEFAULT '0',
  `low_right` int(11) DEFAULT '0',
  `high_right` int(11) DEFAULT '0',
  PRIMARY KEY (`question_id`),
  KEY `fk_creator_of_question` (`user_id`),
  KEY `fk_difficultity_level_of_questions_in_bloom_taxonomy` (`bloom_level_id`),
  KEY `fk_types_of_questions` (`question_type_id`),
  KEY `course_id` (`course_id`),
  KEY `course_content_id` (`course_content_id`),
  KEY `qgroup_id` (`qgroup_id`)
) ENGINE=InnoDB AUTO_INCREMENT=813 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp2016_questionanalyze_644fojk7piv6f3vs0ohp3vsja4` */

insert  into `_tmp2016_questionanalyze_644fojk7piv6f3vs0ohp3vsja4`(`question_id`,`question_type_id`,`user_id`,`bloom_level_id`,`question_desc`,`question_in_test`,`course_id`,`course_content_id`,`qgroup_id`,`difficulty`,`discrimination`,`total_max`,`total_cur`,`low_right`,`high_right`) values (810,1,1,6,'<p>Thiết bị nào là thiết bị ngoại vi</p>',1,2,4,NULL,0.56,-0.214286,50,28,9,6),(811,4,1,2,'Liên kết thiết bị và chức năng',1,2,2,NULL,0.53,0.0714286,200,106,1,2),(812,2,1,4,'<p>Các giá trị của mảng A được sắp xếp theo thứ tự tăng dần từng bước như sau:</p><p>3, 2, 7, 9, 1, 6</p><p>2, 3, 7, 9, 1, 6</p><p>1, 2, 3, 7, 9, 6</p><p>1, 2, 3, 6, 7, 9</p><p>Mảng A được sắp xếp theo thuật toán {1}</p>',1,2,14,NULL,0.54,0.214286,100,54,4,7);

/*Table structure for table `_tmp2016_questionanalyze_dopsv46rgeauu8eqtvpc6ivgd5` */

DROP TABLE IF EXISTS `_tmp2016_questionanalyze_dopsv46rgeauu8eqtvpc6ivgd5`;

CREATE TABLE `_tmp2016_questionanalyze_dopsv46rgeauu8eqtvpc6ivgd5` (
  `question_id` int(11) NOT NULL AUTO_INCREMENT,
  `question_type_id` int(11) NOT NULL,
  `user_id` int(11) DEFAULT NULL,
  `bloom_level_id` int(11) NOT NULL,
  `question_desc` text COLLATE utf8_unicode_ci,
  `question_in_test` tinyint(1) DEFAULT '0' COMMENT 'false: not in any test\n            true: in a test',
  `course_id` int(11) DEFAULT NULL,
  `course_content_id` int(11) DEFAULT NULL,
  `qgroup_id` int(11) DEFAULT NULL,
  `difficulty` float DEFAULT NULL,
  `discrimination` float DEFAULT NULL,
  `total_max` double DEFAULT '0',
  `total_cur` double DEFAULT '0',
  `low_right` int(11) DEFAULT '0',
  `high_right` int(11) DEFAULT '0',
  PRIMARY KEY (`question_id`),
  KEY `fk_creator_of_question` (`user_id`),
  KEY `fk_difficultity_level_of_questions_in_bloom_taxonomy` (`bloom_level_id`),
  KEY `fk_types_of_questions` (`question_type_id`),
  KEY `course_id` (`course_id`),
  KEY `course_content_id` (`course_content_id`),
  KEY `qgroup_id` (`qgroup_id`)
) ENGINE=InnoDB AUTO_INCREMENT=913 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp2016_questionanalyze_dopsv46rgeauu8eqtvpc6ivgd5` */

insert  into `_tmp2016_questionanalyze_dopsv46rgeauu8eqtvpc6ivgd5`(`question_id`,`question_type_id`,`user_id`,`bloom_level_id`,`question_desc`,`question_in_test`,`course_id`,`course_content_id`,`qgroup_id`,`difficulty`,`discrimination`,`total_max`,`total_cur`,`low_right`,`high_right`) values (903,2,1,4,'<p>Các giá trị của mảng A được sắp xếp theo thứ tự tăng dần từng bước như sau:</p><p>3, 2, 7, 9, 1, 6</p><p>2, 3, 7, 9, 1, 6</p><p>1, 2, 3, 7, 9, 6</p><p>1, 2, 3, 6, 7, 9</p><p>Mảng A được sắp xếp theo thuật toán {1}</p>',1,2,14,NULL,0.42,0,50,21,6,6),(904,2,1,4,'<p>Chương trình sau có {1} thời gian thực hiện</p><p>int x=0;</p><p>for(int i=0; i&lt;n*n; i++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(int j=0; j&lt;i; j++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x=x+i+1;</p>',1,2,14,NULL,0.48,0,50,24,7,7),(905,1,1,4,'<p>Cho đoạn chương trình sau:</p><p>void main()</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int a=7, b=9, *p;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p = &amp;a;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a = ++b;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(\"%d%d%d\",a,b,p);</p><p>}</p><p>Kết quả sau khi thực hiện chương trình trên là:</p>',1,2,NULL,NULL,0.5,0.285714,50,25,4,8),(906,1,1,1,'<p>Giao thức (protocol) trong truyền thông mạng được hiểu là:</p>',1,4,84,NULL,0.6,0,50,30,9,9),(907,1,1,2,'<p>Số thập phân của 11000000 là:</p>',1,4,86,NULL,0.38,0.214286,50,19,4,7),(908,1,1,3,'<p>Byte đầu tiên của một địa chỉ IP có dạng : 00000001. Vậy nó thuộc lớp nào:</p>',1,4,86,NULL,0.48,0.214286,50,24,5,8),(909,1,1,3,'<p>Xác định đường mạng (Net-id) của địa chỉ IP 190.12.67.9</p>',1,4,86,NULL,0.4,0,50,20,6,6),(910,1,1,2,'<p>Thiết bị Hub cho phép:</p>',1,4,87,NULL,0.5,-0.142857,50,25,9,7),(911,1,1,1,'<p>Đầu nối RJ-45 dùng trong kiến trúc mạng nào?</p>',1,4,87,NULL,0.4,0.142857,50,20,5,7),(912,1,1,1,'<p>Card mạng (NIC) hoạt động ở tầng nào trong mô hình OSI?</p>',1,4,87,NULL,0.48,0,50,24,5,5);

/*Table structure for table `_tmp2016_questionanalyze_gb79ng4et9gfmp76qb3h1igla1` */

DROP TABLE IF EXISTS `_tmp2016_questionanalyze_gb79ng4et9gfmp76qb3h1igla1`;

CREATE TABLE `_tmp2016_questionanalyze_gb79ng4et9gfmp76qb3h1igla1` (
  `question_id` int(11) NOT NULL AUTO_INCREMENT,
  `question_type_id` int(11) NOT NULL,
  `user_id` int(11) DEFAULT NULL,
  `bloom_level_id` int(11) NOT NULL,
  `question_desc` text COLLATE utf8_unicode_ci,
  `question_in_test` tinyint(1) DEFAULT '0' COMMENT 'false: not in any test\n            true: in a test',
  `course_id` int(11) DEFAULT NULL,
  `course_content_id` int(11) DEFAULT NULL,
  `qgroup_id` int(11) DEFAULT NULL,
  `difficulty` float DEFAULT NULL,
  `discrimination` float DEFAULT NULL,
  `total_max` double DEFAULT '0',
  `total_cur` double DEFAULT '0',
  `low_right` int(11) DEFAULT '0',
  `high_right` int(11) DEFAULT '0',
  PRIMARY KEY (`question_id`),
  KEY `fk_creator_of_question` (`user_id`),
  KEY `fk_difficultity_level_of_questions_in_bloom_taxonomy` (`bloom_level_id`),
  KEY `fk_types_of_questions` (`question_type_id`),
  KEY `course_id` (`course_id`),
  KEY `course_content_id` (`course_content_id`),
  KEY `qgroup_id` (`qgroup_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp2016_questionanalyze_gb79ng4et9gfmp76qb3h1igla1` */

/*Table structure for table `_tmp2016_questionanalyze_k3rsd6l7c8a9rkdb24nfpdisc3` */

DROP TABLE IF EXISTS `_tmp2016_questionanalyze_k3rsd6l7c8a9rkdb24nfpdisc3`;

CREATE TABLE `_tmp2016_questionanalyze_k3rsd6l7c8a9rkdb24nfpdisc3` (
  `question_id` int(11) NOT NULL AUTO_INCREMENT,
  `question_type_id` int(11) NOT NULL,
  `user_id` int(11) DEFAULT NULL,
  `bloom_level_id` int(11) NOT NULL,
  `question_desc` text COLLATE utf8_unicode_ci,
  `question_in_test` tinyint(1) DEFAULT '0' COMMENT 'false: not in any test\n            true: in a test',
  `course_id` int(11) DEFAULT NULL,
  `course_content_id` int(11) DEFAULT NULL,
  `qgroup_id` int(11) DEFAULT NULL,
  `difficulty` float DEFAULT NULL,
  `discrimination` float DEFAULT NULL,
  `total_max` double DEFAULT '0',
  `total_cur` double DEFAULT '0',
  PRIMARY KEY (`question_id`),
  KEY `fk_creator_of_question` (`user_id`),
  KEY `fk_difficultity_level_of_questions_in_bloom_taxonomy` (`bloom_level_id`),
  KEY `fk_types_of_questions` (`question_type_id`),
  KEY `course_id` (`course_id`),
  KEY `course_content_id` (`course_content_id`),
  KEY `qgroup_id` (`qgroup_id`)
) ENGINE=InnoDB AUTO_INCREMENT=974 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp2016_questionanalyze_k3rsd6l7c8a9rkdb24nfpdisc3` */

insert  into `_tmp2016_questionanalyze_k3rsd6l7c8a9rkdb24nfpdisc3`(`question_id`,`question_type_id`,`user_id`,`bloom_level_id`,`question_desc`,`question_in_test`,`course_id`,`course_content_id`,`qgroup_id`,`difficulty`,`discrimination`,`total_max`,`total_cur`) values (965,1,1,1,'<p>Cấu trúc là?</p>',1,3,19,NULL,NULL,NULL,0,0),(966,1,1,3,'<p>Chọn phát biểu đúng nhất :</p>',1,3,19,NULL,NULL,NULL,0,0),(967,1,1,3,'<p>Nếu được thực hiện đoạn chương trình sau sẽ viết ra cái gì?</p><p>#include&lt;stdio.h&gt;</p><p>&nbsp;</p><p>&nbsp;&nbsp;&nbsp; struct course</p><p>&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int courseno;</p><p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;char coursename[25];</p><p>&nbsp;&nbsp;&nbsp; };</p><p>int main()</p><p>{struct course c[] = { {102, \"Java\"},</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {103, \"PHP\"},</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {104, \"DotNet\"}&nbsp;&nbsp;&nbsp;&nbsp; };</p><p>&nbsp;</p><p>&nbsp;&nbsp;&nbsp; printf(\"%d \", c[1].courseno);</p><p>&nbsp;&nbsp;&nbsp; printf(\"%s\\n\", (*(c+2)).coursename);</p><p>&nbsp;&nbsp;&nbsp; return 0;</p><p>}</p>',1,3,20,NULL,NULL,NULL,0,0),(968,1,1,1,'<p>Ngôn ngữ lập trình C được Dennish phát triển dựa trên ngôn ngữ lập trình nào?</p>',1,3,21,NULL,NULL,NULL,0,0),(969,1,1,2,'<p>Trong lập trình C phát biểu nào đúng khi nói về lệnh rẽ nhánh?</p>',1,3,22,NULL,NULL,NULL,0,0),(970,1,1,1,'<p>Chọn phát biểu đúng trong các phát biểu sau:</p>',1,3,23,NULL,NULL,NULL,0,0),(971,1,1,3,'<p>Khai báo hàm tốt nhất cho tác vụ hoán vị 2 số thực :</p>',1,3,24,NULL,NULL,NULL,0,0),(972,1,1,3,'<p>Hàm sau sẽ in ra kết quả là gì?</p><p>void e(int );</p><p>main()</p><p>{</p><p>&nbsp; int a; a=3;</p><p>&nbsp; e(a);</p><p>}</p><p>void e(int n)</p><p>{</p><p>&nbsp; if(n&gt;0)</p><p>&nbsp; {</p><p>&nbsp;&nbsp;&nbsp; e(--n); printf(\"%d\" , n); e(--n);</p><p>&nbsp; }</p><p>}</p>',1,3,24,NULL,NULL,NULL,0,0),(973,1,1,1,'<p>class không thể được khai báo ở chế độ</p>',1,3,25,NULL,NULL,NULL,0,0);

/*Table structure for table `_tmp2016_questionanalyze_q4o7lasa0j86locdobn56280e5` */

DROP TABLE IF EXISTS `_tmp2016_questionanalyze_q4o7lasa0j86locdobn56280e5`;

CREATE TABLE `_tmp2016_questionanalyze_q4o7lasa0j86locdobn56280e5` (
  `question_id` int(11) NOT NULL AUTO_INCREMENT,
  `question_type_id` int(11) NOT NULL,
  `user_id` int(11) DEFAULT NULL,
  `bloom_level_id` int(11) NOT NULL,
  `question_desc` text COLLATE utf8_unicode_ci,
  `question_in_test` tinyint(1) DEFAULT '0' COMMENT 'false: not in any test\n            true: in a test',
  `course_id` int(11) DEFAULT NULL,
  `course_content_id` int(11) DEFAULT NULL,
  `qgroup_id` int(11) DEFAULT NULL,
  `difficulty` float DEFAULT NULL,
  `discrimination` float DEFAULT NULL,
  `total_max` double DEFAULT '0',
  `total_cur` double DEFAULT '0',
  `low_right` int(11) DEFAULT '0',
  `high_right` int(11) DEFAULT '0',
  PRIMARY KEY (`question_id`),
  KEY `fk_creator_of_question` (`user_id`),
  KEY `fk_difficultity_level_of_questions_in_bloom_taxonomy` (`bloom_level_id`),
  KEY `fk_types_of_questions` (`question_type_id`),
  KEY `course_id` (`course_id`),
  KEY `course_content_id` (`course_content_id`),
  KEY `qgroup_id` (`qgroup_id`)
) ENGINE=InnoDB AUTO_INCREMENT=249 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp2016_questionanalyze_q4o7lasa0j86locdobn56280e5` */

insert  into `_tmp2016_questionanalyze_q4o7lasa0j86locdobn56280e5`(`question_id`,`question_type_id`,`user_id`,`bloom_level_id`,`question_desc`,`question_in_test`,`course_id`,`course_content_id`,`qgroup_id`,`difficulty`,`discrimination`,`total_max`,`total_cur`,`low_right`,`high_right`) values (244,1,1,6,'<p>Thiết bị nào là thiết bị ngoại vi</p>',1,2,NULL,NULL,0.504,-0.117647,125,63,18,14),(245,2,1,4,'<p>Các giá trị của mảng A được sắp xếp theo thứ tự tăng dần từng bước như sau:</p><p>3, 2, 7, 9, 1, 6</p><p>2, 3, 7, 9, 1, 6</p><p>1, 2, 3, 7, 9, 6</p><p>1, 2, 3, 6, 7, 9</p><p>Mảng A được sắp xếp theo thuật toán {1}</p>',1,2,5,NULL,0.456,0,125,57,14,14),(246,2,1,4,'<p>Đi từ cuối mảng về đầu mảng, trong quá trình đi nếu phần tử ở dưới (đứng phía sau) nhỏ hơn phần tử đứng ngay trên (trước) nó thì hai phần tử này sẽ được đổi chỗ cho nhau. Sau mỗi lần đi chúng ta đưa được một phần tử trồi lên đúng chỗ. Sau &nbsp;{1} lần đi thì tất cả các phần tử trong mảng M sẽ có thứ tự tăng</p>',1,2,NULL,NULL,0.528,0.117647,125,66,17,21),(247,2,1,4,'<p>Chương trình sau có {1} thời gian thực hiện</p><p>int x=0;</p><p>for(int i=0; i&lt;n*n; i++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(int j=0; j&lt;i; j++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x=x+i+1;</p>',1,2,NULL,NULL,0.52,0,125,65,17,17),(248,1,1,3,'<p>Chọn câu lệnh in ra các giá trị từ 0 đến 15 ra màn hình:</p>',1,2,NULL,NULL,0.536,0.0294118,125,67,14,15);

/*Table structure for table `_tmp2016_questionanalyze_qq557n7bmi8la2mb8fs8ov1b94` */

DROP TABLE IF EXISTS `_tmp2016_questionanalyze_qq557n7bmi8la2mb8fs8ov1b94`;

CREATE TABLE `_tmp2016_questionanalyze_qq557n7bmi8la2mb8fs8ov1b94` (
  `question_id` int(11) NOT NULL AUTO_INCREMENT,
  `question_type_id` int(11) NOT NULL,
  `user_id` int(11) DEFAULT NULL,
  `bloom_level_id` int(11) NOT NULL,
  `question_desc` text COLLATE utf8_unicode_ci,
  `question_in_test` tinyint(1) DEFAULT '0' COMMENT 'false: not in any test\n            true: in a test',
  `course_id` int(11) DEFAULT NULL,
  `course_content_id` int(11) DEFAULT NULL,
  `qgroup_id` int(11) DEFAULT NULL,
  `difficulty` float DEFAULT NULL,
  `discrimination` float DEFAULT NULL,
  `total_max` double DEFAULT '0',
  `total_cur` double DEFAULT '0',
  `low_right` int(11) DEFAULT '0',
  `high_right` int(11) DEFAULT '0',
  PRIMARY KEY (`question_id`),
  KEY `fk_creator_of_question` (`user_id`),
  KEY `fk_difficultity_level_of_questions_in_bloom_taxonomy` (`bloom_level_id`),
  KEY `fk_types_of_questions` (`question_type_id`),
  KEY `course_id` (`course_id`),
  KEY `course_content_id` (`course_content_id`),
  KEY `qgroup_id` (`qgroup_id`)
) ENGINE=InnoDB AUTO_INCREMENT=986 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp2016_questionanalyze_qq557n7bmi8la2mb8fs8ov1b94` */

insert  into `_tmp2016_questionanalyze_qq557n7bmi8la2mb8fs8ov1b94`(`question_id`,`question_type_id`,`user_id`,`bloom_level_id`,`question_desc`,`question_in_test`,`course_id`,`course_content_id`,`qgroup_id`,`difficulty`,`discrimination`,`total_max`,`total_cur`,`low_right`,`high_right`) values (983,1,1,6,'<p>Thiết bị nào là thiết bị ngoại vi</p>',1,2,4,NULL,0.5,0.428571,26,13,2,5),(984,3,1,3,'<p>Thay đổi thứ tự độ phức tạp từ tốt nhất đến xấu</p>',1,2,14,NULL,0.576923,0.142857,26,15,3,4),(985,1,1,2,'<p>Với hàm void :</p>',1,3,24,NULL,0.653846,0,26,17,5,5);

/*Table structure for table `_tmp2016_questionanalyze_r7874ksr0o0a91l2un3kn2smh1` */

DROP TABLE IF EXISTS `_tmp2016_questionanalyze_r7874ksr0o0a91l2un3kn2smh1`;

CREATE TABLE `_tmp2016_questionanalyze_r7874ksr0o0a91l2un3kn2smh1` (
  `question_id` int(11) NOT NULL AUTO_INCREMENT,
  `question_type_id` int(11) NOT NULL,
  `user_id` int(11) DEFAULT NULL,
  `bloom_level_id` int(11) NOT NULL,
  `question_desc` text COLLATE utf8_unicode_ci,
  `question_in_test` tinyint(1) DEFAULT '0' COMMENT 'false: not in any test\n            true: in a test',
  `course_id` int(11) DEFAULT NULL,
  `course_content_id` int(11) DEFAULT NULL,
  `qgroup_id` int(11) DEFAULT NULL,
  `difficulty` float DEFAULT NULL,
  `discrimination` float DEFAULT NULL,
  `total_max` double DEFAULT '0',
  `total_cur` double DEFAULT '0',
  `low_right` int(11) DEFAULT '0',
  `high_right` int(11) DEFAULT '0',
  PRIMARY KEY (`question_id`),
  KEY `fk_creator_of_question` (`user_id`),
  KEY `fk_difficultity_level_of_questions_in_bloom_taxonomy` (`bloom_level_id`),
  KEY `fk_types_of_questions` (`question_type_id`),
  KEY `course_id` (`course_id`),
  KEY `course_content_id` (`course_content_id`),
  KEY `qgroup_id` (`qgroup_id`)
) ENGINE=InnoDB AUTO_INCREMENT=965 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp2016_questionanalyze_r7874ksr0o0a91l2un3kn2smh1` */

insert  into `_tmp2016_questionanalyze_r7874ksr0o0a91l2un3kn2smh1`(`question_id`,`question_type_id`,`user_id`,`bloom_level_id`,`question_desc`,`question_in_test`,`course_id`,`course_content_id`,`qgroup_id`,`difficulty`,`discrimination`,`total_max`,`total_cur`,`low_right`,`high_right`) values (953,1,1,3,'<p>Sau khi biên dịch đoạn code bên dưới, giá trị của biến c là bao nhiêu?</p><p>float c = 34.89675f;</p><p>int b = (int)c + 10;</p><p>c = b;</p>',1,1,83,NULL,0.58,-0.0714286,50,29,9,8),(954,1,1,3,'<p>Sau khi biên dịch đoạn code bên dưới, giá trị của biến c là bao nhiêu?</p><p>float c = 34.89675f;</p><p>int b = (int)c + 10;</p><p>c = b;</p>',1,1,83,NULL,0.56,-0.0714286,50,28,7,6),(955,1,1,1,'<p>Từ khóa nào không được phép dùng khi khai báo class trong java?</p>',1,1,83,NULL,0.54,-0.142857,50,27,8,6),(956,1,1,3,'<p>Cho đoạn code sau:</p><ol><li>class Animal{}</li><li>class Dog extends Animal {}</li><li>class Cat extends Animal {}</li><li>class Racoon extends Animal {}</li><li>class Swamp extends Animal {}</li><li>class Test{</li><li>public static void main(String[] args){</li><li>Dog rover,fido;</li><li>Animal anim;</li><li>rover = new Dog();</li><li>anim = rover;</li><li>fido =(Dog)anim;</li><li>}</li><li>}</li></ol>',1,1,83,NULL,0.6,0.285714,50,30,6,10),(957,1,1,1,'<p>Trong kế thừa, lớp con dẫn xuất có thể truy xuất bất kỳ:</p>',1,1,80,NULL,0.62,-0.357143,50,31,12,7),(958,1,1,3,'<p>Kết quả biên dịch của đoạn code sau là gì?</p><p>String word = \"abcde\"; for (int i = 0; i &lt;4; i+=2) System.out.print(word[i]);</p>',1,1,80,NULL,0.52,0.0714286,50,26,7,8),(959,1,1,3,'<p>Kết quả biên dịch của đoạn code sau là gì?</p><p>String word = \"abcde\"; for (int i = 0; i &lt;4; i+=2) System.out.print(word[i]);</p>',1,1,80,NULL,0.48,0.0714286,50,24,7,8),(960,1,1,1,'<p>Nếu không thêm từ khóa private/protected/public cho các thành phần thì thành phần đó sẽ:</p>',1,1,80,NULL,0.52,0.0714286,50,26,7,8),(961,1,1,2,'<p>Kết quả của đoạn code sau khi biên dịch?</p><p>int i = 0;</p><p>do {</p><p>System.out.println ( \" I am in the do block.\");</p><p>} while( i &gt; 0); //dòng 4</p>',1,1,81,NULL,0.56,-0.571429,50,28,13,5),(962,1,1,2,'<p>Trong các biểu thức sau, biểu thức nào sai?</p>',1,1,81,NULL,0.48,0.0714286,50,24,5,6),(963,1,1,3,'<p>Cho biết kết quả biên dịch đoạn code sau:</p><p>1: public class Short{ <br> 2: public static void main(String[] args) {<br> 3: StringBuffer s =new StringBuffer(\"Hello\");<br> 4: if((s.length() &gt; 5) &amp;&amp; s.append(\" there\").equals(\"False\"));<br> 5: &nbsp;&nbsp;&nbsp;&nbsp;System.out.println(\"value is \" + s);<br> 6: }<br> 7: }</p>',1,1,82,NULL,0.42,0.142857,50,21,3,5),(964,1,1,3,'<p>class VNT002 {</p><p>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void main(String[] args) {</p><p>float a=Float.POSITIVE_INFINITY;</p><p>double b=Double.POSITIVE_INFINITY;</p><p>double c=Double.NaN;</p><p>System.out.print((a == b)+\",\"+(c==c)+\",\"+(c!=c));</p><p>}</p><p>}</p><p>Kết quả sau khi thực thi đoạn code trên:</p>',1,1,82,NULL,0.64,0.0714286,50,32,9,10);

/*Table structure for table `_tmp2016_questionanalyze_si9ab7b2v08g06glbolsvjm2m5` */

DROP TABLE IF EXISTS `_tmp2016_questionanalyze_si9ab7b2v08g06glbolsvjm2m5`;

CREATE TABLE `_tmp2016_questionanalyze_si9ab7b2v08g06glbolsvjm2m5` (
  `question_id` int(11) NOT NULL AUTO_INCREMENT,
  `question_type_id` int(11) NOT NULL,
  `user_id` int(11) DEFAULT NULL,
  `bloom_level_id` int(11) NOT NULL,
  `question_desc` text COLLATE utf8_unicode_ci,
  `question_in_test` tinyint(1) DEFAULT '0' COMMENT 'false: not in any test\n            true: in a test',
  `course_id` int(11) DEFAULT NULL,
  `course_content_id` int(11) DEFAULT NULL,
  `qgroup_id` int(11) DEFAULT NULL,
  `difficulty` float DEFAULT NULL,
  `discrimination` float DEFAULT NULL,
  `total_max` double DEFAULT '0',
  `total_cur` double DEFAULT '0',
  `low_right` int(11) DEFAULT '0',
  `high_right` int(11) DEFAULT '0',
  PRIMARY KEY (`question_id`),
  KEY `fk_creator_of_question` (`user_id`),
  KEY `fk_difficultity_level_of_questions_in_bloom_taxonomy` (`bloom_level_id`),
  KEY `fk_types_of_questions` (`question_type_id`),
  KEY `course_id` (`course_id`),
  KEY `course_content_id` (`course_content_id`),
  KEY `qgroup_id` (`qgroup_id`)
) ENGINE=InnoDB AUTO_INCREMENT=838 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_tmp2016_questionanalyze_si9ab7b2v08g06glbolsvjm2m5` */

insert  into `_tmp2016_questionanalyze_si9ab7b2v08g06glbolsvjm2m5`(`question_id`,`question_type_id`,`user_id`,`bloom_level_id`,`question_desc`,`question_in_test`,`course_id`,`course_content_id`,`qgroup_id`,`difficulty`,`discrimination`,`total_max`,`total_cur`,`low_right`,`high_right`) values (829,1,1,3,'<p>Kết quả sau khi biên dịch mã: Class A { int b =1; public static void main(String [] args) { System.out.println(“b is” +b);}}</p>',1,3,25,NULL,0.466667,-0.15,75,35,11,8),(830,1,1,1,'<p>Một Class abstract có thể sử dụng cú pháp non-abstract</p>',1,3,25,NULL,0.493333,-0.5,75,37,14,4),(831,1,1,2,'<p>Với hàm void :</p>',1,3,24,NULL,0.586667,0.2,75,44,10,14),(832,1,1,3,'<p>Đoạn mã sau đây: <em>for (;;)</em> là :</p>',1,3,23,NULL,0.48,-0.1,75,36,10,8),(833,1,1,3,'<p>Câu lệnh IF lông nhau được sử dụng khi phải lựa chọn</p>',1,3,22,NULL,0.466667,0.1,75,35,9,11),(834,1,1,2,'<p>Khi biểu thức điều kiện 1 đúng, biểu thức điều kiện 2 saiĐoạn chương trình sau, câu lệnh 2 được thực hiện khi nào:</p><p>if (&lt;biểu thức điều kiện 1&gt;)</p><p>{&lt;câu lệnh1&gt;}</p><p>else if (&lt;biểu thức điều kiện 2&gt;)</p><p>{&lt;câu lệnh2&gt;}<br></p>',1,3,22,NULL,0.466667,0.15,75,35,8,11),(835,1,1,3,'<p>Nếu đoạn code sau được thực thi, trị của biến t là gì?</p><p>int x= 5, y=7;</p><p>int t = 12 + (y&lt;2*x) ;</p>',1,3,21,NULL,0.6,0.1,75,45,11,13),(836,1,1,3,'<p>Trong các tên biến sau đây, tên nào đặt tên sai quy tắc đặt tên khi lập trình C?</p>',1,3,20,NULL,0.533333,-0.2,75,40,13,9),(837,1,1,3,'<p>Hãy chọn biểu diễn hằng đúng trong những biểu diễn dưới đây :</p>',1,3,19,NULL,0.56,0,75,42,12,12);

/*Table structure for table `_trcor_data` */

DROP TABLE IF EXISTS `_trcor_data`;

CREATE TABLE `_trcor_data` (
  `test_id` int(11) NOT NULL,
  `number_taker` int(11) DEFAULT NULL,
  `coi_1_rq` int(11) DEFAULT '0',
  `coi_1_nq` int(11) DEFAULT '0',
  `coi_2_rq` int(11) DEFAULT '0',
  `coi_2_nq` int(11) DEFAULT '0',
  `coi_30_rq` int(11) DEFAULT '0',
  `coi_30_nq` int(11) DEFAULT '0',
  PRIMARY KEY (`test_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `_trcor_data` */

insert  into `_trcor_data`(`test_id`,`number_taker`,`coi_1_rq`,`coi_1_nq`,`coi_2_rq`,`coi_2_nq`,`coi_30_rq`,`coi_30_nq`) values (1,470,30,2,16,1,10,1);

/*Table structure for table `bloom_level` */

DROP TABLE IF EXISTS `bloom_level`;

CREATE TABLE `bloom_level` (
  `bloom_level_id` int(11) NOT NULL AUTO_INCREMENT,
  `bloom_level_code` tinyint(4) NOT NULL,
  `bloom_level_desc` varchar(64) COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`bloom_level_id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `bloom_level` */

insert  into `bloom_level`(`bloom_level_id`,`bloom_level_code`,`bloom_level_desc`) values (1,1,'Nhớ'),(2,2,'Hiểu'),(3,3,'Áp dụng'),(4,4,'Phân tích'),(5,5,'Đánh giá'),(6,6,'Sáng tạo');

/*Table structure for table `cco_map` */

DROP TABLE IF EXISTS `cco_map`;

CREATE TABLE `cco_map` (
  `cco_id` int(11) NOT NULL AUTO_INCREMENT,
  `cc_id` int(11) DEFAULT NULL,
  `coi_id` int(11) DEFAULT NULL,
  `cco_desc` text COLLATE utf8_unicode_ci,
  PRIMARY KEY (`cco_id`),
  KEY `fk_content_in_the_mapping_with_course_outcome` (`cc_id`),
  KEY `fk_co_in_the_mapping_with_content` (`coi_id`),
  CONSTRAINT `fk_content_in_the_mapping_with_course_outcome` FOREIGN KEY (`cc_id`) REFERENCES `course_content` (`course_content_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_co_in_the_mapping_with_content` FOREIGN KEY (`coi_id`) REFERENCES `course_outcome_item` (`coi_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=61 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `cco_map` */

insert  into `cco_map`(`cco_id`,`cc_id`,`coi_id`,`cco_desc`) values (1,2,1,''),(5,19,4,''),(6,19,5,''),(7,19,23,''),(8,19,24,''),(9,19,25,''),(10,19,26,''),(11,20,20,''),(12,20,21,''),(13,22,7,''),(14,22,11,''),(15,23,8,''),(16,23,12,''),(17,23,14,''),(18,23,24,''),(19,24,9,''),(20,24,13,''),(21,24,14,''),(22,25,17,''),(23,25,18,''),(25,19,22,''),(26,22,6,''),(27,24,10,''),(28,19,3,''),(29,25,16,''),(30,24,6,''),(31,20,19,''),(36,14,2,''),(37,3,30,''),(38,3,1,''),(39,80,32,''),(41,81,32,''),(42,81,33,''),(43,81,35,''),(45,82,33,''),(46,82,35,''),(47,82,34,''),(49,83,34,''),(50,83,35,''),(51,84,31,''),(53,85,36,''),(54,86,37,''),(55,87,38,''),(57,87,31,''),(58,85,38,''),(59,84,36,''),(60,95,30,'');

/*Table structure for table `co_so_map` */

DROP TABLE IF EXISTS `co_so_map`;

CREATE TABLE `co_so_map` (
  `csom_id` int(11) NOT NULL AUTO_INCREMENT,
  `co_id` int(11) DEFAULT NULL,
  `so_id` int(11) DEFAULT NULL,
  `csom_code` int(11) NOT NULL,
  `csom_date` date NOT NULL,
  `csom_isused` tinyint(1) NOT NULL,
  PRIMARY KEY (`csom_id`),
  KEY `fk_co_version_to_co_so_map_version` (`co_id`),
  KEY `fk_so_to_co_so_map_version` (`so_id`),
  CONSTRAINT `fk_co_version_to_co_so_map_version` FOREIGN KEY (`co_id`) REFERENCES `course_outcome` (`co_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_so_to_co_so_map_version` FOREIGN KEY (`so_id`) REFERENCES `student_outcome` (`so_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `co_so_map` */

/*Table structure for table `coi_soi_map` */

DROP TABLE IF EXISTS `coi_soi_map`;

CREATE TABLE `coi_soi_map` (
  `csim_id` int(11) NOT NULL AUTO_INCREMENT,
  `coi_id` int(11) DEFAULT NULL,
  `csom_id` int(11) DEFAULT NULL,
  `soi_id` int(11) DEFAULT NULL,
  `csim_level` char(1) COLLATE utf8_unicode_ci NOT NULL COMMENT '1-6',
  PRIMARY KEY (`csim_id`),
  KEY `fk_co_in_the_mapping_with_sos` (`coi_id`),
  KEY `fk_so_in_the_mapping_with_cos` (`soi_id`),
  KEY `fk_version_of_co_so_map` (`csom_id`),
  CONSTRAINT `fk_co_in_the_mapping_with_sos` FOREIGN KEY (`coi_id`) REFERENCES `course_outcome_item` (`coi_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_so_in_the_mapping_with_cos` FOREIGN KEY (`soi_id`) REFERENCES `student_outcome_item` (`soi_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_version_of_co_so_map` FOREIGN KEY (`csom_id`) REFERENCES `co_so_map` (`csom_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=408 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `coi_soi_map` */

insert  into `coi_soi_map`(`csim_id`,`coi_id`,`csom_id`,`soi_id`,`csim_level`) values (1,3,NULL,3,'1'),(2,4,NULL,3,'3'),(3,5,NULL,3,'1'),(4,1,NULL,6,'2'),(5,2,NULL,8,'1'),(6,30,NULL,10,'0'),(7,3,NULL,4,'6'),(8,2,NULL,7,'0'),(9,32,NULL,3,'3'),(10,33,NULL,4,'2'),(11,32,NULL,5,'2'),(12,32,NULL,13,'1'),(13,34,NULL,9,'3'),(14,35,NULL,4,'2'),(15,35,NULL,5,'3'),(16,34,NULL,12,'2'),(17,33,NULL,6,'3'),(18,34,NULL,7,'3'),(19,34,NULL,8,'4'),(20,32,NULL,7,'4'),(21,35,NULL,7,'5'),(22,35,NULL,6,'2'),(23,32,NULL,4,'2'),(24,32,NULL,6,'2'),(25,32,NULL,8,'2'),(26,34,NULL,4,'2'),(27,35,NULL,10,'2'),(28,33,NULL,9,'2'),(29,33,NULL,11,'3'),(30,35,NULL,12,'3'),(31,32,NULL,12,'1'),(32,33,NULL,12,'2'),(33,35,NULL,13,'3'),(34,33,NULL,13,'2'),(35,34,NULL,3,'1'),(36,33,NULL,3,'2'),(37,33,NULL,5,'1'),(38,33,NULL,7,'2'),(39,33,NULL,8,'2'),(40,34,NULL,5,'2'),(41,34,NULL,6,'3'),(42,34,NULL,10,'1'),(43,33,NULL,10,'1'),(44,32,NULL,9,'1'),(45,32,NULL,10,'1'),(46,32,NULL,11,'1'),(47,1,NULL,3,'1'),(48,1,NULL,4,'0'),(49,2,NULL,3,'1'),(50,30,NULL,3,'2'),(51,2,NULL,4,'2'),(52,30,NULL,4,'2'),(53,1,NULL,5,'1'),(54,2,NULL,5,'2'),(55,30,NULL,5,'1'),(56,2,NULL,6,'2'),(57,30,NULL,6,'0'),(58,1,NULL,7,'1'),(59,30,NULL,7,'2'),(60,1,NULL,8,'1'),(61,1,NULL,9,'0'),(62,1,NULL,10,'1'),(63,1,NULL,11,'2'),(64,1,NULL,12,'2'),(65,1,NULL,13,'1'),(66,2,NULL,9,'0'),(67,2,NULL,10,'2'),(68,2,NULL,11,'1'),(69,2,NULL,12,'3'),(70,2,NULL,13,'1'),(71,30,NULL,13,'2'),(72,30,NULL,8,'2'),(73,30,NULL,9,'0'),(74,30,NULL,11,'3'),(75,30,NULL,12,'0'),(76,31,NULL,3,'1'),(77,36,NULL,3,'2'),(78,37,NULL,3,'2'),(79,38,NULL,3,'2'),(80,31,NULL,4,'1'),(81,36,NULL,4,'3'),(82,37,NULL,4,'3'),(83,38,NULL,4,'2'),(84,31,NULL,5,'1'),(85,36,NULL,5,'2'),(86,31,NULL,6,'2'),(87,36,NULL,6,'1'),(88,31,NULL,7,'2'),(89,36,NULL,8,'2'),(90,36,NULL,10,'1'),(91,36,NULL,9,'3'),(92,36,NULL,7,'2'),(93,37,NULL,5,'5'),(94,38,NULL,5,'3'),(95,37,NULL,6,'2'),(96,37,NULL,7,'1'),(97,38,NULL,7,'4'),(98,38,NULL,6,'3'),(99,31,NULL,8,'2'),(100,31,NULL,9,'1'),(101,31,NULL,10,'3'),(102,31,NULL,11,'4'),(103,31,NULL,12,'2'),(104,37,NULL,11,'3'),(105,37,NULL,9,'2'),(106,37,NULL,8,'1'),(107,38,NULL,8,'3'),(108,37,NULL,10,'2'),(109,38,NULL,9,'1'),(110,38,NULL,10,'4'),(111,38,NULL,11,'3'),(112,36,NULL,13,'3'),(113,31,NULL,13,'2'),(114,36,NULL,12,'2'),(115,36,NULL,11,'1'),(116,37,NULL,12,'3'),(117,37,NULL,13,'3'),(118,38,NULL,12,'5'),(119,38,NULL,13,'4'),(120,4,NULL,4,'3'),(121,5,NULL,5,'2'),(122,7,NULL,8,'3'),(123,6,NULL,7,'1'),(124,8,NULL,4,'3'),(125,6,NULL,3,'2'),(126,6,NULL,5,'3'),(127,6,NULL,4,'2'),(128,5,NULL,4,'1'),(129,26,NULL,13,'3'),(130,26,NULL,12,'2'),(131,26,NULL,11,'4'),(132,26,NULL,10,'5'),(133,26,NULL,9,'3'),(134,26,NULL,8,'4'),(135,26,NULL,7,'2'),(136,26,NULL,6,'1'),(137,26,NULL,5,'3'),(138,26,NULL,4,'2'),(139,26,NULL,3,'2'),(140,25,NULL,3,'4'),(141,25,NULL,4,'3'),(142,25,NULL,5,'2'),(143,25,NULL,6,'3'),(144,25,NULL,7,'2'),(145,25,NULL,8,'1'),(146,25,NULL,9,'2'),(147,25,NULL,10,'4'),(148,25,NULL,11,'3'),(149,25,NULL,12,'2'),(150,25,NULL,13,'1'),(151,9,NULL,7,'1'),(152,5,NULL,7,'2'),(153,6,NULL,6,'1'),(154,4,NULL,6,'2'),(155,4,NULL,8,'3'),(156,3,NULL,5,'1'),(157,3,NULL,6,'2'),(158,3,NULL,7,'1'),(159,3,NULL,8,'0'),(160,3,NULL,9,'1'),(161,3,NULL,10,'2'),(162,3,NULL,11,'5'),(163,3,NULL,12,'3'),(164,3,NULL,13,'2'),(165,4,NULL,5,'2'),(166,4,NULL,7,'1'),(167,4,NULL,9,'2'),(168,4,NULL,10,'3'),(169,4,NULL,11,'2'),(170,4,NULL,12,'3'),(171,4,NULL,13,'3'),(172,5,NULL,6,'4'),(173,5,NULL,8,'2'),(174,5,NULL,9,'3'),(175,5,NULL,10,'2'),(176,5,NULL,11,'1'),(177,5,NULL,12,'2'),(178,5,NULL,13,'3'),(179,6,NULL,8,'3'),(180,6,NULL,9,'2'),(181,6,NULL,10,'3'),(182,6,NULL,11,'2'),(183,6,NULL,12,'1'),(184,6,NULL,13,'2'),(185,24,NULL,3,'3'),(186,23,NULL,3,'2'),(187,22,NULL,3,'1'),(188,22,NULL,4,'2'),(189,23,NULL,4,'3'),(190,24,NULL,4,'2'),(191,24,NULL,5,'1'),(192,23,NULL,5,'4'),(193,22,NULL,5,'2'),(194,22,NULL,6,'3'),(195,23,NULL,6,'2'),(196,24,NULL,6,'1'),(197,24,NULL,7,'4'),(198,23,NULL,7,'2'),(199,22,NULL,7,'1'),(200,22,NULL,8,'3'),(201,23,NULL,8,'2'),(202,22,NULL,9,'4'),(203,24,NULL,8,'3'),(204,23,NULL,9,'2'),(205,24,NULL,9,'1'),(206,23,NULL,10,'4'),(207,22,NULL,10,'2'),(208,24,NULL,10,'3'),(209,22,NULL,11,'2'),(210,23,NULL,11,'3'),(211,24,NULL,11,'2'),(212,22,NULL,12,'1'),(213,23,NULL,12,'2'),(214,24,NULL,12,'3'),(215,22,NULL,13,'4'),(216,23,NULL,13,'2'),(217,24,NULL,13,'4'),(218,7,NULL,3,'1'),(219,7,NULL,4,'2'),(220,7,NULL,5,'2'),(221,7,NULL,6,'2'),(222,7,NULL,7,'3'),(223,7,NULL,9,'2'),(224,7,NULL,10,'2'),(225,7,NULL,11,'3'),(226,7,NULL,12,'5'),(227,7,NULL,13,'2'),(228,8,NULL,3,'1'),(229,8,NULL,5,'2'),(230,8,NULL,6,'2'),(231,8,NULL,7,'2'),(232,8,NULL,8,'2'),(233,8,NULL,9,'2'),(234,8,NULL,10,'2'),(235,8,NULL,11,'2'),(236,8,NULL,12,'2'),(237,8,NULL,13,'2'),(238,20,NULL,3,'1'),(239,21,NULL,3,'2'),(240,20,NULL,4,'1'),(241,21,NULL,4,'2'),(242,20,NULL,5,'1'),(243,21,NULL,5,'3'),(244,20,NULL,6,'1'),(245,21,NULL,7,'2'),(246,21,NULL,6,'2'),(247,20,NULL,7,'1'),(248,20,NULL,8,'2'),(249,21,NULL,8,'3'),(250,20,NULL,9,'4'),(251,21,NULL,9,'2'),(252,20,NULL,10,'3'),(253,20,NULL,11,'1'),(254,20,NULL,12,'2'),(255,20,NULL,13,'3'),(256,21,NULL,10,'3'),(257,21,NULL,11,'4'),(258,21,NULL,12,'2'),(259,21,NULL,13,'1'),(260,9,NULL,3,'1'),(261,10,NULL,3,'2'),(262,11,NULL,3,'3'),(263,12,NULL,3,'4'),(264,13,NULL,3,'3'),(265,14,NULL,3,'2'),(266,15,NULL,3,'2'),(267,16,NULL,3,'3'),(268,17,NULL,3,'4'),(269,18,NULL,3,'3'),(270,19,NULL,3,'1'),(271,9,NULL,4,'3'),(272,9,NULL,5,'4'),(273,9,NULL,6,'2'),(274,9,NULL,8,'3'),(275,9,NULL,9,'2'),(276,9,NULL,10,'1'),(277,9,NULL,11,'2'),(278,9,NULL,12,'3'),(279,9,NULL,13,'1'),(280,19,NULL,13,'4'),(281,19,NULL,12,'3'),(282,19,NULL,11,'2'),(283,19,NULL,10,'1'),(284,19,NULL,4,'2'),(285,19,NULL,5,'3'),(286,19,NULL,6,'2'),(287,19,NULL,7,'1'),(288,19,NULL,8,'2'),(289,19,NULL,9,'3'),(290,18,NULL,4,'3'),(291,18,NULL,5,'2'),(292,18,NULL,6,'1'),(293,18,NULL,7,'3'),(294,18,NULL,8,'4'),(295,18,NULL,9,'2'),(296,18,NULL,10,'3'),(297,18,NULL,11,'2'),(298,18,NULL,12,'1'),(299,18,NULL,13,'2'),(300,10,NULL,13,'2'),(301,10,NULL,12,'3'),(302,10,NULL,11,'2'),(303,10,NULL,10,'3'),(304,10,NULL,9,'2'),(305,10,NULL,8,'1'),(306,10,NULL,7,'2'),(307,10,NULL,6,'1'),(308,10,NULL,5,'2'),(309,10,NULL,4,'3'),(310,11,NULL,4,'3'),(311,11,NULL,5,'2'),(312,11,NULL,6,'2'),(313,11,NULL,7,'3'),(314,11,NULL,8,'1'),(315,11,NULL,9,'2'),(316,11,NULL,10,'4'),(317,11,NULL,11,'2'),(318,11,NULL,12,'1'),(319,11,NULL,13,'3'),(320,12,NULL,4,'2'),(321,13,NULL,4,'2'),(322,14,NULL,4,'3'),(323,15,NULL,4,'2'),(324,16,NULL,4,'2'),(325,17,NULL,4,'1'),(326,12,NULL,5,'2'),(327,13,NULL,5,'1'),(328,14,NULL,5,'2'),(329,15,NULL,5,'1'),(330,16,NULL,5,'2'),(331,17,NULL,5,'2'),(332,13,NULL,6,'4'),(333,12,NULL,6,'2'),(334,12,NULL,7,'2'),(335,14,NULL,6,'2'),(336,15,NULL,6,'3'),(337,16,NULL,6,'3'),(338,17,NULL,6,'2'),(339,12,NULL,13,'2'),(340,13,NULL,13,'3'),(341,14,NULL,13,'2'),(342,15,NULL,13,'2'),(343,16,NULL,13,'1'),(344,17,NULL,13,'2'),(345,17,NULL,12,'2'),(346,12,NULL,12,'2'),(347,12,NULL,11,'3'),(348,12,NULL,10,'2'),(349,12,NULL,9,'3'),(350,12,NULL,8,'2'),(351,13,NULL,7,'2'),(352,13,NULL,8,'3'),(353,13,NULL,9,'2'),(354,13,NULL,10,'3'),(355,13,NULL,11,'2'),(356,13,NULL,12,'3'),(357,14,NULL,7,'2'),(358,14,NULL,8,'3'),(359,14,NULL,9,'2'),(360,14,NULL,10,'1'),(361,14,NULL,11,'2'),(362,14,NULL,12,'3'),(363,15,NULL,7,'2'),(364,16,NULL,7,'2'),(365,17,NULL,7,'2'),(366,15,NULL,8,'2'),(367,16,NULL,8,'2'),(368,17,NULL,8,'2'),(369,15,NULL,9,'3'),(370,15,NULL,10,'2'),(371,15,NULL,11,'2'),(372,15,NULL,12,'1'),(373,16,NULL,12,'2'),(374,16,NULL,11,'3'),(375,17,NULL,11,'2'),(376,16,NULL,10,'3'),(377,16,NULL,9,'2'),(378,17,NULL,9,'3'),(379,17,NULL,10,'2'),(380,39,NULL,13,'4'),(381,39,NULL,3,'2'),(382,39,NULL,4,'1'),(383,39,NULL,5,'3'),(384,39,NULL,6,'2'),(385,39,NULL,7,'3'),(386,39,NULL,8,'2'),(387,39,NULL,9,'0'),(388,39,NULL,10,'0'),(389,39,NULL,11,'2'),(390,39,NULL,12,'2'),(391,40,NULL,3,'2'),(392,40,NULL,4,'2'),(393,40,NULL,5,'2'),(394,40,NULL,6,'2'),(395,40,NULL,7,'0'),(396,40,NULL,8,'2'),(397,40,NULL,9,'0'),(398,40,NULL,10,'2'),(399,40,NULL,11,'3'),(400,40,NULL,12,'2'),(401,40,NULL,13,'3'),(402,34,NULL,11,'3'),(403,34,NULL,13,'1'),(404,35,NULL,8,'3'),(405,35,NULL,9,'2'),(406,35,NULL,11,'1'),(407,35,NULL,3,'2');

/*Table structure for table `content_comment` */

DROP TABLE IF EXISTS `content_comment`;

CREATE TABLE `content_comment` (
  `content_comment_id` int(11) NOT NULL AUTO_INCREMENT,
  `course_comment_id` int(11) DEFAULT NULL,
  `course_content_id` int(11) DEFAULT NULL,
  `course_reviewer_decision_id` int(11) DEFAULT NULL,
  `content_comment_date` date NOT NULL,
  `content_comment_time` time NOT NULL,
  `content_comment_desc` text COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`content_comment_id`),
  KEY `fk_comment_in_the_mapping_with_contents` (`course_comment_id`),
  KEY `fk_content_in_mapping_with_comment` (`course_content_id`),
  KEY `fk_decision_of_reviewer_for_content` (`course_reviewer_decision_id`),
  CONSTRAINT `fk_comment_in_the_mapping_with_contents` FOREIGN KEY (`course_comment_id`) REFERENCES `course_comment` (`course_comment_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_content_in_mapping_with_comment` FOREIGN KEY (`course_content_id`) REFERENCES `course_content` (`course_content_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_decision_of_reviewer_for_content` FOREIGN KEY (`course_reviewer_decision_id`) REFERENCES `course_reviewer_decision` (`course_reviewer_decision_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `content_comment` */

/*Table structure for table `content_comment_relationship` */

DROP TABLE IF EXISTS `content_comment_relationship`;

CREATE TABLE `content_comment_relationship` (
  `content_comment_relationship_id` int(11) NOT NULL AUTO_INCREMENT,
  `parent_content_comment_id` int(11) DEFAULT NULL,
  `child_content_comment_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`content_comment_relationship_id`),
  KEY `fk_child_of_relationship` (`child_content_comment_id`),
  KEY `fk_parent_of_relationship` (`parent_content_comment_id`),
  CONSTRAINT `fk_child_of_relationship` FOREIGN KEY (`child_content_comment_id`) REFERENCES `content_comment` (`content_comment_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_parent_of_relationship` FOREIGN KEY (`parent_content_comment_id`) REFERENCES `content_comment` (`content_comment_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `content_comment_relationship` */

/*Table structure for table `course` */

DROP TABLE IF EXISTS `course`;

CREATE TABLE `course` (
  `course_id` int(11) NOT NULL AUTO_INCREMENT,
  `course_code` char(20) COLLATE utf8_unicode_ci NOT NULL,
  `course_name_vn` text COLLATE utf8_unicode_ci NOT NULL,
  `course_name_en` text COLLATE utf8_unicode_ci NOT NULL,
  `course_name_short` char(20) COLLATE utf8_unicode_ci DEFAULT NULL,
  `course_credits` tinyint(4) NOT NULL,
  `course_linkto_syllabus` text COLLATE utf8_unicode_ci,
  `course_version_code` char(20) COLLATE utf8_unicode_ci NOT NULL,
  `course_introduced_date` date DEFAULT NULL,
  `course_applied_year` date DEFAULT NULL,
  `course_applied_semester` tinyint(4) DEFAULT NULL COMMENT '1,2,3',
  `course_isused` tinyint(1) NOT NULL COMMENT 'only one course that share the code with others is used at a time',
  PRIMARY KEY (`course_id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `course` */

insert  into `course`(`course_id`,`course_code`,`course_name_vn`,`course_name_en`,`course_name_short`,`course_credits`,`course_linkto_syllabus`,`course_version_code`,`course_introduced_date`,`course_applied_year`,`course_applied_semester`,`course_isused`) values (1,'JAVA','LẬP TRÌNH JAVA','Java 2 Platform, Enterprise Edition','J2EE',3,'Java 2 Platform, Enterprise Edition','v1','2015-08-03','2016-03-06',0,0),(2,'CTDLGT','CẤU TRÚC DỮ LIỆU VÀ GIẢI THUẬT','Data Structures and Algorithms','',4,'Trần Cao Đệ, “Cấu Trúc Dữ Liệu”, NXB ĐHCT, 2010.\nNguyễn Văn Linh, “Phân Tích và Thiết Kế Thuật Toán”, NXB ĐHCT, 2010.\nLê Minh Trung, “Lập trình nâng cao bằng pascal với các cấu trúc dữ liệu”, SCITEC, 1997.  \nA. V. Aho, J. E. Hopcroft, J. D. Ullman, “Data Structure and Algorithms”, Addison–Wesley, 1983.\nR. Sedgewick, “Algorithms”, Addison–Wesley, 1983.\nH.S. Wilf, “Algorithms and Complexity”, A.K. Peters Ltd, 1994.\nT. Cormen, C. Leiserson, R. Rivest, C. Stein, “Introduction to Algorithms”, McGraw-Hill, 1990.','v1','2014-10-01','2015-10-24',0,0),(3,'KTLT','KỸ THUẬT LẬP TRÌNH ','Fundamental Programming','KTLT',4,'Sách, Giáo trình chính: \n[1] Fundamentals of C++ Programming – Richard L.Halterman, Southern Adventist University 2010. \n \nSách tham khảo: \n[1]	Giáo trình ngôn ngữ lập trình C/C++ - Nguyen Ngoc Cuong, Nhà xuất bản thông tin và truyền thông, 2011. \n[2]	The C Book - Mike Banahan, Declan Brady and Mark Doran - online version (originally published by Addison Wesley in 1991) \n[3]	Program Development and Design Using C++, 3nd Edition - G. J. Bronson, Brooks/COLE Thomson Learning, 2006. \n[4]	C++ Programming Fundamentals – Chuck Easttom, Charles River Media, 2003. \n[5]	C++ How to Program – H. M Deitel and P. J. Deitel, 3rd Edition, Prentice-Hall, 2001. \n[6]	Object-Oriented 	Programming 	Using 	C++- 	J. 	Farrel, 	2nd 	Edition, 	Course Technology/Thomson Learning, 2001. \n[7]	Microsoft Visual C++ 6.0 -  D. Gosselin, Course Technology/Thomson Learning, 2001. \n[8]	Programming Fundamentals in C++ - Duong Tuan Anh, Open courseware, Available at: \nhttp://www.vocw.edu.vn/content/col10216/latest/  \n','v1','2015-12-24','2015-12-25',0,0),(4,'MMT','MẠNG MÁY TÍNH','COMPUTER NETWORK','MMT',3,'1.FEWFE\n2.3333','v1','2016-01-05','2021-04-18',0,0);

/*Table structure for table `course_access_mode` */

DROP TABLE IF EXISTS `course_access_mode`;

CREATE TABLE `course_access_mode` (
  `course_access_mode_id` int(11) NOT NULL AUTO_INCREMENT,
  `course_id` int(11) DEFAULT NULL,
  `accessor_id` int(11) DEFAULT NULL,
  `role_id` int(11) DEFAULT NULL,
  `grantor_id` int(11) DEFAULT NULL,
  `previlege_id` int(11) DEFAULT NULL,
  `course_access_mode_granted_date` date NOT NULL,
  `course_access_mode_valid_startdate` date NOT NULL,
  `course_access_mode_valid_enddate` date DEFAULT NULL,
  `course_access_mode_valid_starttime` time NOT NULL,
  `course_access_mode_endtime` time DEFAULT NULL,
  `course_access_mode_is_disabled` tinyint(1) NOT NULL,
  `course_access_mode_desc` text COLLATE utf8_unicode_ci,
  PRIMARY KEY (`course_access_mode_id`),
  KEY `fk_accessing_modes_of_users_to_courses` (`accessor_id`),
  KEY `fk_applicable_roles_of_users_for_courses` (`role_id`),
  KEY `fk_applicatiable_previleges_of_users_for_courses` (`previlege_id`),
  KEY `fk_course_being_accessed` (`course_id`),
  KEY `fk_previlege_granter_for_courses` (`grantor_id`),
  CONSTRAINT `fk_accessing_modes_of_users_to_courses` FOREIGN KEY (`accessor_id`) REFERENCES `user` (`user_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_applicable_roles_of_users_for_courses` FOREIGN KEY (`role_id`) REFERENCES `role` (`role_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_applicatiable_previleges_of_users_for_courses` FOREIGN KEY (`previlege_id`) REFERENCES `previlege` (`previlege_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_course_being_accessed` FOREIGN KEY (`course_id`) REFERENCES `course` (`course_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_previlege_granter_for_courses` FOREIGN KEY (`grantor_id`) REFERENCES `user` (`user_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `course_access_mode` */

/*Table structure for table `course_assignment` */

DROP TABLE IF EXISTS `course_assignment`;

CREATE TABLE `course_assignment` (
  `course_assign_id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) DEFAULT NULL,
  `course_id` int(11) DEFAULT NULL,
  `course_assign_role` char(10) COLLATE utf8_unicode_ci NOT NULL COMMENT 'roles:\n            instructor\n            ta\n            \n            ',
  PRIMARY KEY (`course_assign_id`),
  KEY `fk_course_being_assigned_instructor` (`course_id`),
  KEY `fk_instructor_of_courses` (`user_id`),
  CONSTRAINT `fk_course_being_assigned_instructor` FOREIGN KEY (`course_id`) REFERENCES `course` (`course_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_instructor_of_courses` FOREIGN KEY (`user_id`) REFERENCES `user` (`user_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `course_assignment` */

/*Table structure for table `course_comment` */

DROP TABLE IF EXISTS `course_comment`;

CREATE TABLE `course_comment` (
  `course_comment_id` int(11) NOT NULL AUTO_INCREMENT,
  `course_access_mode_id` int(11) DEFAULT NULL,
  `course_reviewer_decision_id` int(11) DEFAULT NULL,
  `course_comment_date` date NOT NULL,
  `course_comment_time` time NOT NULL,
  `course_comment_desc` text COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`course_comment_id`),
  KEY `fk_comments_of_roles_user_on_course` (`course_access_mode_id`),
  KEY `fk_decision_of_reviewer_for_course` (`course_reviewer_decision_id`),
  CONSTRAINT `fk_comments_of_roles_user_on_course` FOREIGN KEY (`course_access_mode_id`) REFERENCES `course_access_mode` (`course_access_mode_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_decision_of_reviewer_for_course` FOREIGN KEY (`course_reviewer_decision_id`) REFERENCES `course_reviewer_decision` (`course_reviewer_decision_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `course_comment` */

/*Table structure for table `course_comment_relationship` */

DROP TABLE IF EXISTS `course_comment_relationship`;

CREATE TABLE `course_comment_relationship` (
  `course_comment_relationship_id` int(11) NOT NULL AUTO_INCREMENT,
  `parent_course_comment_id` int(11) DEFAULT NULL,
  `child_course_comment_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`course_comment_relationship_id`),
  KEY `fk_child_of_the_relationship` (`child_course_comment_id`),
  KEY `fk_parent_in_the_relationship` (`parent_course_comment_id`),
  CONSTRAINT `fk_child_of_the_relationship` FOREIGN KEY (`child_course_comment_id`) REFERENCES `course_comment` (`course_comment_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_parent_in_the_relationship` FOREIGN KEY (`parent_course_comment_id`) REFERENCES `course_comment` (`course_comment_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `course_comment_relationship` */

/*Table structure for table `course_content` */

DROP TABLE IF EXISTS `course_content`;

CREATE TABLE `course_content` (
  `course_content_id` int(11) NOT NULL AUTO_INCREMENT,
  `course_parentcontent_id` int(11) DEFAULT NULL,
  `course_id` int(11) DEFAULT NULL,
  `course_content_code` char(10) COLLATE utf8_unicode_ci DEFAULT NULL,
  `course_content_name` varchar(200) COLLATE utf8_unicode_ci DEFAULT NULL,
  `course_content_desc` text COLLATE utf8_unicode_ci NOT NULL,
  `course_content_percentage` decimal(8,0) DEFAULT NULL,
  `course_content_order` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`course_content_id`),
  KEY `fk_contents_in_course` (`course_id`),
  KEY `fk_subcontent` (`course_parentcontent_id`),
  CONSTRAINT `fk_contents_in_course` FOREIGN KEY (`course_id`) REFERENCES `course` (`course_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_subcontent` FOREIGN KEY (`course_parentcontent_id`) REFERENCES `course_content` (`course_content_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=109 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `course_content` */

insert  into `course_content`(`course_content_id`,`course_parentcontent_id`,`course_id`,`course_content_code`,`course_content_name`,`course_content_desc`,`course_content_percentage`,`course_content_order`) values (2,NULL,2,'1','CHƯƠNG I: CÁC KIỂU DỮ LIỆU CƠ BẢN','<p>Chương này nhằm giới thiệu cho học sinh biết cách lưu trữ các kiểu dữ liệu cơ bản.<br></p>',0,0),(3,NULL,2,'2','CHƯƠNG II: CÁC KIỂU DỮ LIỆU CÓ CẤU TRÚC','<p>Chương này nhằm giúp cho học sinh biết được cách sử dụng và lưu trữ các kiểu dữ liệu có cấu trúc</p>',0,1),(4,2,2,'1.1','I. Số nguyên (Integer).','<p>Giới thiệu kiểu số nguyên</p>',0,0),(5,2,2,'1.2','II. Số thực (Real).','<p>Giới thiệu kiểu số thực</p>',0,1),(6,2,2,'1.3','III. Ký tự (Character).','<p>Giới thiệu kiểu ký tự</p>',0,3),(7,2,2,'1.4','IV. Luận lý (Boolean)','<p>Giới thiệu kiểu luận lý</p>',0,2),(8,2,2,'1.5','V. Kiểu liệt kê','<p>Giới thiệu kiểu liệt kê</p>',0,4),(11,3,2,'2.1','I. Mảng','<p>Giới thiệu mảng</p>',0,0),(13,3,2,'2.2','II. Kiểu Record (Structure)','<p><span style=\"font-family: arial, helvetica, sans-serif;\" data-mce-style=\"font-family: arial, helvetica, sans-serif;\">Giới thiệu kiểu structure</span></p>',0,2),(14,NULL,2,'3','CHƯƠNG III: NGĂN XẾP (STACK)','<p>Chương này nhằm giới thiệu cho học sinh biết stack là gì, cách cài đặt stack</p>',0,2),(16,14,2,'3.2','II. Cài đặt Stack','<p>Cài đặt Stack</p>',0,1),(17,14,2,'3.3','III. Ứng dụng','<p>Ứng dụng</p>',0,2),(18,14,2,'3.1','I. Giới thiệu','<p>Giới thiệu</p>',0,0),(19,NULL,3,'1','Chương 1: Giới thiệu về máy tính và lập trình ','<p><strong>Giới thiệu về máy tính và lập trình </strong></p>',0,0),(20,NULL,3,'2','Chương 2: Các thành phần căn bản của C++ ','<p>Các thành phần căn bản của C++&nbsp;</p>',0,1),(21,NULL,3,'3','Chương 3: Các thành phần căn bản khác của C++','<p>Các thành phần căn bản khác của C++</p>',0,2),(22,NULL,3,'4','Chương 4: Cấu trúc rẽ nhánh ','<p>Cấu trúc rẽ nhánh&nbsp;</p>',0,3),(23,NULL,3,'5','Chương 5: Các cấu trúc lặp - mảng và lập trình có cấu trúc ','<p>Các cấu trúc lặp - mảng và lập trình có cấu trúc&nbsp;</p>',0,4),(24,NULL,3,'6','Chương 6: Hàm và con trỏ ','<p>Hàm và con trỏ&nbsp;</p>',0,5),(25,NULL,3,'7','Chương 7: Giới thiệu về lớp ','<p>Giới thiệu về lớp&nbsp;</p>',0,6),(26,19,3,'1.1','1.1. Phần cứng và phần mềm máy  tính ','<p>1.1. Phần cứng và phần mềm máy</p><p>tính</p>',0,0),(27,19,3,'1.2','1.2. Ngôn ngữ lập trình ','<p>1.2. Ngôn ngữ lập trình</p>',0,1),(28,19,3,'1.3','1.3. Giải quyết vấn đề và phát triển phần mềm ','<p>1.3. Giải quyết vấn đề và phát triển phần mềm</p>',0,2),(29,19,3,'1.4','1.4. Giải thuật ','<p>1.4. Giải thuật</p>',0,3),(30,19,3,'1.5','1.5. Bài tập ','<p>Yêu cầu tự học đ/v sinh viên: 8 giờ </p>',0,4),(31,20,3,'2.1','2.1. Cấu trúc chương trình ','<p>2.1. Cấu trúc chương trình</p>',0,0),(32,20,3,'2.2','2.2. Kiểu dữ liệu và các phép toán ','<p>2.2. Kiểu dữ liệu và các phép toán</p>',0,1),(33,20,3,'2.3','2.3. Biến và khai báo biến ','<p>2.3. Biến và khai báo biến</p>',0,2),(34,20,3,'2.4','2.4. Các thể loại (short, long, unsigned) của kiểu nguyên ','<p>2.4. Các thể loại (short, long, unsigned) của kiểu nguyên</p>',0,3),(35,20,3,'2.5','2.5. Thí dụ về giải quyết vấn đề ','<p>2.5. Thí dụ về giải quyết vấn đề</p>',0,4),(36,20,3,'2.6','2.6. Bài tập ','<p>Yêu cầu tự học đ/v sinh viên: 8 giờ </p>',0,5),(37,21,3,'3.1','3.1. Các phép toán gán ','<p>3.1. Các phép toán gán</p>',0,0),(38,21,3,'3.2','3.2. Các định dạng số liệu để xuất ra ','<p>3.2. Các định dạng số liệu để xuất ra</p>',0,1),(39,21,3,'3.3','3.3. Sử dụng các hàm thư viện ','<p>3.3. Sử dụng các hàm thư viện</p>',0,2),(40,21,3,'3.4','3.4. Nhập trị với phát biểu cin ','<p>3.4. Nhập trị với phát biểu cin</p>',0,3),(41,21,3,'3.5','3.5. Các hằng ký hiệu ','<p>3.5. Các hằng ký hiệu</p>',0,4),(42,21,3,'3.6','3.6. Bài tập ','<p>Yêu cầu tự học đ/v sinh viên: 16 giờ </p>',0,5),(43,22,3,'4.1','4.1. Tiêu chuẩn rẽ nhánh ','<p>4.1. Tiêu chuẩn rẽ nhánh</p>',0,0),(44,22,3,'4.2','4.2. Phát biểu if-else ','<p>4.2. Phát biểu if-else</p>',0,1),(45,22,3,'4.3','4.3. Phát biểu if lồng nhau ','<p>4.3. Phát biểu if lồng nhau</p>',0,2),(46,22,3,'4.4','4.4. Phát biểu switch ','<p>4.4. Phát biểu switch</p>',0,3),(47,22,3,'4.5','4.5. Đặc tả kiểu liệt kê enum ','<p>4.5. Đặc tả kiểu liệt kê enum</p>',0,4),(48,22,3,'4.6','4.6. Bài tập ','<p>4.6. Bài tập&nbsp;</p>',0,5),(49,23,3,'5.1','5.1. Các cấu trúc lặp căn bản ','<p>5.1. Các cấu trúc lặp căn bản</p>',0,0),(50,23,3,'5.2','5.2. Vòng lặp while ','<p>5.2. Vòng lặp while</p>',0,1),(51,23,3,'5.3','5.3. Vòng lặp while tương tác ','<p>5.3. Vòng lặp while tương tác</p>',0,2),(52,23,3,'5.4','5.4. Vòng lặp for ','<p>5.4. Vòng lặp for</p>',0,3),(53,23,3,'5.5','5.5. Các vòng lặp lồng nhau ','<p>5.5. Các vòng lặp lồng nhau</p>',0,4),(54,23,3,'5.6','5.6. Vòng lặp do-while ','<p>5.6. Vòng lặp do-while</p>',0,5),(55,23,3,'5.7','5.7. Lập trình có cấu trúc  ','<p>5.7. Lập trình có cấu trúc&nbsp;</p>',0,6),(56,23,3,'5.8','5.8. Mảng ','<p>5.8. Mảng</p>',0,7),(57,23,3,'5.9','5.9. Cấu trúc ','<p>5.9. Cấu trúc</p>',0,8),(58,23,3,'5.10','5.10. Bài tập ','<p>Yêu cầu tự học đ/v sinh viên: 16 giờ </p>',0,9),(59,24,3,'6.1','6.1. Mạch cài: NAND và NOR ','<p>6.1. Mạch cài: NAND và NOR</p>',0,0),(60,24,3,'6.2','6.2. Hàm và khai báo tham số ','<p>6.2. Hàm và khai báo tham số</p>',0,1),(61,24,3,'6.3','6.3. Trị trả về của hàm ','<p>6.3. Trị trả về của hàm</p>',0,2),(62,24,3,'6.4','6.4. Tầm vực của biến ','<p>6.4. Tầm vực của biến</p>',0,3),(63,24,3,'6.5','6.5. Các loại lưu trữ biến ','<p>6.5. Các loại lưu trữ biến</p>',0,4),(64,24,3,'6.6','6.6. Truyền bằng tham khảo ','<p>6.6. Truyền bằng tham khảo</p>',0,5),(65,24,3,'6.7','6.7. Đệ quy ','<p>6.7. Đệ quy</p>',0,6),(66,24,3,'6.8','6.8. Truyền mảng như là tham số của hàm ','<p>6.8. Truyền mảng như là tham số của hàm</p>',0,7),(67,24,3,'6.9','6.9. Con trỏ (pointer) ','<p>6.9. Con trỏ (pointer)</p>',0,8),(68,24,3,'6.10','6.10. Bài tập ','<p>Yêu cầu tự học đ/v sinh viên: 16 giờ </p>',0,9),(69,25,3,'7.1','7.1. Lớp ','<p>7.1. Lớp</p>',0,0),(70,25,3,'7.2','7.2. Che giấu thông tin ','<p>7.2. Che giấu thông tin</p>',0,1),(71,25,3,'7.3','7.3. Các hàm thành phần ','<p>7.3. Các hàm thành phần</p>',0,2),(72,25,3,'7.4','7.4. Cấp phát bộ nhớ động với các toán tử new và delete. ','<p>7.4. Cấp phát bộ nhớ động với các toán tử new và delete.</p>',0,3),(73,25,3,'7.5','7.5. Con trỏ như là thành phần của lớp','<p>7.5. Con trỏ như là thành phần của lớp</p>',0,4),(74,25,3,'7.6','7.6. Các hàm tạo cao cấp ','<p>7.6. Các hàm tạo cao cấp</p>',0,5),(75,25,3,'7.7','7.7. Các hàm hủy ','<p>7.7. Các hàm hủy</p>',0,6),(76,25,3,'7.8','7.8. Các đối tượng hằng ','<p>7.8. Các đối tượng hằng</p>',0,7),(77,25,3,'7.9','7.9. Tính thừa kế ','<p>7.9. Tính thừa kế</p>',0,8),(78,25,3,'7.10','7.10. Bài tập ','<p>Yêu cầu tự học đ/v sinh viên: 16 giờ </p>',0,9),(80,NULL,1,'C1','Chương 1: Giới thiệu ngôn ngữ lập  trình Java','<p><span id=\"_mce_caret\" data-mce-bogus=\"true\"><strong>﻿Giới thiệu ngôn ngữ lập &nbsp;trình Java</strong></span></p>',3,0),(81,NULL,1,'C2','Chương 2: Giới  thiệu  về  lớp  và  đối tượng','<p><strong>Giới thiệu về lớp và đối tượng</strong></p>',0,1),(82,NULL,1,'C3','Chương 3: Giao diện, kế thừa và đa hình','<p>Giao diện, kế thừa và đa hình</p>',4,2),(83,NULL,1,'C4','Chương 4: Xử lý ngoại lệ','<p><strong>Xử lý ngoại lệ</strong></p>',1,3),(84,NULL,4,'C1','Chương 1: Tổng quan về Mạng máy tính','<p>Tổng quan về Mạng máy tính</p>',3,0),(85,NULL,4,'C2','Chương 2: Mô hình OSI - TCP/IP','<p>Mô hình OSI - TCP/IP</p>',0,1),(86,NULL,4,'C3','Chương 3: Địa chỉ IP','<p>Địa chỉ IP</p>',0,2),(87,NULL,4,'C4','Chương 4: Thiết bị mạng','<p>Thiết bị mạng</p>',0,3),(88,80,1,'1.1','1.Giới thiệu','<p>Giới thiệu</p>',0,0),(90,NULL,2,'5','CHƯƠNG V: DANH SÁCH LIÊN KẾT','<p>DANH SÁCH LIÊN KẾT</p>',0,4),(91,90,2,'5.1','I.Giới thiệu','<p>Giới thiệu</p>',0,0),(92,90,2,'5.2','II. Danh sách liên kết đơn','<p>Danh sách liên kết đơn</p>',0,1),(93,90,2,'5.3','III. Danh sách liên kết đôi','<p>Danh sách liên kết đôi</p>',0,2),(95,NULL,2,'6','CHƯƠNG VI: CÂY','<p>CÂY</p>',0,3),(97,95,2,'6.2','II. Cây nhị phân tìm kiếm','<p>Cây nhị phân tìm kiếm</p>',0,2),(102,95,2,'6.1','I.Giới thiệu','<p>Giới thiệu</p>',0,1),(105,NULL,2,'7','Chương VI: Tìm kiếm và Sắp xếp','<p>tk &amp; sx</p>',0,5),(106,105,2,'7-1','I. Tìm kiếm','<p>tk<br></p>',0,6),(107,105,2,'7-2','II. Sắp xếp','<p>sx</p>',0,7),(108,102,2,'4','CHƯƠNG IV: HÀNG ĐỢI (QUEUE)','<p>HÀNG ĐỢI (QUEUE)</p>',0,0);

/*Table structure for table `course_outcome` */

DROP TABLE IF EXISTS `course_outcome`;

CREATE TABLE `course_outcome` (
  `co_id` int(11) NOT NULL AUTO_INCREMENT,
  `course_id` int(11) DEFAULT NULL,
  `co_code` char(10) COLLATE utf8_unicode_ci NOT NULL,
  `co_date` date NOT NULL,
  `co_isused` tinyint(1) NOT NULL,
  PRIMARY KEY (`co_id`),
  KEY `fk_course_outcome_version` (`course_id`),
  CONSTRAINT `fk_course_outcome_version` FOREIGN KEY (`course_id`) REFERENCES `course` (`course_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `course_outcome` */

insert  into `course_outcome`(`co_id`,`course_id`,`co_code`,`co_date`,`co_isused`) values (2,2,'CO2015','2015-12-19',1),(3,3,'LO','2015-12-26',1),(5,1,'JPO','2016-03-17',1),(6,4,'MMTO','2016-03-17',1);

/*Table structure for table `course_outcome_item` */

DROP TABLE IF EXISTS `course_outcome_item`;

CREATE TABLE `course_outcome_item` (
  `coi_id` int(11) NOT NULL AUTO_INCREMENT,
  `co_id` int(11) DEFAULT NULL,
  `coi_code` char(5) COLLATE utf8_unicode_ci NOT NULL COMMENT 'example: co.1, co.2, etc',
  `coi_desc_vn` text COLLATE utf8_unicode_ci NOT NULL,
  `coi_desc_en` text COLLATE utf8_unicode_ci,
  PRIMARY KEY (`coi_id`),
  KEY `fk_course_outcome_of_version` (`co_id`),
  CONSTRAINT `fk_course_outcome_of_version` FOREIGN KEY (`co_id`) REFERENCES `course_outcome` (`co_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=41 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `course_outcome_item` */

insert  into `course_outcome_item`(`coi_id`,`co_id`,`coi_code`,`coi_desc_vn`,`coi_desc_en`) values (1,2,'CTO5','<p>Vận dụng&nbsp;các cấu trúc dữ liệu&nbsp;(linked lists, stacks, queues, trees, graphs, and hash tables).</p>','<p>Program using the fundamental data structures (linked lists, stacks, queues, trees, graphs, and hash tables).</p>'),(2,2,'CTO3','<p>Vẽ flowchart để biểu diễn ý tưởng thuật toán</p>','<p>Drawing flowchart</p>'),(3,3,'LO1','<p>Biểu diễn các giải thuật để giải quyết vấn đề&nbsp; </p>','<p>Express an algorithm for solving problem </p>'),(4,3,'LO1_1','<p>Vẽ flowchart để biểu diễn ý tưởng thuật toán</p>','<p>Draw flowchart </p>'),(5,3,'LO1_2','<p>Viết mã giả để hiện thực một thuật toán </p>','<p>Write pseudocode </p>'),(6,3,'LO2','<p>Sử dụng các cấu trúc điều khiển trong lập trình có cấu trúc </p>','<p>Use structures of structural programming&nbsp; </p>'),(7,3,'LO2_1','<p>Giải bài toán bằng cách sử dụng cấu trúc rẽ nhánh </p>','<p>Selection structure </p>'),(8,3,'LO2_2','<p>Giải bài toán bằng cách sử dụng cấu trúc lặp </p>','<p>Repetition structure </p>'),(9,3,'LO2_3','<p>Giải bài toán bằng cách sử dụng hàm và đệ quy </p>','<p>Function and concept of recursion </p>'),(10,3,'LO3','<p>Hiện thực một giải thuật cụ thể bằng ngôn ngữ C++ </p>','<p>Implement a given algorithm by a C++ program&nbsp; </p>'),(11,3,'LO3_1','<p>Hiện thực các cấu trúc rẽ nhánh: if-else, switch-case</p>','<p>Branch structure: if-else, switch-case </p>'),(12,3,'LO3_2','<p>Hiện thực các cấu trúc lặp: for, while, do-while </p>','<p>Loop structure: for, while, do-while </p>'),(13,3,'LO3_3','<p>Biết cách khai báo và sử dụng hàm và đệ quy</p>','<p>Function and recursion </p>'),(14,3,'LO3_4','<p>Biết cách khai báo và sử dụng mảng, chuỗi, và kiểu dữ liệu cấu trúc</p>','<p>Array, string, structured types </p>'),(15,3,'LO3_5','<p>Biết cách khai báo và sử dụng con trỏ </p>','<p>Pointer </p>'),(16,3,'LO4','<p>Phong cách lập trình&nbsp; </p>','<p>Basic object-oriented concepts </p>'),(17,3,'LO4_1','<p>Nắm vững khái niệm về đối tượng </p>','<p>Understanding of basic object-oriented concepts </p>'),(18,3,'LO4_2','<p>Hiểu về các điểm mạnh của OOP như thừa kế, đa hình,… </p>','<p>Understanding of the issues involved in effective class design </p>'),(19,3,'LO5','<p>Phong cách lập trình&nbsp; </p>','<p>Coding syle</p>'),(20,3,'LO5_1','<p>Viết lời chú thích để giải thích rõ mã nguồn </p>','<p>Write comments </p>'),(21,3,'LO5_2','<p>Sử dụng khoảng cách (tab) để mã nguồn được rõ ràng </p>','<p>Use of tabulation </p>'),(22,3,'LO6','<p>Quy trình giải quyết vấn đề </p>','<p>Problem-solving process </p>'),(23,3,'LO6_1','<p>Nắm vững khái niệm về thuật toán </p>','<p>Know the concept and properties of algorithm </p>'),(24,3,'LO6_2','<p>Xác định vai tr&nbsp; của thuật toán trong quy trình giải quyết vấn đề&nbsp; </p>','<p>Define the role of algorithm in the problem-solving process </p>'),(25,3,'LO6_3','<p>Khái niêm về các chiến lược để giải quyết vấn đề&nbsp; </p>','<p>Identify problem-solving strategies </p>'),(26,3,'LO6_4','<p>Biết các nguyên tắc và khái niêm về thiết kế cơ bản </p>','<p>Describe fundamental design concepts and principles </p>'),(30,2,'CTO4','<p>Sử dụng các cấu trúc điều khiển trong lập trình có cấu trúc</p>','<p>Use structures of structural programming&nbsp;</p>'),(31,6,'MMTO1','<p>Trang bị kiến thức căn bản về mạng máy tính.<br></p>','<p>EN<br></p>'),(32,5,'JPO1','<p>&nbsp;Cung cấp cho sinh viên các khái niệm, các cấu trúc lệnh cơ bản của ngôn ngữ lập trình Java</p>','<p>EN<br></p>'),(33,5,'JPO2','<p>Cung cấp phương pháp xây dựng các cấu trúc dữ liệu trong Java, giới thiệu các cấu trúc dữ liệu đã được xây dựng sẵn và cách sử dụng chúng</p>','<p>EN</p>'),(34,5,'JPO3','<p>Giới thiệu về lập trình tổng quát trong Java, giới thiệu phương pháp xây dựng ứng dụng desktop, ứng dụng mạng bằng Java</p>',''),(35,5,'JPO4','<p>Thành thạo ngôn ngữ Java và một công cụ lập trình Java như: Eclipse, MyEclipse, NetBean.</p>','<p>EN</p>'),(36,6,'MMTO2','<p>Cung cấp kiến thức về mô hình hoạt động chung cho mạng máy tính.<br></p>','<p>EN</p>'),(37,6,'MMTO3','<p>Cung cấp kiến thức về địa chỉ ip và các kỹ thuật chia mạng con.<br></p>','<p>EN</p>'),(38,6,'MMTO4','<p>Giới thiệu hệ điều hành mạng dựa trên mô hình workgroup <br></p>','<p>EN</p>'),(39,2,'CTO1','<p>Nắm được&nbsp;cách lưu trữ các kiểu dữ liệu cơ bản.<br></p>','<p>EN</p>'),(40,2,'CTO2','<p>Biết được cách sử dụng và lưu trữ các kiểu dữ liệu có cấu trúc.</p>','<p>EN</p>');

/*Table structure for table `course_relationship` */

DROP TABLE IF EXISTS `course_relationship`;

CREATE TABLE `course_relationship` (
  `course_relationship_id` int(11) NOT NULL AUTO_INCREMENT,
  `parent_course_id` int(11) DEFAULT NULL,
  `child_course_id` int(11) DEFAULT NULL,
  `course_relationship_type_id` int(11) DEFAULT NULL,
  `course_relationship_desc` text COLLATE utf8_unicode_ci,
  PRIMARY KEY (`course_relationship_id`),
  KEY `fk_child_in_the_pair` (`child_course_id`),
  KEY `fk_kinds_of_relationship` (`course_relationship_type_id`),
  KEY `fk_parent_in_the_pair` (`parent_course_id`),
  CONSTRAINT `fk_child_in_the_pair` FOREIGN KEY (`child_course_id`) REFERENCES `course` (`course_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_kinds_of_relationship` FOREIGN KEY (`course_relationship_type_id`) REFERENCES `course_relationship_type` (`course_relationship_type_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_parent_in_the_pair` FOREIGN KEY (`parent_course_id`) REFERENCES `course` (`course_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `course_relationship` */

/*Table structure for table `course_relationship_type` */

DROP TABLE IF EXISTS `course_relationship_type`;

CREATE TABLE `course_relationship_type` (
  `course_relationship_type_id` int(11) NOT NULL AUTO_INCREMENT,
  `course_relationship_type_code` char(100) COLLATE utf8_unicode_ci NOT NULL,
  `course_relationship_type_desc` text COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`course_relationship_type_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `course_relationship_type` */

/*Table structure for table `course_required_level` */

DROP TABLE IF EXISTS `course_required_level`;

CREATE TABLE `course_required_level` (
  `course_required_level_id` int(11) NOT NULL AUTO_INCREMENT,
  `course_required_level_code` char(100) COLLATE utf8_unicode_ci NOT NULL COMMENT 'required\n            selective\n            elective',
  `course_required_level_desc` text COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`course_required_level_id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `course_required_level` */

insert  into `course_required_level`(`course_required_level_id`,`course_required_level_code`,`course_required_level_desc`) values (0,'Chưa xác định',''),(1,'Bắt buộc',''),(2,'Tự chọn','');

/*Table structure for table `course_reviewer_decision` */

DROP TABLE IF EXISTS `course_reviewer_decision`;

CREATE TABLE `course_reviewer_decision` (
  `course_reviewer_decision_id` int(11) NOT NULL AUTO_INCREMENT,
  `course_reviewer_decision_code` char(100) COLLATE utf8_unicode_ci NOT NULL,
  `course_reviewer_decision_desc` text COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`course_reviewer_decision_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `course_reviewer_decision` */

/*Table structure for table `course_topic_map` */

DROP TABLE IF EXISTS `course_topic_map`;

CREATE TABLE `course_topic_map` (
  `course_topic_map_id` int(11) NOT NULL AUTO_INCREMENT,
  `topic_id` int(11) DEFAULT NULL,
  `course_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`course_topic_map_id`),
  KEY `fk_course_in_the_mapping_with_topic` (`course_id`),
  KEY `fk_topic_in_the_mapping_with_course` (`topic_id`),
  CONSTRAINT `fk_course_in_the_mapping_with_topic` FOREIGN KEY (`course_id`) REFERENCES `course` (`course_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_topic_in_the_mapping_with_course` FOREIGN KEY (`topic_id`) REFERENCES `topic` (`topic_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `course_topic_map` */

/*Table structure for table `department` */

DROP TABLE IF EXISTS `department`;

CREATE TABLE `department` (
  `dept_id` int(11) NOT NULL AUTO_INCREMENT,
  `faculty_id` int(11) DEFAULT NULL,
  `dept_code` char(5) COLLATE utf8_unicode_ci NOT NULL,
  `dept_name_vn` text COLLATE utf8_unicode_ci NOT NULL,
  `dept_name_en` text COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`dept_id`),
  KEY `fk_departments_of_faculties` (`faculty_id`),
  CONSTRAINT `fk_departments_of_faculties` FOREIGN KEY (`faculty_id`) REFERENCES `faculty` (`faculty_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=18 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `department` */

insert  into `department`(`dept_id`,`faculty_id`,`dept_code`,`dept_name_vn`,`dept_name_en`) values (1,1,'BA','Quản trị Kinh doanh','Business ManagemenT'),(2,1,'FB','Tài chính - Ngân hàng','Finance and Banking'),(3,2,'IT','Công nghệ thông tin','Information Technology'),(4,2,'CS','Khoa học máy tính','Computer Science'),(5,3,'EE','Điện tử - Viễn thông','Electrical Engineering'),(6,3,'ACE','Tự động hoá và điều khiển ','Automation and Control Engineering'),(7,4,'BT','Công nghệ sinh học','BioTechnology'),(8,4,'FT','Công nghệ thực phẩm','Food Technology'),(9,4,'ARM','Quản lý Nguồn lợi Thủy sản','Aquatic Resource Management'),(10,4,'BIOCH','Hoá sinh','Biochemistry'),(11,5,'ISE','Kỹ thuật Hệ thống Công nghiệp','Industrial Systems Engineering'),(12,5,'LSCM','Logistics và Quản lý chuỗi cung ứng','Logistics and Supply Chain Management'),(13,11,'DCE','Bộ môn Khoa học máy tính','Division of Computer Engineering'),(14,11,'DCS','Bộ môn Kỹ thuật Máy tính','Division of Computer Science'),(15,11,'DIS','Bộ môn Hệ thống Thông tin','Division of Information Systems'),(16,11,'DSE','Bộ môn Công nghệ Phần mềm','Division of Software Engineering'),(17,11,'DSN','Bộ môn Hệ thống và Mạng Máy tính','Division of Systems and Networking');

/*Table structure for table `dept_course_map` */

DROP TABLE IF EXISTS `dept_course_map`;

CREATE TABLE `dept_course_map` (
  `dept_course_map_id` int(11) NOT NULL AUTO_INCREMENT,
  `dept_id` int(11) DEFAULT NULL,
  `course_id` int(11) DEFAULT NULL,
  `dept_course_map_startdate` date NOT NULL COMMENT 'date which the course assigned to the department',
  `dept_course_map_enddate` date DEFAULT NULL,
  PRIMARY KEY (`dept_course_map_id`),
  KEY `fk_course_in_the_mapping_with_dept` (`course_id`),
  KEY `fk_dept_in_the_mapping_with_course` (`dept_id`),
  CONSTRAINT `fk_course_in_the_mapping_with_dept` FOREIGN KEY (`course_id`) REFERENCES `course` (`course_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_dept_in_the_mapping_with_course` FOREIGN KEY (`dept_id`) REFERENCES `department` (`dept_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `dept_course_map` */

/*Table structure for table `educational_program` */

DROP TABLE IF EXISTS `educational_program`;

CREATE TABLE `educational_program` (
  `edu_program_id` int(11) NOT NULL AUTO_INCREMENT,
  `faculty_id` int(11) DEFAULT NULL,
  `edu_program_code` char(20) COLLATE utf8_unicode_ci NOT NULL,
  `edu_program_name_vn` text COLLATE utf8_unicode_ci NOT NULL,
  `edu_program_name_en` text COLLATE utf8_unicode_ci NOT NULL,
  `edu_program_name_short` char(20) COLLATE utf8_unicode_ci DEFAULT NULL,
  `edu_program_start_year` date NOT NULL,
  `edu_program_end_year` date DEFAULT NULL,
  `edu_program_desc` text COLLATE utf8_unicode_ci,
  `edu_program_link` text COLLATE utf8_unicode_ci,
  PRIMARY KEY (`edu_program_id`),
  KEY `fk_educational_programs_in_faculty` (`faculty_id`),
  CONSTRAINT `fk_educational_programs_in_faculty` FOREIGN KEY (`faculty_id`) REFERENCES `faculty` (`faculty_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `educational_program` */

insert  into `educational_program`(`edu_program_id`,`faculty_id`,`edu_program_code`,`edu_program_name_vn`,`edu_program_name_en`,`edu_program_name_short`,`edu_program_start_year`,`edu_program_end_year`,`edu_program_desc`,`edu_program_link`) values (1,1,'BA_PE1','Cử nhân Quản trị Kinh doanh','Bachelor of Business Administration (BBA)','BAPE1','2011-07-01','2021-07-01','<p>Business Administration with three concentrations: Business Management, International Business, Marketing.</p>','http://www.hcmiu.edu.vn/business/en/About-Us/program-overview/'),(2,1,'BA_PE2','Cử nhân Tài chính Ngân hàng (BA)','Bachelor of Arts in Finance and Banking (BA)','BAPE2','2007-01-11','2001-07-21','<p>Finance and Banking with the concentration of Finance and Banking</p>','http://www.hcmiu.edu.vn/business/en/About-Us/program-overview/'),(3,11,'BE_CSE1','Kỹ sư ngành Khoa học Máy tính','B.E. in Computer Science','BECSE','2016-01-01','2021-01-13','<p>Graduates of the&nbsp;Computer Science&nbsp;program will:</p><p>1. Exhibit ethical considerations and concern for society in their work.</p><p>2. Be successful in implementing software systems to meet market needs.</p><p>3. Be successful in higher degree programs in which they enroll.</p><p><br></p>','http://www.cse.hcmut.edu.vn/site/en/Page?item=50'),(4,11,'BE_CSE2','Kỹ sư Kỹ thuật Máy tính','B.E. in Computer Science','BECSE2','2016-01-13','2021-01-13','<p>raduates of the&nbsp;Computer Science&nbsp;program will:</p><p>1. Exhibit ethical considerations and concern for society in their work.</p><p>2. Be successful in implementing software systems to meet market needs.</p><p>3. Be successful in higher degree programs in which they enroll.</p><p><br></p>','http://www.cse.hcmut.edu.vn/site/en/Page?item=50'),(5,11,'BA_CSE','Cử nhân ngành Công nghệ thông tin','Bachelor of Information Technology','BACSE','2016-01-13','2021-01-13','<p>Distance learning program in&nbsp;Information Technology sector via network is operated under credit&nbsp;&nbsp;system, students accumulate enough credits to be considered for the certificate, diploma, respectively</p>','');

/*Table structure for table `faculty` */

DROP TABLE IF EXISTS `faculty`;

CREATE TABLE `faculty` (
  `faculty_id` int(11) NOT NULL AUTO_INCREMENT,
  `univ_id` int(11) DEFAULT NULL,
  `faculty_code` char(5) COLLATE utf8_unicode_ci NOT NULL COMMENT 'example: mt, ee',
  `faculty_name_vn` text COLLATE utf8_unicode_ci NOT NULL,
  `faculty_name_en` text COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`faculty_id`),
  KEY `fk_faculties_of_university` (`univ_id`),
  CONSTRAINT `fk_faculties_of_university` FOREIGN KEY (`univ_id`) REFERENCES `university` (`univ_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `faculty` */

insert  into `faculty`(`faculty_id`,`univ_id`,`faculty_code`,`faculty_name_vn`,`faculty_name_en`) values (1,1,'BA','Khoa Quản trị kinh doanh','School of Business'),(2,1,'CSE','Khoa Công nghệ Thông tin','School of Computer Science & Engineering'),(3,1,'EE','Khoa Điện tử Viễn thông','School of Electrical Engineering'),(4,1,'BT','Khoa Công nghệ Sinh học','School of BioTechnology'),(5,1,'ISE','Bộ môn Kỹ thuật Hệ thống Công nghiệp','Department of Industrial Systems Engineering'),(6,1,'BME','Bộ môn Kỹ thuật Y sinh','Department of BioMedical Engineering'),(7,1,'CE','Bộ môn Kỹ thuật Xây dựng','Department of Civil Engineering'),(8,1,'MATH','Bộ môn Toán','Department of Mathematics'),(9,1,'PHY','Bộ môn Vật Lý','Department of Physics'),(10,1,'ENG','Bộ môn Anh ngữ','Department of English'),(11,2,'CSE','Khoa Khoa Học và Kỹ Thuật Máy Tính','Faculty of Computer Science and Engineering '),(12,2,'CE','Khoa Kỹ Thuật Hóa Học','Faculty of Chemical Engineering');

/*Table structure for table `fillable_element` */

DROP TABLE IF EXISTS `fillable_element`;

CREATE TABLE `fillable_element` (
  `fillable_element_id` int(11) NOT NULL AUTO_INCREMENT,
  `item_id` int(11) DEFAULT NULL,
  `fillable_element_code` char(10) COLLATE utf8_unicode_ci DEFAULT NULL,
  `fillable_element_hint` text COLLATE utf8_unicode_ci COMMENT 'this text will be showed for users for guideline',
  `fillable_element_solution` text COLLATE utf8_unicode_ci,
  `fillable_element_answer` text COLLATE utf8_unicode_ci COMMENT 'this is the solution for the element',
  `fillable_element_order` tinyint(4) DEFAULT NULL COMMENT 'meaning: similar to question item\n            ',
  PRIMARY KEY (`fillable_element_id`),
  KEY `fk_fillable_element` (`item_id`),
  CONSTRAINT `fk_fillable_element` FOREIGN KEY (`item_id`) REFERENCES `question_item` (`item_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=278 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='this element supports the fill-blank questions';

/*Data for the table `fillable_element` */

insert  into `fillable_element`(`fillable_element_id`,`item_id`,`fillable_element_code`,`fillable_element_hint`,`fillable_element_solution`,`fillable_element_answer`,`fillable_element_order`) values (65,192,'0',NULL,NULL,'Cn',NULL),(66,193,'0',NULL,NULL,'3',NULL),(69,196,'0',NULL,NULL,'Insertion sort',NULL),(70,197,'0',NULL,NULL,'N-2',NULL),(71,197,'0',NULL,NULL,'N',NULL),(72,197,'0',NULL,NULL,'N-1',NULL),(76,205,'0',NULL,NULL,'Cấu trúc dữ liệu',NULL),(77,206,'1',NULL,NULL,'Giải thuật',NULL),(86,209,'0',NULL,NULL,'O(n)',NULL),(87,209,'0',NULL,NULL,'O(n^3)',NULL),(88,209,'0',NULL,NULL,'O(n^2)',NULL),(89,209,'0',NULL,NULL,'O(n^4)',NULL),(105,237,'0',NULL,NULL,'5',NULL),(106,237,'0',NULL,NULL,'2',NULL),(107,237,'0',NULL,NULL,'3',NULL),(108,237,'0',NULL,NULL,'1',NULL),(109,237,'0',NULL,NULL,'4',NULL),(110,1035,'0',NULL,NULL,'Insertion sort',NULL),(111,1036,'0',NULL,NULL,'Insertion sort',NULL),(112,1041,'0',NULL,NULL,'Insertion sort',NULL),(113,1042,'0',NULL,NULL,'N-2',NULL),(114,1042,'0',NULL,NULL,'N',NULL),(115,1042,'0',NULL,NULL,'N-1',NULL),(116,1043,'0',NULL,NULL,'O(n)',NULL),(117,1043,'0',NULL,NULL,'O(n^3)',NULL),(118,1043,'0',NULL,NULL,'O(n^2)',NULL),(119,1043,'0',NULL,NULL,'O(n^4)',NULL),(120,1052,'0',NULL,NULL,'Insertion sort',NULL),(121,1057,'0',NULL,NULL,'N-2',NULL),(122,1057,'0',NULL,NULL,'N',NULL),(123,1057,'0',NULL,NULL,'N-1',NULL),(124,1058,'0',NULL,NULL,'O(n)',NULL),(125,1058,'0',NULL,NULL,'O(n^3)',NULL),(126,1058,'0',NULL,NULL,'O(n^2)',NULL),(127,1058,'0',NULL,NULL,'O(n^4)',NULL),(128,1083,'0',NULL,NULL,'Insertion sort',NULL),(129,1092,'0',NULL,NULL,'3',NULL),(130,1093,'0',NULL,NULL,'O(n)',NULL),(131,1093,'0',NULL,NULL,'O(n^3)',NULL),(132,1093,'0',NULL,NULL,'O(n^2)',NULL),(133,1093,'0',NULL,NULL,'O(n^4)',NULL),(134,1094,'0',NULL,NULL,'Cấu trúc dữ liệu',NULL),(135,1095,'1',NULL,NULL,'Giải thuật',NULL),(136,1108,'0',NULL,NULL,'5',NULL),(137,1108,'0',NULL,NULL,'2',NULL),(138,1108,'0',NULL,NULL,'3',NULL),(139,1108,'0',NULL,NULL,'1',NULL),(140,1108,'0',NULL,NULL,'4',NULL),(141,1173,'0',NULL,NULL,'Insertion sort',NULL),(142,1182,'0',NULL,NULL,'O(n)',NULL),(143,1182,'0',NULL,NULL,'O(n^3)',NULL),(144,1182,'0',NULL,NULL,'O(n^2)',NULL),(145,1182,'0',NULL,NULL,'O(n^4)',NULL),(146,1195,'0',NULL,NULL,'O(n)',NULL),(147,1195,'0',NULL,NULL,'O(n^3)',NULL),(148,1195,'0',NULL,NULL,'O(n^2)',NULL),(149,1195,'0',NULL,NULL,'O(n^4)',NULL),(150,1228,'0',NULL,NULL,'N-2',NULL),(151,1228,'0',NULL,NULL,'N',NULL),(152,1228,'0',NULL,NULL,'N-1',NULL),(153,1233,'0',NULL,NULL,'Insertion sort',NULL),(154,1254,'0',NULL,NULL,'Insertion sort',NULL),(155,1255,'0',NULL,NULL,'N-2',NULL),(156,1255,'0',NULL,NULL,'N',NULL),(157,1255,'0',NULL,NULL,'N-1',NULL),(158,1256,'0',NULL,NULL,'O(n)',NULL),(159,1256,'0',NULL,NULL,'O(n^3)',NULL),(160,1256,'0',NULL,NULL,'O(n^2)',NULL),(161,1256,'0',NULL,NULL,'O(n^4)',NULL),(162,1274,'0',NULL,NULL,'5',NULL),(163,1274,'0',NULL,NULL,'2',NULL),(164,1274,'0',NULL,NULL,'3',NULL),(165,1274,'0',NULL,NULL,'1',NULL),(166,1274,'0',NULL,NULL,'4',NULL),(167,1287,'0',NULL,NULL,'Insertion sort',NULL),(168,1288,'0',NULL,NULL,'3',NULL),(169,1289,'0',NULL,NULL,'O(n)',NULL),(170,1289,'0',NULL,NULL,'O(n^3)',NULL),(171,1289,'0',NULL,NULL,'O(n^2)',NULL),(172,1289,'0',NULL,NULL,'O(n^4)',NULL),(173,1846,'0',NULL,NULL,'Star',NULL),(174,1846,'0',NULL,NULL,'Ring',NULL),(175,1846,'0',NULL,NULL,'Hybrid',NULL),(176,1846,'0',NULL,NULL,'Bus',NULL),(185,3374,'0',NULL,NULL,'Insertion sort',NULL),(186,3379,'0',NULL,NULL,'O(n)',NULL),(187,3379,'0',NULL,NULL,'O(n^3)',NULL),(188,3379,'0',NULL,NULL,'O(n^2)',NULL),(189,3379,'0',NULL,NULL,'O(n^4)',NULL),(190,3380,'0',NULL,NULL,'Cn',NULL),(191,3393,'0',NULL,NULL,'Insertion sort',NULL),(272,3578,'0',NULL,NULL,'Insertion sort',NULL),(273,3579,'0',NULL,NULL,'O(n)',NULL),(274,3579,'0',NULL,NULL,'O(n^3)',NULL),(275,3579,'0',NULL,NULL,'O(n^2)',NULL),(276,3579,'0',NULL,NULL,'O(n^4)',NULL),(277,3909,'0',NULL,NULL,'Insertion sort',NULL);

/*Table structure for table `peo` */

DROP TABLE IF EXISTS `peo`;

CREATE TABLE `peo` (
  `peo_id` int(11) NOT NULL AUTO_INCREMENT,
  `edu_program_id` int(11) DEFAULT NULL,
  `peo_code` char(10) COLLATE utf8_unicode_ci NOT NULL,
  `peo_date` date NOT NULL,
  `peo_isused` tinyint(1) NOT NULL,
  PRIMARY KEY (`peo_id`),
  KEY `fk_peo_versions_of_educational_programs` (`edu_program_id`),
  CONSTRAINT `fk_peo_versions_of_educational_programs` FOREIGN KEY (`edu_program_id`) REFERENCES `educational_program` (`edu_program_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `peo` */

insert  into `peo`(`peo_id`,`edu_program_id`,`peo_code`,`peo_date`,`peo_isused`) values (1,2,'PO2016','2016-01-09',1),(2,1,'01','2016-01-09',0),(3,1,'02','2016-01-11',1),(4,3,'01','2016-01-16',1);

/*Table structure for table `peo_comment` */

DROP TABLE IF EXISTS `peo_comment`;

CREATE TABLE `peo_comment` (
  `peo_comment_id` int(11) NOT NULL AUTO_INCREMENT,
  `program_comment_id` int(11) DEFAULT NULL,
  `peo_id` int(11) DEFAULT NULL,
  `program_decision_id` int(11) DEFAULT NULL,
  `peo_comment_date` date NOT NULL,
  `peo_comment_time` time DEFAULT NULL,
  `peo_comment_desc` text COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`peo_comment_id`),
  KEY `fk_peo_in_relation_with_program_comment` (`peo_id`),
  KEY `fk_program_comment_in_relation_with_peo_comment` (`program_comment_id`),
  KEY `fk_relation_between_program_decision_and_peo_comment` (`program_decision_id`),
  CONSTRAINT `fk_peo_in_relation_with_program_comment` FOREIGN KEY (`peo_id`) REFERENCES `peo_item` (`peoi_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_program_comment_in_relation_with_peo_comment` FOREIGN KEY (`program_comment_id`) REFERENCES `program_comment` (`program_comment_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_relation_between_program_decision_and_peo_comment` FOREIGN KEY (`program_decision_id`) REFERENCES `program_decision` (`program_decision_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `peo_comment` */

/*Table structure for table `peo_comment_relationship` */

DROP TABLE IF EXISTS `peo_comment_relationship`;

CREATE TABLE `peo_comment_relationship` (
  `peo_comment_relationship_id` int(11) NOT NULL AUTO_INCREMENT,
  `parent_peo_comment_id` int(11) DEFAULT NULL,
  `child_peo_comment_id` int(11) DEFAULT NULL,
  `peo_comment_relationship_desc` text COLLATE utf8_unicode_ci,
  PRIMARY KEY (`peo_comment_relationship_id`),
  KEY `fk_child_of_peo_comment_relationship` (`child_peo_comment_id`),
  KEY `fk_parent_of_peo_comment_relationship` (`parent_peo_comment_id`),
  CONSTRAINT `fk_child_of_peo_comment_relationship` FOREIGN KEY (`child_peo_comment_id`) REFERENCES `peo_comment` (`peo_comment_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_parent_of_peo_comment_relationship` FOREIGN KEY (`parent_peo_comment_id`) REFERENCES `peo_comment` (`peo_comment_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `peo_comment_relationship` */

/*Table structure for table `peo_item` */

DROP TABLE IF EXISTS `peo_item`;

CREATE TABLE `peo_item` (
  `peoi_id` int(11) NOT NULL AUTO_INCREMENT,
  `peo_id` int(11) DEFAULT NULL,
  `peoi_code` char(5) COLLATE utf8_unicode_ci NOT NULL COMMENT 'code mean po1, po2, etc',
  `peoi_desc_vn` text COLLATE utf8_unicode_ci NOT NULL,
  `peoi_desc_en` text COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`peoi_id`),
  KEY `fk_peo_of_peo_versions` (`peo_id`),
  CONSTRAINT `fk_peo_of_peo_versions` FOREIGN KEY (`peo_id`) REFERENCES `peo` (`peo_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `peo_item` */

insert  into `peo_item`(`peoi_id`,`peo_id`,`peoi_code`,`peoi_desc_vn`,`peoi_desc_en`) values (2,4,'PEO1','<p>Con người quan tâm đến đạo đức và thỏa mối quan tâm của xã hội</p>','<p style=\"margin: 0in; font-family: Calibri; font-size: 11.0pt;\" data-mce-style=\"margin: 0in; font-family: Calibri; font-size: 11.0pt;\">Exhibit ethical considerations and concern for society in their work</p>'),(3,4,'PEO2','<p>Thành công trong việc triển khai các hệ thống phần mềm để đáp ứng nhu cầu thị trường.</p>','<p>Be successful in implementing software systems to meet market needs.</p>'),(4,4,'PEO3','<p>Thành công trong&nbsp;chương trình cao hơn mà họ tham gia</p>','<p>Be successful in higher degree programs in which they enroll</p>');

/*Table structure for table `peo_mission_map_version` */

DROP TABLE IF EXISTS `peo_mission_map_version`;

CREATE TABLE `peo_mission_map_version` (
  `pmv_id` int(11) NOT NULL AUTO_INCREMENT,
  `peo_version_id` int(11) DEFAULT NULL,
  `umv_id` int(11) DEFAULT NULL,
  `pmv_code` int(11) NOT NULL,
  `pmv_date` date NOT NULL,
  `pmv_isused` tinyint(1) NOT NULL,
  PRIMARY KEY (`pmv_id`),
  KEY `fk_mission_in_the_mapping_with_peo_mission_map_version` (`umv_id`),
  KEY `fk_peo_version_in_the_mapping_with_peo_mission_map_version` (`peo_version_id`),
  CONSTRAINT `fk_mission_in_the_mapping_with_peo_mission_map_version` FOREIGN KEY (`umv_id`) REFERENCES `univ_mission` (`um_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_peo_version_in_the_mapping_with_peo_mission_map_version` FOREIGN KEY (`peo_version_id`) REFERENCES `peo` (`peo_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `peo_mission_map_version` */

/*Table structure for table `peo_so_map` */

DROP TABLE IF EXISTS `peo_so_map`;

CREATE TABLE `peo_so_map` (
  `psm_id` int(11) NOT NULL AUTO_INCREMENT,
  `sov_id` int(11) DEFAULT NULL,
  `peo_id` int(11) DEFAULT NULL,
  `psm_code` int(11) NOT NULL,
  `psm_date` date DEFAULT NULL,
  `psm_isused` tinyint(1) NOT NULL,
  PRIMARY KEY (`psm_id`),
  KEY `fk_relation_between_peo_version_and_peo_so_map_version` (`peo_id`),
  KEY `fk_relation_between_so_version_and_peo_so_map_version` (`sov_id`),
  CONSTRAINT `fk_relation_between_peo_version_and_peo_so_map_version` FOREIGN KEY (`peo_id`) REFERENCES `peo` (`peo_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_relation_between_so_version_and_peo_so_map_version` FOREIGN KEY (`sov_id`) REFERENCES `student_outcome` (`so_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `peo_so_map` */

/*Table structure for table `peoi_soi_map` */

DROP TABLE IF EXISTS `peoi_soi_map`;

CREATE TABLE `peoi_soi_map` (
  `psmi_id` int(11) NOT NULL AUTO_INCREMENT,
  `soi_id` int(11) DEFAULT NULL,
  `psm_id` int(11) DEFAULT NULL,
  `peoi_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`psmi_id`),
  KEY `fk_peos_in_th_mapping_with_sos` (`peoi_id`),
  KEY `fk_sos_in_the_mapping_with_peos` (`soi_id`),
  KEY `fk_version_of_peo_so_map` (`psm_id`),
  CONSTRAINT `fk_peos_in_th_mapping_with_sos` FOREIGN KEY (`peoi_id`) REFERENCES `peo_item` (`peoi_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_sos_in_the_mapping_with_peos` FOREIGN KEY (`soi_id`) REFERENCES `student_outcome_item` (`soi_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_version_of_peo_so_map` FOREIGN KEY (`psm_id`) REFERENCES `peo_so_map` (`psm_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=27 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `peoi_soi_map` */

insert  into `peoi_soi_map`(`psmi_id`,`soi_id`,`psm_id`,`peoi_id`) values (3,4,NULL,3),(4,5,NULL,3),(5,6,NULL,2),(6,7,NULL,2),(7,8,NULL,2),(8,9,NULL,2),(9,10,NULL,2),(10,11,NULL,3),(12,12,NULL,4),(13,13,NULL,4),(16,4,NULL,4),(17,5,NULL,4),(18,11,NULL,4),(20,3,NULL,3),(21,3,NULL,4),(25,3,NULL,2),(26,7,NULL,3);

/*Table structure for table `performance_indicator` */

DROP TABLE IF EXISTS `performance_indicator`;

CREATE TABLE `performance_indicator` (
  `pi_id` int(11) NOT NULL AUTO_INCREMENT,
  `performance_indicator_version_id` int(11) DEFAULT NULL,
  `pi_desc` text COLLATE utf8_unicode_ci NOT NULL,
  `pi_introduced_date` date NOT NULL,
  `pi_used` tinyint(1) NOT NULL,
  `pi_version` int(11) DEFAULT NULL,
  PRIMARY KEY (`pi_id`),
  KEY `fk_pis_of_version` (`performance_indicator_version_id`),
  CONSTRAINT `fk_pis_of_version` FOREIGN KEY (`performance_indicator_version_id`) REFERENCES `performance_indicator_version` (`performance_indicator_version_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `performance_indicator` */

/*Table structure for table `performance_indicator_version` */

DROP TABLE IF EXISTS `performance_indicator_version`;

CREATE TABLE `performance_indicator_version` (
  `performance_indicator_version_id` int(11) NOT NULL AUTO_INCREMENT,
  `so_id` int(11) DEFAULT NULL,
  `performance_indicator_version_code` char(10) COLLATE utf8_unicode_ci NOT NULL,
  `performance_indicator_version_date` date NOT NULL,
  `performance_indicator_version_isused` tinyint(1) NOT NULL,
  PRIMARY KEY (`performance_indicator_version_id`),
  KEY `fk_version_of_performance_indicators` (`so_id`),
  CONSTRAINT `fk_version_of_performance_indicators` FOREIGN KEY (`so_id`) REFERENCES `student_outcome_item` (`soi_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `performance_indicator_version` */

/*Table structure for table `previlege` */

DROP TABLE IF EXISTS `previlege`;

CREATE TABLE `previlege` (
  `previlege_id` int(11) NOT NULL AUTO_INCREMENT,
  `previlege_code` char(100) COLLATE utf8_unicode_ci NOT NULL,
  `previlege_desc` text COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`previlege_id`)
) ENGINE=InnoDB AUTO_INCREMENT=184 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `previlege` */

insert  into `previlege`(`previlege_id`,`previlege_code`,`previlege_desc`) values (1,'cc_co_r4t-prepare',''),(2,'cc_co_r4t-read',''),(3,'cc_co_r4tr-chart',''),(4,'cc_co_r4tr-prepare',''),(5,'cc_co_r4tr-read',''),(6,'ccoiitemmap-mapping',''),(7,'ccoiitemmap-read',''),(8,'ccoiitemmap-update',''),(9,'ccomap-create',''),(10,'ccomap-destroy',''),(11,'ccomap-read',''),(12,'ccomap-update',''),(13,'cctree-create',''),(14,'cctree-destroy',''),(15,'cctree-read',''),(16,'cctree-update',''),(17,'co-create',''),(18,'co-destroy',''),(19,'co-read',''),(20,'co-update',''),(21,'co_so_r4tr-chart',''),(22,'co_so_r4tr-prepare',''),(23,'co_so_r4tr-read',''),(24,'coi-create',''),(25,'coi-destroy',''),(26,'coi-read',''),(27,'coi-update',''),(28,'coisoimap-mapping',''),(29,'contentquestion-create',''),(30,'contentquestion-destroy',''),(31,'contentquestion-read',''),(32,'contentquestion-update',''),(33,'course-content',''),(34,'course-create',''),(35,'course-destroy',''),(36,'course-mapping',''),(37,'course-outcome',''),(38,'course-read',''),(39,'course-trcor',''),(40,'course-update',''),(41,'course_so_r4tr-chart',''),(42,'course_so_r4tr-chartdetail',''),(43,'course_so_r4tr-prepare',''),(44,'course_so_r4tr-read',''),(45,'coursecontent-read',''),(46,'courseinedupro-read',''),(47,'courseinedupro-update',''),(48,'courseineduprowithco-read',''),(49,'courserequiredlevel-read',''),(50,'department-create',''),(51,'department-destroy',''),(52,'department-read',''),(53,'department-update',''),(54,'edupro-cosor4tr',''),(55,'edupro-course',''),(56,'edupro-coursesor4tr',''),(57,'edupro-create',''),(58,'edupro-destroy',''),(59,'edupro-listcso',''),(60,'edupro-mapcoso',''),(61,'edupro-mappeoum',''),(62,'edupro-mapsopeo',''),(63,'edupro-peo',''),(64,'edupro-read',''),(65,'edupro-so',''),(66,'edupro-update',''),(67,'exam-examrand',''),(68,'exam-finish',''),(69,'exam-prepare',''),(70,'exam-save',''),(71,'exam-start',''),(72,'faculty-create',''),(73,'faculty-destroy',''),(74,'faculty-read',''),(75,'faculty-update',''),(76,'listcso-prepare',''),(77,'listcso-read',''),(78,'mapcontentqgroup-create',''),(79,'mapcontentqgroup-read',''),(80,'mapcontentqgroup-update',''),(81,'mapcoursetopic-create',''),(82,'mapcoursetopic-read',''),(83,'mapcoursetopic-update',''),(84,'mappingcc2coi-prepare',''),(85,'mappingcc2coi-read',''),(86,'mappingcc2soi-prepare',''),(87,'mappingcc2soi-read',''),(88,'mappingcoi2soi-prepare',''),(89,'mappingcoi2soi-read',''),(90,'mappingpeo2um-prepare',''),(91,'mappingpeo2um-read',''),(92,'mappingq2coi-prepare',''),(93,'mappingq2coi-read',''),(94,'mappingsopeo-prepare',''),(95,'mappingsopeo-read',''),(96,'mapqgroupcontent-create',''),(97,'mapqgroupcontent-read',''),(98,'mapqgroupcontent-update',''),(99,'mapqgroupquestion-create',''),(100,'mapqgroupquestion-read',''),(101,'mapqgroupquestion-update',''),(102,'mapqgrouptopic-create',''),(103,'mapqgrouptopic-read',''),(104,'mapqgrouptopic-update',''),(105,'mapquestionqgroup-create',''),(106,'mapquestionqgroup-read',''),(107,'mapquestionqgroup-update',''),(108,'mapquestiontopic-create',''),(109,'mapquestiontopic-read',''),(110,'mapquestiontopic-update',''),(111,'maptopicqgroup-create',''),(112,'maptopicqgroup-read',''),(113,'maptopicqgroup-update',''),(114,'maptopicquestion-create',''),(115,'maptopicquestion-read',''),(116,'maptopicquestion-update',''),(117,'peo-create',''),(118,'peo-destroy',''),(119,'peo-read',''),(120,'peo-update',''),(121,'peoi-create',''),(122,'peoi-destroy',''),(123,'peoi-read',''),(124,'peoi-update',''),(125,'peoi_soi_map-mapping',''),(126,'qcm-mapping',''),(127,'qcomap-mapping',''),(128,'question-create',''),(129,'question-destroy',''),(130,'question-duplicate',''),(131,'question-mapping_coi_q',''),(132,'question-read',''),(133,'question-share',''),(134,'question-update',''),(135,'questiongroup-create',''),(136,'questiongroup-destroy',''),(137,'questiongroup-read',''),(138,'questiongroup-update',''),(139,'so-create',''),(140,'so-destroy',''),(141,'so-read',''),(142,'so-update',''),(143,'soi-create',''),(144,'soi-destroy',''),(145,'soi-read',''),(146,'soi-update',''),(147,'test-cccor4t',''),(148,'test-cccor4tr',''),(149,'test-content',''),(150,'test-create',''),(151,'test-destroy',''),(152,'test-read',''),(153,'test-review',''),(154,'test-update',''),(155,'test4exam-exam',''),(156,'test4exam-read',''),(157,'testreview-create',''),(158,'testreview-read',''),(159,'testsection-create',''),(160,'testsection-destroy',''),(161,'testsection-read',''),(162,'testsection-update',''),(163,'topic-create',''),(164,'topic-destroy',''),(165,'topic-read',''),(166,'topic-update',''),(167,'trcor-chart',''),(168,'trcor-prepare',''),(169,'trcor-read',''),(170,'um-create',''),(171,'um-destroy',''),(172,'um-read',''),(173,'um-update',''),(174,'umi-create',''),(175,'umi-destroy',''),(176,'umi-read',''),(177,'umi-update',''),(178,'university-create',''),(179,'university-destroy',''),(180,'university-mission',''),(181,'university-read',''),(182,'university-update',''),(183,'upm-mapping','');

/*Table structure for table `previlege_relstionship` */

DROP TABLE IF EXISTS `previlege_relstionship`;

CREATE TABLE `previlege_relstionship` (
  `previlege_relstionship_id` int(11) NOT NULL AUTO_INCREMENT,
  `parent_previlege_id` int(11) DEFAULT NULL,
  `child_previlege_id` int(11) DEFAULT NULL,
  `previlege_relstionship_desc` text COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`previlege_relstionship_id`),
  KEY `fk_child_of_previlege_relationship` (`child_previlege_id`),
  KEY `fk_parent_of_previlege_relationship` (`parent_previlege_id`),
  CONSTRAINT `fk_child_of_previlege_relationship` FOREIGN KEY (`child_previlege_id`) REFERENCES `previlege` (`previlege_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_parent_of_previlege_relationship` FOREIGN KEY (`parent_previlege_id`) REFERENCES `previlege` (`previlege_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `previlege_relstionship` */

/*Table structure for table `program_access_mode` */

DROP TABLE IF EXISTS `program_access_mode`;

CREATE TABLE `program_access_mode` (
  `program_access_mode_id` int(11) NOT NULL AUTO_INCREMENT,
  `edu_program_id` int(11) DEFAULT NULL,
  `role_id` int(11) DEFAULT NULL,
  `grantor_id` int(11) DEFAULT NULL,
  `previlege_id` int(11) DEFAULT NULL,
  `accessor_id` int(11) DEFAULT NULL,
  `program_access_mode_granted_date` date NOT NULL,
  `program_access_mode_valid_startdate` date NOT NULL,
  `program_access_mode_valid_enddate` date DEFAULT NULL,
  `program_access_mode_valid_starttime` time DEFAULT NULL,
  `program_access_mode_valid_endtime` time DEFAULT NULL,
  `program_access_mode_is_disabled` tinyint(1) NOT NULL,
  `program_access_mode_desc` text COLLATE utf8_unicode_ci,
  PRIMARY KEY (`program_access_mode_id`),
  KEY `fk_applicable_roles_in_accessing_program` (`role_id`),
  KEY `fk_granter_of_program_accessing_previlege` (`grantor_id`),
  KEY `fk_previleges_which_user__can_access` (`previlege_id`),
  KEY `fk_program_being_accessed` (`edu_program_id`),
  KEY `fk_user_who_want_to_access_the_program` (`accessor_id`),
  CONSTRAINT `fk_applicable_roles_in_accessing_program` FOREIGN KEY (`role_id`) REFERENCES `role` (`role_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_granter_of_program_accessing_previlege` FOREIGN KEY (`grantor_id`) REFERENCES `user` (`user_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_previleges_which_user__can_access` FOREIGN KEY (`previlege_id`) REFERENCES `previlege` (`previlege_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_program_being_accessed` FOREIGN KEY (`edu_program_id`) REFERENCES `educational_program` (`edu_program_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_who_want_to_access_the_program` FOREIGN KEY (`accessor_id`) REFERENCES `user` (`user_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `program_access_mode` */

/*Table structure for table `program_comment` */

DROP TABLE IF EXISTS `program_comment`;

CREATE TABLE `program_comment` (
  `program_comment_id` int(11) NOT NULL AUTO_INCREMENT,
  `program_access_mode_id` int(11) DEFAULT NULL,
  `program_decision_id` int(11) DEFAULT NULL,
  `program_comment_date` date NOT NULL,
  `program_comment_time` time NOT NULL,
  `program_comment_desc` text COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`program_comment_id`),
  KEY `fk_descison_of_program` (`program_decision_id`),
  KEY `fk_program_being_commented` (`program_access_mode_id`),
  CONSTRAINT `fk_descison_of_program` FOREIGN KEY (`program_decision_id`) REFERENCES `program_decision` (`program_decision_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_program_being_commented` FOREIGN KEY (`program_access_mode_id`) REFERENCES `program_access_mode` (`program_access_mode_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `program_comment` */

/*Table structure for table `program_comment_relationship` */

DROP TABLE IF EXISTS `program_comment_relationship`;

CREATE TABLE `program_comment_relationship` (
  `program_comment_relationship_id` int(11) NOT NULL AUTO_INCREMENT,
  `program_comment_id` int(11) DEFAULT NULL,
  `pro_program_comment_id` int(11) DEFAULT NULL,
  `program_comment_relationship_desc` text COLLATE utf8_unicode_ci,
  PRIMARY KEY (`program_comment_relationship_id`),
  KEY `fk_child_of_program_comment_relationship` (`pro_program_comment_id`),
  KEY `fk_parent_of_program_comment_relationship` (`program_comment_id`),
  CONSTRAINT `fk_child_of_program_comment_relationship` FOREIGN KEY (`pro_program_comment_id`) REFERENCES `program_comment` (`program_comment_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_parent_of_program_comment_relationship` FOREIGN KEY (`program_comment_id`) REFERENCES `program_comment` (`program_comment_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `program_comment_relationship` */

/*Table structure for table `program_course_map` */

DROP TABLE IF EXISTS `program_course_map`;

CREATE TABLE `program_course_map` (
  `pcm_id` int(11) NOT NULL AUTO_INCREMENT,
  `course_id` int(11) DEFAULT NULL,
  `course_required_level_id` int(11) DEFAULT NULL,
  `edu_program_id` int(11) DEFAULT NULL,
  `pcm_time_index` tinyint(4) NOT NULL COMMENT 'semster: 1,2,.., 9: if there are 9 semesters in the program\n            ',
  PRIMARY KEY (`pcm_id`),
  KEY `fk_course_in_the_program_mapping` (`course_id`),
  KEY `fk_course_required_level` (`course_required_level_id`),
  KEY `fk_progam_in_the_course_mapping` (`edu_program_id`),
  CONSTRAINT `fk_course_in_the_program_mapping` FOREIGN KEY (`course_id`) REFERENCES `course` (`course_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_course_required_level` FOREIGN KEY (`course_required_level_id`) REFERENCES `course_required_level` (`course_required_level_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_progam_in_the_course_mapping` FOREIGN KEY (`edu_program_id`) REFERENCES `educational_program` (`edu_program_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `program_course_map` */

insert  into `program_course_map`(`pcm_id`,`course_id`,`course_required_level_id`,`edu_program_id`,`pcm_time_index`) values (6,1,0,4,1),(7,2,0,4,2),(8,3,0,3,1),(9,2,0,3,2),(10,1,1,3,4),(11,4,1,3,3);

/*Table structure for table `program_decision` */

DROP TABLE IF EXISTS `program_decision`;

CREATE TABLE `program_decision` (
  `program_decision_id` int(11) NOT NULL AUTO_INCREMENT,
  `program_decision_code` char(100) COLLATE utf8_unicode_ci NOT NULL,
  `program_decision_desc` text COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`program_decision_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `program_decision` */

/*Table structure for table `qco_map` */

DROP TABLE IF EXISTS `qco_map`;

CREATE TABLE `qco_map` (
  `qco_id` int(11) NOT NULL AUTO_INCREMENT,
  `coi_id` int(11) DEFAULT NULL,
  `question_id` int(11) DEFAULT NULL,
  `qco_factor` double NOT NULL COMMENT 'percentage in assessing the outcome',
  PRIMARY KEY (`qco_id`),
  KEY `fk_courseoutcome_in_the_mapping_with_questions` (`coi_id`),
  KEY `fk_question_in_the_mapping_with_courseoutcome` (`question_id`),
  CONSTRAINT `fk_courseoutcome_in_the_mapping_with_questions` FOREIGN KEY (`coi_id`) REFERENCES `course_outcome_item` (`coi_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_question_in_the_mapping_with_courseoutcome` FOREIGN KEY (`question_id`) REFERENCES `question` (`question_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=6802 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `qco_map` */

insert  into `qco_map`(`qco_id`,`coi_id`,`question_id`,`qco_factor`) values (155,1,54,1),(156,1,55,1),(157,2,56,1),(158,2,57,1),(159,2,58,1),(160,30,59,1),(161,30,60,1),(162,1,61,1),(163,30,62,1),(164,1,63,1),(165,2,64,1),(166,1,65,1),(167,2,66,1),(168,2,67,1),(169,30,68,1),(170,1,69,1),(171,1,70,1),(172,1,71,1),(173,1,72,1),(174,30,73,1),(175,30,74,1),(176,1,75,1),(177,30,76,1),(178,2,77,1),(179,1,78,1),(180,1,79,1),(181,2,80,1),(182,2,81,1),(183,30,82,1),(184,2,83,1),(185,1,84,1),(186,30,85,1),(187,30,86,1),(188,30,87,1),(189,30,88,1),(190,30,89,1),(191,1,90,1),(192,2,91,1),(193,1,92,1),(194,30,93,1),(195,1,94,1),(196,2,95,1),(197,30,96,1),(198,30,97,1),(199,1,98,1),(200,2,99,1),(201,1,100,1),(202,2,101,1),(203,1,102,1),(204,1,103,1),(205,2,104,1),(206,1,105,1),(207,1,106,1),(208,1,107,1),(209,2,108,1),(210,30,109,1),(211,30,110,1),(212,1,111,1),(213,2,112,1),(214,1,113,1),(215,2,114,1),(216,2,115,1),(217,1,116,1),(218,30,117,1),(219,30,118,1),(220,2,119,1),(221,30,120,1),(222,30,121,1),(223,30,122,1),(224,1,123,1),(225,30,124,1),(226,2,125,1),(227,1,126,1),(228,30,127,1),(229,2,128,1),(230,2,129,1),(231,2,130,1),(232,30,131,1),(233,2,132,1),(234,1,133,1),(235,2,134,1),(236,30,135,1),(237,1,136,1),(238,30,137,1),(239,1,138,1),(240,1,139,1),(241,30,140,1),(242,30,141,1),(243,1,142,1),(244,30,143,1),(245,30,144,1),(246,30,145,1),(247,1,146,1),(248,2,147,1),(249,30,148,1),(250,30,149,1),(251,1,150,1),(252,1,151,1),(253,30,152,1),(254,1,153,1),(255,2,154,1),(256,30,155,1),(257,1,156,1),(258,2,157,1),(259,1,158,1),(260,30,159,1),(261,1,160,1),(262,1,161,1),(263,30,162,1),(264,1,163,1),(265,1,164,1),(266,1,165,1),(267,2,166,1),(268,1,167,1),(269,1,168,1),(270,30,169,1),(271,2,170,1),(272,1,171,1),(273,1,172,1),(274,2,173,1),(275,1,174,1),(276,1,175,1),(277,2,176,1),(278,2,177,1),(279,30,178,1),(280,30,179,1),(281,2,180,1),(282,2,181,1),(283,30,182,1),(284,30,183,1),(285,30,184,1),(286,2,185,1),(287,30,186,1),(288,30,187,1),(289,2,188,1),(290,30,189,1),(291,2,190,1),(292,2,191,1),(293,1,192,1),(294,30,193,1),(295,30,194,1),(296,30,195,1),(297,30,196,1),(298,2,197,1),(299,30,198,1),(300,1,199,1),(301,2,200,1),(302,30,201,1),(303,2,202,1),(304,30,203,1),(305,30,204,1),(306,2,205,1),(307,2,206,1),(308,30,207,1),(309,2,208,1),(310,30,209,1),(311,1,210,1),(312,2,211,1),(313,2,212,1),(314,30,213,1),(315,30,214,1),(316,1,215,1),(317,2,216,1),(318,30,217,1),(319,2,218,1),(320,1,219,1),(321,30,220,1),(322,1,221,1),(323,30,222,1),(324,1,223,1),(325,2,224,1),(326,30,225,1),(327,2,226,1),(328,1,227,1),(329,30,228,1),(330,2,229,1),(331,1,230,1),(332,30,231,1),(333,2,232,1),(334,2,233,1),(335,30,234,1),(336,30,236,1),(337,2,237,1),(338,1,238,1),(339,2,239,1),(340,30,240,1),(341,1,241,1),(342,2,242,1),(343,1,243,1),(344,30,244,1),(345,1,245,1),(346,2,246,1),(347,30,247,1),(348,1,248,1),(349,2,249,1),(350,1,250,1),(351,2,251,1),(352,1,252,1),(353,1,253,1),(354,30,254,1),(355,2,255,1),(356,30,256,1),(357,2,257,1),(358,1,258,1),(359,1,259,1),(360,30,260,1),(361,1,261,1),(362,1,262,1),(363,1,263,1),(364,2,264,1),(365,1,265,1),(366,30,266,1),(367,2,267,1),(368,2,268,1),(369,1,269,1),(370,2,270,1),(371,2,271,1),(372,2,272,1),(373,30,273,1),(374,1,274,1),(375,30,275,1),(376,1,276,1),(377,1,277,1),(378,1,278,1),(379,2,279,1),(380,2,280,1),(381,2,281,1),(382,1,282,1),(383,1,283,1),(384,2,284,1),(385,30,285,1),(386,1,286,1),(387,2,287,1),(388,2,288,1),(389,1,289,1),(390,2,290,1),(391,1,291,1),(392,2,292,1),(393,1,293,1),(394,30,294,1),(395,1,295,1),(396,2,296,1),(397,30,297,1),(398,2,298,1),(399,1,299,1),(400,30,300,1),(401,30,301,1),(402,2,302,1),(403,1,303,1),(404,30,304,1),(405,2,305,1),(406,1,306,1),(407,2,307,1),(408,2,308,1),(409,30,309,1),(410,30,310,1),(411,30,311,1),(412,1,312,1),(413,1,313,1),(414,30,314,1),(415,2,315,1),(416,1,316,1),(417,2,317,1),(418,2,318,1),(419,2,319,1),(420,30,320,1),(421,1,321,1),(422,30,322,1),(423,30,323,1),(666,2,53,1),(668,30,55,1),(669,1,806,1),(670,30,806,1),(671,2,807,1),(672,30,808,1),(673,1,809,1),(1185,30,53,1),(1186,39,54,1),(1187,40,55,1),(1188,40,56,1),(1189,39,57,1),(1190,40,58,1),(1191,2,59,1),(1192,40,60,1),(1193,30,61,1),(1194,40,62,1),(1195,2,63,1),(1197,40,65,1),(1198,39,66,1),(1199,30,67,1),(1201,30,69,1),(1202,40,70,1),(1203,39,71,1),(1204,2,72,1),(1205,39,73,1),(1206,39,74,1),(1207,40,75,1),(1208,2,76,1),(1209,40,77,1),(1210,40,78,1),(1211,39,79,1),(1212,40,80,1),(1213,39,81,1),(1214,2,82,1),(1215,40,83,1),(1216,40,84,1),(1217,40,85,1),(1219,2,87,1),(1221,39,89,1),(1222,40,90,1),(1223,40,91,1),(1224,2,92,1),(1225,39,93,1),(1226,2,94,1),(1230,40,98,1),(1231,30,99,1),(1232,40,100,1),(1234,30,102,1),(1235,30,103,1),(1236,39,104,1),(1237,2,105,1),(1238,30,106,1),(1239,30,107,1),(1241,39,109,1),(1242,40,110,1),(1243,2,111,1),(1244,30,112,1),(1245,2,113,1),(1246,30,114,1),(1247,30,115,1),(1248,40,116,1),(1249,40,117,1),(1250,40,118,1),(1251,30,119,1),(1252,40,120,1),(1254,2,122,1),(1255,2,123,1),(1256,40,124,1),(1258,39,126,1),(1259,40,127,1),(1260,39,128,1),(1262,40,130,1),(1264,30,132,1),(1265,39,133,1),(1268,40,136,1),(1269,40,137,1),(1270,39,138,1),(1271,30,139,1),(1272,2,140,1),(1274,30,142,1),(1275,39,143,1),(1276,2,144,1),(1277,40,145,1),(1278,30,146,1),(1279,40,147,1),(1280,39,148,1),(1281,2,149,1),(1282,2,150,1),(1283,40,151,1),(1284,39,152,1),(1285,40,153,1),(1286,40,154,1),(1287,40,155,1),(1288,30,156,1),(1290,2,158,1),(1292,30,160,1),(1293,2,161,1),(1295,39,163,1),(1296,40,164,1),(1297,2,165,1),(1298,30,166,1),(1299,30,167,1),(1300,40,168,1),(1301,40,169,1),(1302,40,170,1),(1303,2,171,1),(1304,39,172,1),(1305,39,173,1),(1306,40,174,1),(1307,39,175,1),(1308,40,176,1),(1309,30,177,1),(1311,39,179,1),(1313,39,181,1),(1314,39,182,1),(1316,39,184,1),(1317,39,185,1),(1318,40,186,1),(1319,2,187,1),(1321,40,189,1),(1322,30,190,1),(1324,2,192,1),(1325,39,193,1),(1327,2,195,1),(1328,40,196,1),(1329,30,197,1),(1330,2,198,1),(1331,40,199,1),(1333,39,201,1),(1335,39,203,1),(1336,39,204,1),(1338,30,206,1),(1339,2,207,1),(1340,39,208,1),(1341,39,209,1),(1342,30,210,1),(1343,30,211,1),(1344,40,212,1),(1345,2,213,1),(1347,30,215,1),(1349,2,217,1),(1350,40,218,1),(1351,40,219,1),(1352,2,220,1),(1353,30,221,1),(1354,39,222,1),(1355,39,223,1),(1356,39,224,1),(1357,39,225,1),(1358,30,226,1),(1359,30,227,1),(1360,2,228,1),(1361,30,229,1),(1362,2,230,1),(1363,39,231,1),(1364,39,232,1),(1365,30,233,1),(1366,40,234,1),(1367,40,236,1),(1368,30,237,1),(1369,2,238,1),(1370,39,239,1),(1372,30,241,1),(1373,39,242,1),(1374,30,243,1),(1375,2,244,1),(1376,39,245,1),(1377,40,246,1),(1378,2,247,1),(1379,39,248,1),(1381,30,250,1),(1382,40,251,1),(1383,30,252,1),(1384,30,253,1),(1385,2,254,1),(1386,30,255,1),(1387,39,256,1),(1388,30,257,1),(1389,39,258,1),(1390,39,259,1),(1391,40,260,1),(1392,39,261,1),(1393,2,262,1),(1394,2,263,1),(1395,39,264,1),(1396,2,265,1),(1397,39,266,1),(1399,30,268,1),(1400,2,269,1),(1402,30,271,1),(1405,30,274,1),(1406,2,275,1),(1407,39,276,1),(1408,40,277,1),(1409,39,278,1),(1410,30,279,1),(1412,40,281,1),(1413,39,282,1),(1414,40,283,1),(1415,40,284,1),(1416,40,285,1),(1417,2,286,1),(1418,39,287,1),(1419,30,288,1),(1420,2,289,1),(1422,40,291,1),(1423,30,292,1),(1424,2,293,1),(1425,40,294,1),(1426,30,295,1),(1427,39,296,1),(1428,39,297,1),(1429,39,298,1),(1430,2,299,1),(1431,2,300,1),(1434,40,303,1),(1435,40,304,1),(1437,2,306,1),(1440,2,309,1),(1441,40,310,1),(1443,39,312,1),(1444,39,313,1),(1445,39,314,1),(1446,30,315,1),(1447,2,316,1),(1448,30,317,1),(1449,30,318,1),(1450,30,319,1),(1452,39,321,1),(1453,39,322,1),(1454,2,323,1),(1933,39,807,1),(1935,30,809,1),(2210,39,55,1),(2216,39,61,1),(2218,30,63,1),(2219,30,64,1),(2220,39,65,1),(2221,30,66,1),(2223,39,68,1),(2224,39,69,1),(2225,2,70,1),(2227,39,72,1),(2229,2,74,1),(2230,30,75,1),(2232,39,77,1),(2233,39,78,1),(2234,30,79,1),(2236,30,81,1),(2239,2,84,1),(2241,2,86,1),(2244,2,89,1),(2245,39,90,1),(2246,30,91,1),(2251,39,96,1),(2252,39,97,1),(2253,39,98,1),(2255,39,100,1),(2257,39,102,1),(2260,39,105,1),(2261,2,106,1),(2263,30,108,1),(2264,2,109,1),(2265,39,110,1),(2266,39,111,1),(2268,39,113,1),(2269,39,114,1),(2270,39,115,1),(2271,39,116,1),(2273,39,118,1),(2275,39,120,1),(2277,39,122,1),(2278,39,123,1),(2280,39,125,1),(2282,39,127,1),(2285,30,130,1),(2288,30,133,1),(2291,39,136,1),(2292,2,137,1),(2294,39,139,1),(2297,39,142,1),(2298,2,143,1),(2300,39,145,1),(2301,2,146,1),(2302,39,147,1),(2304,39,149,1),(2305,39,150,1),(2306,30,151,1),(2307,2,152,1),(2308,39,153,1),(2312,30,157,1),(2313,30,158,1),(2314,2,159,1),(2315,39,160,1),(2316,39,161,1),(2317,2,162,1),(2319,30,164,1),(2320,30,165,1),(2323,2,168,1),(2324,2,169,1),(2325,39,170,1),(2329,2,174,1),(2330,2,175,1),(2333,2,178,1),(2335,39,180,1),(2339,2,184,1),(2340,30,185,1),(2341,2,186,1),(2343,30,188,1),(2346,39,191,1),(2347,30,192,1),(2349,39,194,1),(2351,39,196,1),(2354,39,199,1),(2355,39,200,1),(2356,2,201,1),(2357,30,202,1),(2359,2,204,1),(2361,39,206,1),(2367,30,212,1),(2368,39,213,1),(2369,39,214,1),(2370,39,215,1),(2371,39,216,1),(2374,39,219,1),(2375,39,220,1),(2376,2,221,1),(2377,2,222,1),(2378,2,223,1),(2380,2,225,1),(2381,39,226,1),(2383,39,228,1),(2384,39,229,1),(2385,39,230,1),(2386,2,231,1),(2388,39,233,1),(2389,39,234,1),(2390,2,236,1),(2391,39,237,1),(2392,39,238,1),(2394,39,240,1),(2395,2,241,1),(2397,39,243,1),(2399,30,245,1),(2400,30,246,1),(2401,39,247,1),(2402,2,248,1),(2403,39,249,1),(2404,2,250,1),(2405,39,251,1),(2406,2,252,1),(2407,39,253,1),(2411,39,257,1),(2412,30,258,1),(2413,2,259,1),(2414,39,260,1),(2415,30,261,1),(2418,30,264,1),(2419,39,265,1),(2421,39,267,1),(2423,30,269,1),(2424,30,270,1),(2426,30,272,1),(2427,39,273,1),(2431,30,277,1),(2432,30,278,1),(2433,39,279,1),(2434,30,280,1),(2435,30,281,1),(2436,2,282,1),(2437,39,283,1),(2439,2,285,1),(2441,30,287,1),(2442,39,288,1),(2443,30,289,1),(2445,2,291,1),(2446,39,292,1),(2448,2,294,1),(2455,39,301,1),(2457,39,303,1),(2459,30,305,1),(2460,30,306,1),(2461,39,307,1),(2462,39,308,1),(2463,39,309,1),(2464,39,310,1),(2465,39,311,1),(2468,2,314,1),(2470,39,316,1),(2475,2,321,1),(2476,2,322,1),(2955,39,806,1),(3232,2,54,1),(3234,30,56,1),(3236,30,58,1),(3238,2,60,1),(3243,30,65,1),(3246,2,68,1),(3248,30,70,1),(3249,2,71,1),(3253,2,75,1),(3256,2,78,1),(3258,30,80,1),(3263,2,85,1),(3268,2,90,1),(3273,30,95,1),(3276,30,98,1),(3278,2,100,1),(3280,2,102,1),(3283,30,105,1),(3291,30,113,1),(3294,2,116,1),(3295,2,117,1),(3299,2,121,1),(3301,30,123,1),(3302,2,124,1),(3304,30,126,1),(3305,2,127,1),(3307,30,129,1),(3309,2,131,1),(3311,2,133,1),(3313,2,135,1),(3314,30,136,1),(3316,2,138,1),(3317,2,139,1),(3323,2,145,1),(3325,30,147,1),(3328,30,150,1),(3331,30,153,1),(3332,30,154,1),(3334,2,156,1),(3338,2,160,1),(3339,30,161,1),(3341,2,163,1),(3342,2,164,1),(3345,2,167,1),(3348,30,170,1),(3350,2,172,1),(3352,30,174,1),(3353,30,175,1),(3354,30,176,1),(3358,30,180,1),(3359,30,181,1),(3360,2,182,1),(3369,30,191,1),(3371,2,193,1),(3372,2,194,1),(3377,30,199,1),(3378,30,200,1),(3387,2,209,1),(3393,2,215,1),(3397,2,219,1),(3402,30,224,1),(3405,2,227,1),(3408,30,230,1),(3410,30,232,1),(3412,2,234,1),(3415,30,238,1),(3417,2,240,1),(3419,30,242,1),(3430,2,253,1),(3435,2,258,1),(3437,2,260,1),(3440,30,263,1),(3443,2,266,1),(3444,30,267,1),(3451,2,274,1),(3453,30,276,1),(3454,2,277,1),(3459,30,282,1),(3460,2,283,1),(3463,30,286,1),(3467,30,290,1),(3472,2,295,1),(3480,2,303,1),(3481,2,304,1),(3484,30,307,1),(3487,2,310,1),(3489,30,312,1),(3490,2,313,1),(3493,30,316,1),(3498,30,321,1),(3980,2,808,1),(3981,2,809,1),(4254,3,331,1),(4255,5,331,1),(4256,39,53,1),(4257,30,57,1),(4258,39,59,1),(4259,2,62,1),(4260,39,64,1),(4261,39,67,1),(4262,2,73,1),(4263,40,76,1),(4264,1,82,1),(4265,1,83,1),(4266,1,86,1),(4267,40,87,1),(4268,39,88,1),(4269,40,92,1),(4270,1,93,1),(4271,30,94,1),(4272,40,95,1),(4273,1,96,1),(4274,2,97,1),(4275,1,99,1),(4276,1,101,1),(4277,40,103,1),(4278,40,104,1),(4279,2,107,1),(4280,1,108,1),(4281,39,112,1),(4282,40,119,1),(4283,40,121,1),(4284,30,125,1),(4285,1,128,1),(4286,39,129,1),(4287,39,131,1),(4288,39,132,1),(4289,40,134,1),(4290,40,135,1),(4291,1,140,1),(4292,39,141,1),(4293,40,144,1),(4294,2,148,1),(4295,1,155,1),(4296,40,157,1),(4297,40,159,1),(4298,1,162,1),(4299,40,166,1),(4300,40,171,1),(4301,40,173,1),(4302,39,177,1),(4303,39,178,1),(4304,1,179,1),(4305,39,183,1),(4306,1,187,1),(4307,40,188,1),(4308,2,189,1),(4309,39,190,1),(4310,40,195,1),(4311,39,197,1),(4312,40,198,1),(4313,40,202,1),(4314,40,203,1),(4315,1,205,1),(4316,39,207,1),(4317,1,208,1),(4318,40,210,1),(4319,40,211,1),(4320,1,214,1),(4321,30,216,1),(4322,40,217,1),(4323,39,218,1),(4324,30,239,1),(4325,40,244,1),(4326,1,249,1),(4327,40,254,1),(4328,39,255,1),(4329,40,256,1),(4330,39,262,1),(4331,40,268,1),(4332,39,270,1),(4333,39,271,1),(4334,1,272,1),(4335,40,273,1),(4336,1,275,1),(4337,39,280,1),(4338,1,284,1),(4339,40,290,1),(4340,40,293,1),(4341,40,296,1),(4342,40,297,1),(4343,30,298,1),(4344,30,299,1),(4345,1,300,1),(4346,40,301,1),(4347,40,302,1),(4348,40,305,1),(4349,1,308,1),(4350,40,311,1),(4351,39,315,1),(4352,39,317,1),(4353,1,318,1),(4354,40,319,1),(4355,39,320,1),(4356,1,323,1),(4357,26,327,1),(4358,24,328,1),(4359,5,332,1),(4360,7,333,1),(4361,15,334,1),(4362,18,335,1),(4363,3,337,1),(4364,18,339,1),(4365,12,345,1),(4366,6,348,1),(4367,19,349,1),(4368,4,351,1),(4369,16,359,1),(4370,21,361,1),(4371,11,362,1),(4372,9,365,1),(4373,16,366,1),(4374,13,367,1),(4375,20,368,1),(4376,3,372,1),(4377,25,373,1),(4378,20,374,1),(4379,18,379,1),(4380,25,380,1),(4381,23,381,1),(4382,11,382,1),(4383,20,383,1),(4384,23,389,1),(4385,4,390,1),(4386,9,393,1),(4387,23,395,1),(4388,8,401,1),(4389,16,402,1),(4390,13,404,1),(4391,9,411,1),(4392,22,413,1),(4393,18,417,1),(4394,14,418,1),(4395,23,422,1),(4396,17,423,1),(4397,20,424,1),(4398,22,425,1),(4399,18,426,1),(4400,4,427,1),(4401,37,429,1),(4402,36,430,1),(4403,6,432,1),(4404,38,435,1),(4405,6,436,1),(4406,8,441,1),(4407,23,442,1),(4408,21,444,1),(4409,24,447,1),(4410,31,448,1),(4411,21,449,1),(4412,20,452,1),(4413,23,453,1),(4414,38,456,1),(4415,8,471,1),(4416,19,473,1),(4417,21,474,1),(4418,11,477,1),(4419,23,479,1),(4420,20,481,1),(4421,13,483,1),(4422,23,484,1),(4423,10,485,1),(4424,14,487,1),(4425,8,493,1),(4426,3,494,1),(4427,22,496,1),(4428,23,497,1),(4429,21,499,1),(4430,7,501,1),(4431,23,502,1),(4432,10,507,1),(4433,10,508,1),(4434,5,509,1),(4435,6,519,1),(4436,25,522,1),(4437,4,523,1),(4438,18,525,1),(4439,3,528,1),(4440,24,529,1),(4441,4,531,1),(4442,24,533,1),(4443,22,539,1),(4444,12,540,1),(4445,21,542,1),(4446,9,545,1),(4447,7,547,1),(4448,37,552,1),(4449,37,554,1),(4450,38,557,1),(4451,37,562,1),(4452,36,567,1),(4453,31,568,1),(4454,37,572,1),(4455,38,575,1),(4456,37,576,1),(4457,36,578,1),(4458,31,579,1),(4459,36,581,1),(4460,38,584,1),(4461,38,587,1),(4462,38,588,1),(4463,38,589,1),(4464,38,590,1),(4465,38,594,1),(4466,36,596,1),(4467,38,598,1),(4468,31,601,1),(4469,38,602,1),(4470,37,607,1),(4471,37,609,1),(4472,31,626,1),(4473,36,627,1),(4474,38,628,1),(4475,31,629,1),(4476,37,630,1),(4477,37,633,1),(4478,36,636,1),(4479,37,641,1),(4480,36,643,1),(4481,37,644,1),(4482,36,648,1),(4483,31,651,1),(4484,36,652,1),(4485,37,653,1),(4486,37,657,1),(4487,38,661,1),(4488,31,664,1),(4489,31,668,1),(4490,38,669,1),(4491,37,674,1),(4492,31,676,1),(4493,38,678,1),(4494,36,679,1),(4495,31,681,1),(4496,36,684,1),(4497,37,685,1),(4498,36,686,1),(4499,37,687,1),(4500,37,705,1),(4501,37,708,1),(4502,31,709,1),(4503,31,715,1),(4504,38,722,1),(4505,36,723,1),(4506,35,728,1),(4507,33,730,1),(4508,34,733,1),(4509,32,734,1),(4510,34,740,1),(4511,34,741,1),(4512,35,742,1),(4513,32,745,1),(4514,34,755,1),(4515,33,756,1),(4516,34,760,1),(4517,32,764,1),(4518,33,769,1),(4519,34,774,1),(4520,33,776,1),(4521,33,780,1),(4522,34,785,1),(4523,35,789,1),(4524,34,791,1),(4525,33,793,1),(4526,32,794,1),(4527,32,795,1),(4528,35,796,1),(4529,33,800,1),(4530,32,803,1),(4531,33,805,1),(4532,40,807,1),(4533,1,808,1),(4767,1,88,1),(4768,40,101,1),(4769,1,134,1),(4770,2,141,1),(4771,1,183,1),(4772,30,205,1),(4773,39,302,1),(4774,2,320,1),(4775,26,417,1),(4776,37,584,1),(4777,38,651,1),(4778,35,760,1),(4779,35,800,1),(4782,10,324,1),(4783,21,325,1),(4784,3,326,1),(4785,15,327,1),(4786,3,328,1),(4787,12,329,1),(4788,7,330,1),(4789,11,331,1),(4790,9,332,1),(4791,11,333,1),(4792,11,334,1),(4793,16,335,1),(4794,14,336,1),(4795,10,337,1),(4796,25,338,1),(4797,20,339,1),(4798,17,340,1),(4799,7,341,1),(4800,13,342,1),(4801,26,343,1),(4802,8,344,1),(4803,21,345,1),(4804,24,346,1),(4805,7,347,1),(4806,5,348,1),(4807,6,349,1),(4808,14,350,1),(4809,10,351,1),(4810,25,352,1),(4811,19,353,1),(4812,9,354,1),(4813,13,355,1),(4814,11,356,1),(4815,7,357,1),(4816,20,358,1),(4817,22,359,1),(4818,21,360,1),(4819,10,361,1),(4820,16,362,1),(4821,5,363,1),(4822,12,364,1),(4823,26,365,1),(4824,13,366,1),(4825,5,367,1),(4826,7,368,1),(4827,6,369,1),(4828,3,370,1),(4829,14,371,1),(4830,15,372,1),(4831,18,373,1),(4832,23,374,1),(4833,14,375,1),(4834,14,376,1),(4835,25,377,1),(4836,5,378,1),(4837,15,379,1),(4838,7,380,1),(4839,25,381,1),(4840,13,382,1),(4841,25,383,1),(4842,4,384,1),(4843,18,385,1),(4844,20,386,1),(4845,16,387,1),(4846,16,388,1),(4847,21,389,1),(4848,19,390,1),(4849,4,391,1),(4850,3,392,1),(4851,23,393,1),(4852,23,394,1),(4853,26,395,1),(4854,20,396,1),(4855,7,397,1),(4856,9,398,1),(4857,6,399,1),(4858,7,400,1),(4859,22,401,1),(4860,5,402,1),(4861,8,403,1),(4862,21,404,1),(4863,17,405,1),(4864,8,406,1),(4865,5,407,1),(4866,3,408,1),(4867,24,409,1),(4868,20,410,1),(4869,16,411,1),(4870,7,412,1),(4871,16,413,1),(4872,11,414,1),(4873,20,415,1),(4874,19,416,1),(4875,11,417,1),(4876,24,418,1),(4877,11,419,1),(4878,26,420,1),(4879,3,421,1),(4880,19,422,1),(4881,15,423,1),(4882,19,424,1),(4883,10,425,1),(4884,13,426,1),(4885,25,427,1),(4886,38,429,1),(4887,38,430,1),(4888,38,431,1),(4889,17,432,1),(4890,37,433,1),(4891,10,434,1),(4892,31,435,1),(4893,17,436,1),(4894,24,437,1),(4895,5,438,1),(4896,21,439,1),(4897,31,440,1),(4898,16,441,1),(4899,25,442,1),(4900,38,443,1),(4901,5,444,1),(4902,31,445,1),(4903,26,446,1),(4904,5,447,1),(4905,37,448,1),(4906,15,449,1),(4907,22,450,1),(4908,15,451,1),(4909,22,452,1),(4910,10,453,1),(4911,9,454,1),(4912,18,455,1),(4913,36,456,1),(4914,24,457,1),(4915,8,458,1),(4916,36,461,1),(4917,36,462,1),(4918,24,465,1),(4919,19,467,1),(4920,23,468,1),(4921,8,469,1),(4922,12,470,1),(4923,18,471,1),(4924,19,472,1),(4925,21,473,1),(4926,24,474,1),(4927,18,475,1),(4928,22,476,1),(4929,9,477,1),(4930,20,478,1),(4931,20,479,1),(4932,8,480,1),(4933,11,481,1),(4934,5,482,1),(4935,4,483,1),(4936,12,484,1),(4937,18,485,1),(4938,3,486,1),(4939,21,487,1),(4940,25,488,1),(4941,18,489,1),(4942,13,490,1),(4943,26,491,1),(4944,11,492,1),(4945,18,493,1),(4946,18,494,1),(4947,12,495,1),(4948,5,496,1),(4949,16,497,1),(4950,14,498,1),(4951,17,499,1),(4952,22,500,1),(4953,12,501,1),(4954,3,502,1),(4955,3,503,1),(4956,20,504,1),(4957,13,505,1),(4958,22,506,1),(4959,7,507,1),(4960,20,508,1),(4961,14,509,1),(4962,7,510,1),(4963,16,511,1),(4964,24,512,1),(4965,24,513,1),(4966,15,514,1),(4967,19,515,1),(4968,25,516,1),(4969,9,517,1),(4970,17,518,1),(4971,18,519,1),(4972,10,520,1),(4973,5,521,1),(4974,5,522,1),(4975,18,523,1),(4976,26,524,1),(4977,6,525,1),(4978,23,526,1),(4979,7,527,1),(4980,12,528,1),(4981,14,529,1),(4982,19,530,1),(4983,6,531,1),(4984,26,532,1),(4985,16,533,1),(4986,14,534,1),(4987,12,535,1),(4988,17,536,1),(4989,21,537,1),(4990,13,538,1),(4991,8,539,1),(4992,13,540,1),(4993,19,541,1),(4994,8,542,1),(4995,18,543,1),(4996,8,544,1),(4997,25,545,1),(4998,20,546,1),(4999,26,547,1),(5000,15,548,1),(5001,19,549,1),(5002,36,550,1),(5003,36,551,1),(5004,31,552,1),(5005,38,553,1),(5006,38,554,1),(5007,38,556,1),(5008,37,557,1),(5009,38,558,1),(5010,31,559,1),(5011,37,560,1),(5012,38,561,1),(5013,38,562,1),(5014,36,563,1),(5015,36,564,1),(5016,37,565,1),(5017,37,566,1),(5018,37,567,1),(5019,36,568,1),(5020,37,569,1),(5021,36,570,1),(5022,36,571,1),(5023,38,572,1),(5024,31,573,1),(5025,37,574,1),(5026,31,575,1),(5027,31,576,1),(5028,37,577,1),(5029,31,578,1),(5030,37,579,1),(5031,36,580,1),(5032,31,581,1),(5033,37,582,1),(5034,38,583,1),(5035,31,584,1),(5036,38,585,1),(5037,36,586,1),(5038,37,587,1),(5039,36,588,1),(5040,37,589,1),(5041,31,590,1),(5042,37,591,1),(5043,31,592,1),(5044,38,593,1),(5045,31,594,1),(5046,31,595,1),(5047,37,596,1),(5048,36,597,1),(5049,36,598,1),(5050,38,599,1),(5051,37,600,1),(5052,37,601,1),(5053,36,602,1),(5054,36,603,1),(5055,31,604,1),(5056,36,605,1),(5057,37,606,1),(5058,31,607,1),(5059,36,608,1),(5060,31,609,1),(5061,37,610,1),(5062,31,611,1),(5063,36,612,1),(5064,31,613,1),(5065,37,614,1),(5066,31,615,1),(5067,37,616,1),(5068,31,617,1),(5069,38,618,1),(5070,36,619,1),(5071,31,620,1),(5072,37,621,1),(5073,38,622,1),(5074,36,623,1),(5075,36,624,1),(5076,31,625,1),(5077,38,626,1),(5078,37,627,1),(5079,31,628,1),(5080,38,629,1),(5081,31,630,1),(5082,36,631,1),(5083,37,632,1),(5084,36,633,1),(5085,37,634,1),(5086,31,635,1),(5087,37,636,1),(5088,31,637,1),(5089,31,638,1),(5090,38,639,1),(5091,38,640,1),(5092,36,641,1),(5093,31,642,1),(5094,37,643,1),(5095,31,644,1),(5096,31,645,1),(5097,38,646,1),(5098,38,647,1),(5099,31,648,1),(5100,31,649,1),(5101,36,650,1),(5102,36,651,1),(5103,31,652,1),(5104,36,653,1),(5105,38,654,1),(5106,31,655,1),(5107,31,656,1),(5108,38,657,1),(5109,38,658,1),(5110,31,659,1),(5111,36,660,1),(5112,31,661,1),(5113,31,662,1),(5114,31,663,1),(5115,37,664,1),(5116,36,665,1),(5117,36,666,1),(5118,37,667,1),(5119,37,668,1),(5120,37,669,1),(5121,36,670,1),(5122,38,671,1),(5123,38,672,1),(5124,37,673,1),(5125,31,674,1),(5126,31,675,1),(5127,36,676,1),(5128,36,677,1),(5129,37,678,1),(5130,37,679,1),(5131,36,680,1),(5132,37,681,1),(5133,38,682,1),(5134,38,683,1),(5135,38,684,1),(5136,31,685,1),(5137,37,686,1),(5138,31,687,1),(5139,31,688,1),(5140,36,689,1),(5141,31,690,1),(5142,38,691,1),(5143,38,703,1),(5144,38,704,1),(5145,36,705,1),(5146,38,706,1),(5147,36,707,1),(5148,36,708,1),(5149,36,709,1),(5150,31,710,1),(5151,37,711,1),(5152,38,712,1),(5153,37,713,1),(5154,31,714,1),(5155,37,715,1),(5156,36,716,1),(5157,31,717,1),(5158,38,718,1),(5159,38,719,1),(5160,36,722,1),(5161,31,723,1),(5162,38,724,1),(5163,31,725,1),(5164,34,727,1),(5165,33,728,1),(5166,34,729,1),(5167,34,730,1),(5168,33,732,1),(5169,35,733,1),(5170,34,734,1),(5171,33,735,1),(5172,35,737,1),(5173,34,738,1),(5174,33,739,1),(5175,32,740,1),(5176,32,741,1),(5177,34,742,1),(5178,33,743,1),(5179,32,744,1),(5180,34,745,1),(5181,32,746,1),(5182,31,748,1),(5183,33,749,1),(5184,32,750,1),(5185,33,751,1),(5186,35,752,1),(5187,33,753,1),(5188,35,754,1),(5189,35,755,1),(5190,35,756,1),(5191,34,757,1),(5192,35,758,1),(5193,34,759,1),(5194,33,760,1),(5195,34,761,1),(5196,35,762,1),(5197,35,763,1),(5198,35,764,1),(5199,32,765,1),(5200,33,766,1),(5201,34,767,1),(5202,32,768,1),(5203,35,769,1),(5204,33,770,1),(5205,35,771,1),(5206,35,772,1),(5207,35,773,1),(5208,32,774,1),(5209,33,775,1),(5210,32,776,1),(5211,35,777,1),(5212,32,778,1),(5213,32,779,1),(5214,34,780,1),(5215,33,781,1),(5216,34,782,1),(5217,32,783,1),(5218,35,784,1),(5219,33,785,1),(5220,33,786,1),(5221,34,787,1),(5222,35,788,1),(5223,32,789,1),(5224,34,790,1),(5225,32,791,1),(5226,32,792,1),(5227,32,793,1),(5228,35,794,1),(5229,35,795,1),(5230,34,796,1),(5231,32,797,1),(5232,32,798,1),(5233,34,799,1),(5234,34,800,1),(5235,33,801,1),(5236,34,802,1),(5237,35,803,1),(5238,35,804,1),(5239,32,805,1),(5293,18,324,1),(5294,9,325,1),(5295,22,326,1),(5296,10,327,1),(5297,20,328,1),(5298,24,329,1),(5299,10,330,1),(5300,20,332,1),(5301,10,333,1),(5302,19,334,1),(5303,20,335,1),(5304,7,336,1),(5305,4,337,1),(5306,12,338,1),(5307,6,339,1),(5308,15,340,1),(5309,25,341,1),(5310,23,342,1),(5311,7,343,1),(5312,21,344,1),(5313,4,345,1),(5314,19,346,1),(5315,18,347,1),(5316,13,348,1),(5317,23,349,1),(5318,26,350,1),(5319,18,351,1),(5320,19,352,1),(5321,7,353,1),(5322,5,354,1),(5323,24,355,1),(5324,21,356,1),(5325,10,357,1),(5326,15,358,1),(5327,13,359,1),(5328,20,360,1),(5329,3,361,1),(5330,19,362,1),(5331,24,363,1),(5332,14,364,1),(5333,11,365,1),(5334,7,366,1),(5335,12,367,1),(5336,13,368,1),(5337,8,369,1),(5338,21,370,1),(5339,8,371,1),(5340,10,372,1),(5341,15,373,1),(5342,14,374,1),(5343,18,375,1),(5344,12,376,1),(5345,22,377,1),(5346,26,378,1),(5347,24,379,1),(5348,14,380,1),(5349,5,381,1),(5350,20,382,1),(5351,24,383,1),(5352,16,384,1),(5353,5,385,1),(5354,14,386,1),(5355,26,387,1),(5356,14,388,1),(5357,16,389,1),(5358,18,390,1),(5359,16,391,1),(5360,7,392,1),(5361,14,393,1),(5362,18,394,1),(5363,14,395,1),(5364,23,396,1),(5365,21,397,1),(5366,13,398,1),(5367,23,399,1),(5368,20,400,1),(5369,9,401,1),(5370,22,402,1),(5371,14,403,1),(5372,14,404,1),(5373,8,405,1),(5374,14,406,1),(5375,7,407,1),(5376,10,408,1),(5377,10,409,1),(5378,14,410,1),(5379,12,411,1),(5380,11,412,1),(5381,18,413,1),(5382,4,414,1),(5383,12,415,1),(5384,24,416,1),(5385,7,418,1),(5386,24,419,1),(5387,13,420,1),(5388,8,421,1),(5389,16,422,1),(5390,25,423,1),(5391,21,424,1),(5392,13,425,1),(5393,16,426,1),(5394,13,427,1),(5395,31,429,1),(5396,31,430,1),(5397,36,431,1),(5398,16,432,1),(5399,38,433,1),(5400,19,434,1),(5401,37,435,1),(5402,20,436,1),(5403,26,437,1),(5404,23,438,1),(5405,19,439,1),(5406,36,440,1),(5407,10,441,1),(5408,20,442,1),(5409,31,443,1),(5410,19,444,1),(5411,37,445,1),(5412,19,446,1),(5413,10,447,1),(5414,36,448,1),(5415,19,449,1),(5416,6,450,1),(5417,24,451,1),(5418,14,452,1),(5419,16,453,1),(5420,3,454,1),(5421,15,455,1),(5422,31,456,1),(5423,3,457,1),(5424,10,458,1),(5425,37,461,1),(5426,31,462,1),(5427,13,465,1),(5428,11,467,1),(5429,8,468,1),(5430,15,469,1),(5431,20,470,1),(5432,11,471,1),(5433,13,472,1),(5434,3,473,1),(5435,26,474,1),(5436,20,475,1),(5437,13,476,1),(5438,7,477,1),(5439,18,478,1),(5440,8,479,1),(5441,25,480,1),(5442,14,481,1),(5443,17,482,1),(5444,21,483,1),(5445,13,484,1),(5446,17,485,1),(5447,26,486,1),(5448,8,487,1),(5449,10,488,1),(5450,10,489,1),(5451,11,490,1),(5452,23,491,1),(5453,12,492,1),(5454,15,493,1),(5455,19,494,1),(5456,17,495,1),(5457,11,496,1),(5458,17,497,1),(5459,15,498,1),(5460,3,499,1),(5461,17,500,1),(5462,23,501,1),(5463,19,502,1),(5464,13,503,1),(5465,6,504,1),(5466,12,505,1),(5467,16,506,1),(5468,17,507,1),(5469,23,508,1),(5470,26,509,1),(5471,13,510,1),(5472,9,511,1),(5473,15,512,1),(5474,21,513,1),(5475,22,514,1),(5476,25,515,1),(5477,17,516,1),(5478,7,517,1),(5479,25,518,1),(5480,24,519,1),(5481,26,520,1),(5482,6,521,1),(5483,9,522,1),(5484,10,523,1),(5485,17,524,1),(5486,23,525,1),(5487,16,526,1),(5488,11,527,1),(5489,23,528,1),(5490,16,529,1),(5491,5,530,1),(5492,24,531,1),(5493,5,532,1),(5494,5,533,1),(5495,22,534,1),(5496,10,535,1),(5497,19,536,1),(5498,13,537,1),(5499,18,538,1),(5500,15,539,1),(5501,5,540,1),(5502,14,541,1),(5503,18,542,1),(5504,25,543,1),(5505,26,544,1),(5506,8,545,1),(5507,17,546,1),(5508,4,547,1),(5509,16,548,1),(5510,9,549,1),(5511,31,550,1),(5512,37,551,1),(5513,36,552,1),(5514,37,553,1),(5515,36,554,1),(5516,36,556,1),(5517,36,557,1),(5518,31,558,1),(5519,37,559,1),(5520,38,560,1),(5521,31,561,1),(5522,31,562,1),(5523,31,563,1),(5524,38,564,1),(5525,36,565,1),(5526,31,566,1),(5527,38,567,1),(5528,37,568,1),(5529,36,569,1),(5530,37,570,1),(5531,38,571,1),(5532,36,572,1),(5533,37,573,1),(5534,38,574,1),(5535,36,575,1),(5536,36,576,1),(5537,36,577,1),(5538,38,578,1),(5539,38,579,1),(5540,37,580,1),(5541,37,581,1),(5542,36,582,1),(5543,37,583,1),(5544,37,585,1),(5545,38,586,1),(5546,31,587,1),(5547,37,588,1),(5548,31,589,1),(5549,37,590,1),(5550,38,591,1),(5551,38,592,1),(5552,36,593,1),(5553,37,594,1),(5554,37,595,1),(5555,31,596,1),(5556,38,597,1),(5557,37,598,1),(5558,31,599,1),(5559,31,600,1),(5560,36,601,1),(5561,37,602,1),(5562,38,603,1),(5563,36,604,1),(5564,38,605,1),(5565,31,606,1),(5566,36,607,1),(5567,31,608,1),(5568,36,609,1),(5569,31,610,1),(5570,36,611,1),(5571,31,612,1),(5572,37,613,1),(5573,31,614,1),(5574,37,615,1),(5575,38,616,1),(5576,36,617,1),(5577,36,618,1),(5578,31,619,1),(5579,38,620,1),(5580,36,621,1),(5581,31,622,1),(5582,31,623,1),(5583,31,624,1),(5584,36,625,1),(5585,37,626,1),(5586,31,627,1),(5587,36,628,1),(5588,37,629,1),(5589,38,630,1),(5590,31,631,1),(5591,38,632,1),(5592,38,633,1),(5593,38,634,1),(5594,38,635,1),(5595,38,636,1),(5596,38,637,1),(5597,37,638,1),(5598,37,639,1),(5599,31,640,1),(5600,38,641,1),(5601,38,642,1),(5602,38,643,1),(5603,38,644,1),(5604,37,645,1),(5605,31,646,1),(5606,36,647,1),(5607,38,648,1),(5608,38,649,1),(5609,38,650,1),(5610,38,652,1),(5611,31,653,1),(5612,36,654,1),(5613,36,655,1),(5614,38,656,1),(5615,36,657,1),(5616,31,658,1),(5617,38,659,1),(5618,38,660,1),(5619,37,661,1),(5620,36,662,1),(5621,36,663,1),(5622,36,664,1),(5623,38,665,1),(5624,31,666,1),(5625,31,667,1),(5626,36,668,1),(5627,36,669,1),(5628,37,670,1),(5629,31,671,1),(5630,31,672,1),(5631,38,673,1),(5632,38,674,1),(5633,37,675,1),(5634,37,676,1),(5635,31,677,1),(5636,31,678,1),(5637,31,679,1),(5638,38,680,1),(5639,38,681,1),(5640,36,682,1),(5641,31,683,1),(5642,31,684,1),(5643,38,685,1),(5644,31,686,1),(5645,36,687,1),(5646,38,688,1),(5647,37,689,1),(5648,38,690,1),(5649,31,691,1),(5650,37,703,1),(5651,37,704,1),(5652,38,705,1),(5653,36,706,1),(5654,31,707,1),(5655,38,708,1),(5656,37,709,1),(5657,38,710,1),(5658,36,711,1),(5659,37,712,1),(5660,31,713,1),(5661,37,714,1),(5662,38,715,1),(5663,37,716,1),(5664,37,717,1),(5665,31,718,1),(5666,31,719,1),(5667,37,722,1),(5668,37,723,1),(5669,36,724,1),(5670,36,725,1),(5671,32,727,1),(5672,32,728,1),(5673,32,729,1),(5674,32,730,1),(5675,34,732,1),(5676,33,733,1),(5677,35,734,1),(5678,32,735,1),(5679,32,737,1),(5680,35,738,1),(5681,35,739,1),(5682,35,740,1),(5683,33,741,1),(5684,32,742,1),(5685,32,743,1),(5686,35,744,1),(5687,33,745,1),(5688,33,746,1),(5689,37,748,1),(5690,35,749,1),(5691,34,750,1),(5692,35,751,1),(5693,34,752,1),(5694,34,753,1),(5695,33,754,1),(5696,33,755,1),(5697,32,756,1),(5698,32,757,1),(5699,32,758,1),(5700,33,759,1),(5701,33,761,1),(5702,33,762,1),(5703,34,763,1),(5704,33,764,1),(5705,34,765,1),(5706,32,766,1),(5707,33,767,1),(5708,33,768,1),(5709,34,769,1),(5710,35,770,1),(5711,33,771,1),(5712,33,772,1),(5713,32,773,1),(5714,35,774,1),(5715,35,775,1),(5716,34,776,1),(5717,32,777,1),(5718,33,778,1),(5719,33,779,1),(5720,35,780,1),(5721,32,781,1),(5722,32,782,1),(5723,33,783,1),(5724,34,784,1),(5725,32,785,1),(5726,35,786,1),(5727,33,787,1),(5728,34,788,1),(5729,33,789,1),(5730,35,790,1),(5731,33,791,1),(5732,35,792,1),(5733,34,793,1),(5734,34,794,1),(5735,33,795,1),(5736,32,796,1),(5737,34,797,1),(5738,35,798,1),(5739,32,799,1),(5740,32,801,1),(5741,33,802,1),(5742,34,803,1),(5743,33,804,1),(5744,34,805,1),(5804,15,324,1),(5805,3,325,1),(5806,16,326,1),(5807,20,329,1),(5808,25,330,1),(5809,11,336,1),(5810,22,338,1),(5811,20,340,1),(5812,9,341,1),(5813,5,342,1),(5814,17,343,1),(5815,4,344,1),(5816,15,346,1),(5817,22,347,1),(5818,4,350,1),(5819,13,352,1),(5820,17,353,1),(5821,26,354,1),(5822,12,355,1),(5823,20,356,1),(5824,13,357,1),(5825,12,358,1),(5826,14,360,1),(5827,18,363,1),(5828,19,364,1),(5829,7,369,1),(5830,8,370,1),(5831,19,371,1),(5832,10,375,1),(5833,11,376,1),(5834,23,377,1),(5835,11,378,1),(5836,17,384,1),(5837,26,385,1),(5838,8,386,1),(5839,20,387,1),(5840,10,388,1),(5841,21,391,1),(5842,6,392,1),(5843,7,394,1),(5844,18,396,1),(5845,3,397,1),(5846,17,398,1),(5847,21,399,1),(5848,8,400,1),(5849,22,403,1),(5850,4,405,1),(5851,25,406,1),(5852,26,407,1),(5853,16,408,1),(5854,18,409,1),(5855,25,410,1),(5856,9,412,1),(5857,23,414,1),(5858,6,415,1),(5859,11,416,1),(5860,21,419,1),(5861,20,420,1),(5862,24,421,1),(5863,37,431,1),(5864,36,433,1),(5865,24,434,1),(5866,6,437,1),(5867,8,438,1),(5868,9,439,1),(5869,38,440,1),(5870,36,443,1),(5871,38,445,1),(5872,4,446,1),(5873,14,450,1),(5874,13,451,1),(5875,11,454,1),(5876,25,455,1),(5877,8,457,1),(5878,4,458,1),(5879,38,461,1),(5880,37,462,1),(5882,9,467,1),(5883,4,468,1),(5884,3,469,1),(5885,17,470,1),(5886,21,472,1),(5887,13,475,1),(5888,4,476,1),(5889,19,478,1),(5890,9,480,1),(5891,22,482,1),(5892,17,486,1),(5893,18,488,1),(5894,21,489,1),(5895,8,490,1),(5896,21,491,1),(5897,5,492,1),(5898,20,495,1),(5899,4,498,1),(5900,24,500,1),(5901,7,503,1),(5902,14,504,1),(5903,20,505,1),(5904,13,506,1),(5905,15,510,1),(5906,15,511,1),(5907,10,512,1),(5908,4,513,1),(5909,4,514,1),(5910,23,515,1),(5911,10,516,1),(5912,6,517,1),(5913,20,518,1),(5914,5,520,1),(5915,3,521,1),(5916,25,524,1),(5917,8,526,1),(5918,15,527,1),(5919,9,530,1),(5920,4,532,1),(5921,24,534,1),(5922,24,535,1),(5923,16,536,1),(5924,24,537,1),(5925,24,538,1),(5926,7,541,1),(5927,14,543,1),(5928,23,544,1),(5929,13,546,1),(5930,24,548,1),(5931,12,549,1),(5932,38,550,1),(5933,31,551,1),(5934,31,553,1),(5935,37,556,1),(5936,37,558,1),(5937,38,559,1),(5938,31,560,1),(5939,37,561,1),(5940,37,563,1),(5941,31,564,1),(5942,31,565,1),(5943,36,566,1),(5944,31,569,1),(5945,38,570,1),(5946,37,571,1),(5947,36,573,1),(5948,36,574,1),(5949,31,577,1),(5950,31,580,1),(5951,31,582,1),(5952,36,583,1),(5953,36,585,1),(5954,37,586,1),(5955,31,591,1),(5956,37,592,1),(5957,37,593,1),(5958,36,595,1),(5959,37,597,1),(5960,36,599,1),(5961,36,600,1),(5962,37,603,1),(5963,38,604,1),(5964,37,605,1),(5965,36,606,1),(5966,37,608,1),(5967,38,610,1),(5968,37,611,1),(5969,38,612,1),(5970,38,613,1),(5971,38,614,1),(5972,36,615,1),(5973,36,616,1),(5974,37,617,1),(5975,37,618,1),(5976,38,619,1),(5977,36,620,1),(5978,31,621,1),(5979,36,622,1),(5980,37,623,1),(5981,37,624,1),(5982,37,625,1),(5983,38,631,1),(5984,36,632,1),(5985,36,634,1),(5986,36,635,1),(5987,37,637,1),(5988,38,638,1),(5989,31,639,1),(5990,37,640,1),(5991,36,642,1),(5992,36,645,1),(5993,37,646,1),(5994,37,647,1),(5995,37,649,1),(5996,31,650,1),(5997,31,654,1),(5998,38,655,1),(5999,36,656,1),(6000,36,658,1),(6001,37,659,1),(6002,31,660,1),(6003,38,662,1),(6004,38,663,1),(6005,31,665,1),(6006,37,666,1),(6007,38,667,1),(6008,38,670,1),(6009,36,671,1),(6010,37,672,1),(6011,36,673,1),(6012,36,675,1),(6013,38,677,1),(6014,31,680,1),(6015,37,682,1),(6016,36,683,1),(6017,37,688,1),(6018,31,689,1),(6019,36,690,1),(6020,37,691,1),(6021,36,703,1),(6022,36,704,1),(6023,37,706,1),(6024,37,707,1),(6025,36,710,1),(6026,38,711,1),(6027,36,712,1),(6028,36,713,1),(6029,36,714,1),(6030,31,716,1),(6031,38,717,1),(6032,37,718,1),(6033,37,719,1),(6034,37,724,1),(6035,37,725,1),(6036,33,727,1),(6037,33,729,1),(6038,35,732,1),(6039,35,735,1),(6040,34,737,1),(6041,32,738,1),(6042,34,739,1),(6043,34,743,1),(6044,33,744,1),(6045,35,746,1),(6046,38,748,1),(6047,32,749,1),(6048,35,750,1),(6049,34,751,1),(6050,32,752,1),(6051,32,753,1),(6052,32,754,1),(6053,33,757,1),(6054,33,758,1),(6055,32,759,1),(6056,35,761,1),(6057,32,762,1),(6058,32,763,1),(6059,35,765,1),(6060,34,766,1),(6061,35,767,1),(6062,35,768,1),(6063,32,770,1),(6064,34,771,1),(6065,34,772,1),(6066,33,773,1),(6067,32,775,1),(6068,33,777,1),(6069,35,778,1),(6070,35,779,1),(6071,35,781,1),(6072,33,782,1),(6073,34,783,1),(6074,32,784,1),(6075,34,786,1),(6076,32,787,1),(6077,32,788,1),(6078,32,790,1),(6079,33,792,1),(6080,33,797,1),(6081,34,798,1),(6082,35,799,1),(6083,34,801,1),(6084,35,802,1),(6085,32,804,1),(6315,2,810,1),(6316,30,810,1),(6317,39,810,1),(6318,1,811,1),(6319,39,811,1),(6320,30,811,1),(6321,2,811,1),(6322,1,812,1),(6323,30,812,1),(6324,40,812,1),(6325,39,812,1),(6336,26,818,1),(6337,5,818,1),(6338,4,818,1),(6339,10,819,1),(6340,18,819,1),(6341,17,819,1),(6342,15,820,1),(6343,22,820,1),(6344,4,820,1),(6345,11,821,1),(6346,21,821,1),(6347,20,821,1),(6348,4,822,1),(6349,10,822,1),(6350,18,822,1),(6351,23,823,1),(6352,25,823,1),(6353,5,823,1),(6354,4,824,1),(6355,16,824,1),(6356,21,824,1),(6357,6,825,1),(6358,23,825,1),(6359,21,825,1),(6360,12,826,1),(6361,24,826,1),(6362,20,826,1),(6363,3,829,1),(6364,22,829,1),(6365,16,829,1),(6366,7,830,1),(6367,10,830,1),(6368,25,830,1),(6369,8,831,1),(6370,22,831,1),(6371,9,831,1),(6372,25,832,1),(6373,7,832,1),(6374,14,832,1),(6375,14,833,1),(6376,26,833,1),(6377,4,833,1),(6378,19,834,1),(6379,7,834,1),(6380,17,834,1),(6381,3,835,1),(6382,13,835,1),(6383,7,835,1),(6384,13,836,1),(6385,4,836,1),(6386,21,836,1),(6387,11,837,1),(6388,9,837,1),(6389,7,837,1),(6540,1,903,1),(6541,30,903,1),(6542,40,903,1),(6543,39,903,1),(6544,30,904,1),(6545,2,904,1),(6546,39,904,1),(6547,1,905,1),(6548,39,905,1),(6549,2,905,1),(6550,37,906,1),(6551,38,906,1),(6552,31,906,1),(6553,37,907,1),(6554,31,907,1),(6555,36,907,1),(6556,37,908,1),(6557,31,908,1),(6558,38,908,1),(6559,36,909,1),(6560,31,909,1),(6561,37,909,1),(6562,37,910,1),(6563,36,910,1),(6564,38,910,1),(6565,31,911,1),(6566,37,911,1),(6567,38,911,1),(6568,38,912,1),(6569,37,912,1),(6570,36,912,1),(6571,37,913,1),(6572,38,913,1),(6573,36,913,1),(6574,38,914,1),(6575,37,914,1),(6576,31,914,1),(6577,38,915,1),(6578,31,915,1),(6579,37,915,1),(6580,36,916,1),(6581,31,916,1),(6582,37,916,1),(6583,38,917,1),(6584,37,917,1),(6585,36,917,1),(6586,31,918,1),(6587,36,918,1),(6588,37,918,1),(6589,37,919,1),(6590,31,919,1),(6591,36,919,1),(6592,37,920,1),(6593,36,920,1),(6594,31,920,1),(6595,38,921,1),(6596,36,921,1),(6597,37,921,1),(6598,37,922,1),(6599,38,922,1),(6600,31,922,1),(6601,34,923,1),(6602,32,923,1),(6603,33,923,1),(6604,35,924,1),(6605,33,924,1),(6606,32,924,1),(6607,33,925,1),(6608,34,925,1),(6609,35,925,1),(6610,35,926,1),(6611,34,926,1),(6612,32,926,1),(6613,35,927,1),(6614,32,927,1),(6615,33,927,1),(6616,34,928,1),(6617,32,928,1),(6618,33,928,1),(6619,33,929,1),(6620,35,929,1),(6621,32,929,1),(6622,33,930,1),(6623,32,930,1),(6624,34,930,1),(6625,34,931,1),(6626,33,931,1),(6627,32,931,1),(6628,35,932,1),(6629,34,932,1),(6630,32,932,1),(6631,34,933,1),(6632,35,933,1),(6633,32,933,1),(6634,33,934,1),(6635,32,934,1),(6636,34,934,1),(6637,35,935,1),(6638,34,935,1),(6639,32,935,1),(6640,34,936,1),(6641,33,936,1),(6642,35,936,1),(6643,35,937,1),(6644,32,937,1),(6645,33,937,1),(6646,35,938,1),(6647,34,938,1),(6648,32,938,1),(6649,35,939,1),(6650,34,939,1),(6651,32,939,1),(6652,33,940,1),(6653,35,940,1),(6654,32,940,1),(6655,33,941,1),(6656,32,941,1),(6657,34,941,1),(6658,35,942,1),(6659,34,942,1),(6660,32,942,1),(6661,34,943,1),(6662,35,943,1),(6663,32,943,1),(6664,35,944,1),(6665,34,944,1),(6666,32,944,1),(6667,32,945,1),(6668,35,945,1),(6669,33,945,1),(6670,34,946,1),(6671,33,946,1),(6672,35,946,1),(6673,33,947,1),(6674,35,947,1),(6675,32,947,1),(6676,34,948,1),(6677,32,948,1),(6678,33,948,1),(6679,34,949,1),(6680,32,949,1),(6681,33,949,1),(6682,33,950,1),(6683,34,950,1),(6684,35,950,1),(6685,34,951,1),(6686,32,951,1),(6687,33,951,1),(6688,33,952,1),(6689,34,952,1),(6690,32,952,1),(6691,34,953,1),(6692,35,953,1),(6693,32,953,1),(6694,34,954,1),(6695,35,954,1),(6696,32,954,1),(6697,35,955,1),(6698,34,955,1),(6699,32,955,1),(6700,33,956,1),(6701,32,956,1),(6702,34,956,1),(6703,32,957,1),(6704,35,957,1),(6705,33,957,1),(6706,34,958,1),(6707,32,958,1),(6708,35,958,1),(6709,34,959,1),(6710,32,959,1),(6711,35,959,1),(6712,34,960,1),(6713,32,960,1),(6714,33,960,1),(6715,34,961,1),(6716,33,961,1),(6717,35,961,1),(6718,34,962,1),(6719,32,962,1),(6720,33,962,1),(6721,35,963,1),(6722,34,963,1),(6723,32,963,1),(6724,33,964,1),(6725,35,964,1),(6726,32,964,1),(6727,24,965,1),(6728,13,965,1),(6729,12,965,1),(6730,23,966,1),(6731,8,966,1),(6732,4,966,1),(6733,12,967,1),(6734,20,967,1),(6735,17,967,1),(6736,19,968,1),(6737,13,968,1),(6738,21,968,1),(6739,7,969,1),(6740,18,969,1),(6741,22,969,1),(6742,14,970,1),(6743,12,970,1),(6744,11,970,1),(6745,16,971,1),(6746,5,971,1),(6747,22,971,1),(6748,3,972,1),(6749,10,972,1),(6750,16,972,1),(6751,10,973,1),(6752,18,973,1),(6753,15,973,1),(6754,8,974,1),(6755,15,974,1),(6756,3,974,1),(6757,13,975,1),(6758,4,975,1),(6759,21,975,1),(6760,14,976,1),(6761,15,976,1),(6762,4,976,1),(6763,9,977,1),(6764,7,977,1),(6765,6,977,1),(6766,20,978,1),(6767,6,978,1),(6768,14,978,1),(6769,20,979,1),(6770,15,979,1),(6771,12,979,1),(6772,20,980,1),(6773,14,980,1),(6774,8,980,1),(6775,5,981,1),(6776,23,981,1),(6777,8,981,1),(6778,21,982,1),(6779,9,982,1),(6780,3,982,1),(6781,12,465,1),(6782,2,983,1),(6783,30,983,1),(6784,39,983,1),(6785,2,984,1),(6786,40,984,1),(6787,30,984,1),(6788,8,985,1),(6789,22,985,1),(6790,9,985,1),(6792,1,986,1),(6793,30,986,1),(6794,40,986,1),(6795,39,986,1),(6796,30,987,1),(6797,2,987,1),(6798,1,987,1),(6799,30,988,1),(6800,2,988,1),(6801,40,988,1);

/*Table structure for table `qgroup_content_map` */

DROP TABLE IF EXISTS `qgroup_content_map`;

CREATE TABLE `qgroup_content_map` (
  `qgroup_content_map_id` int(11) NOT NULL AUTO_INCREMENT,
  `question_group_id` int(11) DEFAULT NULL,
  `course_content_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`qgroup_content_map_id`),
  KEY `fk_course_contents_in_the_mapping_with_question_group` (`course_content_id`),
  KEY `fk_question_group_in_the_mapping_with_course_content` (`question_group_id`),
  CONSTRAINT `fk_course_contents_in_the_mapping_with_question_group` FOREIGN KEY (`course_content_id`) REFERENCES `course_content` (`course_content_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_question_group_in_the_mapping_with_course_content` FOREIGN KEY (`question_group_id`) REFERENCES `question_group` (`question_group_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=49 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `qgroup_content_map` */

insert  into `qgroup_content_map`(`qgroup_content_map_id`,`question_group_id`,`course_content_id`) values (1,1,4),(2,2,4),(3,3,4),(4,4,4),(5,1,5),(6,2,5),(7,1,6),(8,2,6),(9,3,7),(10,4,7),(11,3,8),(12,4,8),(15,1,2),(16,2,2),(17,3,2),(18,4,2),(19,1,3),(20,2,3),(21,3,3),(22,4,3),(23,1,14),(24,2,14),(25,3,14),(26,4,14),(27,1,11),(28,3,13),(29,3,18),(30,3,16),(31,4,17),(32,1,7),(33,1,8),(36,1,18),(37,3,17),(38,2,18),(39,6,4),(40,6,11),(41,6,18),(42,6,3),(43,6,7),(44,6,16),(45,6,6),(46,6,13),(47,6,14),(48,6,8);

/*Table structure for table `qgroup_question_map` */

DROP TABLE IF EXISTS `qgroup_question_map`;

CREATE TABLE `qgroup_question_map` (
  `qgroup_question_map_id` int(11) NOT NULL AUTO_INCREMENT,
  `question_group_id` int(11) DEFAULT NULL,
  `question_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`qgroup_question_map_id`),
  KEY `fk_qgroup_in_the_mapping_with_question` (`question_group_id`),
  KEY `fk_question_in_the_mapping_with_question_group` (`question_id`),
  CONSTRAINT `fk_qgroup_in_the_mapping_with_question` FOREIGN KEY (`question_group_id`) REFERENCES `question_group` (`question_group_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_question_in_the_mapping_with_question_group` FOREIGN KEY (`question_id`) REFERENCES `question` (`question_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=238 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `qgroup_question_map` */

insert  into `qgroup_question_map`(`qgroup_question_map_id`,`question_group_id`,`question_id`) values (1,1,53),(2,1,54),(3,1,55),(4,1,56),(5,4,56),(6,2,57),(7,2,58),(8,2,59),(9,2,60),(10,2,61),(11,2,62),(12,3,64),(13,3,65),(14,4,66),(15,3,55),(16,3,56),(17,4,57),(18,4,59),(19,3,60),(20,4,61),(21,4,62),(22,2,63),(23,2,64),(24,4,65),(25,1,66),(26,3,67),(27,1,68),(28,2,53),(29,3,54),(30,3,61),(31,6,53),(32,6,54),(33,6,55),(34,6,56),(35,6,57),(36,6,58),(37,6,59),(38,6,60),(39,6,61),(40,6,62),(41,6,63),(42,6,64),(43,6,65),(44,6,66),(45,6,67),(46,6,68),(47,6,69),(48,6,70),(49,6,71),(50,6,72),(51,6,73),(52,6,74),(53,6,75),(54,6,76),(55,6,77),(56,6,78),(57,6,79),(58,6,80),(59,6,81),(60,6,82),(61,6,83),(62,6,84),(63,6,85),(64,6,86),(65,6,87),(66,6,88),(67,6,89),(68,6,90),(69,6,91),(70,6,92),(71,6,93),(72,6,94),(73,6,95),(74,6,96),(75,6,97),(76,6,98),(77,6,99),(78,6,100),(79,6,101),(80,6,102),(81,6,103),(82,6,104),(83,6,105),(84,6,106),(85,6,107),(86,6,108),(87,6,109),(88,6,110),(89,6,111),(90,6,112),(91,6,113),(92,6,114),(93,6,115),(94,6,116),(95,6,117),(96,6,118),(97,6,119),(98,6,120),(99,6,121),(100,6,122),(101,6,123),(102,6,124),(103,6,125),(104,6,126),(105,6,133),(106,6,134),(107,6,135),(108,6,136),(109,6,137),(110,6,138),(111,6,139),(112,6,140),(113,6,141),(114,6,142),(115,6,143),(116,6,144),(117,6,145),(118,6,146),(119,6,147),(120,6,148),(121,6,149),(122,6,150),(123,6,151),(124,6,152),(125,6,153),(126,6,154),(127,6,155),(128,6,156),(129,6,157),(130,6,158),(131,6,159),(132,6,160),(133,6,161),(134,6,162),(135,6,163),(136,6,164),(137,6,165),(138,6,166),(139,6,167),(140,6,168),(141,6,169),(142,6,170),(143,6,171),(144,6,172),(145,6,173),(146,6,174),(147,6,175),(148,6,176),(149,6,177),(150,6,178),(151,6,179),(152,6,180),(153,6,181),(154,6,182),(155,6,183),(156,6,184),(157,6,185),(158,6,186),(159,6,187),(160,6,188),(161,6,189),(162,6,190),(163,6,191),(164,6,192),(165,6,193),(166,6,194),(167,6,195),(168,6,196),(169,6,197),(170,6,198),(171,6,199),(172,6,200),(173,6,201),(174,6,202),(175,6,203),(176,6,204),(177,6,205),(178,6,206),(179,6,207),(180,6,208),(181,6,209),(182,6,210),(183,6,211),(184,6,212),(185,6,213),(186,6,214),(187,6,215),(188,6,216),(189,6,217),(190,6,218),(191,6,219),(192,6,220),(193,6,221),(194,6,222),(195,6,223),(196,6,224),(197,6,225),(198,6,226),(199,6,227),(200,6,228),(201,6,229),(202,6,230),(203,6,231),(204,6,232),(205,6,233),(206,6,234),(207,6,236),(208,6,237),(209,6,238),(210,6,239),(211,6,240),(212,6,241),(213,6,242),(214,6,243),(215,6,244),(216,6,245),(217,6,246),(218,6,247),(219,6,248),(220,6,249),(221,6,250),(222,6,251),(223,6,252),(224,6,253),(225,6,254),(226,6,255),(227,6,256),(228,6,257),(229,6,258),(230,6,259),(231,6,260),(232,6,261),(233,6,262),(234,6,263),(235,6,264),(236,6,265),(237,6,266);

/*Table structure for table `qgroup_topic_map` */

DROP TABLE IF EXISTS `qgroup_topic_map`;

CREATE TABLE `qgroup_topic_map` (
  `qgroup_topic_map_id` int(11) NOT NULL AUTO_INCREMENT,
  `question_group_id` int(11) DEFAULT NULL,
  `topic_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`qgroup_topic_map_id`),
  KEY `fk_question_group_in_the_mapping_with_topic` (`question_group_id`),
  KEY `fk_topic_in_the_mapping_with_question_group` (`topic_id`),
  CONSTRAINT `fk_question_group_in_the_mapping_with_topic` FOREIGN KEY (`question_group_id`) REFERENCES `question_group` (`question_group_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_topic_in_the_mapping_with_question_group` FOREIGN KEY (`topic_id`) REFERENCES `topic` (`topic_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `qgroup_topic_map` */

/*Table structure for table `qsolution` */

DROP TABLE IF EXISTS `qsolution`;

CREATE TABLE `qsolution` (
  `qsolution_id` int(11) NOT NULL AUTO_INCREMENT,
  `question_id` int(11) NOT NULL,
  PRIMARY KEY (`qsolution_id`),
  KEY `fk_question_in_the_solution` (`question_id`),
  CONSTRAINT `fk_question_in_the_solution` FOREIGN KEY (`question_id`) REFERENCES `question` (`question_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=1036 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `qsolution` */

insert  into `qsolution`(`qsolution_id`,`question_id`) values (53,53),(54,54),(66,55),(56,56),(57,57),(67,58),(74,59),(61,60),(62,61),(63,62),(68,63),(71,64),(77,65),(76,66),(78,67),(79,68),(80,69),(84,70),(85,71),(86,72),(87,73),(89,74),(90,75),(91,76),(93,77),(94,78),(95,79),(96,80),(134,81),(98,82),(99,83),(100,84),(101,85),(102,86),(103,87),(104,88),(105,89),(106,90),(107,91),(108,92),(109,93),(110,94),(111,95),(112,96),(113,97),(114,98),(115,99),(116,100),(117,101),(118,102),(119,103),(120,104),(121,105),(122,106),(123,107),(124,108),(125,109),(126,110),(127,111),(128,112),(129,113),(130,114),(131,115),(132,116),(133,117),(135,118),(136,119),(137,120),(138,121),(139,122),(140,123),(141,124),(142,125),(143,126),(144,127),(145,128),(146,129),(147,130),(148,131),(149,132),(150,133),(151,134),(152,135),(153,136),(154,137),(156,138),(157,139),(158,140),(159,141),(160,142),(161,143),(162,144),(163,145),(164,146),(165,147),(166,148),(167,149),(168,150),(169,151),(170,152),(171,153),(172,154),(173,155),(174,156),(175,157),(176,158),(177,159),(178,160),(179,161),(180,162),(181,163),(182,164),(183,165),(184,166),(185,167),(186,168),(187,169),(188,170),(189,171),(190,172),(191,173),(192,174),(193,175),(194,176),(195,177),(196,178),(197,179),(198,180),(199,181),(200,182),(201,183),(202,184),(203,185),(204,186),(205,187),(206,188),(207,189),(208,190),(209,191),(210,192),(211,193),(212,194),(213,195),(214,196),(215,197),(216,198),(217,199),(218,200),(219,201),(221,202),(222,203),(223,204),(227,205),(231,206),(233,207),(235,208),(237,209),(239,210),(240,211),(241,212),(242,213),(243,214),(246,215),(247,216),(249,217),(250,218),(252,219),(253,220),(254,221),(255,222),(257,223),(259,224),(260,225),(261,226),(262,227),(263,228),(264,229),(265,230),(267,231),(269,232),(271,233),(275,234),(276,236),(277,237),(278,238),(279,239),(280,240),(281,241),(282,242),(283,243),(284,244),(285,245),(286,246),(287,247),(288,248),(289,249),(290,250),(291,251),(292,252),(293,253),(294,254),(295,255),(296,256),(297,257),(298,258),(299,259),(300,260),(301,261),(302,262),(303,263),(304,264),(305,265),(306,266),(307,267),(308,268),(309,269),(310,270),(311,271),(312,272),(313,273),(314,274),(315,275),(316,276),(317,277),(318,278),(319,279),(320,280),(321,281),(322,282),(323,283),(324,284),(325,285),(326,286),(327,287),(328,288),(329,289),(330,290),(331,291),(332,292),(333,293),(334,294),(335,295),(336,296),(337,297),(338,298),(339,299),(340,300),(341,301),(342,302),(343,303),(344,304),(345,305),(346,306),(347,307),(348,308),(349,309),(350,310),(351,311),(352,312),(353,313),(354,314),(355,315),(356,316),(357,317),(358,318),(359,319),(360,320),(361,321),(362,322),(363,323),(364,324),(365,325),(366,326),(367,327),(368,328),(369,329),(370,330),(371,331),(372,332),(373,333),(374,334),(375,335),(376,336),(377,337),(378,338),(379,339),(380,340),(381,341),(382,342),(383,343),(384,344),(385,345),(386,346),(387,347),(388,348),(389,349),(390,350),(391,351),(392,352),(393,353),(394,354),(395,355),(396,356),(397,357),(398,358),(399,359),(400,360),(401,361),(402,362),(403,363),(404,364),(405,365),(406,366),(407,367),(408,368),(409,369),(410,370),(411,371),(412,372),(413,373),(414,374),(415,375),(416,376),(417,377),(418,378),(419,379),(420,380),(421,381),(422,382),(423,383),(424,384),(425,385),(426,386),(427,387),(428,388),(429,389),(430,390),(431,391),(432,392),(433,393),(434,394),(435,395),(436,396),(437,397),(438,398),(439,399),(440,400),(441,401),(442,402),(443,403),(444,404),(445,405),(446,406),(447,407),(448,408),(449,409),(450,410),(451,411),(452,412),(453,413),(454,414),(455,415),(456,416),(457,417),(458,418),(459,419),(460,420),(461,421),(462,422),(463,423),(464,424),(465,425),(466,426),(467,427),(470,428),(469,429),(471,430),(472,431),(473,432),(474,433),(475,434),(476,435),(477,436),(478,437),(479,438),(480,439),(481,440),(482,441),(483,442),(484,443),(485,444),(486,445),(487,446),(488,447),(489,448),(490,449),(491,450),(492,451),(493,452),(494,453),(495,454),(496,455),(497,456),(498,457),(499,458),(502,461),(503,462),(773,464),(867,465),(868,467),(869,468),(870,469),(511,470),(512,471),(513,472),(871,473),(872,474),(873,475),(517,476),(518,477),(519,478),(520,479),(521,480),(874,481),(523,482),(524,483),(525,484),(526,485),(527,486),(528,487),(529,488),(530,489),(531,490),(532,491),(533,492),(534,493),(535,494),(536,495),(537,496),(538,497),(539,498),(540,499),(541,500),(542,501),(543,502),(544,503),(545,504),(546,505),(547,506),(548,507),(549,508),(550,509),(551,510),(552,511),(553,512),(554,513),(555,514),(556,515),(557,516),(558,517),(559,518),(560,519),(561,520),(562,521),(563,522),(564,523),(565,524),(566,525),(567,526),(568,527),(569,528),(570,529),(876,530),(572,531),(573,532),(574,533),(875,534),(576,535),(577,536),(578,537),(579,538),(580,539),(581,540),(582,541),(583,542),(584,543),(585,544),(586,545),(587,546),(588,547),(589,548),(590,549),(591,550),(592,551),(593,552),(594,553),(595,554),(772,555),(597,556),(598,557),(599,558),(600,559),(601,560),(602,561),(603,562),(604,563),(605,564),(606,565),(607,566),(608,567),(609,568),(610,569),(611,570),(612,571),(613,572),(614,573),(615,574),(616,575),(617,576),(618,577),(619,578),(620,579),(621,580),(622,581),(623,582),(624,583),(625,584),(626,585),(627,586),(628,587),(629,588),(630,589),(631,590),(632,591),(633,592),(634,593),(635,594),(636,595),(637,596),(638,597),(639,598),(640,599),(641,600),(642,601),(643,602),(644,603),(645,604),(646,605),(647,606),(648,607),(649,608),(650,609),(651,610),(652,611),(653,612),(654,613),(655,614),(656,615),(657,616),(658,617),(659,618),(660,619),(661,620),(662,621),(663,622),(664,623),(665,624),(666,625),(667,626),(668,627),(669,628),(670,629),(671,630),(672,631),(673,632),(674,633),(675,634),(676,635),(677,636),(678,637),(679,638),(680,639),(681,640),(682,641),(683,642),(684,643),(685,644),(686,645),(687,646),(688,647),(689,648),(690,649),(691,650),(692,651),(693,652),(694,653),(695,654),(696,655),(697,656),(698,657),(699,658),(700,659),(701,660),(702,661),(703,662),(704,663),(705,664),(706,665),(707,666),(708,667),(709,668),(710,669),(711,670),(712,671),(713,672),(714,673),(715,674),(716,675),(717,676),(718,677),(719,678),(720,679),(721,680),(722,681),(723,682),(724,683),(725,684),(726,685),(727,686),(728,687),(729,688),(730,689),(731,690),(732,691),(761,692),(762,693),(763,694),(764,695),(765,696),(766,697),(767,698),(768,699),(769,700),(770,701),(771,702),(744,703),(745,704),(746,705),(747,706),(748,707),(749,708),(750,709),(751,710),(752,711),(753,712),(754,713),(755,714),(756,715),(757,716),(758,717),(759,718),(760,719),(775,721),(777,722),(779,723),(781,724),(782,725),(784,726),(785,727),(786,728),(787,729),(788,730),(790,731),(791,732),(792,733),(793,734),(794,735),(796,736),(797,737),(798,738),(799,739),(800,740),(801,741),(802,742),(803,743),(804,744),(805,745),(806,746),(808,747),(809,748),(810,749),(811,750),(812,751),(813,752),(814,753),(815,754),(816,755),(817,756),(818,757),(819,758),(820,759),(821,760),(822,761),(823,762),(824,763),(825,764),(826,765),(827,766),(828,767),(829,768),(830,769),(831,770),(832,771),(833,772),(834,773),(835,774),(836,775),(837,776),(838,777),(839,778),(840,779),(841,780),(842,781),(843,782),(844,783),(845,784),(846,785),(847,786),(848,787),(849,788),(850,789),(851,790),(852,791),(853,792),(854,793),(855,794),(856,795),(857,796),(858,797),(859,798),(860,799),(861,800),(862,801),(863,802),(864,803),(865,804),(866,805),(877,806),(878,807),(879,808),(880,809),(881,810),(882,811),(883,812),(887,818),(888,819),(889,820),(890,821),(891,822),(892,823),(893,824),(894,825),(895,826),(896,829),(897,830),(898,831),(899,832),(900,833),(901,834),(902,835),(903,836),(904,837),(950,903),(951,904),(952,905),(953,906),(954,907),(955,908),(956,909),(957,910),(958,911),(959,912),(960,913),(961,914),(962,915),(963,916),(964,917),(965,918),(966,919),(967,920),(968,921),(969,922),(970,923),(971,924),(972,925),(973,926),(974,927),(975,928),(976,929),(977,930),(978,931),(979,932),(980,933),(981,934),(982,935),(983,936),(984,937),(985,938),(986,939),(987,940),(988,941),(989,942),(990,943),(991,944),(992,945),(993,946),(994,947),(995,948),(996,949),(997,950),(998,951),(999,952),(1000,953),(1001,954),(1002,955),(1003,956),(1004,957),(1005,958),(1006,959),(1007,960),(1008,961),(1009,962),(1010,963),(1011,964),(1012,965),(1013,966),(1014,967),(1015,968),(1016,969),(1017,970),(1018,971),(1019,972),(1020,973),(1021,974),(1022,975),(1023,976),(1024,977),(1025,978),(1026,979),(1027,980),(1028,981),(1029,982),(1030,983),(1031,984),(1032,985),(1033,986),(1034,987),(1035,988);

/*Table structure for table `qsolution_component` */

DROP TABLE IF EXISTS `qsolution_component`;

CREATE TABLE `qsolution_component` (
  `qsolution_component_id` int(11) NOT NULL AUTO_INCREMENT,
  `qsolution_id` int(11) DEFAULT NULL,
  `curr_item_id` int(11) DEFAULT NULL,
  `next_item_id` int(11) DEFAULT NULL,
  `fill_element_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`qsolution_component_id`),
  KEY `fk_component_of_the_solution` (`qsolution_id`),
  KEY `fk_current_item_of_question_solution` (`curr_item_id`),
  KEY `fk_next_item_of_the_question_solution` (`next_item_id`),
  KEY `fill_element_id` (`fill_element_id`),
  CONSTRAINT `fk_component_of_the_solution` FOREIGN KEY (`qsolution_id`) REFERENCES `qsolution` (`qsolution_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_current_item_of_question_solution` FOREIGN KEY (`curr_item_id`) REFERENCES `question_item` (`item_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_next_item_of_the_question_solution` FOREIGN KEY (`next_item_id`) REFERENCES `question_item` (`item_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `qsolution_component_ibfk_1` FOREIGN KEY (`fill_element_id`) REFERENCES `fillable_element` (`fillable_element_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=1180 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `qsolution_component` */

insert  into `qsolution_component`(`qsolution_component_id`,`qsolution_id`,`curr_item_id`,`next_item_id`,`fill_element_id`) values (68,53,160,NULL,NULL),(69,53,163,NULL,NULL),(70,54,164,170,NULL),(71,54,165,171,NULL),(72,54,166,169,NULL),(73,54,167,168,NULL),(76,56,174,NULL,NULL),(77,56,175,NULL,NULL),(78,56,176,NULL,NULL),(79,56,177,NULL,NULL),(80,57,178,NULL,NULL),(81,57,181,NULL,NULL),(88,61,188,NULL,NULL),(89,61,191,NULL,NULL),(90,62,192,NULL,65),(91,63,193,NULL,66),(92,66,196,NULL,69),(93,67,197,NULL,72),(94,68,198,NULL,NULL),(95,68,199,NULL,NULL),(96,68,200,NULL,NULL),(97,68,201,NULL,NULL),(100,71,205,NULL,76),(101,71,206,NULL,77),(104,74,209,NULL,89),(106,76,214,NULL,NULL),(107,77,221,NULL,NULL),(108,78,223,NULL,NULL),(109,79,229,NULL,NULL),(110,80,230,NULL,NULL),(111,80,231,NULL,NULL),(115,84,237,NULL,106),(116,85,240,NULL,NULL),(117,86,245,NULL,NULL),(118,87,247,NULL,NULL),(119,87,248,NULL,NULL),(120,87,249,NULL,NULL),(121,87,250,NULL,NULL),(122,87,251,NULL,NULL),(128,89,257,NULL,NULL),(129,89,258,NULL,NULL),(130,89,259,NULL,NULL),(131,89,260,NULL,NULL),(132,89,261,NULL,NULL),(133,89,262,NULL,NULL),(134,90,263,NULL,NULL),(135,91,268,NULL,NULL),(138,93,276,NULL,NULL),(139,94,281,NULL,NULL),(140,95,283,NULL,NULL),(141,96,287,NULL,NULL),(143,98,296,NULL,NULL),(144,99,299,NULL,NULL),(145,100,305,NULL,NULL),(146,101,308,NULL,NULL),(147,102,312,NULL,NULL),(148,103,318,NULL,NULL),(149,104,319,NULL,NULL),(150,105,326,NULL,NULL),(151,106,328,NULL,NULL),(152,107,333,NULL,NULL),(153,108,335,NULL,NULL),(154,109,341,NULL,NULL),(155,110,345,NULL,NULL),(156,111,347,NULL,NULL),(157,112,352,NULL,NULL),(158,113,357,NULL,NULL),(159,114,359,NULL,NULL),(160,115,364,NULL,NULL),(161,116,368,NULL,NULL),(162,117,371,NULL,NULL),(163,118,377,NULL,NULL),(164,119,381,NULL,NULL),(165,120,385,NULL,NULL),(166,121,388,NULL,NULL),(167,122,393,NULL,NULL),(168,123,398,NULL,NULL),(169,124,401,NULL,NULL),(170,125,404,NULL,NULL),(171,126,409,NULL,NULL),(172,127,411,NULL,NULL),(173,128,417,NULL,NULL),(174,129,419,NULL,NULL),(175,130,425,NULL,NULL),(176,131,427,NULL,NULL),(177,132,433,NULL,NULL),(178,133,435,NULL,NULL),(179,134,440,NULL,NULL),(180,135,443,NULL,NULL),(181,136,449,NULL,NULL),(182,137,453,NULL,NULL),(183,138,456,NULL,NULL),(184,139,460,NULL,NULL),(185,140,463,NULL,NULL),(186,141,469,NULL,NULL),(187,142,472,NULL,NULL),(188,143,478,NULL,NULL),(189,144,479,NULL,NULL),(190,145,484,NULL,NULL),(191,146,487,NULL,NULL),(192,147,493,NULL,NULL),(193,148,497,NULL,NULL),(194,149,500,NULL,NULL),(195,150,505,NULL,NULL),(196,151,509,NULL,NULL),(197,152,511,NULL,NULL),(198,153,516,NULL,NULL),(199,154,519,NULL,NULL),(201,156,530,NULL,NULL),(202,157,531,NULL,NULL),(203,158,537,NULL,NULL),(204,159,539,NULL,NULL),(205,160,544,NULL,NULL),(206,161,550,NULL,NULL),(207,162,553,NULL,NULL),(208,163,555,NULL,NULL),(209,164,559,NULL,NULL),(210,165,566,NULL,NULL),(211,166,570,NULL,NULL),(212,167,571,NULL,NULL),(213,168,576,NULL,NULL),(214,169,582,NULL,NULL),(215,170,583,NULL,NULL),(216,171,589,NULL,NULL),(217,172,591,NULL,NULL),(218,173,597,NULL,NULL),(219,174,601,NULL,NULL),(220,175,603,NULL,NULL),(221,176,610,NULL,NULL),(222,177,613,NULL,NULL),(223,178,618,NULL,NULL),(224,179,620,NULL,NULL),(225,180,623,NULL,NULL),(226,181,628,NULL,NULL),(227,182,633,NULL,NULL),(228,183,637,NULL,NULL),(229,184,642,NULL,NULL),(230,185,645,NULL,NULL),(231,186,647,NULL,NULL),(232,187,652,NULL,NULL),(233,188,657,NULL,NULL),(234,189,659,NULL,NULL),(235,190,666,NULL,NULL),(236,191,669,NULL,NULL),(237,192,671,NULL,NULL),(238,193,676,NULL,NULL),(239,194,682,NULL,NULL),(240,195,685,NULL,NULL),(241,196,689,NULL,NULL),(242,197,691,NULL,NULL),(243,198,696,NULL,NULL),(244,199,699,NULL,NULL),(245,200,704,NULL,NULL),(246,201,707,NULL,NULL),(247,202,713,NULL,NULL),(248,203,715,NULL,NULL),(249,204,722,NULL,NULL),(250,205,726,NULL,NULL),(251,206,729,NULL,NULL),(252,207,733,NULL,NULL),(253,208,735,NULL,NULL),(254,209,739,NULL,NULL),(255,210,744,NULL,NULL),(256,211,749,NULL,NULL),(257,212,751,NULL,NULL),(258,213,756,NULL,NULL),(259,214,759,NULL,NULL),(260,215,766,NULL,NULL),(261,216,767,NULL,NULL),(262,217,771,NULL,NULL),(263,218,776,NULL,NULL),(264,219,779,NULL,NULL),(267,221,787,NULL,NULL),(268,222,792,NULL,NULL),(269,223,797,NULL,NULL),(273,227,812,NULL,NULL),(277,231,828,NULL,NULL),(280,233,837,NULL,NULL),(283,235,845,NULL,NULL),(286,237,851,NULL,NULL),(289,239,859,NULL,NULL),(290,240,863,NULL,NULL),(291,241,867,NULL,NULL),(292,242,872,NULL,NULL),(293,243,877,NULL,NULL),(296,246,890,NULL,NULL),(297,247,892,NULL,NULL),(300,249,902,NULL,NULL),(301,250,904,NULL,NULL),(304,252,913,NULL,NULL),(305,253,917,NULL,NULL),(306,254,920,NULL,NULL),(307,255,925,NULL,NULL),(310,257,932,NULL,NULL),(313,259,942,NULL,NULL),(314,260,944,NULL,NULL),(315,261,947,NULL,NULL),(316,262,952,NULL,NULL),(317,263,957,NULL,NULL),(318,264,961,NULL,NULL),(319,265,965,NULL,NULL),(322,267,974,NULL,NULL),(325,269,979,NULL,NULL),(328,271,987,NULL,NULL),(335,275,1003,NULL,NULL),(336,276,1009,NULL,NULL),(337,277,1013,NULL,NULL),(338,278,1015,NULL,NULL),(339,279,1022,NULL,NULL),(340,280,1023,NULL,NULL),(341,280,1026,NULL,NULL),(342,281,1027,1033,NULL),(343,281,1028,1034,NULL),(344,281,1029,1032,NULL),(345,281,1030,1031,NULL),(346,282,1035,NULL,110),(347,283,1036,NULL,111),(348,284,1037,NULL,NULL),(349,284,1040,NULL,NULL),(350,285,1041,NULL,112),(351,286,1042,NULL,115),(352,287,1043,NULL,119),(353,288,1044,NULL,NULL),(354,289,1048,NULL,NULL),(355,289,1051,NULL,NULL),(356,290,1052,NULL,120),(357,291,1053,NULL,NULL),(358,291,1054,NULL,NULL),(359,291,1055,NULL,NULL),(360,291,1056,NULL,NULL),(361,292,1057,NULL,123),(362,293,1058,NULL,127),(363,294,1059,NULL,NULL),(364,295,1063,NULL,NULL),(365,295,1066,NULL,NULL),(366,296,1067,1073,NULL),(367,296,1068,1074,NULL),(368,296,1069,1072,NULL),(369,296,1070,1071,NULL),(370,297,1075,NULL,NULL),(371,297,1078,NULL,NULL),(372,298,1079,NULL,NULL),(373,298,1080,NULL,NULL),(374,298,1081,NULL,NULL),(375,298,1082,NULL,NULL),(376,299,1083,NULL,128),(377,300,1084,1090,NULL),(378,300,1085,1091,NULL),(379,300,1086,1089,NULL),(380,300,1087,1088,NULL),(381,301,1092,NULL,129),(382,302,1093,NULL,133),(383,303,1094,NULL,134),(384,303,1095,NULL,135),(385,304,1099,NULL,NULL),(386,305,1101,NULL,NULL),(387,306,1107,NULL,NULL),(388,307,1108,NULL,137),(389,308,1109,NULL,NULL),(390,309,1114,NULL,NULL),(391,310,1117,NULL,NULL),(392,311,1123,NULL,NULL),(393,312,1126,NULL,NULL),(394,313,1129,NULL,NULL),(395,314,1135,NULL,NULL),(396,315,1137,NULL,NULL),(397,316,1141,NULL,NULL),(398,316,1144,NULL,NULL),(399,317,1147,NULL,NULL),(400,318,1149,NULL,NULL),(401,319,1153,NULL,NULL),(402,320,1159,NULL,NULL),(403,321,1162,NULL,NULL),(404,322,1167,NULL,NULL),(405,323,1169,NULL,NULL),(406,324,1173,NULL,141),(407,325,1174,NULL,NULL),(408,325,1177,NULL,NULL),(409,326,1181,NULL,NULL),(410,327,1182,NULL,145),(411,328,1183,1189,NULL),(412,328,1184,1190,NULL),(413,328,1185,1188,NULL),(414,328,1186,1187,NULL),(415,329,1191,NULL,NULL),(416,329,1194,NULL,NULL),(417,330,1195,NULL,149),(418,331,1197,NULL,NULL),(419,332,1200,NULL,NULL),(420,332,1201,NULL,NULL),(421,332,1202,NULL,NULL),(422,332,1203,NULL,NULL),(423,333,1204,NULL,NULL),(424,334,1211,NULL,NULL),(425,335,1212,NULL,NULL),(426,335,1215,NULL,NULL),(427,336,1216,1222,NULL),(428,336,1217,1223,NULL),(429,336,1218,1221,NULL),(430,336,1219,1220,NULL),(431,337,1224,NULL,NULL),(432,337,1225,NULL,NULL),(433,337,1226,NULL,NULL),(434,337,1227,NULL,NULL),(435,338,1228,NULL,152),(436,339,1229,NULL,NULL),(437,339,1232,NULL,NULL),(438,340,1233,NULL,153),(439,341,1234,NULL,NULL),(440,341,1237,NULL,NULL),(441,342,1238,NULL,NULL),(442,342,1241,NULL,NULL),(443,343,1242,NULL,NULL),(444,343,1245,NULL,NULL),(445,344,1246,1252,NULL),(446,344,1247,1253,NULL),(447,344,1248,1251,NULL),(448,344,1249,1250,NULL),(449,345,1254,NULL,154),(450,346,1255,NULL,157),(451,347,1256,NULL,161),(452,348,1260,NULL,NULL),(453,349,1261,NULL,NULL),(454,349,1264,NULL,NULL),(455,350,1268,NULL,NULL),(456,351,1271,NULL,NULL),(457,352,1274,NULL,163),(458,353,1275,NULL,NULL),(459,354,1281,NULL,NULL),(460,355,1284,NULL,NULL),(461,355,1285,NULL,NULL),(462,356,1287,NULL,167),(463,357,1288,NULL,168),(464,358,1289,NULL,172),(465,359,1290,1296,NULL),(466,359,1291,1297,NULL),(467,359,1292,1295,NULL),(468,359,1293,1294,NULL),(469,360,1298,NULL,NULL),(470,360,1301,NULL,NULL),(471,361,1305,NULL,NULL),(472,362,1307,NULL,NULL),(473,363,1313,NULL,NULL),(474,364,1315,NULL,NULL),(475,365,1319,NULL,NULL),(476,366,1322,NULL,NULL),(477,367,1326,NULL,NULL),(478,368,1332,NULL,NULL),(479,369,1334,NULL,NULL),(480,370,1338,NULL,NULL),(481,371,1343,NULL,NULL),(482,372,1346,NULL,NULL),(483,373,1351,NULL,NULL),(484,374,1355,NULL,NULL),(485,375,1361,NULL,NULL),(486,376,1362,NULL,NULL),(487,377,1366,NULL,NULL),(488,378,1370,NULL,NULL),(489,379,1375,NULL,NULL),(490,380,1380,NULL,NULL),(491,381,1383,NULL,NULL),(492,382,1388,NULL,NULL),(493,383,1391,NULL,NULL),(494,384,1395,NULL,NULL),(495,385,1400,NULL,NULL),(496,386,1404,NULL,NULL),(497,387,1406,NULL,NULL),(498,388,1412,NULL,NULL),(499,389,1415,NULL,NULL),(500,390,1420,NULL,NULL),(501,391,1425,NULL,NULL),(502,392,1426,NULL,NULL),(503,393,1431,NULL,NULL),(504,394,1437,NULL,NULL),(505,395,1441,NULL,NULL),(506,396,1444,NULL,NULL),(507,397,1447,NULL,NULL),(508,398,1451,NULL,NULL),(509,399,1455,NULL,NULL),(510,400,1461,NULL,NULL),(511,401,1465,NULL,NULL),(512,402,1467,NULL,NULL),(513,403,1471,NULL,NULL),(514,404,1476,NULL,NULL),(515,405,1478,NULL,NULL),(516,406,1484,NULL,NULL),(517,407,1486,NULL,NULL),(518,408,1492,NULL,NULL),(519,409,1496,NULL,NULL),(520,410,1500,NULL,NULL),(521,411,1504,NULL,NULL),(522,412,1506,NULL,NULL),(523,413,1512,NULL,NULL),(524,414,1517,NULL,NULL),(525,415,1519,NULL,NULL),(526,416,1525,NULL,NULL),(527,417,1527,NULL,NULL),(528,418,1533,NULL,NULL),(529,419,1536,NULL,NULL),(530,420,1539,NULL,NULL),(531,421,1543,NULL,NULL),(532,422,1546,NULL,NULL),(533,423,1550,NULL,NULL),(534,424,1554,NULL,NULL),(535,425,1560,NULL,NULL),(536,426,1565,NULL,NULL),(537,427,1568,NULL,NULL),(538,428,1573,NULL,NULL),(539,429,1577,NULL,NULL),(540,430,1581,NULL,NULL),(541,431,1583,NULL,NULL),(542,432,1588,NULL,NULL),(543,433,1590,NULL,NULL),(544,434,1595,NULL,NULL),(545,435,1599,NULL,NULL),(546,436,1602,NULL,NULL),(547,437,1606,NULL,NULL),(548,438,1611,NULL,NULL),(549,439,1614,NULL,NULL),(550,440,1618,NULL,NULL),(551,441,1623,NULL,NULL),(552,442,1628,NULL,NULL),(553,443,1631,NULL,NULL),(554,444,1637,NULL,NULL),(555,445,1639,NULL,NULL),(556,446,1642,NULL,NULL),(557,447,1647,NULL,NULL),(558,448,1650,NULL,NULL),(559,449,1655,NULL,NULL),(560,450,1661,NULL,NULL),(561,451,1662,NULL,NULL),(562,452,1669,NULL,NULL),(563,453,1672,NULL,NULL),(564,454,1674,NULL,NULL),(565,455,1679,NULL,NULL),(566,456,1684,NULL,NULL),(567,457,1688,NULL,NULL),(568,458,1691,NULL,NULL),(569,459,1695,NULL,NULL),(570,460,1698,NULL,NULL),(571,461,1702,NULL,NULL),(572,462,1708,NULL,NULL),(573,463,1710,NULL,NULL),(574,464,1715,NULL,NULL),(575,465,1719,NULL,NULL),(576,466,1725,NULL,NULL),(577,467,1728,NULL,NULL),(579,469,1734,NULL,NULL),(580,470,1741,NULL,NULL),(581,471,1745,NULL,NULL),(582,472,1747,NULL,NULL),(583,473,1750,NULL,NULL),(584,474,1754,NULL,NULL),(585,475,1760,NULL,NULL),(586,476,1762,NULL,NULL),(587,477,1766,NULL,NULL),(588,478,1770,NULL,NULL),(589,479,1776,NULL,NULL),(590,480,1781,NULL,NULL),(591,481,1782,NULL,NULL),(592,482,1787,NULL,NULL),(593,483,1791,NULL,NULL),(594,484,1796,NULL,NULL),(595,485,1798,NULL,NULL),(596,486,1805,NULL,NULL),(597,487,1808,NULL,NULL),(598,488,1811,NULL,NULL),(599,489,1814,NULL,NULL),(600,489,1815,NULL,NULL),(601,489,1817,NULL,NULL),(602,490,1819,NULL,NULL),(603,491,1823,NULL,NULL),(604,492,1829,NULL,NULL),(605,493,1833,NULL,NULL),(606,494,1835,NULL,NULL),(607,495,1839,NULL,NULL),(608,496,1842,NULL,NULL),(609,497,1846,NULL,174),(610,498,1847,NULL,NULL),(611,499,1854,NULL,NULL),(615,502,1858,NULL,NULL),(616,502,1859,NULL,NULL),(617,502,1860,NULL,NULL),(618,502,1861,NULL,NULL),(619,503,1862,1868,NULL),(620,503,1863,1869,NULL),(621,503,1864,1867,NULL),(622,503,1865,1866,NULL),(634,511,1902,NULL,NULL),(635,512,1908,NULL,NULL),(636,513,1912,NULL,NULL),(640,517,1926,NULL,NULL),(641,518,1933,NULL,NULL),(642,519,1936,NULL,NULL),(643,520,1941,NULL,NULL),(644,521,1943,NULL,NULL),(646,523,1951,NULL,NULL),(647,524,1955,NULL,NULL),(648,525,1959,NULL,NULL),(649,526,1963,NULL,NULL),(650,527,1967,NULL,NULL),(651,528,1970,NULL,NULL),(652,529,1974,NULL,NULL),(653,530,1981,NULL,NULL),(654,531,1983,NULL,NULL),(655,532,1987,NULL,NULL),(656,533,1990,NULL,NULL),(657,534,1996,NULL,NULL),(658,535,1999,NULL,NULL),(659,536,2004,NULL,NULL),(660,537,2006,NULL,NULL),(661,538,2013,NULL,NULL),(662,539,2014,NULL,NULL),(663,540,2021,NULL,NULL),(664,541,2024,NULL,NULL),(665,542,2028,NULL,NULL),(666,543,2033,NULL,NULL),(667,544,2037,NULL,NULL),(668,545,2040,NULL,NULL),(669,546,2043,NULL,NULL),(670,547,2047,NULL,NULL),(671,548,2050,NULL,NULL),(672,548,2053,NULL,NULL),(673,549,2054,NULL,NULL),(674,550,2060,NULL,NULL),(675,551,2064,NULL,NULL),(676,552,2067,NULL,NULL),(677,553,2070,NULL,NULL),(678,554,2074,NULL,NULL),(679,555,2081,NULL,NULL),(680,556,2082,NULL,NULL),(681,557,2089,NULL,NULL),(682,558,2092,NULL,NULL),(683,559,2096,NULL,NULL),(684,560,2098,NULL,NULL),(685,561,2105,NULL,NULL),(686,562,2107,NULL,NULL),(687,563,2110,NULL,NULL),(688,564,2116,NULL,NULL),(689,565,2119,NULL,NULL),(690,566,2122,NULL,NULL),(691,567,2128,NULL,NULL),(692,568,2133,NULL,NULL),(693,569,2136,NULL,NULL),(694,570,2138,NULL,NULL),(696,572,2148,NULL,NULL),(697,573,2152,NULL,NULL),(698,574,2155,NULL,NULL),(700,576,2165,NULL,NULL),(701,577,2166,NULL,NULL),(702,578,2171,NULL,NULL),(703,579,2176,NULL,NULL),(704,580,2178,NULL,NULL),(705,581,2184,NULL,NULL),(706,582,2187,NULL,NULL),(707,583,2192,NULL,NULL),(708,584,2196,NULL,NULL),(709,585,2200,NULL,NULL),(710,586,2205,NULL,NULL),(711,587,2206,NULL,NULL),(712,588,2211,NULL,NULL),(713,589,2217,NULL,NULL),(714,590,2219,NULL,NULL),(715,591,2225,NULL,NULL),(716,592,2226,NULL,NULL),(717,593,2232,NULL,NULL),(718,594,2237,NULL,NULL),(719,595,2239,NULL,NULL),(721,597,2248,NULL,NULL),(722,598,2253,NULL,NULL),(723,599,2254,NULL,NULL),(724,600,2261,NULL,NULL),(725,601,2264,NULL,NULL),(726,602,2269,NULL,NULL),(727,603,2270,NULL,NULL),(728,604,2274,NULL,NULL),(729,605,2279,NULL,NULL),(730,606,2283,NULL,NULL),(731,607,2286,NULL,NULL),(732,608,2291,NULL,NULL),(733,609,2296,NULL,NULL),(734,610,2298,NULL,NULL),(735,611,2303,NULL,NULL),(736,612,2308,NULL,NULL),(737,613,2311,NULL,NULL),(738,614,2314,NULL,NULL),(739,615,2319,NULL,NULL),(740,616,2324,NULL,NULL),(741,617,2328,NULL,NULL),(742,618,2330,NULL,NULL),(743,618,2331,NULL,NULL),(744,619,2334,NULL,NULL),(745,620,2340,NULL,NULL),(746,621,2342,NULL,NULL),(747,622,2347,NULL,NULL),(748,623,2351,NULL,NULL),(749,624,2354,NULL,NULL),(750,625,2358,NULL,NULL),(751,626,2362,NULL,NULL),(752,627,2369,NULL,NULL),(753,628,2371,NULL,NULL),(754,629,2377,NULL,NULL),(755,630,2380,NULL,NULL),(756,631,2382,NULL,NULL),(757,632,2388,NULL,NULL),(758,633,2391,NULL,NULL),(759,634,2396,NULL,NULL),(760,635,2400,NULL,NULL),(761,636,2403,NULL,NULL),(762,637,2408,NULL,NULL),(763,638,2410,NULL,NULL),(764,639,2417,NULL,NULL),(765,640,2420,NULL,NULL),(766,641,2422,NULL,NULL),(767,642,2426,NULL,NULL),(768,643,2432,NULL,NULL),(769,644,2434,NULL,NULL),(770,645,2439,NULL,NULL),(771,646,2444,NULL,NULL),(772,647,2446,NULL,NULL),(773,648,2453,NULL,NULL),(774,649,2456,NULL,NULL),(775,650,2460,NULL,NULL),(776,651,2462,NULL,NULL),(777,652,2467,NULL,NULL),(778,653,2470,NULL,NULL),(779,654,2475,NULL,NULL),(780,655,2480,NULL,NULL),(781,656,2484,NULL,NULL),(782,657,2487,NULL,NULL),(783,658,2490,NULL,NULL),(784,659,2495,NULL,NULL),(785,660,2498,NULL,NULL),(786,661,2505,NULL,NULL),(787,662,2507,NULL,NULL),(788,663,2513,NULL,NULL),(789,664,2516,NULL,NULL),(790,665,2521,NULL,NULL),(791,666,2524,NULL,NULL),(792,667,2529,NULL,NULL),(793,668,2531,NULL,NULL),(794,669,2537,NULL,NULL),(795,670,2540,NULL,NULL),(796,671,2543,NULL,NULL),(797,672,2546,NULL,NULL),(798,673,2552,NULL,NULL),(799,674,2556,NULL,NULL),(800,675,2560,NULL,NULL),(801,676,2564,NULL,NULL),(802,677,2567,NULL,NULL),(803,678,2570,NULL,NULL),(804,679,2575,NULL,NULL),(805,680,2578,NULL,NULL),(806,681,2583,NULL,NULL),(807,682,2586,NULL,NULL),(808,683,2590,NULL,NULL),(809,684,2596,NULL,NULL),(810,685,2598,NULL,NULL),(811,686,2604,NULL,NULL),(812,687,2609,NULL,NULL),(813,688,2612,NULL,NULL),(814,689,2615,NULL,NULL),(815,690,2620,NULL,NULL),(816,691,2622,NULL,NULL),(817,692,2627,NULL,NULL),(818,693,2632,NULL,NULL),(819,694,2636,NULL,NULL),(820,695,2640,NULL,NULL),(821,696,2643,NULL,NULL),(822,697,2646,NULL,NULL),(823,698,2650,NULL,NULL),(824,699,2655,NULL,NULL),(825,700,2660,NULL,NULL),(826,701,2663,NULL,NULL),(827,702,2668,NULL,NULL),(828,703,2671,NULL,NULL),(829,704,2674,NULL,NULL),(830,705,2680,NULL,NULL),(831,706,2683,NULL,NULL),(832,707,2689,NULL,NULL),(833,708,2691,NULL,NULL),(834,709,2694,NULL,NULL),(835,710,2699,NULL,NULL),(836,711,2703,NULL,NULL),(837,712,2707,NULL,NULL),(838,713,2712,NULL,NULL),(839,714,2714,NULL,NULL),(840,715,2718,NULL,NULL),(841,716,2724,NULL,NULL),(842,717,2727,NULL,NULL),(843,718,2733,NULL,NULL),(844,719,2735,NULL,NULL),(845,720,2738,NULL,NULL),(846,721,2743,NULL,NULL),(847,722,2749,NULL,NULL),(848,723,2752,NULL,NULL),(849,724,2757,NULL,NULL),(850,725,2761,NULL,NULL),(851,726,2764,NULL,NULL),(852,727,2767,NULL,NULL),(853,728,2772,NULL,NULL),(854,729,2776,NULL,NULL),(855,730,2778,NULL,NULL),(856,731,2784,NULL,NULL),(857,732,2788,NULL,NULL),(869,744,2836,NULL,NULL),(870,745,2840,NULL,NULL),(871,746,2845,NULL,NULL),(872,747,2848,NULL,NULL),(873,748,2852,NULL,NULL),(874,749,2854,NULL,NULL),(875,750,2861,NULL,NULL),(876,751,2862,NULL,NULL),(877,752,2868,NULL,NULL),(878,753,2872,NULL,NULL),(879,754,2876,NULL,NULL),(880,755,2880,NULL,NULL),(881,756,2883,NULL,NULL),(882,757,2887,NULL,NULL),(883,758,2893,NULL,NULL),(884,759,2896,NULL,NULL),(885,760,2899,NULL,NULL),(886,761,2902,NULL,NULL),(887,762,2906,NULL,NULL),(888,763,2912,NULL,NULL),(889,764,2917,NULL,NULL),(890,765,2919,NULL,NULL),(891,766,2922,NULL,NULL),(892,767,2928,NULL,NULL),(893,768,2930,NULL,NULL),(894,769,2936,NULL,NULL),(895,770,2938,NULL,NULL),(896,771,2944,NULL,NULL),(897,772,2946,NULL,NULL),(898,773,2950,2956,NULL),(899,773,2951,2957,NULL),(900,773,2952,2955,NULL),(901,773,2953,2954,NULL),(903,775,2965,NULL,NULL),(905,777,2971,NULL,NULL),(907,779,2979,NULL,NULL),(909,781,2987,NULL,NULL),(910,782,2991,NULL,NULL),(911,784,2998,NULL,NULL),(912,785,3002,NULL,NULL),(913,786,3008,NULL,NULL),(914,787,3010,NULL,NULL),(915,788,3017,NULL,NULL),(917,790,3022,NULL,NULL),(918,791,3026,NULL,NULL),(919,791,3029,NULL,NULL),(920,792,3032,NULL,NULL),(921,793,3036,NULL,NULL),(922,794,3041,NULL,NULL),(924,796,3049,NULL,NULL),(925,797,3050,NULL,NULL),(926,798,3056,NULL,NULL),(927,799,3058,NULL,NULL),(928,800,3063,NULL,NULL),(929,801,3067,NULL,NULL),(930,802,3070,NULL,NULL),(931,803,3076,NULL,NULL),(932,804,3080,NULL,NULL),(933,805,3082,NULL,NULL),(934,806,3086,NULL,NULL),(936,808,3096,NULL,NULL),(937,809,3099,NULL,NULL),(938,810,3104,NULL,NULL),(939,811,3107,NULL,NULL),(940,812,3111,NULL,NULL),(941,813,3114,3120,NULL),(942,813,3115,3121,NULL),(943,813,3116,3119,NULL),(944,813,3117,3118,NULL),(945,814,3125,NULL,NULL),(946,815,3129,NULL,NULL),(947,816,3131,NULL,NULL),(948,817,3137,NULL,NULL),(949,818,3140,NULL,NULL),(950,819,3145,NULL,NULL),(951,820,3147,NULL,NULL),(952,821,3152,NULL,NULL),(953,822,3154,NULL,NULL),(954,823,3160,NULL,NULL),(955,824,3163,NULL,NULL),(956,825,3166,NULL,NULL),(957,826,3173,NULL,NULL),(958,827,3175,NULL,NULL),(959,828,3180,NULL,NULL),(960,829,3185,NULL,NULL),(961,830,3186,NULL,NULL),(962,831,3190,NULL,NULL),(963,832,3195,NULL,NULL),(964,833,3201,NULL,NULL),(965,834,3204,NULL,NULL),(966,835,3207,NULL,NULL),(967,836,3212,NULL,NULL),(968,837,3216,NULL,NULL),(969,838,3220,NULL,NULL),(970,839,3223,NULL,NULL),(971,840,3228,NULL,NULL),(972,841,3232,NULL,NULL),(973,842,3235,NULL,NULL),(974,843,3238,NULL,NULL),(975,844,3244,NULL,NULL),(976,845,3247,NULL,NULL),(977,846,3250,NULL,NULL),(978,847,3254,NULL,NULL),(979,848,3259,NULL,NULL),(980,849,3265,NULL,NULL),(981,850,3269,NULL,NULL),(982,851,3271,NULL,NULL),(983,852,3274,NULL,NULL),(984,853,3280,NULL,NULL),(985,854,3285,NULL,NULL),(986,855,3286,NULL,NULL),(987,856,3290,NULL,NULL),(988,857,3294,NULL,NULL),(989,858,3298,NULL,NULL),(990,859,3304,NULL,NULL),(991,860,3307,NULL,NULL),(992,861,3312,NULL,NULL),(993,862,3317,NULL,NULL),(994,863,3319,NULL,NULL),(995,864,3324,NULL,NULL),(996,865,3327,NULL,NULL),(997,866,3333,NULL,NULL),(998,867,3335,NULL,NULL),(999,868,3338,NULL,NULL),(1000,869,3343,NULL,NULL),(1001,870,3349,NULL,NULL),(1002,871,3351,NULL,NULL),(1003,872,3356,NULL,NULL),(1004,873,3360,NULL,NULL),(1005,874,3363,NULL,NULL),(1006,875,3367,NULL,NULL),(1007,876,3370,NULL,NULL),(1008,877,3374,NULL,185),(1009,878,3375,NULL,NULL),(1010,878,3378,NULL,NULL),(1011,879,3379,NULL,189),(1012,880,3380,NULL,190),(1013,881,3381,NULL,NULL),(1014,881,3384,NULL,NULL),(1015,882,3385,3391,NULL),(1016,882,3386,3392,NULL),(1017,882,3387,3390,NULL),(1018,882,3388,3389,NULL),(1019,883,3393,NULL,191),(1023,887,3403,NULL,NULL),(1024,888,3406,NULL,NULL),(1025,889,3412,NULL,NULL),(1026,890,3415,NULL,NULL),(1027,891,3420,NULL,NULL),(1028,892,3422,NULL,NULL),(1029,893,3426,NULL,NULL),(1030,894,3429,NULL,NULL),(1031,895,3433,NULL,NULL),(1032,896,3437,NULL,NULL),(1033,897,3441,NULL,NULL),(1034,898,3446,NULL,NULL),(1035,899,3450,NULL,NULL),(1036,900,3455,NULL,NULL),(1037,901,3458,NULL,NULL),(1038,902,3464,NULL,NULL),(1039,903,3466,NULL,NULL),(1040,904,3472,NULL,NULL),(1086,950,3578,NULL,272),(1087,951,3579,NULL,276),(1088,952,3582,NULL,NULL),(1089,953,3585,NULL,NULL),(1090,954,3589,NULL,NULL),(1091,955,3593,NULL,NULL),(1092,956,3599,NULL,NULL),(1093,957,3604,NULL,NULL),(1094,958,3608,NULL,NULL),(1095,959,3611,NULL,NULL),(1096,960,3613,NULL,NULL),(1097,961,3620,NULL,NULL),(1098,962,3621,NULL,NULL),(1099,963,3625,NULL,NULL),(1100,964,3631,NULL,NULL),(1101,965,3636,NULL,NULL),(1102,966,3637,NULL,NULL),(1103,967,3642,NULL,NULL),(1104,968,3646,NULL,NULL),(1105,969,3649,NULL,NULL),(1106,970,3653,NULL,NULL),(1107,971,3659,NULL,NULL),(1108,972,3661,NULL,NULL),(1109,972,3664,NULL,NULL),(1110,973,3665,3671,NULL),(1111,973,3666,3672,NULL),(1112,973,3667,3670,NULL),(1113,973,3668,3669,NULL),(1114,974,3676,NULL,NULL),(1115,975,3679,NULL,NULL),(1116,976,3683,NULL,NULL),(1117,977,3687,NULL,NULL),(1118,978,3690,NULL,NULL),(1119,979,3696,NULL,NULL),(1120,980,3698,NULL,NULL),(1121,981,3704,NULL,NULL),(1122,982,3708,NULL,NULL),(1123,983,3709,NULL,NULL),(1124,984,3716,NULL,NULL),(1125,985,3718,NULL,NULL),(1126,986,3722,NULL,NULL),(1127,987,3727,NULL,NULL),(1128,988,3732,NULL,NULL),(1129,989,3736,NULL,NULL),(1130,990,3738,NULL,NULL),(1131,991,3744,NULL,NULL),(1132,992,3747,NULL,NULL),(1133,993,3749,NULL,NULL),(1134,994,3753,NULL,NULL),(1135,995,3759,NULL,NULL),(1136,996,3761,NULL,NULL),(1137,997,3767,NULL,NULL),(1138,998,3770,NULL,NULL),(1139,999,3776,NULL,NULL),(1140,1000,3778,NULL,NULL),(1141,1001,3782,NULL,NULL),(1142,1002,3788,NULL,NULL),(1143,1003,3792,NULL,NULL),(1144,1004,3795,NULL,NULL),(1145,1005,3798,NULL,NULL),(1146,1006,3802,NULL,NULL),(1147,1007,3806,NULL,NULL),(1148,1008,3809,NULL,NULL),(1149,1009,3815,NULL,NULL),(1150,1010,3818,NULL,NULL),(1151,1011,3823,NULL,NULL),(1152,1012,3826,NULL,NULL),(1153,1013,3830,NULL,NULL),(1154,1014,3833,NULL,NULL),(1155,1015,3839,NULL,NULL),(1156,1016,3841,NULL,NULL),(1157,1017,3848,NULL,NULL),(1158,1018,3851,NULL,NULL),(1159,1019,3853,NULL,NULL),(1160,1020,3858,NULL,NULL),(1161,1021,3864,NULL,NULL),(1162,1022,3866,NULL,NULL),(1163,1023,3869,NULL,NULL),(1164,1024,3875,NULL,NULL),(1165,1025,3879,NULL,NULL),(1166,1026,3882,NULL,NULL),(1167,1027,3888,NULL,NULL),(1168,1028,3891,NULL,NULL),(1169,1029,3894,NULL,NULL),(1170,1030,3897,NULL,NULL),(1171,1030,3900,NULL,NULL),(1172,1031,3901,NULL,NULL),(1173,1031,3902,NULL,NULL),(1174,1031,3903,NULL,NULL),(1175,1031,3904,NULL,NULL),(1176,1032,3906,NULL,NULL),(1177,1033,3909,NULL,277),(1178,1034,3911,NULL,NULL),(1179,1035,3915,NULL,NULL);

/*Table structure for table `question` */

DROP TABLE IF EXISTS `question`;

CREATE TABLE `question` (
  `question_id` int(11) NOT NULL AUTO_INCREMENT,
  `question_type_id` int(11) NOT NULL,
  `user_id` int(11) DEFAULT NULL,
  `bloom_level_id` int(11) NOT NULL,
  `question_desc` text COLLATE utf8_unicode_ci,
  `question_in_test` tinyint(1) DEFAULT '0' COMMENT 'false: not in any test\n            true: in a test',
  `course_id` int(11) DEFAULT NULL,
  `course_content_id` int(11) DEFAULT NULL,
  `qgroup_id` int(11) DEFAULT NULL,
  `difficulty` float DEFAULT NULL,
  `discrimination` float DEFAULT NULL,
  PRIMARY KEY (`question_id`),
  KEY `fk_creator_of_question` (`user_id`),
  KEY `fk_difficultity_level_of_questions_in_bloom_taxonomy` (`bloom_level_id`),
  KEY `fk_types_of_questions` (`question_type_id`),
  KEY `course_id` (`course_id`),
  KEY `course_content_id` (`course_content_id`),
  KEY `qgroup_id` (`qgroup_id`),
  CONSTRAINT `fk_creator_of_question` FOREIGN KEY (`user_id`) REFERENCES `user` (`user_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_difficultity_level_of_questions_in_bloom_taxonomy` FOREIGN KEY (`bloom_level_id`) REFERENCES `bloom_level` (`bloom_level_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_types_of_questions` FOREIGN KEY (`question_type_id`) REFERENCES `question_type_dict` (`question_type_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `question_ibfk_1` FOREIGN KEY (`course_id`) REFERENCES `course` (`course_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `question_ibfk_2` FOREIGN KEY (`course_content_id`) REFERENCES `course_content` (`course_content_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `question_ibfk_3` FOREIGN KEY (`qgroup_id`) REFERENCES `question_group` (`question_group_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=989 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `question` */

insert  into `question`(`question_id`,`question_type_id`,`user_id`,`bloom_level_id`,`question_desc`,`question_in_test`,`course_id`,`course_content_id`,`qgroup_id`,`difficulty`,`discrimination`) values (53,1,1,6,'<p>Thiết bị nào là thiết bị ngoại vi</p>',0,2,4,NULL,NULL,NULL),(54,4,1,2,'Liên kết thiết bị và chức năng',0,2,2,NULL,NULL,NULL),(55,2,1,4,'<p>Các giá trị của mảng A được sắp xếp theo thứ tự tăng dần từng bước như sau:</p><p>3, 2, 7, 9, 1, 6</p><p>2, 3, 7, 9, 1, 6</p><p>1, 2, 3, 7, 9, 6</p><p>1, 2, 3, 6, 7, 9</p><p>Mảng A được sắp xếp theo thuật toán {1}</p>',0,2,14,NULL,NULL,NULL),(56,3,1,3,'<p>Thay đổi thứ tự độ phức tạp từ tốt nhất đến xấu</p>',0,2,14,NULL,NULL,NULL),(57,1,1,6,'<p>Thiết bị nào là thiết bị ngoại vi</p>',0,2,14,NULL,NULL,NULL),(58,2,1,4,'<p>Đi từ cuối mảng về đầu mảng, trong quá trình đi nếu phần tử ở dưới (đứng phía sau) nhỏ hơn phần tử đứng ngay trên (trước) nó thì hai phần tử này sẽ được đổi chỗ cho nhau. Sau mỗi lần đi chúng ta đưa được một phần tử trồi lên đúng chỗ. Sau &nbsp;{1} lần đi thì tất cả các phần tử trong mảng M sẽ có thứ tự tăng</p>',0,2,14,NULL,NULL,NULL),(59,2,1,4,'<p>Chương trình sau có {1} thời gian thực hiện</p><p>int x=0;</p><p>for(int i=0; i&lt;n*n; i++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(int j=0; j&lt;i; j++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x=x+i+1;</p>',0,2,14,NULL,NULL,NULL),(60,1,1,5,'<p>Thiết bị nào là thiết bị ngoại vi</p>',0,2,NULL,NULL,NULL,NULL),(61,2,1,1,'<p>Khi ta nói thời gian thực hiện của một chương trình là T(n) = Cn thì có nghĩa là chương trình ấy cần {1} chỉ thị thực thi&nbsp;</p>',0,2,NULL,NULL,NULL,NULL),(62,2,1,2,'<p>Hãy điền giá trị c vào ô trống để kết quả biến sum = 10</p><p>int sum=0;</p><p>for(int c = 2; c &lt;= {1} ; c++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sum = sum + 2*c;</p>',0,2,NULL,NULL,NULL,NULL),(63,3,1,3,'<p>Hãy sắp xếp mã giả sau để xóa 1 phần tử đầu danh sách</p>',0,2,NULL,NULL,NULL,NULL),(64,2,1,1,'<p>Mối quan hệ giữa cấu trúc dữ liệu và giải thuật có thể minh họa bằng đẳng thức:</p><p>{1}&nbsp;+ {2}&nbsp;= Chương trình</p>',0,2,NULL,NULL,NULL,NULL),(65,1,1,4,'<p>Giá trị của x sau khi chạy đoạn chương trình sau:</p><p>void main()</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; float a[5] = {5, 4, 3, 2, 1};</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; float x;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(int i=0; i&lt;5; i++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a[i] += a[0];</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x = a[1] + a[4];</p><p>}</p>',0,2,NULL,NULL,NULL,NULL),(66,1,1,3,'<p>Chọn câu lệnh in ra các giá trị từ 0 đến 15 ra màn hình:</p>',0,2,NULL,NULL,NULL,NULL),(67,1,1,4,'<p>Tính thời gian thực hiện đoạn chương trình sau:</p><p>int x=0;</p><p>for(int i=0; i&lt;n; i++){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(int j=0; j&lt;i; j++){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x=x+1;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</p><p>}</p>',0,2,NULL,NULL,NULL,NULL),(68,1,1,4,'<p>Giá trị nào được in ra sau khi thực hiện đoạn chương trình sau:</p><p>char *p=\"incoll4\";</p><p>printf(\"%s\",p+3);</p>',0,2,NULL,NULL,NULL,NULL),(69,1,1,5,'<p>Thuật toán 1 chạy với thời gian 7n^2+2n+3, thuật toán 2 chạy với thời gian 2n^2, thuật toán 3 chạy với thời gian 2n+3, thuật toán 4 chạy với thời gian 7log(n). Các thuật toán nào có cùng một thời gian giống nhau?</p>',0,2,NULL,NULL,NULL,NULL),(70,2,1,4,'<p>Giá trị của x bằng {1}&nbsp;sau khi thực hiện đoạn chương trình sau:</p><p>{</p><p>int x, y, z;</p><p>x=1; y=2; z=3;</p><p>int *a=&amp;x;</p><p>*a=y;</p><p>printf(\"%d\",x);</p><p><span style=\"display:table;\"><span style=\"display: table; width: 100%; table-layout: fixed;\"><span style=\"display: table; height: 100%; width: 100%; table-layout: fixed;\">}</span></span></span></p>',0,2,NULL,NULL,NULL,NULL),(71,1,1,4,'<p>Cho đoạn chương trình sau:</p><p>void main()</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int a=7, b=9, *p;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p = &amp;a;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a = ++b;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(\"%d%d%d\",a,b,p);</p><p>}</p><p>Kết quả sau khi thực hiện chương trình trên là:</p>',0,2,NULL,NULL,NULL,NULL),(72,1,1,4,'<p>Cho đoạn chương trình sau:</p><p>void main()</p><p>{</p><p>int newNum = 0;</p><p>int number = 8570;</p><p>int tmp;</p><p>while(number&gt;0){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tmp = number % 10;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; number = number / 10;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; newNum = newNum*10 + tmp;</p><p>}</p><p>printf(\"%d\",newNum);</p><p>}</p><p>Kết quả in ra của chương trình trên:</p>',0,2,NULL,NULL,NULL,NULL),(73,3,1,4,'<p>Cho hàm sau:</p><p>void wow(int n)</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(n &gt; 1)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wow(n / 2);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(\"%d\",n);</p><p>}</p><p>Thứ tự kết quả là bao nhiêu nếu ta gọi wow(16)?</p>',0,2,NULL,NULL,NULL,NULL),(74,3,1,4,'<p>Cho các thời gian thực hiện giải thuật như sau: O(1), O(n), O(n*logn), O(logn), O(n^2), O(2^n). Hãy sắp xếp thời gian thực hiện thuật toán từ chậm nhất đến nhanh nhất</p>',0,2,NULL,NULL,NULL,NULL),(75,1,1,3,'<p>Cho hàm sau:</p><p>void wow(int n)</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(n &gt; 1)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wow(n / 2);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(\"%d\",n);</p><p>}</p><p>Kết quả là bao nhiêu nếu ta gọi wow(16)<br></p>',0,2,NULL,NULL,NULL,NULL),(76,1,1,4,'<p>Cho các thời gian thực hiện giải thuật như sau: O(1), O(n), O(n*logn), O(logn), O(n^2), O(2^n). Hãy sắp xếp thời gian thực hiện thuật toán từ chậm nhất đến nhanh nhất:</p>',0,2,NULL,NULL,NULL,NULL),(77,1,1,3,'<p>Kết quả sau khi thực hiện đoạn mã sau:</p><p>int i=1;</p><p>while(i &lt;= 10)</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(\"%c\",\"X\");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i=i+3;</p><p>}</p>',0,2,NULL,NULL,NULL,NULL),(78,1,1,3,'<p>Kết quả sau khi thực hiện đoạn mã sau:</p><p>int i=1;</p><p>while(i &lt;= 10)</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(i &lt; 5 &amp;&amp; i != 2)</p><p>printf(\"%c\",\"X\");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i++;</p><p>}</p>',0,2,NULL,NULL,NULL,NULL),(79,1,1,3,'<p>Giá trị của biến sum là bao nhiêu sau khi thực hiện đoạn mã sau:</p><p>int sum=0;</p><p>for(int c = 2; c &lt;= 5; c++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sum = sum + 2*c;</p>',0,2,NULL,NULL,NULL,NULL),(80,1,1,3,'<p>Kết quả sau khi thực thi chương trình sau là bao nhiêu?</p><p>void main()</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int i=0, n=33;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while(i &lt; n-1)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i++;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(n % i == 0)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(\"%2d\",i);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>}</p>',0,2,NULL,NULL,NULL,NULL),(81,1,1,4,'<p>Kết quả sau khi thực thi chương trình sau là bao nhiêu?</p><p>void main()</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int dau=1, S=0;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(int i=1; i &lt;= 6; i++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; S = S + dau*i;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dau = -(dau);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(\"%d\",S);</p><p>}</p>',0,2,NULL,NULL,NULL,NULL),(82,1,1,2,'<p>Cho hàm hoán vị sau, điền vị trí trống trong hàm:</p><p>void hoanvi(int *x, ……………….)</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int t = *x; *x = *y; *y = t;&nbsp;</p><p>}</p>',0,2,NULL,NULL,NULL,NULL),(83,1,1,2,'<p>Hãy viết dòng còn thiếu của hàm sau:</p><p>void XuatMang(int a[], int n)</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(“Noi dung cua mang la: ”);</p><p>&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ……………………………………</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(“%d ”, a[i]);</p><p>&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(“\\n”);</p><p>}</p>',0,2,NULL,NULL,NULL,NULL),(84,1,1,2,'<p>Cho PhanSo co Mauso và Tuso Hãy viết dòng còn thiếu của hàm sau:</p><p>&nbsp;</p><p>void NhapPhanSo(const char *info, PhanSo &amp;ps)</p><p>{</p><p>scanf(\"%d%d\",...............,............);</p><p>}</p>',0,2,NULL,NULL,NULL,NULL),(85,1,1,4,'<p>Cho nguyên mẫu hàm sau :ThemPT(char a[],int &amp;n, int k, int x) ,&nbsp; giả sử hàm được thực thi, vậy sau khi thực thi xong hàm giá trị nào sẽ bị thay đổi:</p>',0,2,NULL,NULL,NULL,NULL),(86,1,1,4,'<p>Cấu trúc dữ liệu cho kiểu dữ liệu sinh viên như sau</p><p>typedef struct tagSV{</p><p>&nbsp;&nbsp;&nbsp; char&nbsp; MSSV[8];</p><p>&nbsp;&nbsp;&nbsp; char&nbsp; Ten[30];</p><p>&nbsp;&nbsp;&nbsp; char&nbsp; NgaySinh[11];</p><p>&nbsp;&nbsp;&nbsp; float DTB;</p><p>}SV;</p><p>Khai báo</p><p>SV sv1, *sv2;</p><p>Lựa chọn các câu đúng nhất để gán giá trị cho mã sinh viên của sv1 và sv2</p>',0,2,NULL,NULL,NULL,NULL),(87,1,1,2,'<p class=\"TableContents\"><span style=\"color: black;\" data-mce-style=\"color: black;\">Khi ta nói thời gian thực hiện của một chương trình là T(n) = Cn thì có nghĩa là chương trình ấy :</span></p>',0,2,5,NULL,NULL,NULL),(88,1,1,1,'<p>Trong bài toán sắp xếp, sắp xếp trong là :</p>',0,2,NULL,NULL,NULL,NULL),(89,1,1,1,'<p>Các đối tượng cần được sắp xếp là các mẩu tin gồm :</p>',0,2,5,NULL,NULL,NULL),(90,1,1,1,'<p>Mục đích của việc sắp xếp là :</p>',0,2,NULL,NULL,NULL,NULL),(91,1,1,1,'<p>Phương pháp sắp xếp đơn giản nhất là :</p>',0,2,NULL,NULL,NULL,NULL),(92,1,1,1,'<p>Phương pháp chọn là :</p>',0,2,NULL,NULL,NULL,NULL),(93,1,1,2,'<p>Sắp xếp mảng gồm 10 mẩu tin có khóa là các số nguyên: 5, 6, 2, 2, 10, 12, 9, 10, 9 và 3 . Phương pháp nào là nhanh chóng và đơn giản nhất :</p>',0,2,NULL,NULL,NULL,NULL),(94,1,1,1,'<p>Tìm kiếm tuyến tính là:</p>',0,2,NULL,NULL,NULL,NULL),(95,1,1,1,'<p>Muốn áp dụng thuật toán tìm kiếm nhị phân ta phải:</p>',0,2,NULL,NULL,NULL,NULL),(96,1,1,1,'<p>Trong Tìm kiếm nhị phân, mảng phải là:</p>',0,2,NULL,NULL,NULL,NULL),(97,1,1,1,'<p>Trong Tìm kiếm tuần tự, mảng phải là:</p>',0,2,NULL,NULL,NULL,NULL),(98,1,1,1,'<p>Nhược điểm của việc áp dụng thuật toán tìm kiếm nhị phân:</p>',0,2,NULL,NULL,NULL,NULL),(99,1,1,1,'<p>Ưu điểm của thuật toán tìm kiếm tuần tự:</p>',0,2,NULL,NULL,NULL,NULL),(100,1,1,4,'<p>Cho hàm sau, hàm này dùng để làm gì:</p><p>int LinearExhaustive (int a[], int n, int x)</p><p>Cho i từ 0 đến n Làm</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; Nếu a[i] =x</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Trả về vị trí i</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; Hết Nếu</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; Ngược lại</p><p>trả về -1</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; Hết ngược lại</p><p>&nbsp;&nbsp;&nbsp;&nbsp; Hết Lặp</p>',0,2,NULL,NULL,NULL,NULL),(101,1,1,4,'<p>Cho hàm sau, hàm này dùng để làm gì:</p><p>int BinarySearch(int a[], int n, int x)</p><p>int l = 0, r = n-1,m;</p><p>&nbsp;Trong khi(l &lt;= r)</p><p>m = (l + r)/2;</p><p>Nếu a[m] == x</p><p>Trả về m;</p><p>Hết Nếu</p><p>Ngược lại</p><p>Nếu x &lt; a[m]</p><p>r = m – 1</p><p>Hết nếu</p><p>Hết Ngược lại</p><p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;l = m + 1;</p><p>&nbsp;&nbsp;&nbsp; Hết Trong khi</p><p>Trả về –1;Tìm kiếm nhị phân x</p>',0,2,NULL,NULL,NULL,NULL),(102,1,1,4,'<p>Cho hàm sau, biến l và r để làm gì, hãy chọn câu trả lời đúng nhất:</p><p>int BinarySearch(int a[], int n, int x)</p><p>int l = 0, r = n-1,m;</p><p>&nbsp;Trong khi(l &lt;= r)</p><p>m = (l + r)/2;</p><p>Nếu a[m] == x</p><p>Trả về m;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Hết Nếu</p><p>Ngược lại</p><p>Nếu x &lt; a[m]</p><p>r = m – 1</p><p>Hết nếu</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Hết Ngược lại</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; l = m + 1;</p><p>&nbsp;&nbsp;&nbsp; Hết Trong khi</p><p>Trả về –1;</p>',0,2,NULL,NULL,NULL,NULL),(103,1,1,4,'<p>Đoạn mã giả dưới đây mô tả thuật toán gì?</p><p>Thuật toán:</p><p>B1: k = 1</p><p>B2: IF(M[k] == X &amp;&amp; k != N)</p><p>B2.1: k++</p><p>B2.2: Lặp lại B2</p><p>B3: IF (k &lt; N)</p><p>Thông báo tìm thấy tại vị trí k</p><p>B4: ELSE</p><p>Không tìm thấy.</p><p>B5: Kết thúc</p>',0,2,NULL,NULL,NULL,NULL),(104,1,1,4,'<p>Cho hàm tìm kiếm tuyến tính sau:</p><p>int TimKiem(int M[],int N,int X)</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int k=0;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; M[N]=X;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while(M[k]!=X)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; k++;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(k&lt;N)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return k;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return -1;</p><p>}</p><p>Chọn câu đúng nhất:</p>',0,2,NULL,NULL,NULL,NULL),(105,1,1,4,'<p>Xét hàm sau:</p><p>int TimKiemNP(int M[],int First, int Last,int X)</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(First &gt; Last)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return -1;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int Mid = (First+Last)/2;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(M[Mid] == X)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return Mid;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(X &lt; M[Mid])</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return TimKiemNP(M,First,Mid-1,X);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return TimKiemNP(M,Mid+1,Last,X);</p><p>}</p><p>Chọn câu đúng nhất miêu tả hàm trên:</p>',0,2,NULL,NULL,NULL,NULL),(106,1,1,4,'<p>Hàm mô tả sắp xếp Nổi bọt (Bubble Sort) trên mảng M có N phần tử</p><p>void BubbleSort(int M[], int N)</p><p>{</p><p>int Temp;</p><p>for (int I = 0; I &lt; N-1; I++)</p><p>………………………………….. [5]</p><p>if (M[J] &lt; M[J-1])</p><p>{ [7]</p><p>Temp = M[J];</p><p>M[J] = M[J-1];</p><p>M[J-1] = Temp;</p><p>}</p><p>return;</p><p>Lệnh nào sau đây sẽ được đưa vào dòng lệnh thứ [5] của hàm trên:</p>',0,2,NULL,NULL,NULL,NULL),(107,1,1,4,'<p>Hàm mô tả sắp xếp Chọn trực tiếp (Selection Sort) trên mảng M có N phần tử</p><p>void SelectionSort(int M[], int N)</p><p>{</p><p>int Temp;</p><p>int K=0,PosMin;</p><p>while (K&lt;N-1)</p><p>{</p><p>int Min=M[K];</p><p>PosMin=K;</p><p>for(int Pos=K+1;Pos&lt;N;Pos++)</p><p>if (Min&gt;M[Pos])</p><p>{</p><p>Min=M[Pos];</p><p>PosMin=Pos;</p><p>}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ………………………………….. [1]</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ………………………………….. [2]</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ………………………………….. [3]</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; K++;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>return;</p><p>}</p><p>Lệnh nào sau đây sẽ được đưa vào [1], [2], [3] với mục tiêu hoán vị M[K] và M[PosMin] của hàm trên:</p>',0,2,NULL,NULL,NULL,NULL),(108,1,1,4,'<p>Cho thuật toán sắp xếp sau:</p><p>void T(int A[], int n)</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int i, j, tmp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(i=1; i&lt;n; i++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; j = i;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while(j&gt;0 &amp;&amp; A[j-1] &gt; A[j])</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tmp = A[j];</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A[j] = A[j-1];</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A[j-1] = tmp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; j--;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>}</p><p>Thuật toán trên là:</p>',0,2,NULL,NULL,NULL,NULL),(109,1,1,3,'<p>Cho mảng A (10 phần tử) như sau: 11 16 12 75 51 54 73 36 52 98</p><p>Cần thực hiện bao nhiêu lần để mảng A có thứ tự tăng dần theo phương pháp sắp xếp Chèn trực tiếp (Insertion Sort)?</p>',0,2,NULL,NULL,NULL,NULL),(110,1,1,3,'<p>Cho mảng A (10 phần tử) như sau: 16 60 2 25 15 45 5 30 33 20</p><p>Cần thực hiện bao nhiêu lần để mảng A có thứ tự tăng dần theo phương pháp sắp xếp Chọn trực tiếp (Selection Sort)?</p>',0,2,NULL,NULL,NULL,NULL),(111,1,1,4,'<p>Cho thuật toán sắp xếp Bubble Sort như sau:</p><p>void BubbleSort(int M[], int N)</p><p>{</p><p>for (int I = 0; I &lt; N-1; I++)</p><p>for (int J = N-1; J &gt; I; J--)</p><p>if (M[J] &lt; M[J-1])</p><p>Swap(M[J], M[J-1]);</p><p>}</p><p>Chọn câu đúng nhất cho hàm Swap:</p>',0,2,NULL,NULL,NULL,NULL),(112,1,1,3,'<p>Cho mảng A (6 phần tử) như sau: 42 23 74 11 65 58</p><p>Dùng phương pháp sắp xếp Chọn trực tiếp (Selection Sort), sau 3 bước mảng A có dạng:</p>',0,2,NULL,NULL,NULL,NULL),(113,1,1,3,'<p>Cho mảng A (6 phần tử) như sau: 42 23 74 11 65 58</p><p>Dùng phương pháp sắp xếp Chèn trực tiếp (Insertion Sort), sau 3 bước mảng A có dạng:</p>',0,2,NULL,NULL,NULL,NULL),(114,1,1,3,'<p>Cho mảng A (8 phần tử) như sau: 42 23 74 11 65 58 94 36</p><p>Dùng phương pháp sắp xếp Nổi bọt (Bubble Sort), sau mấy bước phần tử 36 giữ vị trí ổn định của nó?</p>',0,2,NULL,NULL,NULL,NULL),(115,1,1,3,'<p>Cho mảng A (8 phần tử) như sau: 42 23 74 11 65 58 94 36</p><p>Dùng phương pháp sắp xếp Nổi bọt (Bubble Sort), sau mấy bước phần tử 11 giữ vị trí ổn định của nó?</p>',0,2,NULL,NULL,NULL,NULL),(116,1,1,3,'<p>Cho mảng A (10 phần tử) như sau: 42 23 74 11 65 58 94 36 99 87</p><p>Dùng phương pháp sắp xếp Nổi bọt (Bubble Sort), sau bước thứ 1, số 87 về vị trí thứ mấy?</p>',0,2,NULL,NULL,NULL,NULL),(117,1,1,3,'<p>Cho mảng A (10 phần tử) như sau: 42 23 74 11 65 58 94 36 99 87</p><p>Dùng phương pháp sắp xếp Nổi bọt (Buble Sort), sau bước thứ 1, ba vị trí cuối cùng là các số nào?</p>',0,2,NULL,NULL,NULL,NULL),(118,1,1,3,'<p>Cho mảng A (10 phần tử) như sau: 42 23 74 11 65 58 94 36 99 87</p><p>Dùng phương pháp sắp xếp Nhanh (Quick Sort), sau bước thứ 1, ba vị trí đầu tiên là các số nào?</p>',0,2,NULL,NULL,NULL,NULL),(119,1,1,3,'<p>Cho mảng A (10 phần tử) như sau: 42 23 74 11 65 58 94 36 99 87</p><p>Dùng phương pháp sắp xếp Chèn trực tiếp (Insertion Sort), sau 3 bước, vị trí cuối cùng là các số nào?</p>',0,2,NULL,NULL,NULL,NULL),(120,1,1,4,'<p>Cho thuật toán sau:</p><p>void T(int A[], int n)</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int i, j, minIndex, tmp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(i=0; i&lt;n; i++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; minIndex = i;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(j=i+1; j&lt;n; j++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(A[j] &lt; A[minIndex])</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; minIndex = j;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(minIndex != i)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tmp = A[i];</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A[i] = A[minIndex];</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A[minIndex] = tmp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>}</p><p>Thuật toán trên là?</p>',0,2,NULL,NULL,NULL,NULL),(121,1,1,3,'<p>Các giá trị của mảng A được sắp xếp theo thứ tự tăng dần từng bước như sau:</p><p>3, 2, 7, 9, 1, 6</p><p>2, 3, 7, 9, 1, 6</p><p>1, 2, 3, 7, 9, 6</p><p>1, 2, 3, 6, 7, 9</p><p>Mảng A được sắp xếp theo thuật toán nào?</p>',0,2,NULL,NULL,NULL,NULL),(122,1,1,3,'<p>Các giá trị của mảng A được sắp xếp theo thứ tự tăng dần từng bước như sau:</p><p>12, 2, 8, 5, 1, 6, 4, 15</p><p>4, 2, 8, 5, 1, 6, 12, 15</p><p>4, 2, 1, 5, 8, 6, 12, 15</p><p>1, 2, 4, 5, 6, 8, 12, 15</p><p>Mảng A được sắp xếp theo thuật toán nào?</p>',0,2,5,NULL,NULL,NULL),(123,1,1,4,'<p>Cho đoạn chương trình đường viết như sau:</p><p>first = 0;</p><p>last = num-1;</p><p>found = false;</p><p>while (first &lt;= last &amp;&amp; !found){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mid = (first+last)/2;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(item == list[ ____ ])</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; found=true;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else if(item&lt;list[ ____ ])</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; last=mid-1;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; first=mid+1;</p><p>}</p><p>Từ còn thiếu là:</p>',0,2,2,NULL,NULL,NULL),(124,1,1,3,'<p>Các giá trị của mảng A được sắp xếp theo thứ tự tăng dần từng bước như sau:</p><p>3, 2, 7, 9, 1, 6</p><p>2, 3, 7, 9, 1, 6</p><p>1, 3, 7, 9, 2, 6</p><p>1, 2, 7, 9, 3, 6</p><p>1, 2, 3, 9, 7, 6</p><p>1, 2, 3, 7, 9, 6</p><p>1, 2, 3, 6, 9, 7</p><p>1, 2, 3, 6, 7, 9</p><p>Mảng A được sắp xếp theo thuật toán nào?</p>',0,2,2,NULL,NULL,NULL),(125,1,1,4,'<p>Cho mảng A (8 phần tử) như sau: 3&nbsp; 8&nbsp; 4&nbsp; 7&nbsp; 2&nbsp; 3&nbsp; 5&nbsp; 1</p><p>Cho biết kết quả của hàm sau:</p><p>int Dem(int A[], int n)</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(int i=0, int k=0; i&lt;n; i++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(A[i] % 2 == 0 &amp;&amp; i % 2 == 0)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; k++;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return k;</p><p>}</p>',0,2,2,NULL,NULL,NULL),(126,1,1,4,'<p>Cho mảng A (8 phần tử) như sau: 3&nbsp; 8&nbsp; 4&nbsp; 7&nbsp; 2&nbsp; 3&nbsp; 5&nbsp; 1</p><p>Cho biết kết quả của hàm sau:</p><p>int Tim(int A[], int n)</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int d=0;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(int i=n-1; i&gt;=0; i--)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(A[i] % 3 == 1) return i;</p><p>}</p>',0,2,2,NULL,NULL,NULL),(127,1,1,3,'<p>Chọn câu đúng nhất để mô tả thuật toán sắp xếp nổi bọt (Bubble Sort) trên mảng M có N phần tử:</p><p>Đi từ cuối mảng về đầu mảng, trong quá trình đi nếu phần tử ở dưới (đứng phía sau) nhỏ hơn phần tử đứng ngay trên (trước) nó thì hai phần tử này sẽ được đổi chỗ cho nhau. Sau mỗi lần đi chúng ta đưa được một phần tử trồi lên đúng chỗ. Sau.................... lần đi thì tất cả các phần tử trong mảng M sẽ có thứ tự tăng</p>',0,2,NULL,NULL,NULL,NULL),(128,1,1,4,'<p>Với thủ tục như sau</p><p>void operation()</p><p>{</p><p>&nbsp;int x,a[10],n;</p><p>&nbsp;int x,m,l,h,flag=0;</p><p>printf(\"Enter the element to be searched:\");</p><p>scanf(\"%d\",&amp;x);</p><p>&nbsp;l=0; h=n-1;</p><p>&nbsp;while(l&lt;=h)</p><p>&nbsp;{</p><p>&nbsp; m=(l+h)/2;</p><p>&nbsp; if(x==a[m]) {</p><p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lag=1; break;</p><p>&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;}</p><p>&nbsp; else if(x&gt;a[m])</p><p>l=m+1;</p><p>&nbsp; else if(x&lt;a[m])</p><p>h=m-1;</p><p>&nbsp;}</p><p>&nbsp;if(flag==0)</p><p>printf(\"ABSENT\");</p><p>&nbsp;else</p><p>printf(\"PRESENT\");</p><p>} Lựa chọn câu đúng nhất để mô tả thủ tục trên</p>',0,2,NULL,NULL,NULL,NULL),(129,1,1,1,'<p>Trong vấn đề quản lý mảng ta dùng 2 \"con trỏ\" là :</p>',0,2,NULL,NULL,NULL,NULL),(130,1,1,1,'<p>Định nghĩa nào là đúng với danh sách liên kết</p>',0,2,NULL,NULL,NULL,NULL),(131,1,1,1,'<p>NULL là ?</p>',0,2,NULL,NULL,NULL,NULL),(132,1,1,1,'<p>Ưu điểm của danh sách liên kết?</p>',0,2,NULL,NULL,NULL,NULL),(133,1,1,1,'<p>Để truy xuất một biến động, người ta thông qua:</p>',0,2,NULL,NULL,NULL,NULL),(134,1,1,2,'<p>Con trỏ p ở câu nào sau đây khai báo không hợp lệ?</p>',0,2,NULL,NULL,NULL,NULL),(135,1,1,1,'<p>Để quản lý một danh sách liên kết đơn, ít nhất chúng ta phải biết:</p>',0,2,NULL,NULL,NULL,NULL),(136,1,1,2,'<p>Định nghĩa cấu trúc dữ liệu của danh sách liên kết đơn được mô tả như sau:</p><p>typedef struc Node</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int Key;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node *pNext;</p><p>};</p><p>Trong đó khai báo Node *pNext dùng để mô tả:</p>',0,2,NULL,NULL,NULL,NULL),(137,1,1,1,'<p>Một Node trong danh sách liên kết tối thiểu gồm có bao nhiêu phần:</p>',0,2,NULL,NULL,NULL,NULL),(138,1,1,2,'<p>Dấu hiệu nào dưới đây cho biết danh sách liên kết đơn L là rỗng:</p>',0,2,NULL,NULL,NULL,NULL),(139,1,1,1,'<p>Danh sách liên kết là:</p>',0,2,NULL,NULL,NULL,NULL),(140,1,1,1,'<p>Lựa chọn câu đúng nhất về danh sách liên kết đôi (Doubly Linked List)</p>',0,2,NULL,NULL,NULL,NULL),(141,1,1,3,'<p>Đây là cấu trúc khai báo một danh sách liên kết đơn, thêm dòng còn thiếu:</p><p>typedef struct Node</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Data Info;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ……………………..</p><p>} ;</p><p>typedef struct List</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node *pHead;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node *pTail;</p><p>} ;</p>',0,2,NULL,NULL,NULL,NULL),(142,1,1,3,'<p>Định nghĩa cấu trúc dữ liệu của danh sách liên kết đơn được mô tả như sau:</p><p>struct Node</p><p>{</p><p>int Key;</p><p>Node * NextNode;</p><p>} OneNode;</p><p>Trong đó, khai báo Node * NextNode; dùng để mô tả</p>',0,2,NULL,NULL,NULL,NULL),(143,1,1,4,'<p>Cho danh sách liên kết đơn được quản lý bằng con trỏ pHead như sau:</p><p>typedef struct NODE</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int Data;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NODE *next;</p><p>};</p><p>NODE *pHead, *pTail;</p><p>Hàm tìm kiếm phần tử nào sau đây là đúng?</p>',0,2,NULL,NULL,NULL,NULL),(144,1,1,4,'<p>Cho danh sách liên kết đơn được quản lý bằng con trỏ pHead như sau:</p><p>typedef struct Node</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int Data;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node *next;</p><p>};</p><p>Node *pHead;</p><p>Hàm nào sau đay dùng để đếm tổng số nút trong danh sách liên kết đơn:</p>',0,2,NULL,NULL,NULL,NULL),(145,1,1,4,'<p>Cho cấu trúc danh sách liên kết đơn được khai báo như sau:</p><p>typedef struct Node</p><p>{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int item;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node *link;</p><p>};</p><p>Node *head;</p><p>Câu lệnh nào sau đây sẽ khởi tạo vùng nhớ cho phần tử đầu tiên của danh sách?</p>',0,2,NULL,NULL,NULL,NULL),(146,1,1,3,'<p>Cho cấu trúc danh sách liên kết được khai báo như sau:</p><p>typedef struct ListNode{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; float data;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ListNode *next;</p><p>};</p><p>ListNode *ptr;</p><p>Câu lệnh nào chỉ ra con trỏ ptr trỏ đến nút tiếp theo trong danh sách?</p>',0,2,NULL,NULL,NULL,NULL),(147,1,1,4,'<p>Danh sách liên kết đơn gồm 2 nút 18 và 32 được khởi tạo bằng đoạn mã lệnh sau đây:</p><p>typedef struc Node{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int data;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node *next;</p><p>};</p><p>Node *p, *q;</p><p>p = new Node;</p><p>p-&gt;data = 18;</p><p>q = new Node;</p><p>q-&gt;data = 32;</p><p>-------------------------[1]</p><p>q-&gt;next = NULL;</p><p>Hãy điền câu lệnh còn thiếu vào [1]:</p>',0,2,NULL,NULL,NULL,NULL),(148,1,1,3,'<p>Dấu hiệu nào sau đây cho biết danh sách liên kết đơn L là rỗng?</p>',0,2,NULL,NULL,NULL,NULL),(149,1,1,2,'<p>Cho phát biểu sau:</p><p>B1: &nbsp;&nbsp;&nbsp;&nbsp; p = Head</p><p>B2:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B21: Head = Head-&gt;pNext</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B22: delete(p)</p><p>B3:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Nếu Head=NULL thì Tail=NULL</p><p>Phát biểu trên là giải thuật:</p>',0,2,NULL,NULL,NULL,NULL),(150,1,1,3,'<p>Cho biết hàm ProcessElement thực hiện công việc gì:</p><p>void ProcessElement(List &amp;L, Node *p)</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(L.pHead == NULL)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; L.pHead = p;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; L.pTail = p;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; L.pTail-&gt;pNext = p;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; L.pTail = p;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>}</p>',0,2,NULL,NULL,NULL,NULL),(151,1,1,4,'<p>Đoạn chương trình dùng để xóa phần tử đầu danh sách. Cho biết câu lệnh nào sai?</p><p>(1) void Process(List &amp;L)</p><p>(2) {</p><p>(3)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node *p=L.pHead;</p><p>(4)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; L.pHead = L.pHead-&gt;pNext;</p><p>(5)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(L.pHead = NULL) L.pTail = NULL;</p><p>(6)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; delete p;</p><p>(7) }</p>',0,2,NULL,NULL,NULL,NULL),(152,1,1,4,'<p>Cho biết ý nghĩa của hàm sau:</p><p>Node *SearchList(List L, int X)</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node *p=L.pHead;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while(p-&gt;Info != X &amp;&amp; p != NULL)</p><p>p = p-&gt;pNext;</p><p>return p;</p><p>}</p>',0,2,NULL,NULL,NULL,NULL),(153,1,1,4,'<p>Cho danh sách liên kết đơn L gồm các phần tử sau:</p><p>5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2</p><p>Cho biết kết quả của hàm sau:</p><p>int Count(List L)</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int d=0;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node *p=L.pHead;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while(p != NULL)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(p-&gt;Info % 2 == 0) d++;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p = p-&gt;pNext;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return d;</p><p>}</p>',0,2,NULL,NULL,NULL,NULL),(154,1,1,4,'<p>Cho danh sách liên kết đơn L gồm các phần tử sau:</p><p>5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2</p><p>Cho biết kết quả của hàm sau:</p><p>void PutOut(List L)</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node *p=L.pHead;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(\"%d\",p-&gt;pNext-&gt;Info);</p><p>}</p>',0,2,NULL,NULL,NULL,NULL),(155,1,1,4,'<p>Cho danh sách liên kết đơn L gồm các phần tử sau:</p><p>5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2</p><p>Cho biết kết quả của hàm sau:</p><p>int Sumary(List L)</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node *p; int strong=0;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p=L.pHead;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while(p!=NULL)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; strong = strong + p-&gt;Info;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return strong;</p><p>}</p>',0,2,NULL,NULL,NULL,NULL),(156,1,1,4,'<p>Cho danh sách liên kết đơn L gồm các phần tử sau:</p><p>5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2</p><p>Cho biết kết quả của hàm sau:</p><p>int Tinh(List L)</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int d=0;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node *p=L.pHead;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while(p != NULL)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(p-&gt;Info &lt; 0) d=d+p-&gt;Info;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p=p-&gt;pNext;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return d;</p><p>}</p>',0,2,NULL,NULL,NULL,NULL),(157,1,1,4,'<p>Cho danh sách liên kết đơn L gồm các phần tử sau:</p><p>5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2</p><p>Cho biết kết quả của hàm sau:</p><p>int Dem(List L)</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int t=0;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node *p=L.pHead;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while(p != L.pTail)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(p-&gt;Info &gt; 0) t++;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p=p-&gt;pNext;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return t;</p><p>}</p>',0,2,NULL,NULL,NULL,NULL),(158,1,1,3,'<p>Khi cần thêm một phần tử có giá trị thành phần dữ liệu là NewData (là một số nguyên) vào đầu của danh sách liên kết đơn dùng thuật toán có mã giả mô tả như dưới đây.</p><p>typedef struct Node</p><p>{</p><p>int Data;</p><p>Node * NextNode;</p><p>} OneNode;</p><p>typedef OneNode * SLLPointer;</p><p>SLLPointer SSList;</p><p>B1: NewNode = new OneNode</p><p>B2: IF (NewNode = NULL)</p><p>Thực hiện BKT</p><p>B3: NewNode -&gt;NextNode = NULL</p><p>B4: NewNode -&gt;Data = NewData</p><p>B5: NewNode-&gt;NextNode = SLList</p><p>B6: SLList = NewNode</p><p>BKT: Kết thúc</p><p>Tìm mô tả chính xác cho B5<br></p>',0,2,NULL,NULL,NULL,NULL),(159,1,1,1,'<p>Ngăn xếp thường được gọi là cấu trúc dữ liệu dạng:</p>',0,2,NULL,NULL,NULL,NULL),(160,1,1,1,'<p>Cấu trúc dữ liệu được dùng để khử đệ quy là:</p>',0,2,NULL,NULL,NULL,NULL),(161,1,1,1,'<p>Định nghĩa nào sau đây là đúng với cấu trúc dữ liệu Ngăn xếp (Stack)?</p>',0,2,NULL,NULL,NULL,NULL),(162,1,1,1,'<p>Hàm nào được dùng để lấy giá trị từ đỉnh một ngăn xếp (stack)?</p>',0,2,NULL,NULL,NULL,NULL),(163,1,1,1,'<p>Hai hàm được sử dụng phổ biến nhất của ngăn xếp (stack) là:</p>',0,2,NULL,NULL,NULL,NULL),(164,1,1,1,'<p>Hàm thêm một phần tử vào ngăn xếp (stack) được gọi là:</p>',0,2,NULL,NULL,NULL,NULL),(165,1,1,1,'<p>Thao tác nào dưới đây thực hiện trên ngăn xếp (stack):</p>',0,2,NULL,NULL,NULL,NULL),(166,1,1,1,'<p>Cấu trúc dữ liệu nào tương ứng với LIFO</p>',0,2,NULL,NULL,NULL,NULL),(167,1,1,3,'<p>Đây là hàm lấy 1 phần tử ra khỏi stack, hãy chọn dòng lệnh còn thiếu trong hàm:</p><p>void Pop(Stack &amp;s , Data &amp;X)</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node *p;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(s.pTop != NULL)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; p = s.pTop;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; X = p-&gt;Info;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; s.pTop = s.pTop-&gt;pNext;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; …………………………….</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp;&nbsp;&nbsp;</p><p>}</p>',0,2,NULL,NULL,NULL,NULL),(168,1,1,3,'<p>Khi khởi tạo Stack, thì ta phải làm gì trong thân hàm</p><p>void Khoitao(Stack &amp;s)</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ……………………………</p><p>}</p>',0,2,NULL,NULL,NULL,NULL),(169,1,1,3,'<p>Đây là cấu trúc định nghĩa Stack, hãy bổ sung dòng còn thiếu:</p><p>typedef struct Node</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Data Info;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; struct Node *pNext;</p><p>} ;</p><p>&nbsp;</p><p>typedef struct Stack</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ……………………..</p><p>} ;</p>',0,2,NULL,NULL,NULL,NULL),(170,1,1,3,'<p>Hãy chọn dòng còn thiếu cho hàm thêm 1 phần tử vào stack</p><p>void Push(Stack &amp;s, Data x)</p><p>{<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node *p=new Node;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If(p==NULL) return;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pàinfo = x;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ......................................;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; s.pTop=p;</p><p>}</p>',0,2,NULL,NULL,NULL,NULL),(171,1,1,4,'<p>Thực hiện đoạn chương trình sau với hàm Push và Pop của Stack s:</p><p>IntStack s = new IntStrack();</p><p>Push(s,1);</p><p>Push(s,2);</p><p>Pop(s);</p><p>Push(s,3);</p><p>Push(s,2);</p><p>Pop(s);</p><p>Push(s,2);</p><p>printf(\"%d\",Pop(s));</p><p>Kết quả in ra sẽ là:</p>',0,2,NULL,NULL,NULL,NULL),(172,1,1,4,'<p>Với cấu trúc dữ liệu mô tả cho Stack</p><p>typedef struct SElement</p><p>{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int Key;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SElement *Next;</p><p>} SOneElement;</p><p>typedef SOneElement *SSTACK;</p><p>&nbsp;</p><p>Tìm mô tả chính xác cho hàm sau:</p><p>void SSDelete (SSTACK &amp;SList)</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while (SList != NULL)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SSTACK TempElement = SList;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SList = SList -&gt;Next;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TempElement -&gt;Next = NULL;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; delete TempElement;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>}</p>',0,2,NULL,NULL,NULL,NULL),(173,1,1,1,'<p>Hàng đợi thường được gọi là cấu trúc dữ liệu dạng:</p>',0,2,NULL,NULL,NULL,NULL),(174,1,1,1,'<p>Định nghĩa nào sau đây là đúng với cấu trúc dữ liệu Hàng đợi (Queue)?</p>',0,2,NULL,NULL,NULL,NULL),(175,1,1,1,'<p>Một nút mới sẽ được thêm vào _________ của hàng đợi (queue)</p>',0,2,NULL,NULL,NULL,NULL),(176,1,1,1,'<p>Cấu trúc dữ liệu nào cho phép lấy dữ liệu ra ở đầu và thêm vào ở cuối?</p>',0,2,NULL,NULL,NULL,NULL),(177,1,1,2,'<p>Nếu ta thêm các ký tự D, C, B, A vào hàng đợi (queue) thì khi lấy ra chúng sẽ là:</p>',0,2,NULL,NULL,NULL,NULL),(178,1,1,1,'<p>Tên hàm thường dùng để thêm dữ liệu vào cuối của hàng đợi (queue) là:</p>',0,2,NULL,NULL,NULL,NULL),(179,1,1,1,'<p>Thao tác nào dưới đây thực hiện trên hàng đợi (queue):</p>',0,2,NULL,NULL,NULL,NULL),(180,1,1,3,'<p>Dấu hiệu nào dưới đây cho biết hàng đợi đã có thao tác thêm và loại bỏ phần tử là rỗng:</p>',0,2,NULL,NULL,NULL,NULL),(181,1,1,2,'<p>Trong hàm lấy một nút ra khỏi Queue, trường hợp xét thấy Queue rỗng thì ta làm</p>',0,2,NULL,NULL,NULL,NULL),(182,1,1,1,'<p>Chọn định nghĩa đúng nhất về hàng đợi (Queue)</p>',0,2,NULL,NULL,NULL,NULL),(183,1,1,3,'<p>Cho biết code trên định nghĩa cho cấu trúc nào:</p><p>typedef struct Node</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Data Info;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; struct Node *pNext;</p><p>} ;</p><p>&nbsp;</p><p>typedef struct Name</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node *pFront;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node *pRear;</p><p>} ;</p>',0,2,NULL,NULL,NULL,NULL),(184,1,1,3,'<p>Đây là hàm thêm 1 phần tử vào Queue, hãy chọn dòng lệnh bổ sung cho hàm:</p><p>void EnQueue(Queue &amp;q , Data X)</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ……………………………….</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(q.pFront==NULL)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; q.pFront = q.pRear = p;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; q.pRear-&gt;pNext = p;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; q.pRear = p;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp;&nbsp;&nbsp;</p><p>}</p>',0,2,NULL,NULL,NULL,NULL),(185,1,1,1,'<p>Nút có khóa lớn nhất trong cây nhị phân tìm kiếm khác rỗng là:</p>',0,2,NULL,NULL,NULL,NULL),(186,1,1,2,'<p>Trong phép duyệt cây nhị phân có 24 nút theo thứ tự sau, nút gốc có thứ tự:</p>',0,2,NULL,NULL,NULL,NULL),(187,1,1,2,'<p>Nút có khóa nhỏ nhất trong cây nhị phân tìm kiếm khác rỗng là:</p>',0,2,NULL,NULL,NULL,NULL),(188,1,1,2,'<p>Cây nhị phân khác rỗng là cây:</p>',0,2,NULL,NULL,NULL,NULL),(189,1,1,1,'<p>Trong cấu trúc cây, khái niệm nào sau đây là sai:</p>',0,2,NULL,NULL,NULL,NULL),(190,1,1,1,'<p>Trong phép duyệt cây nhị phân có 4 nút theo thứ tự trước, nút gốc có thứ tự:</p>',0,2,NULL,NULL,NULL,NULL),(191,1,1,2,'<p>Trong cây nhị phân tìm kiếm, nếu node cần thêm nhỏ hơn node đang xét thì thêm:</p>',0,2,NULL,NULL,NULL,NULL),(192,1,1,2,'<p>Trong cây nhị phân tìm kiếm, nếu node cần thêm lớn hơn node đang xét thì thêm:</p>',0,2,NULL,NULL,NULL,NULL),(193,1,1,1,'<p>Trong cấu trúc cây , nút nhánh là nút:</p>',0,2,NULL,NULL,NULL,NULL),(194,1,1,1,'<p>Duyệt cây theo thứ tự NLR là&nbsp;:</p>',0,2,NULL,NULL,NULL,NULL),(195,1,1,1,'<p>Duyệt cây theo thứ tự LNR là&nbsp;:</p>',0,2,NULL,NULL,NULL,NULL),(196,1,1,2,'<p>Duyệt cây theo thứ tự nút gốc duyệt cuối cùng là duyệt theo&nbsp;:</p>',0,2,NULL,NULL,NULL,NULL),(197,1,1,3,'<p>Thêm dòng còn thiếu cho khai báo cấu trúc cây sau:</p><p>typedef struct Node</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Data &nbsp;&nbsp; Info;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ………………………….</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; struct Node *pRight;</p><p>};</p><p>&nbsp;</p><p>typedef&nbsp; struct Tree</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node *pRoot;</p><p>};</p>',0,2,NULL,NULL,NULL,NULL),(198,1,1,2,'<p>Cây nhị phân là cây mà mỗi nút có nhiều nhất _____ nút con.</p>',0,2,NULL,NULL,NULL,NULL),(199,1,1,1,'<p>Nút cha còn được là nút gì?</p>',0,2,NULL,NULL,NULL,NULL),(200,1,1,1,'<p>Độ cao của cây là gì?</p>',0,2,NULL,NULL,NULL,NULL),(201,1,1,2,'<p>Chọn định nghĩa đúng nhất đối với cây nhị phân tìm kiếm</p>',0,2,NULL,NULL,NULL,NULL),(202,1,1,3,'<p><img src=\"data/media/question/202/1447108584.png\" alt=\"\" width=\"388\" height=\"333\"><br></p><p><span style=\"display: table;\" data-mce-style=\"display: table;\"><span style=\"display: table; width: 100%; table-layout: fixed;\" data-mce-style=\"display: table; width: 100%; table-layout: fixed;\"><span style=\"display: table; height: 100%; width: 100%; table-layout: fixed;\" data-mce-style=\"display: table; height: 100%; width: 100%; table-layout: fixed;\">Chọn biểu thức tương ứng với cây</span></span></span></p>',0,2,5,NULL,NULL,NULL),(203,1,1,1,'<p>Trong cấu trúc cây nhị phân, thì có bao nhiêu trường hợp xóa nút:</p>',0,2,NULL,NULL,NULL,NULL),(204,1,1,1,'<p>Có bao nhiêu cách duyệt cây nhị phân</p>',0,2,NULL,NULL,NULL,NULL),(205,1,1,3,'<p>Ta có cây nhị phân sau, hình trên đang mô tả gì:</p><p><span style=\"display:table;\"><span style=\"display: table; width: 100%; table-layout: fixed;\"><span style=\"display: table; height: 100%; width: 100%; table-layout: fixed;\"><img src=\"data/media/question/205/1447108792.jpg\" alt=\"\" width=\"632\" height=\"255\" data-mce-selected=\"1\"><br data-mce-bogus=\"1\"></span></span></span></p><div id=\"mceResizeHandlen\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: n-resize; margin: 0px; padding: 0px; left: 36.5px; top: 29px;\"></div><div id=\"mceResizeHandlee\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: e-resize; margin: 0px; padding: 0px; left: 352.5px; top: 156.5px;\"></div><div id=\"mceResizeHandles\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: s-resize; margin: 0px; padding: 0px; left: 36.5px; top: 284px;\"></div><div id=\"mceResizeHandlew\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: w-resize; margin: 0px; padding: 0px; left: -279.5px; top: 156.5px;\"></div><div id=\"mceResizeHandlenw\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: nw-resize; margin: 0px; padding: 0px; left: -279.5px; top: 29px;\"></div><div id=\"mceResizeHandlene\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: ne-resize; margin: 0px; padding: 0px; left: 352.5px; top: 29px;\"></div><div id=\"mceResizeHandlese\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: se-resize; margin: 0px; padding: 0px; left: 352.5px; top: 284px;\"></div><div id=\"mceResizeHandlesw\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: sw-resize; margin: 0px; padding: 0px; left: -279.5px; top: 284px;\"></div>',0,2,NULL,NULL,NULL,NULL),(206,1,1,3,'<p>Nếu&nbsp;xóa phần tử 40, thì nút có gía trị nào sẽ là nút thế mạng:</p><p><span style=\"display:table;\"><span style=\"display: table; width: 100%; table-layout: fixed;\"><span style=\"display: table; height: 100%; width: 100%; table-layout: fixed;\"><img src=\"data/media/question/206/1447109030.png\" alt=\"\" width=\"388\" height=\"285\"><br data-mce-bogus=\"1\"></span></span></span></p>',0,2,NULL,NULL,NULL,NULL),(207,1,1,3,'<p>Nếu thêm 1 nút có giá trị là 48, sẽ được thêm ở:</p><p><span style=\"display:table;\"><span style=\"display: table; width: 100%; table-layout: fixed;\"><span style=\"display: table; height: 100%; width: 100%; table-layout: fixed;\"><img src=\"data/media/question/207/1447109134.png\" alt=\"\" width=\"303\" height=\"273\"><br data-mce-bogus=\"1\"></span></span></span></p>',0,2,NULL,NULL,NULL,NULL),(208,1,1,3,'<p>Cho cây nhị phân T như hình vẽ. Phép duyệt thứ tự trước (LNR) cho kết quả là:</p><p><span style=\"display:table;\"><span style=\"display: table; width: 100%; table-layout: fixed;\"><span style=\"display: table; height: 100%; width: 100%; table-layout: fixed;\"><img src=\"data/media/question/208/1447109225.png\" alt=\"\" width=\"204\" height=\"149\"><br data-mce-bogus=\"1\"></span></span></span></p>',0,2,NULL,NULL,NULL,NULL),(209,1,1,3,'<p>Cho cây nhị phân T như hình vẽ. Phép duyệt thứ tự giữa (NLR) cho kết quả là:</p><p><span style=\"display:table;\"><span style=\"display: table; width: 100%; table-layout: fixed;\"><span style=\"display: table; height: 100%; width: 100%; table-layout: fixed;\"><img src=\"data/media/question/209/1447109340.png\" alt=\"\" width=\"204\" height=\"149\"><br data-mce-bogus=\"1\"></span></span></span></p>',0,2,NULL,NULL,NULL,NULL),(210,1,1,3,'<p>Cho cây nhị phân T như hình vẽ. Phép duyệt thứ tự SAU (LRN) cho kết quả là:</p><p><span style=\"display:table;\"><span style=\"display: table; width: 100%; table-layout: fixed;\"><span style=\"display: table; height: 100%; width: 100%; table-layout: fixed;\"><img src=\"data/media/question/210/1447109400.png\" alt=\"\" width=\"204\" height=\"149\" data-mce-selected=\"1\"><br data-mce-bogus=\"1\"></span></span></span></p><div id=\"mceResizeHandlen\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: n-resize; margin: 0px; padding: 0px; left: -177.5px; top: 29px;\"></div><div id=\"mceResizeHandlee\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: e-resize; margin: 0px; padding: 0px; left: -75.5px; top: 103.5px;\"></div><div id=\"mceResizeHandles\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: s-resize; margin: 0px; padding: 0px; left: -177.5px; top: 178px;\"></div><div id=\"mceResizeHandlew\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: w-resize; margin: 0px; padding: 0px; left: -279.5px; top: 103.5px;\"></div><div id=\"mceResizeHandlenw\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: nw-resize; margin: 0px; padding: 0px; left: -279.5px; top: 29px;\"></div><div id=\"mceResizeHandlene\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: ne-resize; margin: 0px; padding: 0px; left: -75.5px; top: 29px;\"></div><div id=\"mceResizeHandlese\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: se-resize; margin: 0px; padding: 0px; left: -75.5px; top: 178px;\"></div><div id=\"mceResizeHandlesw\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: sw-resize; margin: 0px; padding: 0px; left: -279.5px; top: 178px;\"></div>',0,2,NULL,NULL,NULL,NULL),(211,1,1,3,'<p>Cho cây nhị phân T. Phép duyệt cây theo thứ tự trước (NLR) cho kết quả ABDEHCFIGJ. Nếu duyệt theo thứ tự giữa (LNR) ta có kết quả: DBHEAFICGJ. Hãy cho biết các nút của cây con trái:</p>',0,2,NULL,NULL,NULL,NULL),(212,1,1,3,'<p>Cho cây nhị phân T. Phép duyệt cây theo thứ tự giữa (LNR) cho kết quả DBHEAFICGJ. Nếu duyệt theo thứ tự sau (LRN) ta có kết quả: DHEBIFJGCA. Hãy cho biết các nút của cây con phải:</p>',0,2,NULL,NULL,NULL,NULL),(213,1,1,3,'<p>Cho cây nhị phân T, nút có địa chỉ là 7 thì có 2 con ở địa chỉ nào?</p>',0,2,NULL,NULL,NULL,NULL),(214,1,1,3,'<p>Cho cây nhị phân T, nút có địa chỉ là 19 thì có nút cha ở địa chỉ nào?</p>',0,2,NULL,NULL,NULL,NULL),(215,1,1,3,'<p>Cho cây như hình vẽ. Hãy cho biết phần tử thứ 2 của phép duyệt NLR?</p><p><span style=\"display:table;\"><span style=\"display: table; width: 100%; table-layout: fixed;\"><span style=\"display: table; height: 100%; width: 100%; table-layout: fixed;\"><img src=\"data/media/question/215/1447109834.png\" alt=\"\" width=\"172\" height=\"203\" data-mce-selected=\"1\"><br data-mce-bogus=\"1\"></span></span></span></p><div id=\"mceResizeHandlen\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: n-resize; margin: 0px; padding: 0px; left: -193.5px; top: 29px;\"></div><div id=\"mceResizeHandlee\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: e-resize; margin: 0px; padding: 0px; left: -107.5px; top: 130.5px;\"></div><div id=\"mceResizeHandles\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: s-resize; margin: 0px; padding: 0px; left: -193.5px; top: 232px;\"></div><div id=\"mceResizeHandlew\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: w-resize; margin: 0px; padding: 0px; left: -279.5px; top: 130.5px;\"></div><div id=\"mceResizeHandlenw\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: nw-resize; margin: 0px; padding: 0px; left: -279.5px; top: 29px;\"></div><div id=\"mceResizeHandlene\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: ne-resize; margin: 0px; padding: 0px; left: -107.5px; top: 29px;\"></div><div id=\"mceResizeHandlese\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: se-resize; margin: 0px; padding: 0px; left: -107.5px; top: 232px;\"></div><div id=\"mceResizeHandlesw\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: sw-resize; margin: 0px; padding: 0px; left: -279.5px; top: 232px;\"></div>',0,2,NULL,NULL,NULL,NULL),(216,1,1,4,'<p>Cho cấu trúc cây được định nghĩa như sau:</p><p>typedef struct TreeType</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int Data;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TreeType *Left;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TreeType *Right;</p><p>};</p><p>và hàm in giá trị các node trong cây ra màn hình.</p><p>void Duyet(TreeType *Node, int &amp;K)</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(Node != NULL)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Duyet(Node-&gt;Left,K);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; K++;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(\"%d\",___________); [1]</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Duyet(Node-&gt;Right,K);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>}</p><p>Hãy điền giá trị còn thiếu vào [1]:</p>',0,2,NULL,NULL,NULL,NULL),(217,1,1,3,'<p>Sau khi xóa node 2, node nào sẽ thay thế cho node 2?</p><p><span style=\"display:table;\"><span style=\"display: table; width: 100%; table-layout: fixed;\"><span style=\"display: table; height: 100%; width: 100%; table-layout: fixed;\"><img src=\"data/media/question/217/1447110013.png\" alt=\"\" width=\"185\" height=\"201\" data-mce-selected=\"1\"><br data-mce-bogus=\"1\"></span></span></span></p><div id=\"mceResizeHandlen\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: n-resize; margin: 0px; padding: 0px; left: -187px; top: 29px;\"></div><div id=\"mceResizeHandlee\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: e-resize; margin: 0px; padding: 0px; left: -94.5px; top: 129.5px;\"></div><div id=\"mceResizeHandles\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: s-resize; margin: 0px; padding: 0px; left: -187px; top: 230px;\"></div><div id=\"mceResizeHandlew\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: w-resize; margin: 0px; padding: 0px; left: -279.5px; top: 129.5px;\"></div><div id=\"mceResizeHandlenw\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: nw-resize; margin: 0px; padding: 0px; left: -279.5px; top: 29px;\"></div><div id=\"mceResizeHandlene\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: ne-resize; margin: 0px; padding: 0px; left: -94.5px; top: 29px;\"></div><div id=\"mceResizeHandlese\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: se-resize; margin: 0px; padding: 0px; left: -94.5px; top: 230px;\"></div><div id=\"mceResizeHandlesw\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: sw-resize; margin: 0px; padding: 0px; left: -279.5px; top: 230px;\"></div>',0,2,NULL,NULL,NULL,NULL),(218,1,1,4,'<p>Cho cấu trúc cây được định nghĩa như sau:</p><p>typedef struct TreeNode</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int Data;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TreeNode *Left;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TreeNode *Right;</p><p>};</p><p>và hàm PrintNode để in các giá trị trong cây.</p><p>void PrintNode(TreeNode *top)</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(top != _______) [1]</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PrintNode(top-&gt;Right);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(\"%d\",top-&gt;Data);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PrintNode(top-&gt;Left);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>}</p><p>Hãy điền giá trị còn thiếu vào [1]:</p>',0,2,NULL,NULL,NULL,NULL),(219,1,1,3,'<p>Cho cây nhị phân tìm kiếm như hình vẽ. Nếu xóa nút 30 thì nút nào sẽ thay thế? (nút chọn là nút ở cây bên trái nút 30)</p><p><span style=\"display:table;\"><span style=\"display: table; width: 100%; table-layout: fixed;\"><span style=\"display: table; height: 100%; width: 100%; table-layout: fixed;\"><img src=\"data/media/question/219/1447110174.png\" alt=\"\" width=\"439\" height=\"329\" data-mce-selected=\"1\"><br data-mce-bogus=\"1\"></span></span></span></p><div id=\"mceResizeHandlen\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: n-resize; margin: 0px; padding: 0px; left: -60px; top: 44px;\"></div><div id=\"mceResizeHandlee\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: e-resize; margin: 0px; padding: 0px; left: 159.5px; top: 208.5px;\"></div><div id=\"mceResizeHandles\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: s-resize; margin: 0px; padding: 0px; left: -60px; top: 373px;\"></div><div id=\"mceResizeHandlew\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: w-resize; margin: 0px; padding: 0px; left: -279.5px; top: 208.5px;\"></div><div id=\"mceResizeHandlenw\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: nw-resize; margin: 0px; padding: 0px; left: -279.5px; top: 44px;\"></div><div id=\"mceResizeHandlene\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: ne-resize; margin: 0px; padding: 0px; left: 159.5px; top: 44px;\"></div><div id=\"mceResizeHandlese\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: se-resize; margin: 0px; padding: 0px; left: 159.5px; top: 373px;\"></div><div id=\"mceResizeHandlesw\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: sw-resize; margin: 0px; padding: 0px; left: -279.5px; top: 373px;\"></div>',0,2,NULL,NULL,NULL,NULL),(220,1,1,1,'<p>Có bao nhiêu nút con của nút lá trong cây nhị phân tìm kiếm?</p>',0,2,NULL,NULL,NULL,NULL),(221,1,1,3,'<p>Cho cây nhị phân với nút gốc A. Nút gốc có con bên trái là B và con bên phải là C. B có con bên trái là D và con bên phải là E. Cách duyệt nào sau đây là theo thứ tự giữa (LNR)?</p>',0,2,NULL,NULL,NULL,NULL),(222,1,1,4,'<p>Đoạn mã nào sau đây là cách khai báo cấu trúc của cây nhị phân tìm kiếm?</p>',0,2,NULL,NULL,NULL,NULL),(223,1,1,3,'<p>Cho cây nhị phân tìm kiếm như hình vẽ. Kết quả của phép duyệt thứ tự trước (NLR) là:</p><p><span style=\"display:table;\"><span style=\"display: table; width: 100%; table-layout: fixed;\"><span style=\"display: table; height: 100%; width: 100%; table-layout: fixed;\"><img src=\"data/media/question/223/1447110445.png\" alt=\"\" width=\"160\" height=\"143\" data-mce-selected=\"1\"><br data-mce-bogus=\"1\"></span></span></span></p><div id=\"mceResizeHandlen\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: n-resize; margin: 0px; padding: 0px; left: -199.5px; top: 29px;\"></div><div id=\"mceResizeHandlee\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: e-resize; margin: 0px; padding: 0px; left: -119.5px; top: 100.5px;\"></div><div id=\"mceResizeHandles\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: s-resize; margin: 0px; padding: 0px; left: -199.5px; top: 172px;\"></div><div id=\"mceResizeHandlew\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: w-resize; margin: 0px; padding: 0px; left: -279.5px; top: 100.5px;\"></div><div id=\"mceResizeHandlenw\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: nw-resize; margin: 0px; padding: 0px; left: -279.5px; top: 29px;\"></div><div id=\"mceResizeHandlene\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: ne-resize; margin: 0px; padding: 0px; left: -119.5px; top: 29px;\"></div><div id=\"mceResizeHandlese\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: se-resize; margin: 0px; padding: 0px; left: -119.5px; top: 172px;\"></div><div id=\"mceResizeHandlesw\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: sw-resize; margin: 0px; padding: 0px; left: -279.5px; top: 172px;\"></div>',0,2,NULL,NULL,NULL,NULL),(224,1,1,3,'<p>Cho cây nhị phân tìm kiếm như hình vẽ. Chiều cao của cây là bao nhiêu?</p><p><span style=\"display:table;\"><span style=\"display: table; width: 100%; table-layout: fixed;\"><span style=\"display: table; height: 100%; width: 100%; table-layout: fixed;\"><img src=\"data/media/question/224/1447110556.png\" alt=\"\" width=\"170\" height=\"128\" data-mce-selected=\"1\"><br data-mce-bogus=\"1\"></span></span></span></p><div id=\"mceResizeHandlen\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: n-resize; margin: 0px; padding: 0px; left: -194.5px; top: 29px;\"></div><div id=\"mceResizeHandlee\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: e-resize; margin: 0px; padding: 0px; left: -109.5px; top: 93px;\"></div><div id=\"mceResizeHandles\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: s-resize; margin: 0px; padding: 0px; left: -194.5px; top: 157px;\"></div><div id=\"mceResizeHandlew\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: w-resize; margin: 0px; padding: 0px; left: -279.5px; top: 93px;\"></div><div id=\"mceResizeHandlenw\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: nw-resize; margin: 0px; padding: 0px; left: -279.5px; top: 29px;\"></div><div id=\"mceResizeHandlene\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: ne-resize; margin: 0px; padding: 0px; left: -109.5px; top: 29px;\"></div><div id=\"mceResizeHandlese\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: se-resize; margin: 0px; padding: 0px; left: -109.5px; top: 157px;\"></div><div id=\"mceResizeHandlesw\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: sw-resize; margin: 0px; padding: 0px; left: -279.5px; top: 157px;\"></div>',0,2,NULL,NULL,NULL,NULL),(225,1,1,4,'<p>Cho hàm sau:</p><p>void T(TreeNode *Root)</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(Root==NULL) return 0;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else if(Root-&gt;Left==NULL &amp;&amp; Root-&gt;Right==NULL) return 1;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else return T(Root-&gt;Left)+T(Root-&gt;Right);</p><p>}</p><p>Hàm trên thực hiện công việc gì?</p>',0,2,NULL,NULL,NULL,NULL),(226,1,1,3,'<p>Cho cây nhị phân với nút gốc A. Nút gốc có con trái B và con phải C. B có con trái D và con phải E. Xác định chiều cao của cây:</p>',0,2,NULL,NULL,NULL,NULL),(227,1,1,3,'<p>Chiều cao tối thiểu của cây nhị phân với 31 nút là:</p>',0,2,NULL,NULL,NULL,NULL),(228,1,1,3,'<p>Cho độ cao của cây nhị phân bằng 4. Số nút lá lớn nhất có thể có là:</p>',0,2,NULL,NULL,NULL,NULL),(229,1,1,4,'<p>Cho hàm thêm một nút mới vào cây nhị phân tìm kiếm như sau:</p><p>void insertNode(TREE &amp;T, int X)</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(T!=NULL)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(T-&gt;Data &gt; X)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return insertNode( ___________ , X);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return insertNode( ___________ , X);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; T=new Node;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; T-&gt;Data = X;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; T-&gt;Left = T-&gt;Right = NULL;</p><p>}</p><p>Hãy thêm các giá trị vào chỗ còn thiếu:</p>',0,2,NULL,NULL,NULL,NULL),(230,1,1,3,'<p>. Một cây nhị phân tìm kiếm có cách duyệt LRN là: 5 13 6 17 14 thì cách duyệt NLR sẽ là:</p>',0,2,5,NULL,NULL,NULL),(231,1,1,3,'<p>Cho cây nhị phân tìm kiếm như hình vẽ. Nút trái nhất của nút phải nút gốc trong cây có giá trị là:</p><p><span style=\"display:table;\"><span style=\"display: table; width: 100%; table-layout: fixed;\"><span style=\"display: table; height: 100%; width: 100%; table-layout: fixed;\"><img src=\"data/media/question/231/1447111330.png\" alt=\"\" width=\"176\" height=\"130\" data-mce-selected=\"1\"><br data-mce-bogus=\"1\"></span></span></span></p><div id=\"mceResizeHandlen\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: n-resize; margin: 0px; padding: 0px; left: -191.5px; top: 29px;\"></div><div id=\"mceResizeHandlee\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: e-resize; margin: 0px; padding: 0px; left: -103.5px; top: 94px;\"></div><div id=\"mceResizeHandles\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: s-resize; margin: 0px; padding: 0px; left: -191.5px; top: 159px;\"></div><div id=\"mceResizeHandlew\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: w-resize; margin: 0px; padding: 0px; left: -279.5px; top: 94px;\"></div><div id=\"mceResizeHandlenw\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: nw-resize; margin: 0px; padding: 0px; left: -279.5px; top: 29px;\"></div><div id=\"mceResizeHandlene\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: ne-resize; margin: 0px; padding: 0px; left: -103.5px; top: 29px;\"></div><div id=\"mceResizeHandlese\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: se-resize; margin: 0px; padding: 0px; left: -103.5px; top: 159px;\"></div><div id=\"mceResizeHandlesw\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: sw-resize; margin: 0px; padding: 0px; left: -279.5px; top: 159px;\"></div>',0,2,NULL,NULL,NULL,NULL),(232,1,1,3,'<p>Cho cây nhị phân tìm kiếm như hình vẽ. Sau khi xóa nút 12 thì bên phải nút 5 là:</p><p><span style=\"display:table;\"><span style=\"display: table; width: 100%; table-layout: fixed;\"><span style=\"display: table; height: 100%; width: 100%; table-layout: fixed;\"><img src=\"data/media/question/232/1447111521.png\" alt=\"\" width=\"318\" height=\"265\" data-mce-selected=\"1\"><br data-mce-bogus=\"1\"></span></span></span></p><div id=\"mceResizeHandlen\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: n-resize; margin: 0px; padding: 0px; left: -120.5px; top: 29px;\"></div><div id=\"mceResizeHandlee\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: e-resize; margin: 0px; padding: 0px; left: 38.5px; top: 161.5px;\"></div><div id=\"mceResizeHandles\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: s-resize; margin: 0px; padding: 0px; left: -120.5px; top: 294px;\"></div><div id=\"mceResizeHandlew\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: w-resize; margin: 0px; padding: 0px; left: -279.5px; top: 161.5px;\"></div><div id=\"mceResizeHandlenw\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: nw-resize; margin: 0px; padding: 0px; left: -279.5px; top: 29px;\"></div><div id=\"mceResizeHandlene\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: ne-resize; margin: 0px; padding: 0px; left: 38.5px; top: 29px;\"></div><div id=\"mceResizeHandlese\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: se-resize; margin: 0px; padding: 0px; left: 38.5px; top: 294px;\"></div><div id=\"mceResizeHandlesw\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: sw-resize; margin: 0px; padding: 0px; left: -279.5px; top: 294px;\"></div>',0,2,NULL,NULL,NULL,NULL),(233,1,1,3,'<p>Chiều cao của nút E là bao nhiêu?</p><p><span style=\"display:table;\"><span style=\"display: table; width: 100%; table-layout: fixed;\"><span style=\"display: table; height: 100%; width: 100%; table-layout: fixed;\"><img src=\"data/media/question/233/1447111816.png\" alt=\"\" width=\"148\" height=\"184\" data-mce-selected=\"1\"><br data-mce-bogus=\"1\"></span></span></span></p><div id=\"mceResizeHandlen\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: n-resize; margin: 0px; padding: 0px; left: -205.5px; top: 29px;\"></div><div id=\"mceResizeHandlee\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: e-resize; margin: 0px; padding: 0px; left: -131.5px; top: 121px;\"></div><div id=\"mceResizeHandles\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: s-resize; margin: 0px; padding: 0px; left: -205.5px; top: 213px;\"></div><div id=\"mceResizeHandlew\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: w-resize; margin: 0px; padding: 0px; left: -279.5px; top: 121px;\"></div><div id=\"mceResizeHandlenw\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: nw-resize; margin: 0px; padding: 0px; left: -279.5px; top: 29px;\"></div><div id=\"mceResizeHandlene\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: ne-resize; margin: 0px; padding: 0px; left: -131.5px; top: 29px;\"></div><div id=\"mceResizeHandlese\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: se-resize; margin: 0px; padding: 0px; left: -131.5px; top: 213px;\"></div><div id=\"mceResizeHandlesw\" data-mce-bogus=\"all\" class=\"mce-resizehandle\" unselectable=\"true\" style=\"cursor: sw-resize; margin: 0px; padding: 0px; left: -279.5px; top: 213px;\"></div>',0,2,NULL,NULL,NULL,NULL),(234,1,1,3,'<p>Cho cây nhị phân như sau</p><p><span style=\"display:table;\"><span style=\"display: table; width: 100%; table-layout: fixed;\"><span style=\"display: table; height: 100%; width: 100%; table-layout: fixed;\"><img src=\"data/media/question/234/1447112515.png\" alt=\"\" width=\"572\" height=\"416\"><br data-mce-bogus=\"1\"></span></span></span></p><p>Với cách duyệt InOrder (Left – Root – Right) cho ra kết quả là dãy nào? Tìm lựa chọn đúng nhất</p>',0,2,NULL,NULL,NULL,NULL),(236,1,1,1,'<p>Chọn định nghĩa đúng nhất về cây cân bằng tương đối</p>',0,2,NULL,NULL,NULL,NULL),(237,1,1,3,'<p>Viết các phần tử của cây nhị phân tìm kiếm được tạo từ các nút có khóa là các số nguyên 2, 10, 15, -5, -2, 13, -12 khi thực hiện phép duyệt cây theo thứ tự sau:</p>',0,2,NULL,NULL,NULL,NULL),(238,1,1,3,'<p>Viết các phần tử của cây nhị phân tìm kiếm được tạo từ các nút có khóa là các số nguyên 2, 10, 15, -5, -2, 13, -12 khi thực hiện phép duyệt cây theo thứ tự giữa</p>',0,2,NULL,NULL,NULL,NULL),(239,1,1,3,'<p>Viết các phần tử của cây nhị phân tìm kiếm được tạo từ các nút có khóa là các số nguyên 2, 10, 15, -5, -2, 12, -12 khi thực hiện phép duyệt cây theo thứ tự trước:</p>',0,2,NULL,NULL,NULL,NULL),(240,1,1,6,'<p>Thiết bị nào là thiết bị ngoại vi</p>',1,2,NULL,NULL,NULL,NULL),(241,4,1,2,'Liên kết thiết bị và chức năng',1,2,NULL,NULL,NULL,NULL),(242,2,1,4,'<p>Các giá trị của mảng A được sắp xếp theo thứ tự tăng dần từng bước như sau:</p><p>3, 2, 7, 9, 1, 6</p><p>2, 3, 7, 9, 1, 6</p><p>1, 2, 3, 7, 9, 6</p><p>1, 2, 3, 6, 7, 9</p><p>Mảng A được sắp xếp theo thuật toán {1}</p>',1,2,5,NULL,NULL,NULL),(243,2,1,4,'<p>Các giá trị của mảng A được sắp xếp theo thứ tự tăng dần từng bước như sau:</p><p>3, 2, 7, 9, 1, 6</p><p>2, 3, 7, 9, 1, 6</p><p>1, 2, 3, 7, 9, 6</p><p>1, 2, 3, 6, 7, 9</p><p>Mảng A được sắp xếp theo thuật toán {1}</p>',1,2,5,NULL,NULL,NULL),(244,1,1,6,'<p>Thiết bị nào là thiết bị ngoại vi</p>',1,2,NULL,NULL,NULL,NULL),(245,2,1,4,'<p>Các giá trị của mảng A được sắp xếp theo thứ tự tăng dần từng bước như sau:</p><p>3, 2, 7, 9, 1, 6</p><p>2, 3, 7, 9, 1, 6</p><p>1, 2, 3, 7, 9, 6</p><p>1, 2, 3, 6, 7, 9</p><p>Mảng A được sắp xếp theo thuật toán {1}</p>',1,2,5,NULL,NULL,NULL),(246,2,1,4,'<p>Đi từ cuối mảng về đầu mảng, trong quá trình đi nếu phần tử ở dưới (đứng phía sau) nhỏ hơn phần tử đứng ngay trên (trước) nó thì hai phần tử này sẽ được đổi chỗ cho nhau. Sau mỗi lần đi chúng ta đưa được một phần tử trồi lên đúng chỗ. Sau &nbsp;{1} lần đi thì tất cả các phần tử trong mảng M sẽ có thứ tự tăng</p>',1,2,NULL,NULL,NULL,NULL),(247,2,1,4,'<p>Chương trình sau có {1} thời gian thực hiện</p><p>int x=0;</p><p>for(int i=0; i&lt;n*n; i++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(int j=0; j&lt;i; j++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x=x+i+1;</p>',1,2,NULL,NULL,NULL,NULL),(248,1,1,3,'<p>Chọn câu lệnh in ra các giá trị từ 0 đến 15 ra màn hình:</p>',1,2,NULL,NULL,NULL,NULL),(249,1,1,6,'<p>Thiết bị nào là thiết bị ngoại vi</p>',1,2,NULL,NULL,NULL,NULL),(250,2,1,4,'<p>Các giá trị của mảng A được sắp xếp theo thứ tự tăng dần từng bước như sau:</p><p>3, 2, 7, 9, 1, 6</p><p>2, 3, 7, 9, 1, 6</p><p>1, 2, 3, 7, 9, 6</p><p>1, 2, 3, 6, 7, 9</p><p>Mảng A được sắp xếp theo thuật toán {1}</p>',1,2,4,NULL,NULL,NULL),(251,3,1,3,'<p>Thay đổi thứ tự độ phức tạp từ tốt nhất đến xấu</p>',1,2,NULL,NULL,NULL,NULL),(252,2,1,4,'<p>Đi từ cuối mảng về đầu mảng, trong quá trình đi nếu phần tử ở dưới (đứng phía sau) nhỏ hơn phần tử đứng ngay trên (trước) nó thì hai phần tử này sẽ được đổi chỗ cho nhau. Sau mỗi lần đi chúng ta đưa được một phần tử trồi lên đúng chỗ. Sau &nbsp;{1} lần đi thì tất cả các phần tử trong mảng M sẽ có thứ tự tăng</p>',1,2,NULL,NULL,NULL,NULL),(253,2,1,4,'<p>Chương trình sau có {1} thời gian thực hiện</p><p>int x=0;</p><p>for(int i=0; i&lt;n*n; i++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(int j=0; j&lt;i; j++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x=x+i+1;</p>',1,2,NULL,NULL,NULL,NULL),(254,1,1,3,'<p>Chọn câu lệnh in ra các giá trị từ 0 đến 15 ra màn hình:</p>',1,2,NULL,NULL,NULL,NULL),(255,1,1,5,'<p>Thiết bị nào là thiết bị ngoại vi</p>',1,2,NULL,NULL,NULL,NULL),(256,4,1,2,'Liên kết thiết bị và chức năng',1,2,NULL,NULL,NULL,NULL),(257,1,1,6,'<p>Thiết bị nào là thiết bị ngoại vi</p>',1,2,NULL,NULL,NULL,NULL),(258,3,1,3,'<p>Hãy sắp xếp mã giả sau để xóa 1 phần tử đầu danh sách</p>',1,2,NULL,NULL,NULL,NULL),(259,2,1,4,'<p>Các giá trị của mảng A được sắp xếp theo thứ tự tăng dần từng bước như sau:</p><p>3, 2, 7, 9, 1, 6</p><p>2, 3, 7, 9, 1, 6</p><p>1, 2, 3, 7, 9, 6</p><p>1, 2, 3, 6, 7, 9</p><p>Mảng A được sắp xếp theo thuật toán {1}</p>',1,2,NULL,NULL,NULL,NULL),(260,4,1,2,'Liên kết thiết bị và chức năng',1,2,NULL,NULL,NULL,NULL),(261,2,1,2,'<p>Hãy điền giá trị c vào ô trống để kết quả biến sum = 10</p><p>int sum=0;</p><p>for(int c = 2; c &lt;= {1} ; c++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sum = sum + 2*c;</p>',1,2,NULL,NULL,NULL,NULL),(262,2,1,4,'<p>Chương trình sau có {1} thời gian thực hiện</p><p>int x=0;</p><p>for(int i=0; i&lt;n*n; i++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(int j=0; j&lt;i; j++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x=x+i+1;</p>',1,2,NULL,NULL,NULL,NULL),(263,2,1,1,'<p>Mối quan hệ giữa cấu trúc dữ liệu và giải thuật có thể minh họa bằng đẳng thức:</p><p>{1}&nbsp;+ {2}&nbsp;= Chương trình</p>',1,2,NULL,NULL,NULL,NULL),(264,1,1,4,'<p>Giá trị của x sau khi chạy đoạn chương trình sau:</p><p>void main()</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; float a[5] = {5, 4, 3, 2, 1};</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; float x;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(int i=0; i&lt;5; i++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a[i] += a[0];</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x = a[1] + a[4];</p><p>}</p>',1,2,NULL,NULL,NULL,NULL),(265,1,1,4,'<p>Tính thời gian thực hiện đoạn chương trình sau:</p><p>int x=0;</p><p>for(int i=0; i&lt;n; i++){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(int j=0; j&lt;i; j++){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x=x+1;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</p><p>}</p>',1,2,NULL,NULL,NULL,NULL),(266,1,1,4,'<p>Giá trị nào được in ra sau khi thực hiện đoạn chương trình sau:</p><p>char *p=\"incoll4\";</p><p>printf(\"%s\",p+3);</p>',1,2,NULL,NULL,NULL,NULL),(267,2,1,4,'<p>Giá trị của x bằng {1}&nbsp;sau khi thực hiện đoạn chương trình sau:</p><p>{</p><p>int x, y, z;</p><p>x=1; y=2; z=3;</p><p>int *a=&amp;x;</p><p>*a=y;</p><p>printf(\"%d\",x);</p><p><span style=\"display:table;\"><span style=\"display: table; width: 100%; table-layout: fixed;\"><span style=\"display: table; height: 100%; width: 100%; table-layout: fixed;\">}</span></span></span></p>',1,2,NULL,NULL,NULL,NULL),(268,1,1,3,'<p>Giá trị của biến sum là bao nhiêu sau khi thực hiện đoạn mã sau:</p><p>int sum=0;</p><p>for(int c = 2; c &lt;= 5; c++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sum = sum + 2*c;</p>',1,2,NULL,NULL,NULL,NULL),(269,1,1,4,'<p>Cho các thời gian thực hiện giải thuật như sau: O(1), O(n), O(n*logn), O(logn), O(n^2), O(2^n). Hãy sắp xếp thời gian thực hiện thuật toán từ chậm nhất đến nhanh nhất:</p>',1,2,NULL,NULL,NULL,NULL),(270,1,1,1,'<p>Muốn áp dụng thuật toán tìm kiếm nhị phân ta phải:</p>',1,2,NULL,NULL,NULL,NULL),(271,1,1,1,'<p>Trong Tìm kiếm tuần tự, mảng phải là:</p>',1,2,NULL,NULL,NULL,NULL),(272,1,1,4,'<p>Cho hàm sau, hàm này dùng để làm gì:</p><p>int LinearExhaustive (int a[], int n, int x)</p><p>Cho i từ 0 đến n Làm</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; Nếu a[i] =x</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Trả về vị trí i</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; Hết Nếu</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; Ngược lại</p><p>trả về -1</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; Hết ngược lại</p><p>&nbsp;&nbsp;&nbsp;&nbsp; Hết Lặp</p>',1,2,NULL,NULL,NULL,NULL),(273,1,1,4,'<p>Cho hàm sau, hàm này dùng để làm gì:</p><p>int BinarySearch(int a[], int n, int x)</p><p>int l = 0, r = n-1,m;</p><p>&nbsp;Trong khi(l &lt;= r)</p><p>m = (l + r)/2;</p><p>Nếu a[m] == x</p><p>Trả về m;</p><p>Hết Nếu</p><p>Ngược lại</p><p>Nếu x &lt; a[m]</p><p>r = m – 1</p><p>Hết nếu</p><p>Hết Ngược lại</p><p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;l = m + 1;</p><p>&nbsp;&nbsp;&nbsp; Hết Trong khi</p><p>Trả về –1;Tìm kiếm nhị phân x</p>',1,2,NULL,NULL,NULL,NULL),(274,1,1,4,'<p>Cho đoạn chương trình sau:</p><p>void main()</p><p>{</p><p>int newNum = 0;</p><p>int number = 8570;</p><p>int tmp;</p><p>while(number&gt;0){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tmp = number % 10;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; number = number / 10;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; newNum = newNum*10 + tmp;</p><p>}</p><p>printf(\"%d\",newNum);</p><p>}</p><p>Kết quả in ra của chương trình trên:</p>',1,2,NULL,NULL,NULL,NULL),(275,1,1,3,'<p>Kết quả sau khi thực thi chương trình sau là bao nhiêu?</p><p>void main()</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int i=0, n=33;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while(i &lt; n-1)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i++;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(n % i == 0)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(\"%2d\",i);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>}</p>',1,2,NULL,NULL,NULL,NULL),(276,1,1,6,'<p>Thiết bị nào là thiết bị ngoại vi</p>',1,2,NULL,NULL,NULL,NULL),(277,1,1,1,'<p>Phương pháp sắp xếp đơn giản nhất là :</p>',1,2,NULL,NULL,NULL,NULL),(278,1,1,4,'<p>Cho hàm sau, hàm này dùng để làm gì:</p><p>int BinarySearch(int a[], int n, int x)</p><p>int l = 0, r = n-1,m;</p><p>&nbsp;Trong khi(l &lt;= r)</p><p>m = (l + r)/2;</p><p>Nếu a[m] == x</p><p>Trả về m;</p><p>Hết Nếu</p><p>Ngược lại</p><p>Nếu x &lt; a[m]</p><p>r = m – 1</p><p>Hết nếu</p><p>Hết Ngược lại</p><p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;l = m + 1;</p><p>&nbsp;&nbsp;&nbsp; Hết Trong khi</p><p>Trả về –1;Tìm kiếm nhị phân x</p>',1,2,NULL,NULL,NULL,NULL),(279,1,1,1,'<p>Muốn áp dụng thuật toán tìm kiếm nhị phân ta phải:</p>',1,2,NULL,NULL,NULL,NULL),(280,1,1,4,'<p>Cho thuật toán sắp xếp sau:</p><p>void T(int A[], int n)</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int i, j, tmp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(i=1; i&lt;n; i++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; j = i;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while(j&gt;0 &amp;&amp; A[j-1] &gt; A[j])</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tmp = A[j];</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A[j] = A[j-1];</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A[j-1] = tmp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; j--;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>}</p><p>Thuật toán trên là:</p>',1,2,NULL,NULL,NULL,NULL),(281,1,1,1,'<p>Trong Tìm kiếm nhị phân, mảng phải là:</p>',1,2,NULL,NULL,NULL,NULL),(282,1,1,4,'<p>Đoạn mã giả dưới đây mô tả thuật toán gì?</p><p>Thuật toán:</p><p>B1: k = 1</p><p>B2: IF(M[k] == X &amp;&amp; k != N)</p><p>B2.1: k++</p><p>B2.2: Lặp lại B2</p><p>B3: IF (k &lt; N)</p><p>Thông báo tìm thấy tại vị trí k</p><p>B4: ELSE</p><p>Không tìm thấy.</p><p>B5: Kết thúc</p>',1,2,NULL,NULL,NULL,NULL),(283,1,1,1,'<p>Trong bài toán sắp xếp, sắp xếp trong là :</p>',1,2,NULL,NULL,NULL,NULL),(284,2,1,4,'<p>Các giá trị của mảng A được sắp xếp theo thứ tự tăng dần từng bước như sau:</p><p>3, 2, 7, 9, 1, 6</p><p>2, 3, 7, 9, 1, 6</p><p>1, 2, 3, 7, 9, 6</p><p>1, 2, 3, 6, 7, 9</p><p>Mảng A được sắp xếp theo thuật toán {1}</p>',1,2,NULL,NULL,NULL,NULL),(285,1,1,6,'<p>Thiết bị nào là thiết bị ngoại vi</p>',1,2,NULL,NULL,NULL,NULL),(286,1,1,4,'<p>Giá trị của x sau khi chạy đoạn chương trình sau:</p><p>void main()</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; float a[5] = {5, 4, 3, 2, 1};</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; float x;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(int i=0; i&lt;5; i++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a[i] += a[0];</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x = a[1] + a[4];</p><p>}</p>',1,2,NULL,NULL,NULL,NULL),(287,2,1,4,'<p>Chương trình sau có {1} thời gian thực hiện</p><p>int x=0;</p><p>for(int i=0; i&lt;n*n; i++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(int j=0; j&lt;i; j++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x=x+i+1;</p>',1,2,NULL,NULL,NULL,NULL),(288,4,1,2,'Liên kết thiết bị và chức năng',1,2,NULL,NULL,NULL,NULL),(289,1,1,6,'<p>Thiết bị nào là thiết bị ngoại vi</p>',1,2,NULL,NULL,NULL,NULL),(290,2,1,4,'<p>Chương trình sau có {1} thời gian thực hiện</p><p>int x=0;</p><p>for(int i=0; i&lt;n*n; i++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(int j=0; j&lt;i; j++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x=x+i+1;</p>',1,2,NULL,NULL,NULL,NULL),(291,1,1,4,'<p>Tính thời gian thực hiện đoạn chương trình sau:</p><p>int x=0;</p><p>for(int i=0; i&lt;n; i++){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(int j=0; j&lt;i; j++){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x=x+1;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</p><p>}</p>',1,2,NULL,NULL,NULL,NULL),(292,3,1,3,'<p>Thay đổi thứ tự độ phức tạp từ tốt nhất đến xấu</p>',1,2,NULL,NULL,NULL,NULL),(293,1,1,3,'<p>Chọn câu lệnh in ra các giá trị từ 0 đến 15 ra màn hình:</p>',1,2,NULL,NULL,NULL,NULL),(294,1,1,4,'<p>Giá trị nào được in ra sau khi thực hiện đoạn chương trình sau:</p><p>char *p=\"incoll4\";</p><p>printf(\"%s\",p+3);</p>',1,2,NULL,NULL,NULL,NULL),(295,1,1,6,'<p>Thiết bị nào là thiết bị ngoại vi</p>',1,2,NULL,NULL,NULL,NULL),(296,4,1,2,'Liên kết thiết bị và chức năng',1,2,NULL,NULL,NULL,NULL),(297,3,1,3,'<p>Thay đổi thứ tự độ phức tạp từ tốt nhất đến xấu</p>',1,2,NULL,NULL,NULL,NULL),(298,2,1,4,'<p>Đi từ cuối mảng về đầu mảng, trong quá trình đi nếu phần tử ở dưới (đứng phía sau) nhỏ hơn phần tử đứng ngay trên (trước) nó thì hai phần tử này sẽ được đổi chỗ cho nhau. Sau mỗi lần đi chúng ta đưa được một phần tử trồi lên đúng chỗ. Sau &nbsp;{1} lần đi thì tất cả các phần tử trong mảng M sẽ có thứ tự tăng</p>',1,2,NULL,NULL,NULL,NULL),(299,1,1,6,'<p>Thiết bị nào là thiết bị ngoại vi</p>',1,2,NULL,NULL,NULL,NULL),(300,2,1,4,'<p>Các giá trị của mảng A được sắp xếp theo thứ tự tăng dần từng bước như sau:</p><p>3, 2, 7, 9, 1, 6</p><p>2, 3, 7, 9, 1, 6</p><p>1, 2, 3, 7, 9, 6</p><p>1, 2, 3, 6, 7, 9</p><p>Mảng A được sắp xếp theo thuật toán {1}</p>',1,2,NULL,NULL,NULL,NULL),(301,1,1,6,'<p>Thiết bị nào là thiết bị ngoại vi</p>',1,2,NULL,NULL,NULL,NULL),(302,1,1,5,'<p>Thiết bị nào là thiết bị ngoại vi</p>',1,2,NULL,NULL,NULL,NULL),(303,1,1,1,'<p>aaaa<br></p>',0,2,11,NULL,NULL,NULL),(304,4,3,2,'Liên kết thiết bị và chức năng',1,2,2,NULL,NULL,NULL),(305,2,3,4,'<p>Các giá trị của mảng A được sắp xếp theo thứ tự tăng dần từng bước như sau:</p><p>3, 2, 7, 9, 1, 6</p><p>2, 3, 7, 9, 1, 6</p><p>1, 2, 3, 7, 9, 6</p><p>1, 2, 3, 6, 7, 9</p><p>Mảng A được sắp xếp theo thuật toán {1}</p>',1,2,5,NULL,NULL,NULL),(306,2,3,4,'<p>Đi từ cuối mảng về đầu mảng, trong quá trình đi nếu phần tử ở dưới (đứng phía sau) nhỏ hơn phần tử đứng ngay trên (trước) nó thì hai phần tử này sẽ được đổi chỗ cho nhau. Sau mỗi lần đi chúng ta đưa được một phần tử trồi lên đúng chỗ. Sau &nbsp;{1} lần đi thì tất cả các phần tử trong mảng M sẽ có thứ tự tăng</p>',1,2,3,NULL,NULL,NULL),(307,2,3,4,'<p>Chương trình sau có {1} thời gian thực hiện</p><p>int x=0;</p><p>for(int i=0; i&lt;n*n; i++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(int j=0; j&lt;i; j++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x=x+i+1;</p>',1,2,3,NULL,NULL,NULL),(308,1,7,4,'<p>Giá trị của x sau khi chạy đoạn chương trình sau:</p><p>void main()</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; float a[5] = {5, 4, 3, 2, 1};</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; float x;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(int i=0; i&lt;5; i++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a[i] += a[0];</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x = a[1] + a[4];</p><p>}</p>',1,2,NULL,NULL,NULL,NULL),(309,1,7,5,'<p>Thiết bị nào là thiết bị ngoại vi</p>',1,2,NULL,NULL,NULL,NULL),(310,1,7,4,'<p>Giá trị nào được in ra sau khi thực hiện đoạn chương trình sau:</p><p>char *p=\"incoll4\";</p><p>printf(\"%s\",p+3);</p>',1,2,NULL,NULL,NULL,NULL),(311,1,7,4,'<p>Cho đoạn chương trình sau:</p><p>void main()</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int a=7, b=9, *p;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p = &amp;a;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a = ++b;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(\"%d%d%d\",a,b,p);</p><p>}</p><p>Kết quả sau khi thực hiện chương trình trên là:</p>',1,2,NULL,NULL,NULL,NULL),(312,2,7,4,'<p>Giá trị của x bằng {1}&nbsp;sau khi thực hiện đoạn chương trình sau:</p><p>{</p><p>int x, y, z;</p><p>x=1; y=2; z=3;</p><p>int *a=&amp;x;</p><p>*a=y;</p><p>printf(\"%d\",x);</p><p><span style=\"display:table;\"><span style=\"display: table; width: 100%; table-layout: fixed;\"><span style=\"display: table; height: 100%; width: 100%; table-layout: fixed;\">}</span></span></span></p>',1,2,NULL,NULL,NULL,NULL),(313,1,7,3,'<p>Chọn câu lệnh in ra các giá trị từ 0 đến 15 ra màn hình:</p>',1,2,NULL,NULL,NULL,NULL),(314,1,7,4,'<p>Cho đoạn chương trình sau:</p><p>void main()</p><p>{</p><p>int newNum = 0;</p><p>int number = 8570;</p><p>int tmp;</p><p>while(number&gt;0){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tmp = number % 10;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; number = number / 10;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; newNum = newNum*10 + tmp;</p><p>}</p><p>printf(\"%d\",newNum);</p><p>}</p><p>Kết quả in ra của chương trình trên:</p>',1,2,NULL,NULL,NULL,NULL),(315,1,1,1,'<p>test2<br></p>',0,2,NULL,NULL,NULL,NULL),(316,2,13,4,'<p>Các giá trị của mảng A được sắp xếp theo thứ tự tăng dần từng bước như sau:</p><p>3, 2, 7, 9, 1, 6</p><p>2, 3, 7, 9, 1, 6</p><p>1, 2, 3, 7, 9, 6</p><p>1, 2, 3, 6, 7, 9</p><p>Mảng A được sắp xếp theo thuật toán {1}</p>',1,2,5,NULL,NULL,NULL),(317,2,13,2,'<p>Hãy điền giá trị c vào ô trống để kết quả biến sum = 10</p><p>int sum=0;</p><p>for(int c = 2; c &lt;= {1} ; c++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sum = sum + 2*c;</p>',1,2,NULL,NULL,NULL,NULL),(318,2,13,4,'<p>Chương trình sau có {1} thời gian thực hiện</p><p>int x=0;</p><p>for(int i=0; i&lt;n*n; i++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(int j=0; j&lt;i; j++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x=x+i+1;</p>',1,2,3,NULL,NULL,NULL),(319,4,13,2,'Liên kết thiết bị và chức năng',1,2,2,NULL,NULL,NULL),(320,1,13,6,'<p>Thiết bị nào là thiết bị ngoại vi</p>',1,2,4,NULL,NULL,NULL),(321,1,13,2,'<p class=\"TableContents\"><span style=\"color: black;\" data-mce-style=\"color: black;\">Khi ta nói thời gian thực hiện của một chương trình là T(n) = Cn thì có nghĩa là chương trình ấy :</span></p>',1,2,5,NULL,NULL,NULL),(322,1,13,3,'<p>Các giá trị của mảng A được sắp xếp theo thứ tự tăng dần từng bước như sau:</p><p>12, 2, 8, 5, 1, 6, 4, 15</p><p>4, 2, 8, 5, 1, 6, 12, 15</p><p>4, 2, 1, 5, 8, 6, 12, 15</p><p>1, 2, 4, 5, 6, 8, 12, 15</p><p>Mảng A được sắp xếp theo thuật toán nào?</p>',1,2,5,NULL,NULL,NULL),(323,1,13,1,'<p>Các đối tượng cần được sắp xếp là các mẩu tin gồm :</p>',1,2,5,NULL,NULL,NULL),(324,1,1,1,'<p>class không thể được khai báo ở chế độ</p>',0,3,25,NULL,NULL,NULL),(325,1,1,1,'<p>Một Class có thể hoạt động ở chế độ tạm thời (Transient)</p>',0,3,25,NULL,NULL,NULL),(326,1,1,3,'<p>Kết quả sau khi biên dịch mã: Class A { int b =1; public static void main(String [] args) { System.out.println(“b is” +b);}}</p>',0,3,25,NULL,NULL,NULL),(327,1,1,3,'<p>Kết quả khi biên dịch mã: class A{ public static void main(String [] args) {B b=new A();}} class B extends A{}</p>',0,3,25,NULL,NULL,NULL),(328,1,1,3,'<p>Kết quả khi biên dịch mã: class A{ public static void main(String [] args) {A a =new B();}} class B extends A{}</p>',0,3,25,NULL,NULL,NULL),(329,1,1,1,'<p>Các cấu trúc, cú pháp được đánh dấu protected có thể được gọi trong bất kỳ subclass nào của class đó</p>',0,3,25,NULL,NULL,NULL),(330,1,1,1,'<p>Một Class abstract có thể sử dụng cú pháp non-abstract</p>',0,3,25,NULL,NULL,NULL),(331,1,1,1,'<p>Khái niệm instanceof là gì?</p>',0,3,25,NULL,NULL,NULL),(332,1,1,1,'<p>Primitive datatype được phân bổ dựa trên stack</p>',0,3,25,NULL,NULL,NULL),(333,1,1,2,'<p>Có thể so sánh giá trị Boolean với integer?</p>',0,3,25,NULL,NULL,NULL),(334,1,1,2,'<p>Nếu class A làm việc với phần giao diện thì có phải thực thi tất cả các cấu trúc của giao diện đó không?</p>',0,3,25,NULL,NULL,NULL),(335,1,1,3,'<p>Integer a= new Integer(2); Integer b= new Integer(2). Chuyện gì sẽ xảy ra nếu chúng ta áp dụng cú pháp if(a==b)?</p>',0,3,25,NULL,NULL,NULL),(336,1,1,2,'<p>Cấu trúc wait(),notify() và notifyAll() trong 1 đối tượng cần phải được gọi ra từ phần mã đã đồng bộ hóa?</p>',0,3,25,NULL,NULL,NULL),(337,1,1,2,'<p>Inner class có thể được khởi tạo bên trong các khối cấu trúc?</p>',0,3,25,NULL,NULL,NULL),(338,1,1,1,'<p>Synchronized là từ khóa được dung để Thread chọn 1 đối tượng bất kỳ đã được khóa trước khi tiếp tục thực thi lênh</p>',0,3,25,NULL,NULL,NULL),(339,1,1,2,'<p>Cú pháp mặc định của switch luôn luôn được thực thi</p>',0,3,25,NULL,NULL,NULL),(340,1,1,2,'<p>Làm thế nào để ngăn chặn 1 biến-variable trở thành serialized (có khả năng nối tiếp)?</p>',0,3,25,NULL,NULL,NULL),(341,1,1,2,'<p>Chọn câu đúng</p>',0,3,25,NULL,NULL,NULL),(342,1,1,2,'<p>Chọn phát biểu đúng</p>',0,3,25,NULL,NULL,NULL),(343,1,1,1,'<p>Lớp nào sau đây không phải là lớp bao&nbsp;?</p>',0,3,25,NULL,NULL,NULL),(344,1,1,2,'<p>Chọn phát biểu đúng cho hàm khởi tạo&nbsp;:</p>',0,3,25,NULL,NULL,NULL),(345,1,1,1,'<p>chọn khai báo đúng cho phương thức main()</p>',0,3,25,NULL,NULL,NULL),(346,1,1,1,'<p>Chọn thứ tự đúng các thành phần trong 1 tập tin nguồn:</p>',0,3,25,NULL,NULL,NULL),(347,1,1,2,'<p>Trong lập trình C phát biểu nào đúng khi nói về lệnh rẽ nhánh?</p>',0,3,22,NULL,NULL,NULL),(348,1,1,3,'<p>Trong lập trình C câu lệnh nào viết đúng cú pháp trong các câu lệnh sau:</p>',0,3,22,NULL,NULL,NULL),(349,1,1,2,'<p>Sau lệnh else không có chấm phẩyTrong C, phát biểu nào sau đây là đúng</p>',0,3,22,NULL,NULL,NULL),(350,1,1,3,'<p>Câu lệnh IF lông nhau được sử dụng khi phải lựa chọn</p>',0,3,22,NULL,NULL,NULL),(351,1,1,2,'<p>Một câu lệnh switch được sử dụng để:</p>',0,3,22,NULL,NULL,NULL),(352,1,1,1,'<p>Đoạn chương trình: if (&lt;biểu thức điều kiện&gt;){&lt;câu lệnh1&gt;} else {&lt;Câu lệnh2&gt;}</p>',0,3,22,NULL,NULL,NULL),(353,1,1,2,'<p>Khi biểu thức điều kiện 1 đúng, biểu thức điều kiện 2 saiĐoạn chương trình sau, câu lệnh 2 được thực hiện khi nào:</p><p>if (&lt;biểu thức điều kiện 1&gt;)</p><p>{&lt;câu lệnh1&gt;}</p><p>else if (&lt;biểu thức điều kiện 2&gt;)</p><p>{&lt;câu lệnh2&gt;}<br></p>',0,3,22,NULL,NULL,NULL),(354,1,1,3,'<p>Cho a=3; b=5. Câu lệnh if (a&gt;b) a=4 else b=1. Sau khi thực hiện đoạn chương trình trên đáp án nào đúng</p>',0,3,22,NULL,NULL,NULL),(355,1,1,4,'<p>Giả sử đoạn mã sau được thực hiện, kết quả sẽ là:</p><p>int number=3;</p><p>if (number=0)</p><p>printf(“equal 0\\n”);</p><p>else</p><p>printf(“not equal 0\\n”);</p>',0,3,22,NULL,NULL,NULL),(356,1,1,4,'<p>Đoạn chương trình: max=a; if(b&gt;max) {max=b}. Hãy cho biết đoạn chương trình trên dùng để:</p>',0,3,22,NULL,NULL,NULL),(357,1,1,2,'<p>Nên dùng câu lệnh rẽ nhánh dạng đủ khi phải lựa chọn :</p>',0,3,22,NULL,NULL,NULL),(358,1,1,3,'<p>Cho đoạn lệnh sau:</p><p>int a = 0;</p><p>if (a)</p><p>b = 0;</p><p>else</p><p>b = 1;</p><p>Cho biết sau khi thực hiện đoạn lệnh này b có giá trị là bao nhiêu?</p>',0,3,22,NULL,NULL,NULL),(359,1,1,3,'<p>Cho biết câu lệnh sau sai ở đâu? IF (DTB&gt;5)&nbsp; printf(\"Đỗ\"); else printf(\"Trượt\");</p>',0,3,22,NULL,NULL,NULL),(360,1,1,4,'<p>Giả sử đoạn mã sau được thực hiện<br> int age=60;</p><p>if ( age&gt;=65)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf (\" Gia! \');</p><p>else</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(\' Tre! \');</p><p>Tìm lỗi của đoạn mã trên:</p>',0,3,22,NULL,NULL,NULL),(361,1,1,4,'<p>Cho đoạn mã sau, default có ý nghĩa gì?<br> switch (biểu thức nguyên) <br> {</p><p>case 0: lệnh 1; break;<br> case 1: lệnh 2; break;<br> case 2: lệnh 3; break;</p><p>&nbsp;default : lệnh;<br> }</p>',0,3,22,NULL,NULL,NULL),(362,1,1,4,'<p>Cho đoạn lệnh sau:</p><p>a = 0;</p><p>if (a == 5)</p><p>b = 0;</p><p>else</p><p>b = 1;</p><p>Cho biết sau khi thực hiện đoạn lệnh này b có giá trị là bao nhiêu?</p>',0,3,22,NULL,NULL,NULL),(363,1,1,4,'<p>int n=3, m=4, k=5;</p><p>if (m*m &gt;n*k &amp;&amp; 2*m+3*n&gt; 4*k) m=n=k=0;</p><p>else m=n=k=1;</p><p>Sau khi thực thi code trên, trị của biến k là :</p>',0,3,22,NULL,NULL,NULL),(364,1,1,4,'<p>Cho biết kết quả của đoạn chương trình sau:</p><p>int a=5, b=9;</p><p>int m=a&gt;b ? a++ : b++;</p><p>int n=a&lt;b ? --a : --b;</p><p>printf(“%d”,--n+(++m));</p>',0,3,22,NULL,NULL,NULL),(365,1,1,4,'<p>Cho biết kết quả của chương trình sau:</p><p>#include &lt;stdio.h&gt;</p><p>#include &lt;conio.h&gt;</p><p>void main()</p><p>{</p><p>clrscr();</p><p>int a=3,b=5;</p><p>if (a%2==1 &amp;&amp; b/2==2.5)</p><p>{</p><p>a=a+b;</p><p>b=b+a;</p><p>}</p><p>printf(\"%d\",a+b);</p><p>getch();</p><p>}</p>',0,3,22,NULL,NULL,NULL),(366,1,1,4,'<p>Cho biết kết quả của chương trình sau:</p><p>#include &lt;stdio.h&gt;</p><p>#include &lt;conio.h&gt;</p><p>void main()</p><p>{</p><p>int a=3,b=5;</p><p>if (a&lt;b)</p><p>a=a+1;</p><p>else</p><p>b=b+1;</p><p>a=a+b;</p><p>printf(\"%d\",a);</p><p>getch();</p><p>}</p>',0,3,22,NULL,NULL,NULL),(367,1,1,3,'<p>Cho biết kết quả của chương trình sau:</p><p>#include &lt;stdio.h&gt;</p><p>#include &lt;conio.h&gt;</p><p>void main()</p><p>{</p><p>int a=1,b=2;</p><p>if (a&lt;b)</p><p>if (a&gt;b)</p><p>a=a+1;</p><p>else</p><p>b=b+1;</p><p>else</p><p>a=a+b;</p><p>printf(\"%d\",a*b);</p><p>}</p>',0,3,22,NULL,NULL,NULL),(368,1,1,3,'<p>Cho đoạn chương trình sau:</p><p>int a = 5, b = 5, c;</p><p>if (++a &gt; ++b)</p><p>c = 10;</p><p>else if (++a &gt; b++)</p><p>c = 20;</p><p>else c = 30;</p><p>Cho biết khi thực hiện xong đoạn trình này c có giá trị là bao nhiêu?</p>',0,3,22,NULL,NULL,NULL),(369,1,1,3,'<p>Cho biết kết quả của chương trình sau:</p><p>#include &lt;stdio.h&gt;</p><p>#include &lt;conio.h&gt;</p><p>void main()</p><p>{</p><p>int t=0;</p><p>int a=1,b=3,c=4,d=7;</p><p>if (a%2==1) t++;</p><p>if (b%2==1) t++;</p><p>if (c%2==1) t++;</p><p>if (d%2==1) t++;</p><p>printf(\"%d\",t);</p><p>}</p>',0,3,22,NULL,NULL,NULL),(370,1,1,3,'<p>Cho biết kết quả của chương trình sau:</p><p>#include &lt;stdio.h&gt;</p><p>void main()</p><p>{</p><p>int s; s = 19 % 5;</p><p>if (s ==1)</p><p>printf(\"mot\");</p><p>else</p><p>if (s==2)</p><p>printf(\"hai\");</p><p>else</p><p>printf(\"ba\");</p><p>}</p>',0,3,22,NULL,NULL,NULL),(371,1,1,4,'<p>Cho đoạn chương trình sau:</p><p>int a = 1;</p><p>switch (a)</p><p>{ case 0: printf(\"Red \");</p><p>case 1: printf(\"Green \"); break;</p><p>case 2: printf(\"Blue \");</p><p>case 3: printf(\"White \"); break;</p><p>}</p><p>Kết quả thực hiện cấu trúc trên đây sẽ như thế nào?</p>',0,3,22,NULL,NULL,NULL),(372,1,1,4,'<p>Cho biết kết quả của chương trình sau:</p><p>#include &lt;stdio.h&gt;</p><p>#include &lt;conio.h&gt;</p><p>void main()</p><p>{</p><p>int a=5;</p><p>switch (a/2)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>case 1:a=a+4;</p><p>break;</p><p>case 2:a=a-4;</p><p>break;</p><p>case 3:a=a*4;</p><p>break;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>printf(\"%d\",a);</p><p>}</p>',0,3,22,NULL,NULL,NULL),(373,1,1,3,'<p>int x = 5;</p><p>int y = 2;</p><p>char op = \'*\';</p><p>switch (op)</p><p>{</p><p>&nbsp; default : x += 1;</p><p>&nbsp; case \'+\' : x += y;</p><p>&nbsp; case \'-\' : x -= y;</p><p>}&nbsp;</p><p>Sau khi thực hiện đoạn chương trình trên, x sẽ có giá trị bao nhiêu?</p>',0,3,22,NULL,NULL,NULL),(374,1,1,2,'<p>Cho biết kết quả của chương trình sau:</p><p>#include &lt;stdio.h&gt;</p><p>#include &lt;conio.h&gt;</p><p>void main()</p><p>{</p><p>int a=1;</p><p>switch (a)</p><p>{</p><p>case 1:a=a+2;</p><p>case 2:a=a-2;</p><p>default</p><p>a=a*2;</p><p>}</p><p>printf(\"%d\",a);</p><p>}</p>',0,3,22,NULL,NULL,NULL),(375,1,1,3,'<p>Nếu code sau đây được thực thi , giá trị biến t sẽ là bao nhiêu: <br> int d=10, t ;<br> switch (d)<br> { case 10: t=100; <br> case 7 : t=50; break;<br> default : t=0;<br> }</p>',0,3,22,NULL,NULL,NULL),(376,1,1,1,'<p>Chọn phát biểu đúng trong các phát biểu sau:</p>',0,3,23,NULL,NULL,NULL),(377,1,1,2,'<p>Lặp với số lần chưa biết trước ta dùng lệnh :</p>',0,3,23,NULL,NULL,NULL),(378,1,1,2,'<p>Lặp với số lần xác định ta dùng lệnh :</p>',0,3,23,NULL,NULL,NULL),(379,1,1,1,'<p>Lệnh nào trong các lệnh sau cho phép chuyển sang vòng lặp tiếp theo mà không cần phải thực hiện phần còn lại của vòng lặp:</p>',0,3,23,NULL,NULL,NULL),(380,1,1,3,'<p>Đoạn mã sau đây: <em>for (;;)</em> là :</p>',0,3,23,NULL,NULL,NULL),(381,1,1,3,'<p>Nếu code sau được thực hiện, S có giá trị bao nhiêu?</p><p>int i= 10, S=0;</p><p>for ( ; i&lt;2 ; i++ ) S+= i;</p>',0,3,23,NULL,NULL,NULL),(382,1,1,3,'<p>Hãy tính số lần lặp của câu lệnh sau:</p><p>for ( int i=10; i&lt;=10; i++)&nbsp; S = S + i;</p>',0,3,23,NULL,NULL,NULL),(383,1,1,3,'<p>Lệnh sau đây sẽ cho kết quả như thế nào trên màn hình:</p><p>for (int i = 0; i&lt;=5; i++) printf(\"%d\", i, i);</p>',0,3,23,NULL,NULL,NULL),(384,1,1,3,'<p>Hãy cho biết giá trị đầu tiên và cuối cùng in ra là gì?</p><p>int n = 15;</p><p>int i = 0;</p><p>for( i = 0; i &lt;= n; i++ )</p><p>&nbsp; printf(\"%d\",i);</p>',0,3,23,NULL,NULL,NULL),(385,1,1,3,'<p>Kết quả in ra màn hình của chương trinh sau là gì:</p><p>#include &lt;stdio.h&gt;</p><p>void main()</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int i;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (i=2; i&lt;=4; i+=2)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(“%3d”,i);</p><p>}</p>',0,3,23,NULL,NULL,NULL),(386,1,1,3,'<p>Kết quả của chương trình sau là gì :</p><p>#include &lt;stdio.h&gt;</p><p>void main()</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int i,j;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (i=1; i&lt;4; i++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; j=i;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(“%3d”,j);</p><p>}</p>',0,3,23,NULL,NULL,NULL),(387,1,1,3,'<p>Nếu đoạn code sau được thực thi, Có bao nhiêu chuỗi Hello được xuất ra màn hình?</p><p>for (int i = 1 ; i&lt;=5; i++)</p><p>for (int j = 1 ; j&lt;=5; j++)</p><p>if ((i+j) %3 == 0) printf(\"Hello\\n\");</p>',0,3,23,NULL,NULL,NULL),(388,1,1,3,'<p>Sau khi thực hiện đoạn chương trình sau, a có giá trị là bao nhiêu?</p><p>int i, a;</p><p>i = a = 0;</p><p>do { a += i++;</p><p>} while (i &lt;= 8);</p>',0,3,23,NULL,NULL,NULL),(389,1,1,3,'<p>Kết quả của chương trình sau là gì:</p><p>#include &lt;stdio.h&gt;</p><p>void main()</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int a=40, b=4;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while(a!=b)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (a&gt;b) a=a-b;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else b=b-a;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(“%d”,a);</p><p>}</p>',0,3,23,NULL,NULL,NULL),(390,1,1,3,'<p>Nếu đoạn code sau được thực thi :</p><p>int i= 0, S=1;</p><p>do</p><p>{</p><p>if ( i%4 != 0)</p><p>S+= i+5;</p><p>i+=2;</p><p>}</p><p>while (i&lt;10);</p><p>Trị của biến S sẽ là :</p>',0,3,23,NULL,NULL,NULL),(391,1,1,4,'<p>Nếu đoạn code sau được thực thi</p><p>int i= 0, S=5;</p><p>while (i&lt;=10)</p><p>{ S+= i+2; i+=2; }</p><p>Trị của biến S sẽ là :</p>',0,3,23,NULL,NULL,NULL),(392,1,1,3,'<p>Nếu đoạn code sau được thực thi :</p><p>int i= 1, S=1;</p><p>while (i&lt;=20)</p><p>{ S+= 2*i+2;</p><p>i+=4;</p><p>}</p><p>Trị của biến S sẽ là :</p>',0,3,23,NULL,NULL,NULL),(393,1,1,3,'<p>Nếu đoạn code sau được thực thi :</p><p>int S= 100;</p><p>for (int i= 10; i&gt;0; i - = 3)</p><p>S - = i + i%2;</p><p>Trị của biến S sẽ là :</p>',0,3,23,NULL,NULL,NULL),(394,1,1,3,'<p>Nếu đoạn code sau được thực thi :</p><p>int S=9, i=5, j=7;</p><p>while (2*i &lt; 3*j)</p><p>{ if (i % 2 ==1) S +=i;</p><p>i++ ; j-- ;</p><p>}</p><p>Trị của biến S sẽ là :</p>',0,3,23,NULL,NULL,NULL),(395,1,1,3,'<p>Chương trình sau cho kết qủa là gì?</p><p># include &lt;stdio.h&gt;</p><p>void main()</p><p>{ int i, x=0 ;</p><p>for (i=1 ; i&lt;10 ; i++)</p><p>{ if ( i%2==1) x = x+i ;</p><p>else x++ ;</p><p>break;</p><p>}</p><p>printf (\"%d \", x);</p><p>}</p>',0,3,23,NULL,NULL,NULL),(396,1,1,3,'<p>Nếu đoạn code sau được thực thi , cho biết kết quả S:</p><p>int S=0;</p><p>for (int i=0 ; i&lt;10 ;i+=4) S+=i;</p><p>printf(\"%d\",S);</p>',0,3,23,NULL,NULL,NULL),(397,1,1,4,'<p>Câu lệnh sau có gì sai :</p><p>for(i=0;j=0, i&lt;10; ++i,j+=i){</p><p>k+=i*j+j*j;</p><p>}</p>',0,3,23,NULL,NULL,NULL),(398,1,1,1,'<p>Chọn phát biểu sai :</p>',0,3,24,NULL,NULL,NULL),(399,1,1,2,'<p>Chọn phát biểu đúng :</p>',0,3,24,NULL,NULL,NULL),(400,1,1,2,'<p>Nếu hàm trả trị thuộc kiểu cơ bản thì :</p>',0,3,24,NULL,NULL,NULL),(401,1,1,2,'<p>Với hàm void :</p>',0,3,24,NULL,NULL,NULL),(402,1,1,3,'<p>Khai báo hàm tốt nhất cho tác vụ hoán vị 2 số thực :</p>',0,3,24,NULL,NULL,NULL),(403,1,1,1,'<p>Sử dụng cách truyền nào trong hàm sẽ không làm thay đổi giá trị của biến trong chương trình chính:</p>',0,3,24,NULL,NULL,NULL),(404,1,1,3,'<p>Chọn khai báo hàm tốt nhất cho tác vụ kiểm tra một số nguyên có là số lũy thừa của 2 hay không :</p>',0,3,24,NULL,NULL,NULL),(405,1,1,1,'<p>Hàm nào mà mọi chương trình C đều phải có :</p>',0,3,24,NULL,NULL,NULL),(406,1,1,1,'<p>Nếu một hàm đựơc gọi trước khi nó được định nghĩa thì điều kiện là gì ?</p>',0,3,24,NULL,NULL,NULL),(407,1,1,4,'<p>Nghiên cứu chương trình C sau, hãy cho biết kết xuất :</p><p>#include &lt;stdio.h&gt;</p><p>#include&lt;conio.h&gt;</p><p>int func( int x)</p><p>{ int y = x*x; return y;</p><p>}</p><p>void main ()</p><p>{ int a, count;</p><p>for (count = 1;count &lt;= 5; count++)</p><p>{ a = func(count);</p><p>printf (\"%d \", a);</p><p>}</p><p>}</p>',0,3,24,NULL,NULL,NULL),(408,1,1,3,'<p>Hàm sau sẽ in ra kết quả là gì?</p><p>void e(int );</p><p>main()</p><p>{</p><p>&nbsp; int a; a=3;</p><p>&nbsp; e(a);</p><p>}</p><p>void e(int n)</p><p>{</p><p>&nbsp; if(n&gt;0)</p><p>&nbsp; {</p><p>&nbsp;&nbsp;&nbsp; e(--n); printf(\"%d\" , n); e(--n);</p><p>&nbsp; }</p><p>}</p>',0,3,24,NULL,NULL,NULL),(409,1,1,2,'<p>Để xuất các phần tử của mảng 1 chiều ta dùng mấy vòng For?<strong> </strong></p>',0,3,23,NULL,NULL,NULL),(410,1,1,1,'<p>Mỗi một phần tử của mảng có thể xác định một cách duy nhất nhờ _______</p>',0,3,23,NULL,NULL,NULL),(411,1,1,1,'<p>Khi nào sử dụng đến kiểu dữ liệu mảng ?</p>',0,3,23,NULL,NULL,NULL),(412,1,1,1,'<p>Trong ngôn ngữ lập trình C</p>',0,3,23,NULL,NULL,NULL),(413,1,1,1,'<p>Trong ngôn ngữ lập trình C, phần tử đầu tiên của mảng mang chỉ số là?</p>',0,3,23,NULL,NULL,NULL),(414,1,1,2,'<p>Cho một mảng A kiểu số nguyên có 15 phần tử, để in ra màn hình phần tử thứ 7</p>',0,3,23,NULL,NULL,NULL),(415,1,1,3,'<p>Nếu được thực hiện đoạn chương trình sau sẽ viết ra cái gì?</p><p>for (int i=1; i&lt;=n; i++)</p><p>{&nbsp; if (a[i] % 2 ==1)</p><p>printf(“%d”,a[i]); }</p>',0,3,23,NULL,NULL,NULL),(416,1,1,3,'<p>Cho các dòng khai báo sau:</p><p>int m[5] = {2, 3, 7};</p><p>void main()</p><p>{ printf(\"%d\", m[4]);}</p><p>Cho biết dòng trên đây in ra số nào?</p>',0,3,23,NULL,NULL,NULL),(417,1,1,3,'<p>Cho biết hàm sau đây có chức năng gì:</p><p>float T(float *m, int n)</p><p>{ float t = 0.0;</p><p>for (int i = 0; i &lt; n; i++)</p><p>t += m[i];</p><p>return t;</p><p>}</p>',0,3,23,NULL,NULL,NULL),(418,1,1,2,'<p>int objects [3] [4] [20];</p><p>mảng objects được khai báo ở trên là tập hợp của _______ mảng một chiều.</p>',0,3,23,NULL,NULL,NULL),(419,1,1,1,'<p>Trong ngôn ngữ lập trình C, xâu kí tự là?</p>',0,3,23,NULL,NULL,NULL),(420,1,1,1,'<p>Chọn câu trả lời đúng nhất về định nghĩa mảng 2 chiều:</p>',0,3,23,NULL,NULL,NULL),(421,1,1,3,'<p>void Nhap (MATRAN a, int &amp;d, int &amp;c )&nbsp;&nbsp;</p><p>{</p><p>&nbsp; printf (“\\nNhap so dong: ”);</p><p>&nbsp; scanf (“ %d”, &amp;d );</p><p>&nbsp; printf (“\\nNhap so cot: ”);</p><p>&nbsp; scanf (“%d”, &amp;c );</p><p>&nbsp; for ( int i = 0; i &lt; d; i ++ )</p><p>&nbsp;&nbsp;&nbsp; for (int j = 0; j &lt; c; j ++)</p><p>&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf (“ a[%d][%d] = ”, i, j );</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ………………………………...</p><p>&nbsp;&nbsp; }</p><p>} &nbsp;Chọn câu lệnh đúng nhất cho chỗ trống</p>',0,3,23,NULL,NULL,NULL),(422,1,1,3,'<p>void Xuat (MATRAN a, int d, int c)</p><p>{</p><p>&nbsp;printf (“\\nNoi dung ma tran:\\n”);</p><p>&nbsp; for (int i = 0; i &lt; d; i++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;{</p><p>&nbsp;&nbsp;&nbsp; for (int j = 0; j &lt; c; j++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf (“ \\t %d ”, a[i][j] );</p><p>&nbsp;&nbsp; printf (“\\n”);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>} Chọn câu lệnh đúng nhất cho chỗ trống</p>',0,3,23,NULL,NULL,NULL),(423,1,1,3,'<p>Đoạn chương trình sau làm gì?</p><p>int ChuongTrinh (MATRAN&nbsp; a, int d, int c)</p><p>{</p><p>&nbsp; int dem = 0;</p><p>&nbsp; for ( int i = 0 ; i &lt; d ; i ++)</p><p>&nbsp;&nbsp;&nbsp; for ( int&nbsp; j = 0 ; j &lt; c ; j ++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ( a[i][j] % 2 = = 0 )</p><p>&nbsp;&nbsp;&nbsp; dem ++;</p><p>&nbsp;return dem;</p><p>}&nbsp;</p>',0,3,23,NULL,NULL,NULL),(424,1,1,3,'<p>int a[5][10], b[5][10];</p><p>b = a;&nbsp;&nbsp;</p><p>int i, j;</p><p>for (i = 0; i &lt; 5; i++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (j = 0; j &lt; 10; j++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b[i][j] = a[i][j];</p><p>Trong đoạn chương trình trên có 1 dòng bị sai, đó là dòng số:</p>',0,3,23,NULL,NULL,NULL),(425,1,1,3,'<p>int Tinh(int a[][maxc], int m, int n, int d)</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int j, test;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; test= 0;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (j=0; j&lt;n; j++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; test = test + a[d][j];</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return test;</p><p>}</p><p>Giả sử đây là mảng các số 5, và&nbsp; m=5, n=10, d = 5, thì kết quả trả về là:</p>',0,3,23,NULL,NULL,NULL),(426,1,1,1,'<p>Khi mới khai báo, biến con trỏ sẽ: ?</p>',0,3,24,NULL,NULL,NULL),(427,1,1,1,'<p>Biến con trỏ chứa: ?</p>',0,3,24,NULL,NULL,NULL),(428,1,1,1,'<p>Truyền thông máy tính (computer communication) là quá trình:</p>',0,NULL,NULL,NULL,NULL,NULL),(429,1,1,1,'<p>Giao thức (protocol) trong truyền thông mạng được hiểu là:</p>',0,4,84,NULL,NULL,NULL),(430,1,1,3,'<p>Truyền thông máy tính (computer communication) là quá trình:</p>',0,4,84,NULL,NULL,NULL),(431,1,1,5,'<p>Trong mô hình mạng hình sao (star model), nếu Hub xử lý trung tâm bị hỏng thì:</p>',0,4,84,NULL,NULL,NULL),(432,1,1,1,'<p>Chọn cách gán địa chỉ của biến a cho biến con trỏ pa:</p>',0,3,24,NULL,NULL,NULL),(433,1,1,3,'<p>Trong mô hình mạng hình sao (star model). Nếu một máy tính bị hỏng thì:</p>',0,4,84,NULL,NULL,NULL),(434,1,1,1,'<p>Để truy cập đến nội dung của ô nhớ mà con trỏ pa trỏ tới bỏ vào y, ta sử dụng cú pháp:</p>',0,3,24,NULL,NULL,NULL),(435,1,1,1,'<p>Mô hình mạng hình sao (star model) là dạng mô hình:</p>',0,4,84,NULL,NULL,NULL),(436,1,1,3,'<p>Ta có các khai báo sau: int a, *p, *a, *q ; fl oat *f ; Chọn câu đúng nhất.</p>',0,3,24,NULL,NULL,NULL),(437,1,1,1,'<p>Chọn phát biểu đúng nhất.</p>',0,3,24,NULL,NULL,NULL),(438,1,1,3,'<p>Trong đoạn chương trình sau, puts(string) dùng để làm gì?</p><p>void&nbsp; main()</p><p>{</p><p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;char chuoi[] = \"Vi du chuoi\\n\";</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; puts(string); }</p>',0,3,24,NULL,NULL,NULL),(439,1,1,3,'<p>Trong đoạn chương trình sau, gets(chuoi) dùng để làm gì?</p><p>void main()</p><p>{</p><p>char chuoi[80];</p><p>printf(\"Nhap vao chuoi:\");</p><p>gets(chuoi);</p><p>printf(\"Chuoi vua nhap la: %s\\n\", chuoi); }</p>',0,3,24,NULL,NULL,NULL),(440,1,1,1,'<p>Topo mạng cục bộ nào mà tất cả các trạm phân chia chung một đường truyền chính:</p>',0,4,84,NULL,NULL,NULL),(441,1,1,1,'<p>Khi dùng các hàm xử lý chuỗi ta phải khai báo thêm thư viện nào?</p>',0,3,24,NULL,NULL,NULL),(442,1,1,3,'<p>#include&lt;stdio.h&gt;</p><p>void change(int *b, int n)</p><p>{</p><p>&nbsp;&nbsp;&nbsp; int i;</p><p>&nbsp;&nbsp;&nbsp; for(i=0; i&lt;n; i++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *(b+1) = *(b+i)+5;</p><p>}</p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;&nbsp; int i, a[] = {2, 4, 6, 8, 10};</p><p>&nbsp;&nbsp;&nbsp; change(a, 5);</p><p>&nbsp;&nbsp;&nbsp; for(i=0; i&lt;=4; i++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(\"%d, \", a[i]);</p><p>&nbsp;&nbsp;&nbsp; return 0;</p><p>}</p><p>Kết quả của đoạn chương trình trên ?</p>',0,3,24,NULL,NULL,NULL),(443,1,1,4,'<p>Các máy hoạt động trong một mạng vừa như máy phục vụ (server), vừa như máy khách (client) có thể tìm thấy trong mạng nào?</p>',0,4,84,NULL,NULL,NULL),(444,1,1,3,'<p>Giá trị của x bằng bao nhiêu sau khi thực hiện đoạn chương trình sau:</p><p>int x, y, z;</p><p>x=1; y=2; z=3;</p><p>int *a=&amp;x;</p><p>*a=y;</p><p>printf(\"%d\",x);</p>',0,3,24,NULL,NULL,NULL),(445,1,1,1,'<p>Nếu lấy khoảng cách địa lý làm yếu tố chính để phân loại thì mạng có phạm vi lớn nhất là:</p>',0,4,84,NULL,NULL,NULL),(446,1,1,3,'<p>Cho đoạn chương trình sau:</p><p>void main(){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int a=7, b=9, *p;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p = &amp;a;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a = ++b;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(\"%d%d%d\",a,b,*p);}</p><p>Kết quả sau khi thực hiện chương trình trên là:</p>',0,3,24,NULL,NULL,NULL),(447,1,1,3,'<p>Cho biết hàm sau đây có chức năng gì:</p><p>float T(float *m, int n)</p><p>{ float t = 0.0;</p><p>for (int i = 0; i &lt; n; i++)</p><p>t += m[i];</p><p>kq=t/n;</p><p>return kq;</p><p>}</p>',0,3,24,NULL,NULL,NULL),(448,1,1,4,'<p>Trong topo mạng cục bộ star (ngôi sao), thiết bị trung tâm có thể là:</p>',0,4,84,NULL,NULL,NULL),(449,1,1,3,'<p>Cho hàm hoán vị sau, điền vị trí trống trong hàm:</p><p>void hoanvi(int *x, ……………….)</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int t = *x; *x = *y; *y = t;&nbsp;</p><p>}</p>',0,3,24,NULL,NULL,NULL),(450,1,1,3,'<p>Cho đoạn chương trình sau:</p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;&nbsp; int a=10, *j;</p><p>&nbsp;&nbsp;&nbsp; int *k;</p><p>&nbsp;&nbsp;&nbsp; j=k=&amp;a;</p><p>&nbsp;&nbsp;&nbsp; j++;</p><p>&nbsp;&nbsp;&nbsp; k++;</p><p>&nbsp;&nbsp;&nbsp; printf(\"%u %u\\n\", j, k);</p><p>&nbsp;&nbsp;&nbsp; return 0;</p><p>}</p>',0,3,24,NULL,NULL,NULL),(451,1,1,3,'<p>Cho biết kết quả của đoạn chương trình sau:</p><p>#include&lt;stdio.h&gt;</p><p>int main(){</p><p>char input[20]=”Truong cao dang CNTT”,&nbsp; *p, *temp;</p><p>strcpy(temp, input);</p><p>do</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p = strtok(temp, \" \");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p = strtok(NULL, \"\");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; strcpy(temp, p);</p><p>}while(p!=NULL);&nbsp;</p><p>printf(“Chuoi temp: %s Chuoi input: %s”, temp, input);</p><p>return 0;}</p>',0,3,24,NULL,NULL,NULL),(452,1,1,3,'<p>Chương trình in ra gì:</p><p>#include&lt;stdio.h&gt;</p><p>&nbsp;</p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;&nbsp; char str[] = \"Nagpur\";</p><p>&nbsp;&nbsp;&nbsp; str[0]=\'K\';</p><p>&nbsp;&nbsp;&nbsp; printf(\"%s, \", str);</p><p>&nbsp;&nbsp;&nbsp; str = \"Kanpur\";</p><p>&nbsp;&nbsp;&nbsp; printf(\"%s\", str+1);</p><p>&nbsp;&nbsp;&nbsp; return 0;</p><p>}</p>',0,3,24,NULL,NULL,NULL),(453,1,1,3,'<p>#include&lt;stdio.h&gt;</p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;&nbsp; char *p;</p><p>&nbsp;&nbsp;&nbsp; p=\"hello\";</p><p>&nbsp;&nbsp;&nbsp; printf(\"%s\\n\", *&amp;*&amp;p);</p><p>&nbsp;&nbsp;&nbsp; return 0;</p><p>} Chương trình trên in ra:</p>',0,3,24,NULL,NULL,NULL),(454,1,1,3,'<p>#include&lt;stdio.h&gt;</p><p>&nbsp;</p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;&nbsp; int i;</p><p>&nbsp;&nbsp;&nbsp; char a[] = \"\\0\";</p><p>&nbsp;&nbsp;&nbsp; if(printf(\"%s\", a))</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(\"The string is empty\\n\");</p><p>&nbsp;&nbsp;&nbsp; else</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(\"The string is not empty\\n\");</p><p>&nbsp;&nbsp;&nbsp; return 0;</p><p>} Chương trình trên sẽ cho kết quả:</p>',0,3,24,NULL,NULL,NULL),(455,1,1,3,'<p>#include&lt;stdio.h&gt;</p><p>&nbsp;</p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;&nbsp; char str1[] = \"Hello\";</p><p>&nbsp;&nbsp;&nbsp; char str2[10];</p><p>&nbsp;&nbsp;&nbsp; char *t, *s;</p><p>&nbsp;&nbsp;&nbsp; s = str1;</p><p>&nbsp;&nbsp;&nbsp; t = str2;</p><p>&nbsp;&nbsp;&nbsp; while(*t=*s)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *t++ = *s++;</p><p>&nbsp;&nbsp;&nbsp; printf(\"%s\\n\", str2);</p><p>&nbsp;&nbsp;&nbsp; return 0;</p><p>}Kết quả là:</p>',0,3,24,NULL,NULL,NULL),(456,2,1,2,'<p>Topo mạng loại {1}&nbsp;có&nbsp;tín hiệu lưu chuyển trên một vòng theo một chiều duy nhất</p>',0,4,84,NULL,NULL,NULL),(457,1,1,3,'<p>#include&lt;stdio.h&gt;</p><p>void swap(char *, char *);</p><p>&nbsp;</p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;&nbsp; char *pstr[2] = {\"Hello\", \"IndiaBIX\"};</p><p>&nbsp;&nbsp;&nbsp; swap(pstr[0], pstr[1]);</p><p>&nbsp;&nbsp;&nbsp; printf(\"%s %s\", pstr[0], pstr[1]);</p><p>&nbsp;&nbsp;&nbsp; return 0;</p><p>}</p><p>void swap(char *t1, char *t2)</p><p>{</p><p>&nbsp;&nbsp;&nbsp; char *t;</p><p>&nbsp;&nbsp;&nbsp; t=t1;</p><p>&nbsp;&nbsp;&nbsp; t1=t2;</p><p>&nbsp;&nbsp;&nbsp; t2=t;</p><p>} Xuất ra màn hình kết quả:</p>',0,3,24,NULL,NULL,NULL),(458,1,1,3,'<p>#include&lt;stdio.h&gt;</p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;&nbsp; char *str;</p><p>&nbsp;&nbsp;&nbsp; str = \"%d\\n\";</p><p>&nbsp;&nbsp;&nbsp; str++;</p><p>&nbsp;&nbsp;&nbsp; str++;</p><p>&nbsp;&nbsp;&nbsp; printf(str-2, 300);</p><p>&nbsp;&nbsp;&nbsp; return 0;</p><p>} Kết quả chương trình:</p>',0,3,24,NULL,NULL,NULL),(461,3,1,2,'<p>Thay đổi thứ tự độ phức tạp từ tốt nhất đến xấu</p>',0,4,84,NULL,NULL,NULL),(462,4,1,3,'Liên kết thiết bị và chức năng',0,4,84,NULL,NULL,NULL),(464,4,1,3,'<p>Liên kết thiết bị và chức năngaaaa</p>',0,NULL,NULL,NULL,NULL,NULL),(465,1,1,1,'<p>Cấu trúc là?</p>',0,3,19,NULL,NULL,NULL),(467,1,1,1,'<p>Để định nghĩa một tên mới cho kiểu dữ liệu cấu trúc đã có ta dùng cú pháp:</p>',0,3,19,NULL,NULL,NULL),(468,1,1,3,'<p>Chọn phát biểu đúng nhất :</p>',0,3,19,NULL,NULL,NULL),(469,1,1,3,'<p>#define MAX 100</p><p>typedef struct PHANSO</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int tu, mau;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; };</p><p>PHANSO Tru(PHANSO ps1, PHANSO ps2)</p><p>{</p><p>&nbsp;&nbsp;&nbsp; PHANSO kq;</p><p>……………………………………………….&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp; kq.mau=ps1.mau*ps2.mau;</p><p>&nbsp;&nbsp;&nbsp; kq=RutGon(kq);</p><p>&nbsp;&nbsp;&nbsp; return kq;</p><p>} Thêm dòng còn thiếu cho hàm trên.</p>',0,3,19,NULL,NULL,NULL),(470,1,1,3,'<p>Nếu được thực hiện đoạn chương trình sau sẽ viết ra cái gì?</p><p>#include&lt;stdio.h&gt;</p><p>&nbsp;</p><p>&nbsp;&nbsp;&nbsp; struct course</p><p>&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int courseno;</p><p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;char coursename[25];</p><p>&nbsp;&nbsp;&nbsp; };</p><p>int main()</p><p>{struct course c[] = { {102, \"Java\"},</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {103, \"PHP\"},</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {104, \"DotNet\"}&nbsp;&nbsp;&nbsp;&nbsp; };</p><p>&nbsp;</p><p>&nbsp;&nbsp;&nbsp; printf(\"%d \", c[1].courseno);</p><p>&nbsp;&nbsp;&nbsp; printf(\"%s\\n\", (*(c+2)).coursename);</p><p>&nbsp;&nbsp;&nbsp; return 0;</p><p>}</p>',0,3,20,NULL,NULL,NULL),(471,1,1,3,'<p>Đoạn chương trình sau đây bị sai ở đâu?</p><p>#include&lt;stdio.h&gt;</p><p>int main()</p><p>{</p><p>&nbsp;&nbsp;&nbsp; struct emp</p><p>&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; char name[20];</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; float sal;</p><p>&nbsp;&nbsp;&nbsp; };</p><p>&nbsp;&nbsp;&nbsp; struct emp e[10];</p><p>&nbsp;&nbsp;&nbsp; int i;</p><p>&nbsp;&nbsp;&nbsp; for(i=0; i&lt;=9; i++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; scanf(\"%s %f\", e[i].name, &amp;e[i].sal);</p><p>&nbsp;&nbsp;&nbsp; return 0;</p><p>}</p>',0,3,20,NULL,NULL,NULL),(472,1,1,1,'<p>Ngôn ngữ lập trình C được Dennish phát triển dựa trên ngôn ngữ lập trình nào?</p>',0,3,21,NULL,NULL,NULL),(473,1,1,1,'<p>Ngôn ngữ lập trình được Dennish đưa ra vào năm nào?</p>',0,3,19,NULL,NULL,NULL),(474,1,1,1,'<p>Trong ngôn ngữ lập trình C, hằng và biến khác nhau cơ bản như thế nào? Hãy chọn phương án trả lời đúng nhất</p>',0,3,19,NULL,NULL,NULL),(475,1,1,1,'<p>Lập trình là:</p>',0,3,19,NULL,NULL,NULL),(476,1,1,1,'<p>Hằng:</p>',0,3,19,NULL,NULL,NULL),(477,1,1,3,'<p>Hãy chọn biểu diễn hằng đúng trong những biểu diễn dưới đây :</p>',0,3,19,NULL,NULL,NULL),(478,1,1,1,'<p>Khi gán trị mới cho một dữ liệu thì …..</p>',0,3,19,NULL,NULL,NULL),(479,1,1,1,'<p>Cú pháp để khai báo hằng trong lập trình C là:</p>',0,3,19,NULL,NULL,NULL),(480,1,1,2,'<p>Trong các khai báo sau khai báo nào đúng?</p>',0,3,19,NULL,NULL,NULL),(481,1,1,1,'<p>Biến:</p>',0,3,19,NULL,NULL,NULL),(482,1,1,2,'<p>Khi khai báo một biến có nghĩa:</p>',0,3,20,NULL,NULL,NULL),(483,1,1,3,'<p>Trong các tên biến sau đây, tên nào đặt tên sai quy tắc đặt tên khi lập trình C?</p>',0,3,20,NULL,NULL,NULL),(484,1,1,1,'<p>Trong lập trình C, các số sau đây, số nào sai:</p>',0,3,20,NULL,NULL,NULL),(485,1,1,3,'<p>Đại lượng dùng để lưu trữ giá trị và giá trị có thể được thay đổi trong quá trình thực hiện chương trình gọi là</p>',0,3,20,NULL,NULL,NULL),(486,1,1,1,'<p>Một biến được gọi là biến toàn cục nếu:</p>',0,3,20,NULL,NULL,NULL),(487,1,1,1,'<p>Chọn câu đúng. Biến cục bộ:</p>',0,3,20,NULL,NULL,NULL),(488,1,1,1,'<p>Một biến được gọi là một biến cục bộ nếu:</p>',0,3,20,NULL,NULL,NULL),(489,1,1,2,'<p>Nếu x là một biến toàn cục và x không phải là một con trỏ thì:</p>',0,3,20,NULL,NULL,NULL),(490,1,1,1,'<p>Với lập trình C, Nếu một số nguyên có trị từ 12000 đến 120000 thì kiểu dữ liệu nào nên được chọn thích hợp nhất?</p>',0,3,20,NULL,NULL,NULL),(491,1,1,1,'<p>Một biến kiểu int trong C chiếm mấy byte?</p>',0,3,20,NULL,NULL,NULL),(492,1,1,1,'<p>Một dữ liệu kiểu float trong C chiếm mấy bit?</p>',0,3,20,NULL,NULL,NULL),(493,1,1,3,'<p>Một dữ liệu kiểu double trong Cchiếm mấy byte?</p>',0,3,20,NULL,NULL,NULL),(494,1,1,3,'<p>Đoạn code khai báo 3 biến sau có lỗi không ?</p><p>int n=10 ; m= 8 ; char c= ’A’;</p>',0,3,20,NULL,NULL,NULL),(495,1,1,3,'<p>Biến X được khai báo là kiểu integer. Lệnh nào sau đây là sai?</p>',0,3,20,NULL,NULL,NULL),(496,1,1,3,'<p>Chọn phát biểu đúng :</p>',0,3,20,NULL,NULL,NULL),(497,1,1,3,'<p>Chọn phát biểu đúng. Cho đoạn code:</p><p>double x=12.3; int n=x%3;</p>',0,3,20,NULL,NULL,NULL),(498,1,1,2,'<p>Phép tính 3*5%4-2*16&gt;32 &amp;&amp; 31/6&lt;7 cho kết qủa:</p>',0,3,20,NULL,NULL,NULL),(499,1,1,3,'<p>Phép tính 3*(5%4*3)+(31/2&gt;7) cho kết quả :</p>',0,3,20,NULL,NULL,NULL),(500,1,1,3,'<p>Để tính diện tích đường tròn bán kính R, biểu thức nào trong lập trình C là đúng:</p>',0,3,20,NULL,NULL,NULL),(501,1,1,1,'<p>Chọn phát biểu đúng :</p>',0,3,20,NULL,NULL,NULL),(502,1,1,3,'<p>Kết xuất là bao nhiêu khi đoạn code sau được thực thi :</p><p>int n=92, m=11, t= --n/m, u= m+n+t;</p><p>printf(\"%d\",u);</p>',0,3,21,NULL,NULL,NULL),(503,1,1,3,'<p>Nếu đoạn code sau được thực thi, trị của biến t là gì?</p><p>int x= 5, y=7;</p><p>int t = 12 + (y&lt;2*x) ;</p>',0,3,21,NULL,NULL,NULL),(504,1,1,3,'<p>Chọn 1 câu đúng. Độ ưu tiên tăng dần của các nhóm phép toán là …</p>',0,3,21,NULL,NULL,NULL),(505,1,1,1,'<p>Cú pháp để khai báo sử dụng thư viện trong chương trình C là:</p>',0,3,21,NULL,NULL,NULL),(506,1,1,1,'<p>Phát biểu nào là sai?</p>',0,3,21,NULL,NULL,NULL),(507,1,1,1,'<p>Trong C, #define là chỉ thị</p>',0,3,21,NULL,NULL,NULL),(508,1,1,1,'<p>Nếu không cẩn thận, dùng chỉ thị #define sẽ gây ra …….</p>',0,3,21,NULL,NULL,NULL),(509,1,1,2,'<p>Phát biểu nào là đúng?</p>',0,3,21,NULL,NULL,NULL),(510,1,1,1,'<p>Trong môi trường lập trình C trên máy PC, biến kiểu int khác biến kiểu char về bản chất ở điểm nào?</p>',0,3,21,NULL,NULL,NULL),(511,1,1,1,'<p>Bảng mã ASCII mở rộng có bao nhiêu ký tự?</p>',0,3,21,NULL,NULL,NULL),(512,1,1,1,'<p>Bảng mã ASCII chuẩn có bao nhiêu ký tự?</p>',0,3,21,NULL,NULL,NULL),(513,1,1,1,'<p>Các định dạng nào sau đây có thể được áp dụng cho số nguyên?</p>',0,3,21,NULL,NULL,NULL),(514,1,1,2,'<p>Giả sử a, b là hai số thực. Biểu thức nào dưới đây viết không đúng theo cú pháp của ngôn ngữ lập trình C:</p>',0,3,21,NULL,NULL,NULL),(515,1,1,1,'<p>Dạng tổng quát của hàm printf() là: printf(“dãy mã quy cách”, dãy mã biểu thức); Trong đó, dãy mã quy cách sẽ là:</p>',0,3,21,NULL,NULL,NULL),(516,1,1,1,'<p>Xâu định dạng nào dưới đây dùng để in ra một kí tự:</p>',0,3,21,NULL,NULL,NULL),(517,1,1,1,'<p>Xâu định dạng nào dưới đây dùng để in ra một xâu kí tự:</p>',0,3,21,NULL,NULL,NULL),(518,1,1,1,'<p>Trong các hàm sau, hàm nào là hàm không định dạng để in một chuỗi kí tự ra màn hình:</p>',0,3,21,NULL,NULL,NULL),(519,1,1,1,'<p>Kiểu dữ liệu float có thể xử lí dữ liệu trong phạm vi nào :</p>',0,3,21,NULL,NULL,NULL),(520,1,1,1,'<p>Số Integer nào đúng?</p>',0,3,21,NULL,NULL,NULL),(521,1,1,1,'<p>Kiểu dữ liệu char có phạm vi giá trị là:</p>',0,3,21,NULL,NULL,NULL),(522,1,1,1,'<p>Để tính điểm trung bình cho từng học sinh ta dùng kiểu dữ liệu nào?</p>',0,3,21,NULL,NULL,NULL),(523,1,1,3,'<p>Cho biết biến f sau khi thực hiện sau dòng lệnh sau có giá trị bao nhiêu:</p><p>float f = 3/5;</p>',0,3,21,NULL,NULL,NULL),(524,1,1,3,'<p>Để khai báo các biến A,B có kiểu kí tự, biến C,D có kiểu số thực, biến E có kiểu số nguyên ta chọn kết quả:</p>',0,3,21,NULL,NULL,NULL),(525,1,1,1,'<p>Kiểu dữ liệu nào dưới đây không được coi là kiểu dữ liệu cơ bản trong ngôn ngữ lập trình C</p>',0,3,21,NULL,NULL,NULL),(526,1,1,1,'<p>Các biểu diễn của phép toán số học trong lập trình C là:</p>',0,3,21,NULL,NULL,NULL),(527,1,1,1,'<p>Các biểu diễn của phép toán quan hệ trong lập trình C là:</p>',0,3,21,NULL,NULL,NULL),(528,1,1,1,'<p>Các biểu diễn của phép toán logic trong lập trình C là:</p>',0,3,19,NULL,NULL,NULL),(529,1,1,1,'<p>Vế phải của toán tử gán có thể là:</p>',0,3,19,NULL,NULL,NULL),(530,1,1,1,'<p>Toán tử % trong dữ liệu kiểu số nguyên là phép chia:</p>',0,3,19,NULL,NULL,NULL),(531,1,1,1,'<p>√x biểu diễn trong C là:</p>',0,3,19,NULL,NULL,NULL),(532,1,1,1,'<p>Hàm printf() và scanf() thuộc vào loại _______ :</p>',0,3,19,NULL,NULL,NULL),(533,1,1,3,'<p>Đọc kỹ và cho biết dòng lệnh này sai chỗ nào</p><p>printf(\"xuat ran: %d\",&amp;n);</p>',0,3,19,NULL,NULL,NULL),(534,1,1,1,'<p>Lệnh nào trong các lệnh sau cho phép đã chuyển tới một nơi nào đó đã được gán nhãn.</p>',0,3,19,NULL,NULL,NULL),(535,1,1,3,'<p>Nếu đoạn code sau được thực thi, trị của biến t là bao nhiêu?</p><p>int x= 3, y=4;</p><p>int t = y &lt; 2*x || y &gt; x ;</p>',0,3,19,NULL,NULL,NULL),(536,1,1,3,'<p>Đọc kỹ đoạn code sau và cho biết lỗi sai ở dòng nào</p><p>int a; float b=0;</p><p>b=\'N\';</p><p>printf(\"Nhap b\":);</p><p>scanf(\"%d\",&amp;a);</p>',0,3,19,NULL,NULL,NULL),(537,1,1,3,'<p>Kết quả hiển thị ra màn hình của chương trình sau là gì :</p><p>#include&lt;stdio.h&gt;</p><p>int main()</p><p>{int a,b ;</p><p>a=100 ;</p><p>b=56 ;</p><p>printf(\"%d\",(a));</p><p>return 0;</p><p>}</p>',0,3,19,NULL,NULL,NULL),(538,1,1,3,'<p>Kết quả in ra màn hình của chương trình sau :</p><p>#include&lt;stdio.h&gt;</p><p>int main()</p><p>{</p><p>&nbsp;</p><p>int ch=\'A\'; printf(\"%d\",ch);</p><p>return 0;</p><p>}</p>',0,3,19,NULL,NULL,NULL),(539,1,1,3,'<p>Cho biết kết quả của x&nbsp;, y, z với x, y, z có kiểu là int:</p><p>int x=10,y,z; y=++x; z=x++;</p>',0,3,19,NULL,NULL,NULL),(540,1,1,3,'<p>Trong C, xét đoạn chương trình sau<br> const float b=3.75;</p><p>printf(\"%.5f\" ,b);</p><p>Giả sử đoạn code này được thực thi màn hình kết quả là <br></p>',0,3,19,NULL,NULL,NULL),(541,1,1,3,'<p>Kết quả của chương trình sau:</p><p>#include&lt;stdio.h&gt;</p><p>int main()</p><p>{</p><p>int i=98;</p><p>printf(\"%c\",i);</p><p>return 0;</p><p>}</p>',0,3,19,NULL,NULL,NULL),(542,1,1,4,'<p>Kết quả in ra màn hình của chương trình sau:</p><p>#include&lt;stdio.h&gt;</p><p>int main()</p><p>{</p><p>int a=100, b=6;</p><p>double f;</p><p>f=(double)a/(double)b;</p><p>printf(\"%2.2f\",f);</p><p>return 0;</p><p>}</p>',0,3,19,NULL,NULL,NULL),(543,1,1,3,'<p>Chương trình sau cho ra kết quả gì?</p><p>int main()</p><p>{ return 1;</p><p>}</p>',0,3,19,NULL,NULL,NULL),(544,1,1,3,'<p>Chương trình sau lỗi ở dòng nào</p><p>#include &lt;stdio.h&gt;<br> int main()<br> { printf(\"Hello\");<br> getch();</p><p>return 0;<br> }</p>',0,3,19,NULL,NULL,NULL),(545,1,1,3,'<p>Cái gì sẽ là kết qủa của chương trình C sau?</p><p># include &lt;stdio.h&gt;</p><p>int main()</p><p>{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int x=5 , double y=9.8;</p><p>printf(\"%d %lf\",x,y);</p><p>return 0;</p><p>}</p>',0,3,19,NULL,NULL,NULL),(546,1,1,3,'<p>Cho biết kết quả của chương trình sau:</p><p>#include &lt;stdio.h&gt;</p><p>void main()</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; float a=1.2;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int b=a;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(\"%d\",b);</p><p>}</p>',0,3,19,NULL,NULL,NULL),(547,1,1,3,'<p>Cho biết kết quả của đoạn chương trình sau:</p><p>int a=3,b=4;</p><p>int t=a;</p><p>a=b;</p><p>b=t;</p><p>printf(\"%d\",b);</p>',0,3,19,NULL,NULL,NULL),(548,1,1,3,'<p>Cho x,y là 2 số nguyên, lệnh nào sau đây để in giá trị của 2 số a, b ra màn hình :</p>',0,3,19,NULL,NULL,NULL),(549,1,1,1,'<p>Chọn phát biểu đúng :</p>',0,3,19,NULL,NULL,NULL),(550,1,1,1,'<p>Trong mạng Ring, mỗi trạm của mạng được nối với vòng nhờ bộ phận:</p>',0,4,84,NULL,NULL,NULL),(551,1,1,1,'<p>Với topo mạng Ring, dữ liệu được truyền dựa trên liên kết nào:</p>',0,4,84,NULL,NULL,NULL),(552,1,1,1,'<p>Trong mạng Bus, đường truyền chính được giới hạn hai đầu bởi thiết bị nào:</p>',0,4,84,NULL,NULL,NULL),(553,1,1,1,'<p>Trong mạng Bus, mỗi trạm được nối vào bus qua thiết bị nào:</p>',0,4,84,NULL,NULL,NULL),(554,1,1,1,'<p>Với topo mạng Bus, dữ liệu được truyền dựa trên liên kết nào:</p>',0,4,84,NULL,NULL,NULL),(555,1,1,1,'<p>Có mấy loại topo mạng:</p>',0,NULL,NULL,NULL,NULL,NULL),(556,1,1,1,'<p>Mô hình OSI bao gồm các tầng (viết từ tầng cao xuống tầng thấp): </p>',0,4,85,NULL,NULL,NULL),(557,1,1,1,'<p>Trình tự dòng dữ liệu khi truyền từ máy này sang máy khác trong mô hình OSI: </p>',0,4,85,NULL,NULL,NULL),(558,1,1,1,'<p>Tầng nào chịu trách nhiệm tích hợp dữ liệu các tầng trên để tạo thành một gói tin gọi là segment:</p>',0,4,85,NULL,NULL,NULL),(559,1,1,1,'<p>Tầng nào trong mô hình OSI chịu trách nhiệm mã hóa dữ liệu theo dạng âm thanh, hình ảnh, văn bản … </p>',0,4,85,NULL,NULL,NULL),(560,1,1,1,'<p>Tầng nào trong mô hình OSI làm việc với các tín hiệu điện: </p>',0,4,85,NULL,NULL,NULL),(561,1,1,1,'<p>Đơn vị dữ liệu của tầng Physical là: </p>',0,4,85,NULL,NULL,NULL),(562,1,1,1,'<p>Cho biết đặc điểm của địa chỉ ở tầng Data Link:</p>',0,4,85,NULL,NULL,NULL),(563,1,1,1,'<p>Chức năng chính của tầng Network: </p>',0,4,85,NULL,NULL,NULL),(564,1,1,1,'<p>Chức năng của tầng Transport: </p>',0,4,85,NULL,NULL,NULL),(565,1,1,1,'<p>Chức năng của tầng Session: </p>',0,4,85,NULL,NULL,NULL),(566,1,1,1,'<p>Chức năng của tầng Presentation:</p>',0,4,85,NULL,NULL,NULL),(567,1,1,2,'<p>Phát biểu nào sau đây mô tả đúng nhất cho tầng Application </p>',0,4,85,NULL,NULL,NULL),(568,1,1,1,'<p>OSI là chữ viết tắt của chữ:</p>',0,4,85,NULL,NULL,NULL),(569,1,1,1,'<p>Đơn vị dữ liệu của tầng Data-Link là: </p>',0,4,85,NULL,NULL,NULL),(570,1,1,1,'<p>Đơn vị dữ liệu của tầng Network là: </p>',0,4,85,NULL,NULL,NULL),(571,1,1,1,'<p>Đơn vị dữ liệu của tầng Transport là: </p>',0,4,85,NULL,NULL,NULL),(572,1,1,1,'<p>MAC là chữ viết tắt của chữ:</p>',0,4,85,NULL,NULL,NULL),(573,1,1,1,'<p>FTP là chữ viết tắt của chữ:</p>',0,4,85,NULL,NULL,NULL),(574,1,1,1,'<p>SNMP là chữ viết tắt của chữ:</p>',0,4,85,NULL,NULL,NULL),(575,1,1,1,'<p>Mô hình OSI bao gồm bao nhiêu tầng (lớp):</p>',0,4,85,NULL,NULL,NULL),(576,1,1,1,'<p>Các giao thức TCP và UDP làm việc trên tầng nào của mô hình OSI?</p>',0,4,85,NULL,NULL,NULL),(577,1,1,1,'<p>Các giao thức HTTP, DNS, FTP và SMTP làm việc trên tầng nào của mô hình OSI?</p>',0,4,85,NULL,NULL,NULL),(578,1,1,1,'<p>Mô hình TCP/IP bao gồm bao nhiêu tầng (lớp):</p>',0,4,85,NULL,NULL,NULL),(579,1,1,1,'<p>Mô hình TCP/IP bao gồm các tầng (viết từ tầng cao xuống tầng thấp): </p>',0,4,85,NULL,NULL,NULL),(580,1,1,1,'<p>Trong mô hình TCP/IP, tầng nào có chức năng trình bày dữ liệu?</p>',0,4,85,NULL,NULL,NULL),(581,1,1,1,'<p>Trong mô hình OSI, tầng nào thực hiện việc chọn đường và chuyển tiếp thông tin; thực hiện kiểm soát luồng dữ liệu và cắt/hợp dữ liệu:</p>',0,4,85,NULL,NULL,NULL),(582,1,1,1,'<p>Trong mô hình OSI, tầng nào cung cấp phương tiện để truyền thông tin qua liên kết vật lý đảm bảo tin cậy:</p>',0,4,85,NULL,NULL,NULL),(583,1,1,1,'<p>Tầng hai trong mô hình OSI tách luồng bit từ Tầng vật lý chuyển lên thành:</p>',0,4,85,NULL,NULL,NULL),(584,1,1,1,'<p>Độ dài của địa chỉ MAC:</p>',0,4,85,NULL,NULL,NULL),(585,1,1,1,'<p>Giao thức TCP hoạt động ở tầng nào trong mô hình OSI:</p>',0,4,85,NULL,NULL,NULL),(586,1,1,2,'<p>Giao thức nào dùng để tìm địa chỉ MAC khi biết địa chỉ IP của máy tính:</p>',0,4,85,NULL,NULL,NULL),(587,1,1,1,'<p>Để có một kiến trúc mạng chung tương thích giữa các mạng, tổ chức Tiêu chuẩn thế giới năm 1984 đã công bố một mô hình mạng, đó là:</p>',0,4,85,NULL,NULL,NULL),(588,1,1,3,'<p>Trong kiến trúc phân tầng mạng, tầng nào có liên kết logic (hay liên kết ảo):</p>',0,4,85,NULL,NULL,NULL),(589,1,1,1,'<p>Trong mô hình OSI, tầng nào thiết lập, duy trì, đồng bộ hóa và hủy bỏ các phiên truyền thông:</p>',0,4,85,NULL,NULL,NULL),(590,1,1,1,'<p>Trong mô hình OSI, tầng nào thực hiện việc truyền dòng bit không cấu trúc và truy nhập đường truyền nhờ các phương tiện cơ, điện, hàm, thủ tục:</p>',0,4,85,NULL,NULL,NULL),(591,1,1,1,'<p>Việc chuẩn hóa mạng cục bộ được diễn ra trên các tầng nào của mô hình OSI:</p>',0,4,85,NULL,NULL,NULL),(592,1,1,1,'<p>Trong mô hình TCP/IP thì giao thức IP nằm ở tầng thứ mấy:</p>',0,4,85,NULL,NULL,NULL),(593,1,1,1,'<p>Trong mô hình TCP/IP thì giao thức TCP nằm ở tầng thứ mấy:</p>',0,4,85,NULL,NULL,NULL),(594,1,1,1,'<p>Đơn vị dữ liệu được dùng trong giao thức IP được gọi là :</p>',0,4,85,NULL,NULL,NULL),(595,1,1,1,'<p>Giao thức FTP sử dụng cổng dịch vụ số:</p>',0,4,85,NULL,NULL,NULL),(596,1,1,1,'<p>Giao thức SMTP sử dụng cổng dịch vụ số:</p>',0,4,85,NULL,NULL,NULL),(597,1,1,1,'<p>Giao thức POP3 sử dụng cổng dịch vụ số:</p>',0,4,85,NULL,NULL,NULL),(598,1,1,1,'<p>Địa chỉ nào dưới đây là địa chỉ tầng 2 (địa chỉ MAC)?</p>',0,4,85,NULL,NULL,NULL),(599,1,1,1,'<p>Giao thức truyền thông trong DNS sử dụng cổng dịch vụ số:</p>',0,4,85,NULL,NULL,NULL),(600,1,1,2,'<p>Ba byte đầu tiên của địa chỉ MAC cho biết thông tin gì? </p>',0,4,85,NULL,NULL,NULL),(601,1,1,1,'<p>Giao thức TCP là giao thức:</p>',0,4,85,NULL,NULL,NULL),(602,1,1,1,'<p>Giao thức UDP được sử dụng cho những ứng dụng</p>',0,4,85,NULL,NULL,NULL),(603,1,1,1,'<p>Giao thức IP là giao thức:</p>',0,4,85,NULL,NULL,NULL),(604,1,1,3,'<p>Số nhị phân của 172 là:</p>',0,4,86,NULL,NULL,NULL),(605,1,1,3,'<p>Số nhị phân của 128 là:</p>',0,4,86,NULL,NULL,NULL),(606,1,1,2,'<p>Số thập phân của 11000000 là:</p>',0,4,86,NULL,NULL,NULL),(607,1,1,1,'<p>Địa chỉ IP được chia thành mấy lớp?</p>',0,4,86,NULL,NULL,NULL),(608,1,1,2,'<p>Byte đầu tiên của một địa chỉ IP có dạng: 11000001. Vậy nó thuộc lớp nào:</p>',0,4,86,NULL,NULL,NULL),(609,1,1,3,'<p>Byte đầu tiên của một địa chỉ IP có dạng: 11100001. Vậy nó thuộc lớp nào:</p>',0,4,86,NULL,NULL,NULL),(610,1,1,3,'<p>Byte đầu tiên của một địa chỉ IP có dạng : 00000001. Vậy nó thuộc lớp nào:</p>',0,4,86,NULL,NULL,NULL),(611,1,1,3,'<p>Byte đầu tiên của một địa chỉ IP có dạng : 10000001. Vậy nó thuộc lớp nào:</p>',0,4,86,NULL,NULL,NULL),(612,1,1,1,'<p>Số bit dành cho đường mạng (Net-id) của lớp A là:</p>',0,4,86,NULL,NULL,NULL),(613,1,1,2,'<p>Số bit dành cho đường mạng (Net-id) của lớp B là:</p>',0,4,86,NULL,NULL,NULL),(614,1,1,2,'<p>Số bit dành cho đường mạng (Net-id) của lớp C là:</p>',0,4,86,NULL,NULL,NULL),(615,1,1,1,'<p>Số bit dành cho địa chỉ máy (Host-id) của lớp A là:</p>',0,4,86,NULL,NULL,NULL),(616,1,1,1,'<p>Số bit dành cho địa chỉ máy (Host-id) của lớp B là:</p>',0,4,86,NULL,NULL,NULL),(617,1,1,1,'<p>Số bit dành cho địa chỉ máy (Host-id) của lớp C là:</p>',0,4,86,NULL,NULL,NULL),(618,1,1,1,'<p>191.1.2.3 là địa chỉ IP thuộc lớp:</p>',0,4,86,NULL,NULL,NULL),(619,1,1,3,'<p>4.5.6.7 là địa chỉ IP thuộc lớp:</p>',0,4,86,NULL,NULL,NULL),(620,1,1,3,'<p>229.1.2.3 là địa chỉ IP thuộc lớp:</p>',0,4,86,NULL,NULL,NULL),(621,1,1,3,'<p>Xác định đường mạng (Net-id) của địa chỉ IP 19.34.21.5</p>',0,4,86,NULL,NULL,NULL),(622,1,1,3,'<p>Xác định địa chỉ máy (Host-id) của địa chỉ IP 192.8.56.2</p>',0,4,86,NULL,NULL,NULL),(623,1,1,3,'<p>Xác định đường mạng (Net-id) của địa chỉ IP 190.12.67.9</p>',0,4,86,NULL,NULL,NULL),(624,1,1,4,'<p>Xác định địa chỉ máy (Host-id) của địa chỉ IP 205.23.67.8</p>',0,4,86,NULL,NULL,NULL),(625,1,1,4,'<p>Số thập phân của địa chỉ IP 10000000.00001011.00000011.00011111 là:</p>',0,4,86,NULL,NULL,NULL),(626,1,1,4,'<p>Số11111111.11111111.0.0 nhị phân của địa chỉ IP 255.255.255.0 là:Thiết bị nào là thiết bị ngoại vi</p>',0,4,86,NULL,NULL,NULL),(627,1,1,4,'<p>Số thập phân của địa chỉ IP 00000100.00000101.00000110.00000111 là:</p>',0,4,86,NULL,NULL,NULL),(628,1,1,4,'<p>Số thập phân của địa chỉ IP 11110001.00000001.00000010.00000011 là:</p>',0,4,86,NULL,NULL,NULL),(629,1,1,3,'<p>Subnet mask mặc định của lớp C là:</p>',0,4,86,NULL,NULL,NULL),(630,1,1,3,'<p>Subnet mask mặc định của lớp B là:</p>',0,4,86,NULL,NULL,NULL),(631,1,1,3,'<p>Subnet mask mặc định của lớp A là:</p>',0,4,86,NULL,NULL,NULL),(632,1,1,3,'<p>Cách viết tắt của 255.255.255.0 là:</p>',0,4,86,NULL,NULL,NULL),(633,1,1,4,'<p>Chấm tương đương-thập phân của /27 là:</p>',0,4,86,NULL,NULL,NULL),(634,1,1,4,'<p>Lớp B được phép mượn tối đa bao nhiêu bit cho subnet:</p>',0,4,86,NULL,NULL,NULL),(635,1,1,4,'<p>Lớp A được phép mượn tối đa bao nhiêu bit cho subnet:</p>',0,4,86,NULL,NULL,NULL),(636,1,1,4,'<p>Lớp C được phép mượn tối đa bao nhiêu bit cho subnet:</p>',0,4,86,NULL,NULL,NULL),(637,1,1,3,'<p>Một mạng con lớp A mượn 5 bit để chia subnet thì Subnet Mask sẽ là:</p>',0,4,86,NULL,NULL,NULL),(638,1,1,3,'<p>Một mạng con lớp A mượn 7 bit để chia subnet thì Subnet Mask sẽ là:</p>',0,4,86,NULL,NULL,NULL),(639,1,1,3,'<p>Một mạng con lớp A cần chứa tối thiểu 255 host thì phải sử dụng Subnet Mask nào sau đây:</p>',0,4,86,NULL,NULL,NULL),(640,1,1,3,'<p>Một mạng con lớp A mượn 1 bit để chia subnet thì Subnet Mask sẽ là:</p>',0,4,86,NULL,NULL,NULL),(641,1,1,3,'<p>Một mạng con lớp B mượn 5 bit để chia subnet thì Subnet Mask sẽ là:</p>',0,4,86,NULL,NULL,NULL),(642,1,1,3,'<p>Một mạng con lớp B mượn 7 bit để chia subnet thì Subnet Mask sẽ là:</p>',0,4,86,NULL,NULL,NULL),(643,1,1,3,'<p>Một mạng lớp B cần chia thành 3 mạng con, ta sử dụng Subnet Mask nào sau đây:</p>',0,4,86,NULL,NULL,NULL),(644,1,1,3,'<p>Một mạng lớp B cần chia thành 9 mạng con, ta sử dụng Subnet Mask nào sau đây:</p>',0,4,86,NULL,NULL,NULL),(645,1,1,3,'<p>Một mạng lớp B cần chia thành 15 mạng con, ta sử dụng Subnet Mask nào sau đây:</p>',0,4,86,NULL,NULL,NULL),(646,1,1,3,'<p>Một mạng lớp C cần chia thành 5 mạng con, ta sử dụng Subnet Mask nào sau đây:</p>',0,4,86,NULL,NULL,NULL),(647,1,1,3,'<p>Một mạng lớp C cần chia thành 3 mạng con, ta sử dụng Subnet Mask nào sau đây:</p>',0,4,86,NULL,NULL,NULL),(648,1,1,2,'<p>Địa chỉ 19.219.255.255 là địa chỉ gì?</p>',0,4,86,NULL,NULL,NULL),(649,1,1,3,'<p>Địa chỉ nào là địa chỉ broadcast của lớp C:</p>',0,4,86,NULL,NULL,NULL),(650,1,1,4,'<p>Nếu lấy một địa chỉ lớp B để chia mạng con với netmask là 255.255.128.0 thì có bao nhiêu mạng con có thể sử dụng được?</p>',0,4,86,NULL,NULL,NULL),(651,1,1,3,'<p>Nếu lấy một địa chỉ lớp B để chia mạng con với netmask là 255.255.192.0 thì có bao nhiêu mạng con có thể sử dụng được?</p>',0,4,86,NULL,NULL,NULL),(652,1,1,3,'<p>Nếu lấy một địa chỉ lớp B để chia mạng con với netmask là 255.255.224.0 thì có bao nhiêu mạng con có thể sử dụng được?</p>',0,4,86,NULL,NULL,NULL),(653,1,1,3,'<p>Nếu lấy một địa chỉ lớp B để chia mạng con với netmask là 255.255.240.0 thì có bao nhiêu mạng con có thể sử dụng được?</p>',0,4,86,NULL,NULL,NULL),(654,1,1,4,'<p>Nếu lấy một địa chỉ lớp B để chia mạng con với netmask là 255.255.248.0 thì có bao nhiêu mạng con có thể sử dụng được?</p>',0,4,86,NULL,NULL,NULL),(655,1,1,3,'<p>Nếu lấy một địa chỉ lớp B để chia mạng con với netmask là 255.255.252.0 thì có bao nhiêu mạng con có thể sử dụng được?</p>',0,4,86,NULL,NULL,NULL),(656,1,1,4,'<p>Nếu lấy một địa chỉ lớp B để chia mạng con với netmask là 255.255.254.0 thì có bao nhiêu mạng con có thể sử dụng được?</p>',0,4,86,NULL,NULL,NULL),(657,1,1,4,'<p>Nếu lấy một địa chỉ lớp C để chia mạng con với netmask là 255.255.255.128 thì có bao nhiêu mạng con có thể sử dụng được?</p>',0,4,86,NULL,NULL,NULL),(658,1,1,3,'<p>Nếu lấy một địa chỉ lớp C để chia mạng con với netmask là 255.255.255.192 thì có bao nhiêu mạng con có thể sử dụng được?</p>',0,4,86,NULL,NULL,NULL),(659,1,1,3,'<p>Nếu lấy một địa chỉ lớp C để chia mạng con với netmask là 255.255.255.224 thì có bao nhiêu mạng con có thể sử dụng được?</p>',0,4,86,NULL,NULL,NULL),(660,1,1,3,'<p>Nếu lấy một địa chỉ lớp C để chia mạng con với netmask là 255.255.255.240 thì có bao nhiêu mạng con có thể sử dụng được?</p>',0,4,86,NULL,NULL,NULL),(661,1,1,3,'<p>Nếu lấy một địa chỉ lớp C để chia mạng con với netmask là 255.255.255.248 thì có bao nhiêu mạng con có thể sử dụng được?</p>',0,4,86,NULL,NULL,NULL),(662,1,1,3,'<p>Nếu lấy một địa chỉ lớp C để chia mạng con với netmask là 255.255.255.252 thì có bao nhiêu mạng con có thể sử dụng được?</p>',0,4,86,NULL,NULL,NULL),(663,1,1,4,'<p>Trong địa chỉ IP, có 5 lớp tất cả: A, B, C, D, E. Lớp A là lớp có dải địa chỉ:</p>',0,4,86,NULL,NULL,NULL),(664,1,1,4,'<p>Trong địa chỉ IP, có 5 lớp tất cả: A, B, C, D, E. Lớp B là lớp có dải địa chỉ:</p>',0,4,86,NULL,NULL,NULL),(665,1,1,4,'<p>Trong địa chỉ IP, có 5 lớp tất cả : A, B, C, D, E. Lớp C là lớp có dải địa chỉ:</p>',0,4,86,NULL,NULL,NULL),(666,1,1,4,'<p>Trong địa chỉ IP, có 5 lớp tất cả : A, B, C, D, E. Lớp D là lớp có dải địa chỉ:</p>',0,4,86,NULL,NULL,NULL),(667,1,1,4,'<p>Trong địa chỉ IP, có 5 lớp tất cả : A, B, C, D, E. Lớp E là lớp có dải địa chỉ:</p>',0,4,86,NULL,NULL,NULL),(668,1,1,3,'<p>Trong các lớp A, B, C, D, E thì lớp nào dùng cho các mạng có số trạm cực lớn:</p>',0,4,86,NULL,NULL,NULL),(669,1,1,3,'<p>Địa chỉ Subnet của một IP nằm từ bit thứ 16 tới bit thứ 23. Vậy địa chỉ IP của nó thuộc lớp nào:</p>',0,4,86,NULL,NULL,NULL),(670,1,1,4,'<p>Giả sử hệ thống mạng của bạn phải chia thành 8 mạng con (subnet) và sử dụng một địa chỉ lớp B. Mỗi mạng con chứa ít nhất 2500 host. Vậy subnet mask nào sẽ được sử dụng:</p>',0,4,86,NULL,NULL,NULL),(671,1,1,4,'<p>Giả sử hệ thống mạng của bạn phải chia thành 15 mạng con (subnet) và sử dụng một địa chỉ lớp B. Mỗi mạng con chứa ít nhất 1500 host. Vậy subnet mask nào sẽ được sử dụng:</p>',0,4,86,NULL,NULL,NULL),(672,1,1,1,'<p>Địa chỉ IP gồm bao nhiêu bit?</p>',0,4,86,NULL,NULL,NULL),(673,1,1,4,'<p>Địa chỉ IP nào nằm cùng trong subnet với IP 200.200.200.200/255.255.255.240:</p>',0,4,86,NULL,NULL,NULL),(674,1,1,4,'<p>Địa chỉ IP nào nằm cùng trong subnet với IP 200.200.200.200/255.255.255.224:</p>',0,4,86,NULL,NULL,NULL),(675,1,1,4,'<p>Địa chỉ nào là địa chỉ quảng bá (broadcast) trong subnet 200.200.200.128/255.255.255.192:</p>',0,4,86,NULL,NULL,NULL),(676,1,1,4,'<p>Địa chỉ nào là địa chỉ quảng bá (broadcast) trong subnet 200.200.200.176/255.255.255.240:</p>',0,4,86,NULL,NULL,NULL),(677,1,1,4,'<p>Địa chỉ mạng nào đúng với IP 202.101.10.25/255.255.255.248</p>',0,4,86,NULL,NULL,NULL),(678,1,1,4,'<p>Địa chỉ mạng nào đúng với IP 202.101.10.25/255.255.255.240</p>',0,4,86,NULL,NULL,NULL),(679,1,1,4,'<p>Địa chỉ mạng nào đúng với IP 202.101.10.25/255.255.255.224</p>',0,4,86,NULL,NULL,NULL),(680,1,1,3,'<p>Địa chỉ nào sau đây là địa chỉ mạng con của host 172.16.25.14/30</p>',0,4,86,NULL,NULL,NULL),(681,1,1,3,'<p>Địa chỉ nào sau đây là địa chỉ mạng con của host 172.16.55.255/20</p>',0,4,86,NULL,NULL,NULL),(682,1,1,3,'<p>Địa chỉ nào sau đây là địa chỉ quảng bá của mạng 192.168.25.128/27</p>',0,4,86,NULL,NULL,NULL),(683,1,1,3,'<p>Địa chỉ nào sau đây là địa chỉ quảng bá của mạng 192.168.25.128/28</p>',0,4,86,NULL,NULL,NULL),(684,1,1,3,'<p>Cho địa chỉ IP 192.168.25.91/26, địa chỉ mạng con thứ nhì sẽ là:</p>',0,4,86,NULL,NULL,NULL),(685,1,1,3,'<p>Để biết một địa chỉ IP thuộc lớp địa chỉ nào, ta căn cứ vào thành phần nào?</p>',0,4,86,NULL,NULL,NULL),(686,1,1,4,'<p>Cho địa chỉ IP 160.16.18.30/255.255.252.0. Địa chỉ quảng bá (Broadcast) tương ứng là:</p>',0,4,86,NULL,NULL,NULL),(687,1,1,4,'<p>Cho địa chỉ IP 160.16.18.30/255.255.252.0. Dải địa chỉ IP tương ứng là:</p>',0,4,86,NULL,NULL,NULL),(688,1,1,4,'<p>Cho địa chỉ IP 160.16.18.30/255.255.252.0. Địa chỉ mạng tương ứng là:</p>',0,4,86,NULL,NULL,NULL),(689,1,1,4,'<p>Cho địa chỉ IP 192.168.14.100/255.255.255.224. Địa chỉ mạng tương ứng là:</p>',0,4,86,NULL,NULL,NULL),(690,1,1,4,'<p>Cho địa chỉ IP 192.168.14.100/255.255.255.224. Dải địa chỉ IP tương ứng là:</p>',0,4,86,NULL,NULL,NULL),(691,1,1,4,'<p>Cho địa chỉ IP 192.168.14.100/255.255.255.224. Địa chỉ quảng bá (Broadcast) tương ứng là:</p>',0,4,86,NULL,NULL,NULL),(692,1,1,1,'<p>Thiết bị mạng trung tâm dùng để kết nối các máy tính trong mạng hình sao (star):</p>',0,NULL,NULL,NULL,NULL,NULL),(693,1,1,1,'<p>Để kết nối trực tiếp hai máy tính với nhau ta có thể dùng:</p>',0,NULL,NULL,NULL,NULL,NULL),(694,1,1,1,'<p>Thiết bị mạng nào làm giảm bớt sự va chạm (collisions)? </p>',0,NULL,NULL,NULL,NULL,NULL),(695,1,1,1,'<p>Khả năng định tuyến được thực hiện bởi thiết bị nào</p>',0,NULL,NULL,NULL,NULL,NULL),(696,1,1,1,'<p>Các dịch vụ quay số tương tự (Dial-up) sử dụng thiết bị nào để chuyển đổi tín hiệu số sang tín hiệu tương tự? </p>',0,NULL,NULL,NULL,NULL,NULL),(697,1,1,1,'<p>Hub là thiết bị hoạt động ở lớp nào của mô hình OSI: </p>',0,NULL,NULL,NULL,NULL,NULL),(698,1,1,1,'<p>Những thiết bị lớp 1 nào sau đây được sử dụng để mở rộng mạng LAN:Thiết bị nào là thiết bị ngoại vi</p>',0,NULL,NULL,NULL,NULL,NULL),(699,1,1,1,'<p>Độ dài tối đa cho phép khi sử dụng dây cáp mạng UTP là bao nhiêu mét?</p>',0,NULL,NULL,NULL,NULL,NULL),(700,1,1,1,'<p>Có bao nhiêu vùng va chạm (collision domains) trong mạng gồm có 88 máy tính, 10 HUB và 2 REPEATER?</p>',0,NULL,NULL,NULL,NULL,NULL),(701,1,1,1,'<p>Điều gì sẽ xảy ra với dữ liệu khi có va chạm (collision)</p>',0,NULL,NULL,NULL,NULL,NULL),(702,1,1,5,'<p>Nếu 4 máy tính kết nối với nhau thông qua HUB thì cần bao nhiêu địa chỉ IP cho 5 thiết bị mạng này?</p>',0,NULL,NULL,NULL,NULL,NULL),(703,1,1,1,'<p>Card mạng (NIC) hoạt động ở tầng nào trong mô hình OSI?</p>',0,4,87,NULL,NULL,NULL),(704,1,1,1,'<p>Thiết bị nào thuộc tầng thứ 3 trong mô hình OSI:</p>',0,4,87,NULL,NULL,NULL),(705,1,1,2,'<p>Thiết bị Hub cho phép:</p>',0,4,87,NULL,NULL,NULL),(706,1,1,1,'<p>Phát biểu nào sau đây đúng cho thiết bị Bridge</p>',0,4,87,NULL,NULL,NULL),(707,1,1,1,'<p>Cáp xoắn thường được dùng trong mạng nào:</p>',0,4,87,NULL,NULL,NULL),(708,1,1,1,'<p>Khoảng cách tối đa cho cáp đồng trục mảnh là:</p>',0,4,87,NULL,NULL,NULL),(709,1,1,1,'<p>Khoảng cách tối đa cho cáp đồng trục dày là:</p>',0,4,87,NULL,NULL,NULL),(710,1,1,1,'<p>TCáp UTP được sử dụng với đầu nối là:</p>',0,4,87,NULL,NULL,NULL),(711,1,1,1,'<p>Phương tiện vật lý nào cho tỉ lệ lỗi ít nhất khi truyền thông tin:</p>',0,4,87,NULL,NULL,NULL),(712,1,1,1,'<p>Phương tiện truyền dẫn nào cho khoảng cách xa nhất đối với mạng Ethernet:</p>',0,4,87,NULL,NULL,NULL),(713,1,1,1,'<p>Bridge hoạt động ở tầng nào trong mô hình OSI?</p>',0,4,87,NULL,NULL,NULL),(714,1,1,1,'<p>Switch hoạt động ở tầng nào trong mô hình OSI?</p>',0,4,87,NULL,NULL,NULL),(715,1,1,1,'<p>Phần nào trong địa chỉ IP được ROUTER sử dụng khi tìm đường đi?</p>',0,4,87,NULL,NULL,NULL),(716,1,1,1,'<p>Cáp UTP Cat 5 có bao nhiêu đôi cáp?</p>',0,4,87,NULL,NULL,NULL),(717,1,1,1,'<p>Đầu nối RJ-45 dùng trong kiến trúc mạng nào?</p>',0,4,87,NULL,NULL,NULL),(718,1,1,1,'<p>Để hạn chế sự đụng độ của các gói tin trên 1 đoạn mạng, người ta chia mạng thành các mạng nhỏ hơn và nối kết chúng lại bằng các thiết bị:</p>',0,4,87,NULL,NULL,NULL),(719,1,1,1,'<p>Giao thức RIP được triển khai tại:</p>',0,4,87,NULL,NULL,NULL),(721,1,1,1,'<p>Trong mạng Ring, mỗi trạm của mạng được nối với vòng nhờ bộ phận:</p>',0,NULL,NULL,NULL,NULL,NULL),(722,1,1,1,'<p>Với topo mạng Bus, dữ liệu được truyền dựa trên liên kết nào:</p>',0,4,NULL,NULL,NULL,NULL),(723,1,1,1,'<p>Với topo mạng Bus, dữ liệu được truyền dựa trên liên kết nào:</p>',0,4,NULL,NULL,NULL,NULL),(724,1,1,1,'<p>Với topo mạng Bus, dữ liệu được truyền dựa trên liên kết nào:</p>',0,4,NULL,NULL,NULL,NULL),(725,1,1,1,'<p>Với topo mạng Bus, dữ liệu được truyền dựa trên liên kết nào:</p>',0,4,84,NULL,NULL,NULL),(726,1,1,3,'<p>Kết quả biên dịch đoạn code sau là gì?</p><p>class A { int&nbsp;x = 1; public static void main(String [] args) { System.out.println(\"x is \" + x); }}</p><p><span style=\"display:table;\"><span style=\"display: table; width: 100%; table-layout: fixed;\"><span style=\"display: table; height: 100%; width: 100%; table-layout: fixed;\"><br data-mce-bogus=\"1\"></span></span></span></p>',0,NULL,NULL,NULL,NULL,NULL),(727,1,1,3,'<p>Kết quả biên dịch đoạn code sau là gì?</p><p>class A { int&nbsp;x = 1; public static void main(String [] args) { System.out.println(\"x is \" + x); }}</p>',0,1,80,NULL,NULL,NULL),(728,1,1,1,'<p>Khai báo nào là đúng để lớp con Cylinder dẫn xuất từ lớp cha Circle:</p>',0,1,80,NULL,NULL,NULL),(729,1,1,1,'<p>Vai trò của hàm khởi tạo là gì?</p>',0,1,80,NULL,NULL,NULL),(730,1,1,3,'<p>Chọn kết quả đúng khi biên dịch đoạn code sau:</p><p>int [ ] nums = {1,2,3,4,5,6}; System.out.println(nums[1] + nums[3]);</p>',0,1,80,NULL,NULL,NULL),(731,1,1,3,'<p>Class B kế thừa từ lớp A, phát biểu nào sau đây sai:</p>',0,NULL,NULL,NULL,NULL,NULL),(732,1,1,3,'<p>Class B kế thừa từ lớp A, phát biểu nào sau đây sai:</p>',0,1,80,NULL,NULL,NULL),(733,1,1,3,'<p>Cho biết kết quả biên dịch của đoạn code sau:</p><p>class A { public static void main(String [] args) {B b = new A(); }} class B extends A {}</p>',0,1,80,NULL,NULL,NULL),(734,1,1,1,'<p>Khác biệt giữa phương thức private và public là:</p>',0,1,80,NULL,NULL,NULL),(735,1,1,3,'<p>Cho đoạn code sau:</p><p>Integer a = new Integer(2); Integer b = new Integer(2);&nbsp;</p><p>Kết quả của dòng lệnh if (a==b) là gì?</p>',0,1,80,NULL,NULL,NULL),(736,1,1,1,'<p>Phương thức main nào khởi tạo mặc định trong java?</p>',0,NULL,NULL,NULL,NULL,NULL),(737,1,1,3,'<p>Cho khai báo sau:</p><p>int [ ] nums = {8, 12, 23, 4, 15}</p><p>Biểu thức nào thể hiện thành phần đầu tiên của mảng nums?</p>',0,1,80,NULL,NULL,NULL),(738,1,1,3,'<p>Kết quả thực thi của đoạn code sau là gì?</p><p>class A { public static void main(String [] args) {A a = new B(); }} class B extends A {}</p>',0,1,80,NULL,NULL,NULL),(739,1,1,1,'<p>Một mảng gồm:</p>',0,1,80,NULL,NULL,NULL),(740,1,1,3,'<p>Kết quả biên dịch của đoạn code sau là gì?</p><p>String word = \"abcde\"; for (int i = 0; i &lt;4; i+=2) System.out.print(word[i]);</p>',0,1,80,NULL,NULL,NULL),(741,1,1,1,'<p>Nếu không thêm từ khóa private/protected/public cho các thành phần thì thành phần đó sẽ:</p>',0,1,80,NULL,NULL,NULL),(742,1,1,3,'<p>Đoạn code nào sau đây in giá trị mỗi phần tử của mảng trên từng dòng?</p><p>float [ ] nums= {1.1f, 2.2f, 3.3f};</p>',0,1,80,NULL,NULL,NULL),(743,1,1,3,'<p>Khai báo nào đúng cho các lớp Student, Staff, Faculty extend Person:</p>',0,1,80,NULL,NULL,NULL),(744,1,1,1,'<p>Trong kế thừa, lớp con dẫn xuất có thể truy xuất bất kỳ:</p>',0,1,80,NULL,NULL,NULL),(745,1,1,1,'<p>Phát biểu nào sau đây đúng:</p>',0,1,80,NULL,NULL,NULL),(746,1,1,1,'<p>Input và output của Java Compiler là gì?</p>',0,1,80,NULL,NULL,NULL),(747,1,1,3,'<p>Cho đoạn code sau:</p><p>class One {</p><p>public One() { System.out.print(1); }</p><p>}</p><p>class Two extends One {</p><p>public Two() { System.out.print(2); }</p><p>}</p><p>class Three extends Two {</p><p>public Three() { System.out.print(3); }</p><p>}</p><p>public class Numbers{</p><p>public static void main( String[] argv) { new Three(); }</p><p>}</p><p>Kết quả biên dịch đoạn code trên là:</p>',0,NULL,NULL,NULL,NULL,NULL),(748,1,1,1,'<p>Với topo mạng Bus, dữ liệu được truyền dựa trên liên kết nào:</p>',0,4,84,NULL,NULL,NULL),(749,1,1,3,'<p>Cho đoạn code sau:</p><p>class One {</p><p>public One() { System.out.print(1); }</p><p>}</p><p>class Two extends One {</p><p>public Two() { System.out.print(2); }</p><p>}</p><p>class Three extends Two {</p><p>public Three() { System.out.print(3); }</p><p>}</p><p>public class Numbers{</p><p>public static void main( String[] argv) { new Three(); }</p><p>}</p><p>Kết quả biên dịch đoạn code trên là:</p>',0,1,80,NULL,NULL,NULL),(750,1,1,3,'<p>Kết quả của B sau khi biên dịch đoạn code: int A = 10; B = ++A;</p>',0,1,80,NULL,NULL,NULL),(751,1,1,3,'<p>Kết quả thực thi đoạn code sau:</p><p>int i; int sum=0; for(i=2;i&lt;=10;i+=2)&nbsp; sum+=i; System.out.println(\"\"+sum);</p>',0,1,80,NULL,NULL,NULL),(752,4,1,2,'Liên kết thiết bị và chức năng',0,1,81,NULL,NULL,NULL),(753,1,1,4,'<p>Kết quả thực thi đoạn code sau:</p><p>int x = 0, y = 4, z = 5;</p><p>if(x &gt; 2){</p><p>&nbsp;&nbsp;&nbsp;&nbsp; if(y &lt; 5) { System.out.println(\"Message 1\"); }</p><p>&nbsp;&nbsp;&nbsp;&nbsp; else&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { System.out.println(\"Message 2\");&nbsp;&nbsp;&nbsp; }</p><p>}</p><p>else if(z &gt; 5)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { System.out.println(\"Message 3\");&nbsp;&nbsp;&nbsp; }</p><p>else {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(\"Message 4\");&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>',0,1,80,NULL,NULL,NULL),(754,1,1,4,'<p>class Black {</p><p>public static void main(String[] args) {</p><p>byte[] i={1,2,3,4,5};//1</p><p>long[] k=new long[5];//2</p><p>for (int j=0;j&lt;i.length;j++)//3</p><p>k[j] = i[j];//4</p><p>}</p><p>Hãy cho biết dòng nào gây ra lỗi khi biên dịch đoạn code trên?</p>',0,1,80,NULL,NULL,NULL),(755,1,1,3,'<p>Kết quả thực thi đoạn code sau:</p><p>class XOR{</p><p>public static void main(String[] args) {</p><p>byte b = 10;</p><p>byte c =15;</p><p>b =(byte)(b^c);</p><p>System.out.println(\"b contains \" + b);</p><p>}</p>',0,1,80,NULL,NULL,NULL),(756,1,1,2,'<p>Chọn các khai báo sai:</p>',0,1,80,NULL,NULL,NULL),(757,1,1,2,'<p>Trong các biểu thức sau, biểu thức nào sai?</p>',0,1,81,NULL,NULL,NULL),(758,1,1,3,'<p>Hãy chọn phát biểu sai trong các phát biểu sau:</p>',0,1,81,NULL,NULL,NULL),(759,1,1,2,'<p>Nếu muốn sinh ra một số nguyên ngẫu nhiên từ 1-&gt;6, biểu thức nào sau đây được dùng?</p>',0,1,81,NULL,NULL,NULL),(760,1,1,1,'<p>Muốn khai báo hằng số PI trong Java thì dùng câu lệnh nào đúng sau đây?</p>',0,1,81,NULL,NULL,NULL),(761,1,1,2,'<p>Kết quả của đoạn code sau khi biên dịch?</p><p>int i = 0;</p><p>do {</p><p>System.out.println ( \" I am in the do block.\");</p><p>} while( i &gt; 0); //dòng 4</p>',0,1,81,NULL,NULL,NULL),(762,1,1,3,'<p>Cho đoạn mã bên dưới, giá trị của X là bao nhiêu để đoạn mã in ra tất cả các giá trị của mảng?</p><p>int values[] = {1,2,3,4,5,6,7,8};</p><p>for(int i=0; i&lt;X; ++i) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(values[i]);</p>',0,1,81,NULL,NULL,NULL),(763,1,1,1,'<p>Phát biểu nào sau đây là đúng?</p>',0,1,81,NULL,NULL,NULL),(764,1,1,2,'<p>Cho biết kết quả thực thi đoạn code sau:</p><p>int x=0,y=4,z=5;</p><p>if(x&gt;2){</p><p>if(y&lt;5){ System.out.println(\"message four\"); }</p><p>else{&nbsp;&nbsp;&nbsp; System.out.println(\"message three\");&nbsp; }</p><p>}else if(z&gt;5){</p><p>&nbsp;&nbsp;&nbsp; System.out.println(\"message two\");</p><p>}else{</p><p>&nbsp;&nbsp;&nbsp; System.out.println(\"message one\");</p><p>}</p>',0,1,81,NULL,NULL,NULL),(765,1,1,3,'<p>Trong đoạn code sau, kiểu dữ liệu của biến result có thể là những kiểu nào?</p><p>byte b =11;</p><p>short s =13;</p><p>result = b* ++s;</p>',0,1,81,NULL,NULL,NULL),(766,1,1,1,'<p>Chọn thứ tự đúng của các thành phần trong một tập tin nguồn java:</p>',0,1,81,NULL,NULL,NULL),(767,1,1,2,'<p>class Test {</p><p>public static void main(String[] args) {</p><p>try{</p><p>&nbsp;&nbsp;&nbsp; System.out.print(\"Welcome to Java.\");</p><p>&nbsp;&nbsp;&nbsp; return;</p><p>}</p><p>finally{</p><p>&nbsp;&nbsp;&nbsp; System.out.print(\"The finally clause is executed.\"); }</p><p>}</p><p>}</p><p>Kết quả biên dịch đoạn code trên:</p>',0,1,81,NULL,NULL,NULL),(768,1,1,3,'<p>class Test {</p><p>public static void main(String[] args) {</p><p>try{</p><p>&nbsp;&nbsp;&nbsp; System.out.print(\"Welcome to Java \");</p><p>&nbsp;&nbsp;&nbsp; int i =1;</p><p>&nbsp;&nbsp;&nbsp; int y =2/i;</p><p>&nbsp;&nbsp;&nbsp; System.out.print(\"Welcome to HTML \");&nbsp;&nbsp;&nbsp;</p><p>}</p><p>finally{</p><p>&nbsp;&nbsp;&nbsp; System.out.print(\"The finally clause is executed\");}</p><p>}</p><p>}</p><p>Kết quả biên dịch đoạn code trên:</p>',0,1,81,NULL,NULL,NULL),(769,1,1,3,'<p>Cho đoạn code sau, giả sử phương thức problem() gây ra lỗi biên dịch, nhưng vẫn cho thực thi, kết quả nhận được là:</p><p>public void trythis() {</p><p>try{&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.print (\"1\"); problem();</p><p>}catch(RuntimeException x){</p><p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.print (\"2\"); return;</p><p>}catch (Exception x){</p><p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.print (\"3\"); return;</p><p>}finally{</p><p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.print (\"4\");</p><p>}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.print (\"5\");</p><p>}</p>',0,1,81,NULL,NULL,NULL),(770,1,1,4,'<p>class SuperA {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String s1=\"SuperA\";}</p><p>class SuperB {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String s1=\"SuperB\";}</p><p>class A extends SuperA{</p><p>String s1=\"A\";</p><p>class B extends SuperB {</p><p>String s1==\"B\";</p><p>void m1(){</p><p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.print(this.s1 + \",\");</p><p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.print(super.s1 + \",\");</p><p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.print(A.this.s1 + \",\");</p><p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.print(A.super.s1);</p><p>}</p><p>}</p><p>public static void main(String[] args) {</p><p>new A(),new B().m1();</p><p>}}</p><p>Kết quả biên dịch đoạn code trên:</p>',0,1,81,NULL,NULL,NULL),(771,1,1,3,'<p>class UltraViolet{</p><p>public static void main(String[] args) {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; char a=\'\\u002a\',b =\'\\u0024\'; //a = *; b = $</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.print(a+b);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.print(\"ABC\"+a+b);</p><p>}</p><p>}</p><p>Kết quả biên dịch đoạn code trên:</p>',0,1,81,NULL,NULL,NULL),(772,1,1,3,'<p>class StaticStuff</p><p>{</p><p>static int x =10;</p><p>static {x+=5;}</p><p>public static void main(String[] args) {</p><p>System.out.println(\"x =\" +x);</p><p>}</p><p>static {x/=5;} //(*)</p><p>}</p><p>Kết quả biên dịch đoạn code trên:</p>',0,1,81,NULL,NULL,NULL),(773,1,1,3,'<p>Kết quả biên dịch đoạn code sau:</p><p>public class Test {</p><p>public static void main(String[] args) {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int weight = 10, thePrice =0;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(weight &lt; 10) thePrice = 100;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(weight &gt; 50 ) thePrice = 5000;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(weight &gt;= 10) thePrice = weight*10;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(\"the Price is: \"+thePrice);</p><p>&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>}</p>',0,1,81,NULL,NULL,NULL),(774,1,1,3,'<p>Kết quả biên dịch đoạn code sau:</p><p>String s=new String(\"Bicycle\");</p><p>int iBegin =1;</p><p>char iEnd =3;</p><p>System.out.println(s.substring(iBegin,iEnd));</p>',0,1,81,NULL,NULL,NULL),(775,1,1,3,'<p>class VNT002 {</p><p>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void main(String[] args) {</p><p>float a=Float.POSITIVE_INFINITY;</p><p>double b=Double.POSITIVE_INFINITY;</p><p>double c=Double.NaN;</p><p>System.out.print((a == b)+\",\"+(c==c)+\",\"+(c!=c));</p><p>}</p><p>}</p><p>Kết quả sau khi thực thi đoạn code trên:</p>',0,1,82,NULL,NULL,NULL),(776,1,1,3,'<p>class GFC218 {</p><p>static void m(Object x) {System.out.print(\"Object\");}</p><p>static void m(String x) {System.out.print(\"String\");}</p><p>public static void main(String[] args) {m(null);}</p><p>}</p><p>Kết quả biên dịch đoạn code trên:</p>',0,1,82,NULL,NULL,NULL),(777,1,1,3,'<p>class MC {</p><p>public static void main(String[] args) {</p><p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //Chèn code vào đây</p><p>}}</p><p>Hãy chọn dòng thích hợp chèn vào đoạn code trên, để khi thực thi không gây ra lỗi biên dịch?</p>',0,1,82,NULL,NULL,NULL),(778,1,1,3,'<p>class EBH {</p><p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; static boolean a, b, c;</p><p>public static void main(String[] args) {</p><p>boolean x =a || (b = false) &amp;&amp; (c = false);</p><p>System.out.print(a + \",\" + b + \",\" + c);</p><p>}}</p><p>Kết quả biên dịch đoạn code trên:</p>',0,1,82,NULL,NULL,NULL),(779,1,1,3,'<p>class Magenta {</p><p>static byte a=(byte)127, b =(byte)128, c =(byte)256, d =(byte)255;</p><p>public static void main(String[] args) {</p><p>System.out.print(a + \" \" + b + \" \" + c + \" \" + d);</p><p>}</p><p>}</p><p>Kết quả biên dịch đoạn code trên:</p>',0,1,82,NULL,NULL,NULL),(780,1,1,2,'<p>Cho đoạn code bên dưới, cho biết dòng nào không thể biên dịch?</p><ol><li>Object ob =new Object();</li><li>String stringarr[] =new String[50];</li><li>Float floater =new Float(3.14f);</li><li>ob =stringarr;</li><li>ob =stringarr[5];</li><li>floater =ob;</li><li>ob =floater;</li></ol>',0,1,82,NULL,NULL,NULL),(781,1,1,3,'<p>class MyClass{</p><p>public static void main(String[] args){</p><p>&nbsp;&nbsp;&nbsp; String[] numbers = {\"one\",\"two\",\"three\",\"four\"};</p><p>if(args.length == 0){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(\"no arguments\");</p><p>}</p><p>else{</p><p>System.out.println(numbers[args.length]+ \" arguments\");}</p><p>}</p><p>}</p><p>Kết quả biên dịch đoạn code trên:</p>',0,1,82,NULL,NULL,NULL),(782,1,1,4,'<p>public class Passing{</p><p>public static void main(String[] args){</p><p>&nbsp;&nbsp;&nbsp; int a = 0; int b = 0;</p><p>&nbsp;&nbsp;&nbsp; int[] bArr = new int[1]; bArr[0] = b;</p><p>&nbsp;&nbsp;&nbsp; inc1(a);inc2(bArr);</p><p>&nbsp;&nbsp;&nbsp; System.out.println(\"a=\" + a + \" b=\" + b + \" bArr[0]=\" + bArr[0]);</p><p>}</p><p>public static void inc1(int x){ x++; }</p><p>public static void inc2(int[] x){ x[0]++; }</p><p>}</p><p>Kết quả biên dịch đoạn code trên:</p>',0,1,82,NULL,NULL,NULL),(783,1,1,3,'<p>class Q6{</p><p>public static void main(String[] args) {<br> &nbsp;&nbsp;&nbsp; Holder h =new Holder();<br> &nbsp;&nbsp;&nbsp; h.held =100;<br> &nbsp;&nbsp;&nbsp; h.bump(h);<br> &nbsp;&nbsp;&nbsp; System.out.println(h.held);<br> }<br> }<br> class Holder{<br> &nbsp;&nbsp;&nbsp; public int held;<br> &nbsp;&nbsp;&nbsp; public void bump(Holder theHolder){<br> &nbsp;&nbsp;&nbsp; theHolder.held+=theHolder.held++;<br> &nbsp;&nbsp;&nbsp; }<br> }<br> Kết quả biên dịch đoạn code trên:</p>',0,1,82,NULL,NULL,NULL),(784,1,1,3,'<p>Cho biết kết quả biên dịch đoạn code sau:</p><p>1: public class Short{ <br> 2: public static void main(String[] args) {<br> 3: StringBuffer s =new StringBuffer(\"Hello\");<br> 4: if((s.length() &gt; 5) &amp;&amp; s.append(\" there\").equals(\"False\"));<br> 5: &nbsp;&nbsp;&nbsp;&nbsp;System.out.println(\"value is \" + s);<br> 6: }<br> 7: }</p>',0,1,82,NULL,NULL,NULL),(785,1,1,1,'<p>Muốn khai báo một thuộc tính trong một lớp được chia sẻ bởi tất cả các đối tượng thuộc lớp đó thì dùng từ khóa nào sau đây?</p>',0,1,82,NULL,NULL,NULL),(786,1,1,3,'<p>public class DefaultValuesTest{</p><p>int[] ia = new int[1];</p><p>boolean b;</p><p>int i;</p><p>Object o;</p><p>public static void main(String[] args){</p><p>DefaultValuesTest instance = new DefaultValuesTest ();</p><p>instance.print();</p><p>}</p><p>public void print(){</p><p>System.out.println(ia[0] + \" \" + b + \" \" + i + \" \" + o);</p><p>}</p><p>}</p><p>Kết quả biên dịch đoạn code trên:</p>',0,1,82,NULL,NULL,NULL),(787,1,1,2,'<p>Phát biểu nào sau đây đúng nhất về 2 phương thức overriding?</p>',0,1,83,NULL,NULL,NULL),(788,1,1,1,'<p>Từ khóa nào không được phép dùng khi khai báo class trong java?</p>',0,1,83,NULL,NULL,NULL),(789,1,1,2,'<p>Câu lệnh nào sau đây sẽ không phát sinh ra lỗi khi biên dịch?</p>',0,1,83,NULL,NULL,NULL),(790,1,1,3,'<p>Sau khi biên dịch đoạn code bên dưới, giá trị của biến c là bao nhiêu?</p><p>float c = 34.89675f;</p><p>int b = (int)c + 10;</p><p>c = b;</p>',0,1,83,NULL,NULL,NULL),(791,1,1,3,'<p>Sau khi biên dịch đoạn code bên dưới, biến newNum có giá trị bao nhiêu?</p><p>int i=10;</p><p>int newNum = 10*(++i);</p>',0,1,83,NULL,NULL,NULL),(792,1,1,3,'<p>Cho biết kết quả phân tích dòng code sau:</p><p>if(5&amp;7 &gt;0 &amp;&amp; 5|12) &nbsp;&nbsp; System.out.print(\"true\");</p>',0,1,83,NULL,NULL,NULL),(793,1,1,3,'<p>class ByteMod {</p><p>public static void main(String[] args) {</p><p>byte b=128;</p><p>b % = 2;</p><p>System.out.println(b);}</p><p>}</p><p>Kết quả biên dịch đoạn code trên:</p>',0,1,83,NULL,NULL,NULL),(794,1,1,2,'<p>Chọn khai báo mảng nào sau đây sai:</p>',0,1,83,NULL,NULL,NULL),(795,1,1,2,'<p>Đoạn code nào sau đây đúng để tạo ra một mảng gồm 5 phần tử rỗng có kiểu String?</p>',0,1,83,NULL,NULL,NULL),(796,1,1,2,'<p>Phương thức nào sau đây dùng để ghép chuỗi s1 và s2:</p>',0,1,83,NULL,NULL,NULL),(797,1,1,2,'<p>Phát biểu nào sau đây đúng trong Java?</p>',0,1,83,NULL,NULL,NULL),(798,1,1,3,'<p>Cho dòng code: try { int x = Integer.parseInt(\"two\"); }.</p><p>Dòng lệnh trên sẽ phát sinh Exception gì?</p>',0,1,83,NULL,NULL,NULL),(799,1,1,1,'<p>Trong Java, các câu lệnh xử lý Exception có thể đặt trong khối nào?</p>',0,1,83,NULL,NULL,NULL),(800,1,1,3,'<p>Cho biết kết quả biên dịch đoạn code sau:</p><p>public class CustomerOne{</p><p>public static void main(String[] args){</p><p>PizzaFactory pizzaHouse = new PizzaFactory();</p><p>int pricePrPizza = 15;</p><p>double totPrice = pizzaHouse.calcPrice(4, pricePrPizza); // (1)</p><p>System.out.println(\"Value of pricePrPizza: \" + pricePrPizza);</p><p>}</p><p>}</p><p>class PizzaFactory{</p><p>public double calcPrice(int numberOfPizzas, double pizzaPrice) {</p><p>pizzaPrice = pizzaPrice/2.0; // (2)</p><p>return numberOfPizzas*pizzaPrice;</p><p>}</p><p>}</p>',0,1,83,NULL,NULL,NULL),(801,1,1,3,'<p>Cho đoạn code sau:</p><ol><li>class Animal{}</li><li>class Dog extends Animal {}</li><li>class Cat extends Animal {}</li><li>class Racoon extends Animal {}</li><li>class Swamp extends Animal {}</li><li>class Test{</li><li>public static void main(String[] args){</li><li>Dog rover,fido;</li><li>Animal anim;</li><li>rover = new Dog();</li><li>anim = rover;</li><li>fido =(Dog)anim;</li><li>}</li><li>}</li></ol>',0,1,83,NULL,NULL,NULL),(802,1,1,4,'<p>Cho biết kết quả biên dịch đoạn code sau?</p><p>public void foo( boolean a, boolean b){ &nbsp;&nbsp;&nbsp;</p><p>&nbsp;if( a )&nbsp; { System.out.println(\"A\"); } &nbsp;&nbsp;&nbsp;&nbsp;</p><p>else if(a &amp;&amp; b) { System.out.println( \"A &amp;&amp; B\");&nbsp; } &nbsp;&nbsp;&nbsp;&nbsp;</p><p>else { &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if ( !b )&nbsp; { System.out.println( \"notB\");&nbsp; } &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;else&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { System.out.println( \"ELSE\" );} &nbsp;&nbsp;&nbsp;&nbsp;} }<br></p>',0,1,83,NULL,NULL,NULL),(803,1,1,3,'<p>Cho biết kết quả biên dịch đoạn code sau?</p><p>int I = 0;</p><p>label:</p><p>&nbsp;&nbsp;&nbsp; if (I &lt; 2) {</p><p>&nbsp;&nbsp;&nbsp; System.out.print(\"I is \" + I);</p><p>&nbsp;&nbsp;&nbsp; I++;</p><p>&nbsp;&nbsp;&nbsp; continue label;</p><p>}</p>',0,1,83,NULL,NULL,NULL),(804,1,1,3,'<p>Cho biết kết quả biên dịch đoạn code sau?</p><p>String a = \"ABCD\";</p><p>String b = a.toLowerCase();</p><p>b.replace(\'a\',\'d\');</p><p>b.replace(\'b\',\'c\');</p><p>System.out.println(b);</p>',0,1,83,NULL,NULL,NULL),(805,1,1,4,'<p>Cho biết kết quả biên dịch đoạn code sau?</p><p>int i = 1, j = 10;</p><p>do {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(i &gt; j) {&nbsp; break;&nbsp; }</p><p>&nbsp;&nbsp;&nbsp; j--;</p><p>} while (++i &lt; 5);</p><p>System.out.println(\"i = \" + i + \" and j = \" + j);</p>',0,1,83,NULL,NULL,NULL),(806,2,1,4,'<p>Các giá trị của mảng A được sắp xếp theo thứ tự tăng dần từng bước như sau:</p><p>3, 2, 7, 9, 1, 6</p><p>2, 3, 7, 9, 1, 6</p><p>1, 2, 3, 7, 9, 6</p><p>1, 2, 3, 6, 7, 9</p><p>Mảng A được sắp xếp theo thuật toán {1}</p>',1,2,14,NULL,NULL,NULL),(807,1,1,6,'<p>Thiết bị nào là thiết bị ngoại vi</p>',1,2,14,NULL,NULL,NULL),(808,2,1,4,'<p>Chương trình sau có {1} thời gian thực hiện</p><p>int x=0;</p><p>for(int i=0; i&lt;n*n; i++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(int j=0; j&lt;i; j++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x=x+i+1;</p>',1,2,14,NULL,NULL,NULL),(809,2,1,1,'<p>Khi ta nói thời gian thực hiện của một chương trình là T(n) = Cn thì có nghĩa là chương trình ấy cần {1} chỉ thị thực thi&nbsp;</p>',1,2,NULL,NULL,NULL,NULL),(810,1,1,6,'<p>Thiết bị nào là thiết bị ngoại vi</p>',1,2,4,NULL,NULL,NULL),(811,4,1,2,'Liên kết thiết bị và chức năng',1,2,2,NULL,NULL,NULL),(812,2,1,4,'<p>Các giá trị của mảng A được sắp xếp theo thứ tự tăng dần từng bước như sau:</p><p>3, 2, 7, 9, 1, 6</p><p>2, 3, 7, 9, 1, 6</p><p>1, 2, 3, 7, 9, 6</p><p>1, 2, 3, 6, 7, 9</p><p>Mảng A được sắp xếp theo thuật toán {1}</p>',1,2,14,NULL,NULL,NULL),(818,1,1,1,'<p>Hàm printf() và scanf() thuộc vào loại _______ :</p>',1,3,19,NULL,NULL,NULL),(819,1,1,3,'<p>Đại lượng dùng để lưu trữ giá trị và giá trị có thể được thay đổi trong quá trình thực hiện chương trình gọi là</p>',1,3,20,NULL,NULL,NULL),(820,1,1,2,'<p>Giả sử a, b là hai số thực. Biểu thức nào dưới đây viết không đúng theo cú pháp của ngôn ngữ lập trình C:</p>',1,3,21,NULL,NULL,NULL),(821,1,1,4,'<p>Đoạn chương trình: max=a; if(b&gt;max) {max=b}. Hãy cho biết đoạn chương trình trên dùng để:</p>',1,3,22,NULL,NULL,NULL),(822,1,1,2,'<p>Một câu lệnh switch được sử dụng để:</p>',1,3,22,NULL,NULL,NULL),(823,1,1,3,'<p>Nếu code sau được thực hiện, S có giá trị bao nhiêu?</p><p>int i= 10, S=0;</p><p>for ( ; i&lt;2 ; i++ ) S+= i;</p>',1,3,23,NULL,NULL,NULL),(824,1,1,4,'<p>Nếu đoạn code sau được thực thi</p><p>int i= 0, S=5;</p><p>while (i&lt;=10)</p><p>{ S+= i+2; i+=2; }</p><p>Trị của biến S sẽ là :</p>',1,3,23,NULL,NULL,NULL),(825,1,1,2,'<p>Chọn phát biểu đúng :</p>',1,3,24,NULL,NULL,NULL),(826,1,1,1,'<p>Các cấu trúc, cú pháp được đánh dấu protected có thể được gọi trong bất kỳ subclass nào của class đó</p>',1,3,25,NULL,NULL,NULL),(829,1,1,3,'<p>Kết quả sau khi biên dịch mã: Class A { int b =1; public static void main(String [] args) { System.out.println(“b is” +b);}}</p>',1,3,25,NULL,NULL,NULL),(830,1,1,1,'<p>Một Class abstract có thể sử dụng cú pháp non-abstract</p>',1,3,25,NULL,NULL,NULL),(831,1,1,2,'<p>Với hàm void :</p>',1,3,24,NULL,NULL,NULL),(832,1,1,3,'<p>Đoạn mã sau đây: <em>for (;;)</em> là :</p>',1,3,23,NULL,NULL,NULL),(833,1,1,3,'<p>Câu lệnh IF lông nhau được sử dụng khi phải lựa chọn</p>',1,3,22,NULL,NULL,NULL),(834,1,1,2,'<p>Khi biểu thức điều kiện 1 đúng, biểu thức điều kiện 2 saiĐoạn chương trình sau, câu lệnh 2 được thực hiện khi nào:</p><p>if (&lt;biểu thức điều kiện 1&gt;)</p><p>{&lt;câu lệnh1&gt;}</p><p>else if (&lt;biểu thức điều kiện 2&gt;)</p><p>{&lt;câu lệnh2&gt;}<br></p>',1,3,22,NULL,NULL,NULL),(835,1,1,3,'<p>Nếu đoạn code sau được thực thi, trị của biến t là gì?</p><p>int x= 5, y=7;</p><p>int t = 12 + (y&lt;2*x) ;</p>',1,3,21,NULL,NULL,NULL),(836,1,1,3,'<p>Trong các tên biến sau đây, tên nào đặt tên sai quy tắc đặt tên khi lập trình C?</p>',1,3,20,NULL,NULL,NULL),(837,1,1,3,'<p>Hãy chọn biểu diễn hằng đúng trong những biểu diễn dưới đây :</p>',1,3,19,NULL,NULL,NULL),(903,2,1,4,'<p>Các giá trị của mảng A được sắp xếp theo thứ tự tăng dần từng bước như sau:</p><p>3, 2, 7, 9, 1, 6</p><p>2, 3, 7, 9, 1, 6</p><p>1, 2, 3, 7, 9, 6</p><p>1, 2, 3, 6, 7, 9</p><p>Mảng A được sắp xếp theo thuật toán {1}</p>',1,2,14,NULL,NULL,NULL),(904,2,1,4,'<p>Chương trình sau có {1} thời gian thực hiện</p><p>int x=0;</p><p>for(int i=0; i&lt;n*n; i++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(int j=0; j&lt;i; j++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x=x+i+1;</p>',1,2,14,NULL,NULL,NULL),(905,1,1,4,'<p>Cho đoạn chương trình sau:</p><p>void main()</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int a=7, b=9, *p;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p = &amp;a;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a = ++b;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(\"%d%d%d\",a,b,p);</p><p>}</p><p>Kết quả sau khi thực hiện chương trình trên là:</p>',1,2,NULL,NULL,NULL,NULL),(906,1,1,1,'<p>Giao thức (protocol) trong truyền thông mạng được hiểu là:</p>',1,4,84,NULL,NULL,NULL),(907,1,1,2,'<p>Số thập phân của 11000000 là:</p>',1,4,86,NULL,NULL,NULL),(908,1,1,3,'<p>Byte đầu tiên của một địa chỉ IP có dạng : 00000001. Vậy nó thuộc lớp nào:</p>',1,4,86,NULL,NULL,NULL),(909,1,1,3,'<p>Xác định đường mạng (Net-id) của địa chỉ IP 190.12.67.9</p>',1,4,86,NULL,NULL,NULL),(910,1,1,2,'<p>Thiết bị Hub cho phép:</p>',1,4,87,NULL,NULL,NULL),(911,1,1,1,'<p>Đầu nối RJ-45 dùng trong kiến trúc mạng nào?</p>',1,4,87,NULL,NULL,NULL),(912,1,1,1,'<p>Card mạng (NIC) hoạt động ở tầng nào trong mô hình OSI?</p>',1,4,87,NULL,NULL,NULL),(913,1,1,3,'<p>Trong mô hình mạng hình sao (star model). Nếu một máy tính bị hỏng thì:</p>',1,4,84,NULL,NULL,NULL),(914,1,1,1,'<p>Trong mạng Bus, mỗi trạm được nối vào bus qua thiết bị nào:</p>',1,4,84,NULL,NULL,NULL),(915,1,1,1,'<p>Tầng nào chịu trách nhiệm tích hợp dữ liệu các tầng trên để tạo thành một gói tin gọi là segment:</p>',1,4,85,NULL,NULL,NULL),(916,1,1,1,'<p>Chức năng chính của tầng Network: </p>',1,4,85,NULL,NULL,NULL),(917,1,1,1,'<p>Thiết bị nào thuộc tầng thứ 3 trong mô hình OSI:</p>',1,4,87,NULL,NULL,NULL),(918,1,1,1,'<p>Khoảng cách tối đa cho cáp đồng trục dày là:</p>',1,4,87,NULL,NULL,NULL),(919,1,1,2,'<p>Số thập phân của 11000000 là:</p>',1,4,86,NULL,NULL,NULL),(920,1,1,3,'<p>Xác định đường mạng (Net-id) của địa chỉ IP 19.34.21.5</p>',1,4,86,NULL,NULL,NULL),(921,1,1,5,'<p>Trong mô hình mạng hình sao (star model), nếu Hub xử lý trung tâm bị hỏng thì:</p>',1,4,84,NULL,NULL,NULL),(922,1,1,1,'<p>Cho biết đặc điểm của địa chỉ ở tầng Data Link:</p>',1,4,85,NULL,NULL,NULL),(923,1,1,3,'<p>Kết quả biên dịch đoạn code sau là gì?</p><p>class A { int&nbsp;x = 1; public static void main(String [] args) { System.out.println(\"x is \" + x); }}</p>',1,1,80,NULL,NULL,NULL),(924,1,1,1,'<p>Khai báo nào là đúng để lớp con Cylinder dẫn xuất từ lớp cha Circle:</p>',1,1,80,NULL,NULL,NULL),(925,1,1,3,'<p>Class B kế thừa từ lớp A, phát biểu nào sau đây sai:</p>',1,1,80,NULL,NULL,NULL),(926,4,1,2,'Liên kết thiết bị và chức năng',1,1,81,NULL,NULL,NULL),(927,1,1,3,'<p>Hãy chọn phát biểu sai trong các phát biểu sau:</p>',1,1,81,NULL,NULL,NULL),(928,1,1,2,'<p>Trong các biểu thức sau, biểu thức nào sai?</p>',1,1,81,NULL,NULL,NULL),(929,1,1,3,'<p>class VNT002 {</p><p>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void main(String[] args) {</p><p>float a=Float.POSITIVE_INFINITY;</p><p>double b=Double.POSITIVE_INFINITY;</p><p>double c=Double.NaN;</p><p>System.out.print((a == b)+\",\"+(c==c)+\",\"+(c!=c));</p><p>}</p><p>}</p><p>Kết quả sau khi thực thi đoạn code trên:</p>',1,1,82,NULL,NULL,NULL),(930,1,1,3,'<p>class GFC218 {</p><p>static void m(Object x) {System.out.print(\"Object\");}</p><p>static void m(String x) {System.out.print(\"String\");}</p><p>public static void main(String[] args) {m(null);}</p><p>}</p><p>Kết quả biên dịch đoạn code trên:</p>',1,1,82,NULL,NULL,NULL),(931,1,1,2,'<p>Phát biểu nào sau đây đúng nhất về 2 phương thức overriding?</p>',1,1,83,NULL,NULL,NULL),(932,1,1,1,'<p>Từ khóa nào không được phép dùng khi khai báo class trong java?</p>',1,1,83,NULL,NULL,NULL),(933,1,1,3,'<p>Sau khi biên dịch đoạn code bên dưới, giá trị của biến c là bao nhiêu?</p><p>float c = 34.89675f;</p><p>int b = (int)c + 10;</p><p>c = b;</p>',1,1,83,NULL,NULL,NULL),(934,1,1,3,'<p>class ByteMod {</p><p>public static void main(String[] args) {</p><p>byte b=128;</p><p>b % = 2;</p><p>System.out.println(b);}</p><p>}</p><p>Kết quả biên dịch đoạn code trên:</p>',1,1,83,NULL,NULL,NULL),(935,1,1,1,'<p>Từ khóa nào không được phép dùng khi khai báo class trong java?</p>',1,1,83,NULL,NULL,NULL),(936,1,1,2,'<p>Kết quả của đoạn code sau khi biên dịch?</p><p>int i = 0;</p><p>do {</p><p>System.out.println ( \" I am in the do block.\");</p><p>} while( i &gt; 0); //dòng 4</p>',1,1,81,NULL,NULL,NULL),(937,1,1,3,'<p>Hãy chọn phát biểu sai trong các phát biểu sau:</p>',1,1,81,NULL,NULL,NULL),(938,1,1,1,'<p>Phát biểu nào sau đây là đúng?</p>',1,1,81,NULL,NULL,NULL),(939,1,1,3,'<p>Cho biết kết quả biên dịch đoạn code sau:</p><p>1: public class Short{ <br> 2: public static void main(String[] args) {<br> 3: StringBuffer s =new StringBuffer(\"Hello\");<br> 4: if((s.length() &gt; 5) &amp;&amp; s.append(\" there\").equals(\"False\"));<br> 5: &nbsp;&nbsp;&nbsp;&nbsp;System.out.println(\"value is \" + s);<br> 6: }<br> 7: }</p>',1,1,82,NULL,NULL,NULL),(940,1,1,3,'<p>class VNT002 {</p><p>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void main(String[] args) {</p><p>float a=Float.POSITIVE_INFINITY;</p><p>double b=Double.POSITIVE_INFINITY;</p><p>double c=Double.NaN;</p><p>System.out.print((a == b)+\",\"+(c==c)+\",\"+(c!=c));</p><p>}</p><p>}</p><p>Kết quả sau khi thực thi đoạn code trên:</p>',1,1,82,NULL,NULL,NULL),(941,1,1,4,'<p>Cho biết kết quả biên dịch đoạn code sau?</p><p>int i = 1, j = 10;</p><p>do {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(i &gt; j) {&nbsp; break;&nbsp; }</p><p>&nbsp;&nbsp;&nbsp; j--;</p><p>} while (++i &lt; 5);</p><p>System.out.println(\"i = \" + i + \" and j = \" + j);</p>',1,1,83,NULL,NULL,NULL),(942,1,1,1,'<p>Từ khóa nào không được phép dùng khi khai báo class trong java?</p>',1,1,83,NULL,NULL,NULL),(943,1,1,3,'<p>Sau khi biên dịch đoạn code bên dưới, giá trị của biến c là bao nhiêu?</p><p>float c = 34.89675f;</p><p>int b = (int)c + 10;</p><p>c = b;</p>',1,1,83,NULL,NULL,NULL),(944,1,1,1,'<p>Từ khóa nào không được phép dùng khi khai báo class trong java?</p>',1,1,83,NULL,NULL,NULL),(945,1,1,3,'<p>Cho biết kết quả phân tích dòng code sau:</p><p>if(5&amp;7 &gt;0 &amp;&amp; 5|12) &nbsp;&nbsp; System.out.print(\"true\");</p>',1,1,83,NULL,NULL,NULL),(946,1,1,2,'<p>Kết quả của đoạn code sau khi biên dịch?</p><p>int i = 0;</p><p>do {</p><p>System.out.println ( \" I am in the do block.\");</p><p>} while( i &gt; 0); //dòng 4</p>',1,1,81,NULL,NULL,NULL),(947,1,1,4,'<p>class SuperA {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String s1=\"SuperA\";}</p><p>class SuperB {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String s1=\"SuperB\";}</p><p>class A extends SuperA{</p><p>String s1=\"A\";</p><p>class B extends SuperB {</p><p>String s1==\"B\";</p><p>void m1(){</p><p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.print(this.s1 + \",\");</p><p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.print(super.s1 + \",\");</p><p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.print(A.this.s1 + \",\");</p><p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.print(A.super.s1);</p><p>}</p><p>}</p><p>public static void main(String[] args) {</p><p>new A(),new B().m1();</p><p>}}</p><p>Kết quả biên dịch đoạn code trên:</p>',1,1,81,NULL,NULL,NULL),(948,1,1,2,'<p>Trong các biểu thức sau, biểu thức nào sai?</p>',1,1,81,NULL,NULL,NULL),(949,1,1,4,'<p>public class Passing{</p><p>public static void main(String[] args){</p><p>&nbsp;&nbsp;&nbsp; int a = 0; int b = 0;</p><p>&nbsp;&nbsp;&nbsp; int[] bArr = new int[1]; bArr[0] = b;</p><p>&nbsp;&nbsp;&nbsp; inc1(a);inc2(bArr);</p><p>&nbsp;&nbsp;&nbsp; System.out.println(\"a=\" + a + \" b=\" + b + \" bArr[0]=\" + bArr[0]);</p><p>}</p><p>public static void inc1(int x){ x++; }</p><p>public static void inc2(int[] x){ x[0]++; }</p><p>}</p><p>Kết quả biên dịch đoạn code trên:</p>',1,1,82,NULL,NULL,NULL),(950,1,1,2,'<p>Cho đoạn code bên dưới, cho biết dòng nào không thể biên dịch?</p><ol><li>Object ob =new Object();</li><li>String stringarr[] =new String[50];</li><li>Float floater =new Float(3.14f);</li><li>ob =stringarr;</li><li>ob =stringarr[5];</li><li>floater =ob;</li><li>ob =floater;</li></ol>',1,1,82,NULL,NULL,NULL),(951,1,1,1,'<p>Nếu không thêm từ khóa private/protected/public cho các thành phần thì thành phần đó sẽ:</p>',1,1,80,NULL,NULL,NULL),(952,1,1,3,'<p>Chọn kết quả đúng khi biên dịch đoạn code sau:</p><p>int [ ] nums = {1,2,3,4,5,6}; System.out.println(nums[1] + nums[3]);</p>',1,1,80,NULL,NULL,NULL),(953,1,1,3,'<p>Sau khi biên dịch đoạn code bên dưới, giá trị của biến c là bao nhiêu?</p><p>float c = 34.89675f;</p><p>int b = (int)c + 10;</p><p>c = b;</p>',1,1,83,NULL,NULL,NULL),(954,1,1,3,'<p>Sau khi biên dịch đoạn code bên dưới, giá trị của biến c là bao nhiêu?</p><p>float c = 34.89675f;</p><p>int b = (int)c + 10;</p><p>c = b;</p>',1,1,83,NULL,NULL,NULL),(955,1,1,1,'<p>Từ khóa nào không được phép dùng khi khai báo class trong java?</p>',1,1,83,NULL,NULL,NULL),(956,1,1,3,'<p>Cho đoạn code sau:</p><ol><li>class Animal{}</li><li>class Dog extends Animal {}</li><li>class Cat extends Animal {}</li><li>class Racoon extends Animal {}</li><li>class Swamp extends Animal {}</li><li>class Test{</li><li>public static void main(String[] args){</li><li>Dog rover,fido;</li><li>Animal anim;</li><li>rover = new Dog();</li><li>anim = rover;</li><li>fido =(Dog)anim;</li><li>}</li><li>}</li></ol>',1,1,83,NULL,NULL,NULL),(957,1,1,1,'<p>Trong kế thừa, lớp con dẫn xuất có thể truy xuất bất kỳ:</p>',1,1,80,NULL,NULL,NULL),(958,1,1,3,'<p>Kết quả biên dịch của đoạn code sau là gì?</p><p>String word = \"abcde\"; for (int i = 0; i &lt;4; i+=2) System.out.print(word[i]);</p>',1,1,80,NULL,NULL,NULL),(959,1,1,3,'<p>Kết quả biên dịch của đoạn code sau là gì?</p><p>String word = \"abcde\"; for (int i = 0; i &lt;4; i+=2) System.out.print(word[i]);</p>',1,1,80,NULL,NULL,NULL),(960,1,1,1,'<p>Nếu không thêm từ khóa private/protected/public cho các thành phần thì thành phần đó sẽ:</p>',1,1,80,NULL,NULL,NULL),(961,1,1,2,'<p>Kết quả của đoạn code sau khi biên dịch?</p><p>int i = 0;</p><p>do {</p><p>System.out.println ( \" I am in the do block.\");</p><p>} while( i &gt; 0); //dòng 4</p>',1,1,81,NULL,NULL,NULL),(962,1,1,2,'<p>Trong các biểu thức sau, biểu thức nào sai?</p>',1,1,81,NULL,NULL,NULL),(963,1,1,3,'<p>Cho biết kết quả biên dịch đoạn code sau:</p><p>1: public class Short{ <br> 2: public static void main(String[] args) {<br> 3: StringBuffer s =new StringBuffer(\"Hello\");<br> 4: if((s.length() &gt; 5) &amp;&amp; s.append(\" there\").equals(\"False\"));<br> 5: &nbsp;&nbsp;&nbsp;&nbsp;System.out.println(\"value is \" + s);<br> 6: }<br> 7: }</p>',1,1,82,NULL,NULL,NULL),(964,1,1,3,'<p>class VNT002 {</p><p>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void main(String[] args) {</p><p>float a=Float.POSITIVE_INFINITY;</p><p>double b=Double.POSITIVE_INFINITY;</p><p>double c=Double.NaN;</p><p>System.out.print((a == b)+\",\"+(c==c)+\",\"+(c!=c));</p><p>}</p><p>}</p><p>Kết quả sau khi thực thi đoạn code trên:</p>',1,1,82,NULL,NULL,NULL),(965,1,1,1,'<p>Cấu trúc là?</p>',1,3,19,NULL,NULL,NULL),(966,1,1,3,'<p>Chọn phát biểu đúng nhất :</p>',1,3,19,NULL,NULL,NULL),(967,1,1,3,'<p>Nếu được thực hiện đoạn chương trình sau sẽ viết ra cái gì?</p><p>#include&lt;stdio.h&gt;</p><p>&nbsp;</p><p>&nbsp;&nbsp;&nbsp; struct course</p><p>&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int courseno;</p><p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;char coursename[25];</p><p>&nbsp;&nbsp;&nbsp; };</p><p>int main()</p><p>{struct course c[] = { {102, \"Java\"},</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {103, \"PHP\"},</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {104, \"DotNet\"}&nbsp;&nbsp;&nbsp;&nbsp; };</p><p>&nbsp;</p><p>&nbsp;&nbsp;&nbsp; printf(\"%d \", c[1].courseno);</p><p>&nbsp;&nbsp;&nbsp; printf(\"%s\\n\", (*(c+2)).coursename);</p><p>&nbsp;&nbsp;&nbsp; return 0;</p><p>}</p>',1,3,20,NULL,NULL,NULL),(968,1,1,1,'<p>Ngôn ngữ lập trình C được Dennish phát triển dựa trên ngôn ngữ lập trình nào?</p>',1,3,21,NULL,NULL,NULL),(969,1,1,2,'<p>Trong lập trình C phát biểu nào đúng khi nói về lệnh rẽ nhánh?</p>',1,3,22,NULL,NULL,NULL),(970,1,1,1,'<p>Chọn phát biểu đúng trong các phát biểu sau:</p>',1,3,23,NULL,NULL,NULL),(971,1,1,3,'<p>Khai báo hàm tốt nhất cho tác vụ hoán vị 2 số thực :</p>',1,3,24,NULL,NULL,NULL),(972,1,1,3,'<p>Hàm sau sẽ in ra kết quả là gì?</p><p>void e(int );</p><p>main()</p><p>{</p><p>&nbsp; int a; a=3;</p><p>&nbsp; e(a);</p><p>}</p><p>void e(int n)</p><p>{</p><p>&nbsp; if(n&gt;0)</p><p>&nbsp; {</p><p>&nbsp;&nbsp;&nbsp; e(--n); printf(\"%d\" , n); e(--n);</p><p>&nbsp; }</p><p>}</p>',1,3,24,NULL,NULL,NULL),(973,1,1,1,'<p>class không thể được khai báo ở chế độ</p>',1,3,25,NULL,NULL,NULL),(974,1,1,3,'<p>#define MAX 100</p><p>typedef struct PHANSO</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int tu, mau;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; };</p><p>PHANSO Tru(PHANSO ps1, PHANSO ps2)</p><p>{</p><p>&nbsp;&nbsp;&nbsp; PHANSO kq;</p><p>……………………………………………….&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp; kq.mau=ps1.mau*ps2.mau;</p><p>&nbsp;&nbsp;&nbsp; kq=RutGon(kq);</p><p>&nbsp;&nbsp;&nbsp; return kq;</p><p>} Thêm dòng còn thiếu cho hàm trên.</p>',1,3,19,NULL,NULL,NULL),(975,1,1,3,'<p>Trong các tên biến sau đây, tên nào đặt tên sai quy tắc đặt tên khi lập trình C?</p>',1,3,20,NULL,NULL,NULL),(976,1,1,2,'<p>Phép tính 3*5%4-2*16&gt;32 &amp;&amp; 31/6&lt;7 cho kết qủa:</p>',1,3,20,NULL,NULL,NULL),(977,1,1,1,'<p>Xâu định dạng nào dưới đây dùng để in ra một xâu kí tự:</p>',1,3,21,NULL,NULL,NULL),(978,1,1,3,'<p>Chọn 1 câu đúng. Độ ưu tiên tăng dần của các nhóm phép toán là …</p>',1,3,21,NULL,NULL,NULL),(979,1,1,3,'<p>Cho đoạn lệnh sau:</p><p>int a = 0;</p><p>if (a)</p><p>b = 0;</p><p>else</p><p>b = 1;</p><p>Cho biết sau khi thực hiện đoạn lệnh này b có giá trị là bao nhiêu?</p>',1,3,22,NULL,NULL,NULL),(980,1,1,3,'<p>Kết quả của chương trình sau là gì :</p><p>#include &lt;stdio.h&gt;</p><p>void main()</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int i,j;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (i=1; i&lt;4; i++)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; j=i;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(“%3d”,j);</p><p>}</p>',1,3,23,NULL,NULL,NULL),(981,1,1,3,'<p>Trong đoạn chương trình sau, puts(string) dùng để làm gì?</p><p>void&nbsp; main()</p><p>{</p><p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;char chuoi[] = \"Vi du chuoi\\n\";</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; puts(string); }</p>',1,3,24,NULL,NULL,NULL),(982,1,1,1,'<p>Một Class có thể hoạt động ở chế độ tạm thời (Transient)</p>',1,3,25,NULL,NULL,NULL),(983,1,1,6,'<p>Thiết bị nào là thiết bị ngoại vi</p>',1,2,4,NULL,NULL,NULL),(984,3,1,3,'<p>Thay đổi thứ tự độ phức tạp từ tốt nhất đến xấu</p>',1,2,14,NULL,NULL,NULL),(985,1,1,2,'<p>Với hàm void :</p>',1,3,24,NULL,NULL,NULL),(986,2,1,4,'<p>Các giá trị của mảng A được sắp xếp theo thứ tự tăng dần từng bước như sau:</p><p>3, 2, 7, 9, 1, 6</p><p>2, 3, 7, 9, 1, 6</p><p>1, 2, 3, 7, 9, 6</p><p>1, 2, 3, 6, 7, 9</p><p>Mảng A được sắp xếp theo thuật toán {1}</p>',1,2,14,NULL,NULL,NULL),(987,1,1,2,'<p>Cho hàm hoán vị sau, điền vị trí trống trong hàm:</p><p>void hoanvi(int *x, ……………….)</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int t = *x; *x = *y; *y = t;&nbsp;</p><p>}</p>',1,2,NULL,NULL,NULL,NULL),(988,1,1,3,'<p>Các giá trị của mảng A được sắp xếp theo thứ tự tăng dần từng bước như sau:</p><p>3, 2, 7, 9, 1, 6</p><p>2, 3, 7, 9, 1, 6</p><p>1, 2, 3, 7, 9, 6</p><p>1, 2, 3, 6, 7, 9</p><p>Mảng A được sắp xếp theo thuật toán nào?</p>',1,2,NULL,NULL,NULL,NULL);

/*Table structure for table `question_access_mode` */

DROP TABLE IF EXISTS `question_access_mode`;

CREATE TABLE `question_access_mode` (
  `question_access_mode_id` int(11) NOT NULL AUTO_INCREMENT,
  `question_access_mode_granted_date` date DEFAULT NULL,
  `question_id` int(11) DEFAULT NULL,
  `accessor_id` int(11) DEFAULT NULL,
  `role_id` int(11) DEFAULT NULL,
  `previlege_id` int(11) DEFAULT NULL,
  `grantor_id` int(11) NOT NULL,
  `question_access_mode_valid_startdate` date NOT NULL,
  `question_access_mode_valid_enddate` date DEFAULT NULL,
  `question_access_mode_valid_starttime` time NOT NULL,
  `question_access_mode_valid_endtime` time DEFAULT NULL,
  `question_access_mode_is_disabled` tinyint(1) NOT NULL,
  `question_access_mode_desc` text COLLATE utf8_unicode_ci,
  PRIMARY KEY (`question_access_mode_id`),
  KEY `fk_previleges_user_can_apply` (`previlege_id`),
  KEY `fk_question_in_request` (`question_id`),
  KEY `fk_role_user_can_apply` (`role_id`),
  KEY `fk_user_who_want_to_access_question` (`accessor_id`),
  KEY `fk_user__who_grant_the_accessing` (`grantor_id`),
  CONSTRAINT `fk_previleges_user_can_apply` FOREIGN KEY (`previlege_id`) REFERENCES `previlege` (`previlege_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_question_in_request` FOREIGN KEY (`question_id`) REFERENCES `question` (`question_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_role_user_can_apply` FOREIGN KEY (`role_id`) REFERENCES `role` (`role_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_who_want_to_access_question` FOREIGN KEY (`accessor_id`) REFERENCES `user` (`user_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_user__who_grant_the_accessing` FOREIGN KEY (`grantor_id`) REFERENCES `user` (`user_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `question_access_mode` */

/*Table structure for table `question_comment` */

DROP TABLE IF EXISTS `question_comment`;

CREATE TABLE `question_comment` (
  `question_comment_id` int(11) NOT NULL AUTO_INCREMENT,
  `test_reviewer_decision_id` int(11) DEFAULT NULL,
  `test_comment_id` int(11) DEFAULT NULL,
  `question_id` int(11) NOT NULL,
  `question_comment_date` date NOT NULL,
  `question_comment_time` time NOT NULL,
  `question_comment_desc` text COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`question_comment_id`),
  KEY `fk_question_in_the_mapping_with_comment` (`question_id`),
  KEY `fk_reviewer_comment_in_the_mapping_with_question` (`test_comment_id`),
  KEY `fk_reviewer_decision_for_question_in_test` (`test_reviewer_decision_id`),
  CONSTRAINT `fk_question_in_the_mapping_with_comment` FOREIGN KEY (`question_id`) REFERENCES `question` (`question_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `question_comment` */

/*Table structure for table `question_comment_relationship` */

DROP TABLE IF EXISTS `question_comment_relationship`;

CREATE TABLE `question_comment_relationship` (
  `question_comment_relationship_id` int(11) NOT NULL AUTO_INCREMENT,
  `parent_question_comment_id` int(11) DEFAULT NULL,
  `child_question_comment_id` int(11) DEFAULT NULL,
  `question_comment_relationship_desc` text COLLATE utf8_unicode_ci,
  PRIMARY KEY (`question_comment_relationship_id`),
  KEY `fk_child_of_question_relationship` (`child_question_comment_id`),
  KEY `fk_parent_of_question_relationship` (`parent_question_comment_id`),
  CONSTRAINT `fk_child_of_question_relationship` FOREIGN KEY (`child_question_comment_id`) REFERENCES `question_comment` (`question_comment_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_parent_of_question_relationship` FOREIGN KEY (`parent_question_comment_id`) REFERENCES `question_comment` (`question_comment_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `question_comment_relationship` */

/*Table structure for table `question_content_map` */

DROP TABLE IF EXISTS `question_content_map`;

CREATE TABLE `question_content_map` (
  `question_content_map` int(11) NOT NULL AUTO_INCREMENT,
  `question_id` int(11) DEFAULT NULL,
  `course_content_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`question_content_map`),
  KEY `fk_course_content_is_the_mapping_with_questions` (`course_content_id`),
  KEY `fk_questions_in_the_mapping_with_course_contents` (`question_id`),
  CONSTRAINT `fk_course_content_is_the_mapping_with_questions` FOREIGN KEY (`course_content_id`) REFERENCES `course_content` (`course_content_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_questions_in_the_mapping_with_course_contents` FOREIGN KEY (`question_id`) REFERENCES `question` (`question_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `question_content_map` */

/*Table structure for table `question_group` */

DROP TABLE IF EXISTS `question_group`;

CREATE TABLE `question_group` (
  `question_group_id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) DEFAULT NULL,
  `question_group_desc` text COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`question_group_id`),
  KEY `fk_creator_of_question_groups` (`user_id`),
  CONSTRAINT `fk_creator_of_question_groups` FOREIGN KEY (`user_id`) REFERENCES `user` (`user_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='contains many questions that share the same description and ';

/*Data for the table `question_group` */

insert  into `question_group`(`question_group_id`,`user_id`,`question_group_desc`) values (1,1,'<p>Các câu hỏi&nbsp;về sắp xếp</p>'),(2,1,'<p>Câu hỏi&nbsp;về cây</p>'),(3,1,'<p>Câu hỏi&nbsp;về bảng băm</p>'),(4,1,'<p>Câu hỏi&nbsp;về cây nhiều nhánh</p>'),(5,1,'<p>Câu hỏi tổng quát</p>'),(6,1,'<p>CTDL</p>');

/*Table structure for table `question_info` */

DROP TABLE IF EXISTS `question_info`;

CREATE TABLE `question_info` (
  `question_info_id` int(11) NOT NULL AUTO_INCREMENT,
  `question_id` int(11) DEFAULT NULL,
  `question_info_prop` char(20) COLLATE utf8_unicode_ci NOT NULL,
  `question_info_value` text COLLATE utf8_unicode_ci NOT NULL,
  `question_info_desc` text COLLATE utf8_unicode_ci,
  PRIMARY KEY (`question_info_id`),
  KEY `fk_question_addition_information` (`question_id`),
  CONSTRAINT `fk_question_addition_information` FOREIGN KEY (`question_id`) REFERENCES `question` (`question_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=4059 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `question_info` */

insert  into `question_info`(`question_info_id`,`question_id`,`question_info_prop`,`question_info_value`,`question_info_desc`) values (176,53,'name','Ví dụ câu hỏi chọn',NULL),(177,53,'tags','cơ bản; ví dụ; chọn',NULL),(178,53,'multichoice','1',NULL),(179,53,'random','1',NULL),(180,54,'name','Ví dụ câu hỏi liên kết',NULL),(181,54,'tags','cơ bản; ví dụ; liên kết',NULL),(182,54,'multimatch','0',NULL),(183,54,'random','1',NULL),(187,56,'name','Thứ tự tốt xấu của độ phức tạp',NULL),(188,56,'tags','cơ bản; ví dụ; thứ tự',NULL),(189,57,'name','Ví dụ câu hỏi chọn',NULL),(190,57,'tags','cơ bản; ví dụ; chọn',NULL),(191,57,'multichoice','1',NULL),(192,57,'random','1',NULL),(202,60,'name','Ví dụ câu hỏi chọn',NULL),(203,60,'tags','cơ bản; ví dụ; chọn',NULL),(204,60,'multichoice','1',NULL),(205,60,'random','1',NULL),(206,61,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(207,61,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(208,61,'random','1',NULL),(209,62,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(210,62,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(211,62,'random','1',NULL),(218,55,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(219,55,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(220,55,'random','1',NULL),(221,58,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(222,58,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(223,58,'random','1',NULL),(224,63,'name','Thứ tự tốt xấu của độ phức tạp',NULL),(225,63,'tags','cơ bản; ví dụ; thứ tự',NULL),(232,64,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(233,64,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(234,64,'random','1',NULL),(241,59,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(242,59,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(243,59,'random','1',NULL),(248,66,'name','Ví dụ câu hỏi chọn',NULL),(249,66,'tags','cơ bản; ví dụ; chọn',NULL),(250,66,'multichoice','1',NULL),(251,66,'random','1',NULL),(252,65,'name','Ví dụ câu hỏi chọn',NULL),(253,65,'tags','cơ bản; ví dụ; chọn',NULL),(254,65,'multichoice','1',NULL),(255,65,'random','1',NULL),(256,67,'name','Ví dụ câu hỏi chọn',NULL),(257,67,'tags','cơ bản; ví dụ; chọn',NULL),(258,67,'multichoice','1',NULL),(259,67,'random','1',NULL),(260,68,'name','Ví dụ câu hỏi chọn',NULL),(261,68,'tags','cơ bản; ví dụ; chọn',NULL),(262,68,'multichoice','1',NULL),(263,68,'random','1',NULL),(264,69,'name','Ví dụ câu hỏi chọn',NULL),(265,69,'tags','cơ bản; ví dụ; chọn',NULL),(266,69,'multichoice','1',NULL),(267,69,'random','1',NULL),(277,70,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(278,70,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(279,70,'random','1',NULL),(280,71,'name','Ví dụ câu hỏi chọn',NULL),(281,71,'tags','cơ bản; ví dụ; chọn',NULL),(282,71,'multichoice','1',NULL),(283,71,'random','1',NULL),(284,72,'name','Ví dụ câu hỏi chọn',NULL),(285,72,'tags','cơ bản; ví dụ; chọn',NULL),(286,72,'multichoice','1',NULL),(287,72,'random','1',NULL),(288,73,'name','Thứ tự tốt xấu của độ phức tạp',NULL),(289,73,'tags','cơ bản; ví dụ; thứ tự',NULL),(292,74,'name','Thứ tự tốt xấu của độ phức tạp',NULL),(293,74,'tags','cơ bản; ví dụ; thứ tự',NULL),(294,75,'name','Ví dụ câu hỏi chọn',NULL),(295,75,'tags','cơ bản; ví dụ; chọn',NULL),(296,75,'multichoice','1',NULL),(297,75,'random','1',NULL),(298,76,'name','Ví dụ câu hỏi chọn',NULL),(299,76,'tags','cơ bản; ví dụ; chọn',NULL),(300,76,'multichoice','1',NULL),(301,76,'random','1',NULL),(306,77,'name','Ví dụ câu hỏi chọn',NULL),(307,77,'tags','cơ bản; ví dụ; chọn',NULL),(308,77,'multichoice','1',NULL),(309,77,'random','1',NULL),(310,78,'name','Ví dụ câu hỏi chọn',NULL),(311,78,'tags','cơ bản; ví dụ; chọn',NULL),(312,78,'multichoice','1',NULL),(313,78,'random','1',NULL),(314,79,'name','Ví dụ câu hỏi chọn',NULL),(315,79,'tags','cơ bản; ví dụ; chọn',NULL),(316,79,'multichoice','1',NULL),(317,79,'random','1',NULL),(318,80,'name','Ví dụ câu hỏi chọn',NULL),(319,80,'tags','cơ bản; ví dụ; chọn',NULL),(320,80,'multichoice','1',NULL),(321,80,'random','1',NULL),(326,82,'name','Ví dụ câu hỏi chọn',NULL),(327,82,'tags','cơ bản; ví dụ; chọn',NULL),(328,82,'multichoice','1',NULL),(329,82,'random','1',NULL),(330,83,'name','Ví dụ câu hỏi chọn',NULL),(331,83,'tags','cơ bản; ví dụ; chọn',NULL),(332,83,'multichoice','1',NULL),(333,83,'random','1',NULL),(334,84,'name','Ví dụ câu hỏi chọn',NULL),(335,84,'tags','cơ bản; ví dụ; chọn',NULL),(336,84,'multichoice','1',NULL),(337,84,'random','1',NULL),(338,85,'name','Ví dụ câu hỏi chọn',NULL),(339,85,'tags','cơ bản; ví dụ; chọn',NULL),(340,85,'multichoice','1',NULL),(341,85,'random','1',NULL),(342,86,'name','Ví dụ câu hỏi chọn',NULL),(343,86,'tags','cơ bản; ví dụ; chọn',NULL),(344,86,'multichoice','1',NULL),(345,86,'random','1',NULL),(346,87,'name','Ví dụ câu hỏi chọn',NULL),(347,87,'tags','cơ bản; ví dụ; chọn',NULL),(348,87,'multichoice','1',NULL),(349,87,'random','1',NULL),(350,88,'name','Ví dụ câu hỏi chọn',NULL),(351,88,'tags','cơ bản; ví dụ; chọn',NULL),(352,88,'multichoice','1',NULL),(353,88,'random','1',NULL),(354,89,'name','Ví dụ câu hỏi chọn',NULL),(355,89,'tags','cơ bản; ví dụ; chọn',NULL),(356,89,'multichoice','1',NULL),(357,89,'random','1',NULL),(358,90,'name','Ví dụ câu hỏi chọn',NULL),(359,90,'tags','cơ bản; ví dụ; chọn',NULL),(360,90,'multichoice','1',NULL),(361,90,'random','1',NULL),(362,91,'name','Ví dụ câu hỏi chọn',NULL),(363,91,'tags','cơ bản; ví dụ; chọn',NULL),(364,91,'multichoice','1',NULL),(365,91,'random','1',NULL),(366,92,'name','Ví dụ câu hỏi chọn',NULL),(367,92,'tags','cơ bản; ví dụ; chọn',NULL),(368,92,'multichoice','1',NULL),(369,92,'random','1',NULL),(370,93,'name','Ví dụ câu hỏi chọn',NULL),(371,93,'tags','cơ bản; ví dụ; chọn',NULL),(372,93,'multichoice','1',NULL),(373,93,'random','1',NULL),(374,94,'name','Ví dụ câu hỏi chọn',NULL),(375,94,'tags','cơ bản; ví dụ; chọn',NULL),(376,94,'multichoice','1',NULL),(377,94,'random','1',NULL),(378,95,'name','Ví dụ câu hỏi chọn',NULL),(379,95,'tags','cơ bản; ví dụ; chọn',NULL),(380,95,'multichoice','1',NULL),(381,95,'random','1',NULL),(382,96,'name','Ví dụ câu hỏi chọn',NULL),(383,96,'tags','cơ bản; ví dụ; chọn',NULL),(384,96,'multichoice','1',NULL),(385,96,'random','1',NULL),(386,97,'name','Ví dụ câu hỏi chọn',NULL),(387,97,'tags','cơ bản; ví dụ; chọn',NULL),(388,97,'multichoice','1',NULL),(389,97,'random','1',NULL),(390,98,'name','Ví dụ câu hỏi chọn',NULL),(391,98,'tags','cơ bản; ví dụ; chọn',NULL),(392,98,'multichoice','1',NULL),(393,98,'random','1',NULL),(394,99,'name','Ví dụ câu hỏi chọn',NULL),(395,99,'tags','cơ bản; ví dụ; chọn',NULL),(396,99,'multichoice','1',NULL),(397,99,'random','1',NULL),(398,100,'name','Ví dụ câu hỏi chọn',NULL),(399,100,'tags','cơ bản; ví dụ; chọn',NULL),(400,100,'multichoice','1',NULL),(401,100,'random','1',NULL),(402,101,'name','Ví dụ câu hỏi chọn',NULL),(403,101,'tags','cơ bản; ví dụ; chọn',NULL),(404,101,'multichoice','1',NULL),(405,101,'random','1',NULL),(406,102,'name','Ví dụ câu hỏi chọn',NULL),(407,102,'tags','cơ bản; ví dụ; chọn',NULL),(408,102,'multichoice','1',NULL),(409,102,'random','1',NULL),(410,103,'name','Ví dụ câu hỏi chọn',NULL),(411,103,'tags','cơ bản; ví dụ; chọn',NULL),(412,103,'multichoice','1',NULL),(413,103,'random','1',NULL),(414,104,'name','Ví dụ câu hỏi chọn',NULL),(415,104,'tags','cơ bản; ví dụ; chọn',NULL),(416,104,'multichoice','1',NULL),(417,104,'random','1',NULL),(418,105,'name','Ví dụ câu hỏi chọn',NULL),(419,105,'tags','cơ bản; ví dụ; chọn',NULL),(420,105,'multichoice','1',NULL),(421,105,'random','1',NULL),(422,106,'name','Ví dụ câu hỏi chọn',NULL),(423,106,'tags','cơ bản; ví dụ; chọn',NULL),(424,106,'multichoice','1',NULL),(425,106,'random','1',NULL),(426,107,'name','Ví dụ câu hỏi chọn',NULL),(427,107,'tags','cơ bản; ví dụ; chọn',NULL),(428,107,'multichoice','1',NULL),(429,107,'random','1',NULL),(430,108,'name','Ví dụ câu hỏi chọn',NULL),(431,108,'tags','cơ bản; ví dụ; chọn',NULL),(432,108,'multichoice','1',NULL),(433,108,'random','1',NULL),(434,109,'name','Ví dụ câu hỏi chọn',NULL),(435,109,'tags','cơ bản; ví dụ; chọn',NULL),(436,109,'multichoice','1',NULL),(437,109,'random','1',NULL),(438,110,'name','Ví dụ câu hỏi chọn',NULL),(439,110,'tags','cơ bản; ví dụ; chọn',NULL),(440,110,'multichoice','1',NULL),(441,110,'random','1',NULL),(442,111,'name','Ví dụ câu hỏi chọn',NULL),(443,111,'tags','cơ bản; ví dụ; chọn',NULL),(444,111,'multichoice','1',NULL),(445,111,'random','1',NULL),(446,112,'name','Ví dụ câu hỏi chọn',NULL),(447,112,'tags','cơ bản; ví dụ; chọn',NULL),(448,112,'multichoice','1',NULL),(449,112,'random','1',NULL),(450,113,'name','Ví dụ câu hỏi chọn',NULL),(451,113,'tags','cơ bản; ví dụ; chọn',NULL),(452,113,'multichoice','1',NULL),(453,113,'random','1',NULL),(454,114,'name','Ví dụ câu hỏi chọn',NULL),(455,114,'tags','cơ bản; ví dụ; chọn',NULL),(456,114,'multichoice','1',NULL),(457,114,'random','1',NULL),(458,115,'name','Ví dụ câu hỏi chọn',NULL),(459,115,'tags','cơ bản; ví dụ; chọn',NULL),(460,115,'multichoice','1',NULL),(461,115,'random','1',NULL),(462,116,'name','Ví dụ câu hỏi chọn',NULL),(463,116,'tags','cơ bản; ví dụ; chọn',NULL),(464,116,'multichoice','1',NULL),(465,116,'random','1',NULL),(466,117,'name','Ví dụ câu hỏi chọn',NULL),(467,117,'tags','cơ bản; ví dụ; chọn',NULL),(468,117,'multichoice','1',NULL),(469,117,'random','1',NULL),(470,81,'name','Ví dụ câu hỏi chọn',NULL),(471,81,'tags','cơ bản; ví dụ; chọn',NULL),(472,81,'multichoice','1',NULL),(473,81,'random','1',NULL),(474,118,'name','Ví dụ câu hỏi chọn',NULL),(475,118,'tags','cơ bản; ví dụ; chọn',NULL),(476,118,'multichoice','1',NULL),(477,118,'random','1',NULL),(478,119,'name','Ví dụ câu hỏi chọn',NULL),(479,119,'tags','cơ bản; ví dụ; chọn',NULL),(480,119,'multichoice','1',NULL),(481,119,'random','1',NULL),(482,120,'name','Ví dụ câu hỏi chọn',NULL),(483,120,'tags','cơ bản; ví dụ; chọn',NULL),(484,120,'multichoice','1',NULL),(485,120,'random','1',NULL),(486,121,'name','Ví dụ câu hỏi chọn',NULL),(487,121,'tags','cơ bản; ví dụ; chọn',NULL),(488,121,'multichoice','1',NULL),(489,121,'random','1',NULL),(490,122,'name','Ví dụ câu hỏi chọn',NULL),(491,122,'tags','cơ bản; ví dụ; chọn',NULL),(492,122,'multichoice','1',NULL),(493,122,'random','1',NULL),(494,123,'name','Ví dụ câu hỏi chọn',NULL),(495,123,'tags','cơ bản; ví dụ; chọn',NULL),(496,123,'multichoice','1',NULL),(497,123,'random','1',NULL),(498,124,'name','Ví dụ câu hỏi chọn',NULL),(499,124,'tags','cơ bản; ví dụ; chọn',NULL),(500,124,'multichoice','1',NULL),(501,124,'random','1',NULL),(502,125,'name','Ví dụ câu hỏi chọn',NULL),(503,125,'tags','cơ bản; ví dụ; chọn',NULL),(504,125,'multichoice','1',NULL),(505,125,'random','1',NULL),(506,126,'name','Ví dụ câu hỏi chọn',NULL),(507,126,'tags','cơ bản; ví dụ; chọn',NULL),(508,126,'multichoice','1',NULL),(509,126,'random','1',NULL),(510,127,'name','Ví dụ câu hỏi chọn',NULL),(511,127,'tags','cơ bản; ví dụ; chọn',NULL),(512,127,'multichoice','1',NULL),(513,127,'random','1',NULL),(514,128,'name','Ví dụ câu hỏi chọn',NULL),(515,128,'tags','cơ bản; ví dụ; chọn',NULL),(516,128,'multichoice','1',NULL),(517,128,'random','1',NULL),(518,129,'name','Ví dụ câu hỏi chọn',NULL),(519,129,'tags','cơ bản; ví dụ; chọn',NULL),(520,129,'multichoice','1',NULL),(521,129,'random','1',NULL),(522,130,'name','Ví dụ câu hỏi chọn',NULL),(523,130,'tags','cơ bản; ví dụ; chọn',NULL),(524,130,'multichoice','1',NULL),(525,130,'random','1',NULL),(526,131,'name','Ví dụ câu hỏi chọn',NULL),(527,131,'tags','cơ bản; ví dụ; chọn',NULL),(528,131,'multichoice','1',NULL),(529,131,'random','1',NULL),(530,132,'name','Ví dụ câu hỏi chọn',NULL),(531,132,'tags','cơ bản; ví dụ; chọn',NULL),(532,132,'multichoice','1',NULL),(533,132,'random','1',NULL),(534,133,'name','Ví dụ câu hỏi chọn',NULL),(535,133,'tags','cơ bản; ví dụ; chọn',NULL),(536,133,'multichoice','1',NULL),(537,133,'random','1',NULL),(538,134,'name','Ví dụ câu hỏi chọn',NULL),(539,134,'tags','cơ bản; ví dụ; chọn',NULL),(540,134,'multichoice','1',NULL),(541,134,'random','1',NULL),(542,135,'name','Ví dụ câu hỏi chọn',NULL),(543,135,'tags','cơ bản; ví dụ; chọn',NULL),(544,135,'multichoice','1',NULL),(545,135,'random','1',NULL),(546,136,'name','Ví dụ câu hỏi chọn',NULL),(547,136,'tags','cơ bản; ví dụ; chọn',NULL),(548,136,'multichoice','1',NULL),(549,136,'random','1',NULL),(550,137,'name','Ví dụ câu hỏi chọn',NULL),(551,137,'tags','cơ bản; ví dụ; chọn',NULL),(552,137,'multichoice','1',NULL),(553,137,'random','1',NULL),(558,138,'name','Ví dụ câu hỏi chọn',NULL),(559,138,'tags','cơ bản; ví dụ; chọn',NULL),(560,138,'multichoice','1',NULL),(561,138,'random','1',NULL),(562,139,'name','Ví dụ câu hỏi chọn',NULL),(563,139,'tags','cơ bản; ví dụ; chọn',NULL),(564,139,'multichoice','1',NULL),(565,139,'random','1',NULL),(566,140,'name','Ví dụ câu hỏi chọn',NULL),(567,140,'tags','cơ bản; ví dụ; chọn',NULL),(568,140,'multichoice','1',NULL),(569,140,'random','1',NULL),(570,141,'name','Ví dụ câu hỏi chọn',NULL),(571,141,'tags','cơ bản; ví dụ; chọn',NULL),(572,141,'multichoice','1',NULL),(573,141,'random','1',NULL),(574,142,'name','Ví dụ câu hỏi chọn',NULL),(575,142,'tags','cơ bản; ví dụ; chọn',NULL),(576,142,'multichoice','1',NULL),(577,142,'random','1',NULL),(578,143,'name','Ví dụ câu hỏi chọn',NULL),(579,143,'tags','cơ bản; ví dụ; chọn',NULL),(580,143,'multichoice','1',NULL),(581,143,'random','1',NULL),(582,144,'name','Ví dụ câu hỏi chọn',NULL),(583,144,'tags','cơ bản; ví dụ; chọn',NULL),(584,144,'multichoice','1',NULL),(585,144,'random','1',NULL),(586,145,'name','Ví dụ câu hỏi chọn',NULL),(587,145,'tags','cơ bản; ví dụ; chọn',NULL),(588,145,'multichoice','1',NULL),(589,145,'random','1',NULL),(590,146,'name','Ví dụ câu hỏi chọn',NULL),(591,146,'tags','cơ bản; ví dụ; chọn',NULL),(592,146,'multichoice','1',NULL),(593,146,'random','1',NULL),(594,147,'name','Ví dụ câu hỏi chọn',NULL),(595,147,'tags','cơ bản; ví dụ; chọn',NULL),(596,147,'multichoice','1',NULL),(597,147,'random','1',NULL),(598,148,'name','Ví dụ câu hỏi chọn',NULL),(599,148,'tags','cơ bản; ví dụ; chọn',NULL),(600,148,'multichoice','1',NULL),(601,148,'random','1',NULL),(602,149,'name','Ví dụ câu hỏi chọn',NULL),(603,149,'tags','cơ bản; ví dụ; chọn',NULL),(604,149,'multichoice','1',NULL),(605,149,'random','1',NULL),(606,150,'name','Ví dụ câu hỏi chọn',NULL),(607,150,'tags','cơ bản; ví dụ; chọn',NULL),(608,150,'multichoice','1',NULL),(609,150,'random','1',NULL),(610,151,'name','Ví dụ câu hỏi chọn',NULL),(611,151,'tags','cơ bản; ví dụ; chọn',NULL),(612,151,'multichoice','1',NULL),(613,151,'random','1',NULL),(614,152,'name','Ví dụ câu hỏi chọn',NULL),(615,152,'tags','cơ bản; ví dụ; chọn',NULL),(616,152,'multichoice','1',NULL),(617,152,'random','1',NULL),(618,153,'name','Ví dụ câu hỏi chọn',NULL),(619,153,'tags','cơ bản; ví dụ; chọn',NULL),(620,153,'multichoice','1',NULL),(621,153,'random','1',NULL),(622,154,'name','Ví dụ câu hỏi chọn',NULL),(623,154,'tags','cơ bản; ví dụ; chọn',NULL),(624,154,'multichoice','1',NULL),(625,154,'random','1',NULL),(626,155,'name','Ví dụ câu hỏi chọn',NULL),(627,155,'tags','cơ bản; ví dụ; chọn',NULL),(628,155,'multichoice','1',NULL),(629,155,'random','1',NULL),(630,156,'name','Ví dụ câu hỏi chọn',NULL),(631,156,'tags','cơ bản; ví dụ; chọn',NULL),(632,156,'multichoice','1',NULL),(633,156,'random','1',NULL),(634,157,'name','Ví dụ câu hỏi chọn',NULL),(635,157,'tags','cơ bản; ví dụ; chọn',NULL),(636,157,'multichoice','1',NULL),(637,157,'random','1',NULL),(638,158,'name','Ví dụ câu hỏi chọn',NULL),(639,158,'tags','cơ bản; ví dụ; chọn',NULL),(640,158,'multichoice','1',NULL),(641,158,'random','1',NULL),(642,159,'name','Ví dụ câu hỏi chọn',NULL),(643,159,'tags','cơ bản; ví dụ; chọn',NULL),(644,159,'multichoice','1',NULL),(645,159,'random','1',NULL),(646,160,'name','Ví dụ câu hỏi chọn',NULL),(647,160,'tags','cơ bản; ví dụ; chọn',NULL),(648,160,'multichoice','1',NULL),(649,160,'random','1',NULL),(650,161,'name','Ví dụ câu hỏi chọn',NULL),(651,161,'tags','cơ bản; ví dụ; chọn',NULL),(652,161,'multichoice','1',NULL),(653,161,'random','1',NULL),(654,162,'name','Ví dụ câu hỏi chọn',NULL),(655,162,'tags','cơ bản; ví dụ; chọn',NULL),(656,162,'multichoice','1',NULL),(657,162,'random','1',NULL),(658,163,'name','Ví dụ câu hỏi chọn',NULL),(659,163,'tags','cơ bản; ví dụ; chọn',NULL),(660,163,'multichoice','1',NULL),(661,163,'random','1',NULL),(662,164,'name','Ví dụ câu hỏi chọn',NULL),(663,164,'tags','cơ bản; ví dụ; chọn',NULL),(664,164,'multichoice','1',NULL),(665,164,'random','1',NULL),(666,165,'name','Ví dụ câu hỏi chọn',NULL),(667,165,'tags','cơ bản; ví dụ; chọn',NULL),(668,165,'multichoice','1',NULL),(669,165,'random','1',NULL),(670,166,'name','Ví dụ câu hỏi chọn',NULL),(671,166,'tags','cơ bản; ví dụ; chọn',NULL),(672,166,'multichoice','1',NULL),(673,166,'random','1',NULL),(674,167,'name','Ví dụ câu hỏi chọn',NULL),(675,167,'tags','cơ bản; ví dụ; chọn',NULL),(676,167,'multichoice','1',NULL),(677,167,'random','1',NULL),(678,168,'name','Ví dụ câu hỏi chọn',NULL),(679,168,'tags','cơ bản; ví dụ; chọn',NULL),(680,168,'multichoice','1',NULL),(681,168,'random','1',NULL),(682,169,'name','Ví dụ câu hỏi chọn',NULL),(683,169,'tags','cơ bản; ví dụ; chọn',NULL),(684,169,'multichoice','1',NULL),(685,169,'random','1',NULL),(686,170,'name','Ví dụ câu hỏi chọn',NULL),(687,170,'tags','cơ bản; ví dụ; chọn',NULL),(688,170,'multichoice','1',NULL),(689,170,'random','1',NULL),(690,171,'name','Ví dụ câu hỏi chọn',NULL),(691,171,'tags','cơ bản; ví dụ; chọn',NULL),(692,171,'multichoice','1',NULL),(693,171,'random','1',NULL),(694,172,'name','Ví dụ câu hỏi chọn',NULL),(695,172,'tags','cơ bản; ví dụ; chọn',NULL),(696,172,'multichoice','1',NULL),(697,172,'random','1',NULL),(698,173,'name','Ví dụ câu hỏi chọn',NULL),(699,173,'tags','cơ bản; ví dụ; chọn',NULL),(700,173,'multichoice','1',NULL),(701,173,'random','1',NULL),(702,174,'name','Ví dụ câu hỏi chọn',NULL),(703,174,'tags','cơ bản; ví dụ; chọn',NULL),(704,174,'multichoice','1',NULL),(705,174,'random','1',NULL),(706,175,'name','Ví dụ câu hỏi chọn',NULL),(707,175,'tags','cơ bản; ví dụ; chọn',NULL),(708,175,'multichoice','1',NULL),(709,175,'random','1',NULL),(710,176,'name','Ví dụ câu hỏi chọn',NULL),(711,176,'tags','cơ bản; ví dụ; chọn',NULL),(712,176,'multichoice','1',NULL),(713,176,'random','1',NULL),(714,177,'name','Ví dụ câu hỏi chọn',NULL),(715,177,'tags','cơ bản; ví dụ; chọn',NULL),(716,177,'multichoice','1',NULL),(717,177,'random','1',NULL),(718,178,'name','Ví dụ câu hỏi chọn',NULL),(719,178,'tags','cơ bản; ví dụ; chọn',NULL),(720,178,'multichoice','1',NULL),(721,178,'random','1',NULL),(722,179,'name','Ví dụ câu hỏi chọn',NULL),(723,179,'tags','cơ bản; ví dụ; chọn',NULL),(724,179,'multichoice','1',NULL),(725,179,'random','1',NULL),(726,180,'name','Ví dụ câu hỏi chọn',NULL),(727,180,'tags','cơ bản; ví dụ; chọn',NULL),(728,180,'multichoice','1',NULL),(729,180,'random','1',NULL),(730,181,'name','Ví dụ câu hỏi chọn',NULL),(731,181,'tags','cơ bản; ví dụ; chọn',NULL),(732,181,'multichoice','1',NULL),(733,181,'random','1',NULL),(734,182,'name','Ví dụ câu hỏi chọn',NULL),(735,182,'tags','cơ bản; ví dụ; chọn',NULL),(736,182,'multichoice','1',NULL),(737,182,'random','1',NULL),(738,183,'name','Ví dụ câu hỏi chọn',NULL),(739,183,'tags','cơ bản; ví dụ; chọn',NULL),(740,183,'multichoice','1',NULL),(741,183,'random','1',NULL),(742,184,'name','Ví dụ câu hỏi chọn',NULL),(743,184,'tags','cơ bản; ví dụ; chọn',NULL),(744,184,'multichoice','1',NULL),(745,184,'random','1',NULL),(746,185,'name','Ví dụ câu hỏi chọn',NULL),(747,185,'tags','cơ bản; ví dụ; chọn',NULL),(748,185,'multichoice','1',NULL),(749,185,'random','1',NULL),(750,186,'name','Ví dụ câu hỏi chọn',NULL),(751,186,'tags','cơ bản; ví dụ; chọn',NULL),(752,186,'multichoice','1',NULL),(753,186,'random','1',NULL),(754,187,'name','Ví dụ câu hỏi chọn',NULL),(755,187,'tags','cơ bản; ví dụ; chọn',NULL),(756,187,'multichoice','1',NULL),(757,187,'random','1',NULL),(758,188,'name','Ví dụ câu hỏi chọn',NULL),(759,188,'tags','cơ bản; ví dụ; chọn',NULL),(760,188,'multichoice','1',NULL),(761,188,'random','1',NULL),(762,189,'name','Ví dụ câu hỏi chọn',NULL),(763,189,'tags','cơ bản; ví dụ; chọn',NULL),(764,189,'multichoice','1',NULL),(765,189,'random','1',NULL),(766,190,'name','Ví dụ câu hỏi chọn',NULL),(767,190,'tags','cơ bản; ví dụ; chọn',NULL),(768,190,'multichoice','1',NULL),(769,190,'random','1',NULL),(770,191,'name','Ví dụ câu hỏi chọn',NULL),(771,191,'tags','cơ bản; ví dụ; chọn',NULL),(772,191,'multichoice','1',NULL),(773,191,'random','1',NULL),(774,192,'name','Ví dụ câu hỏi chọn',NULL),(775,192,'tags','cơ bản; ví dụ; chọn',NULL),(776,192,'multichoice','1',NULL),(777,192,'random','1',NULL),(778,193,'name','Ví dụ câu hỏi chọn',NULL),(779,193,'tags','cơ bản; ví dụ; chọn',NULL),(780,193,'multichoice','1',NULL),(781,193,'random','1',NULL),(782,194,'name','Ví dụ câu hỏi chọn',NULL),(783,194,'tags','cơ bản; ví dụ; chọn',NULL),(784,194,'multichoice','1',NULL),(785,194,'random','1',NULL),(786,195,'name','Ví dụ câu hỏi chọn',NULL),(787,195,'tags','cơ bản; ví dụ; chọn',NULL),(788,195,'multichoice','1',NULL),(789,195,'random','1',NULL),(790,196,'name','Ví dụ câu hỏi chọn',NULL),(791,196,'tags','cơ bản; ví dụ; chọn',NULL),(792,196,'multichoice','1',NULL),(793,196,'random','1',NULL),(794,197,'name','Ví dụ câu hỏi chọn',NULL),(795,197,'tags','cơ bản; ví dụ; chọn',NULL),(796,197,'multichoice','1',NULL),(797,197,'random','1',NULL),(798,198,'name','Ví dụ câu hỏi chọn',NULL),(799,198,'tags','cơ bản; ví dụ; chọn',NULL),(800,198,'multichoice','1',NULL),(801,198,'random','1',NULL),(802,199,'name','Ví dụ câu hỏi chọn',NULL),(803,199,'tags','cơ bản; ví dụ; chọn',NULL),(804,199,'multichoice','1',NULL),(805,199,'random','1',NULL),(806,200,'name','Ví dụ câu hỏi chọn',NULL),(807,200,'tags','cơ bản; ví dụ; chọn',NULL),(808,200,'multichoice','1',NULL),(809,200,'random','1',NULL),(810,201,'name','Ví dụ câu hỏi chọn',NULL),(811,201,'tags','cơ bản; ví dụ; chọn',NULL),(812,201,'multichoice','1',NULL),(813,201,'random','1',NULL),(818,202,'name','Ví dụ câu hỏi chọn',NULL),(819,202,'tags','cơ bản; ví dụ; chọn',NULL),(820,202,'multichoice','1',NULL),(821,202,'random','1',NULL),(822,203,'name','Ví dụ câu hỏi chọn',NULL),(823,203,'tags','cơ bản; ví dụ; chọn',NULL),(824,203,'multichoice','1',NULL),(825,203,'random','1',NULL),(826,204,'name','Ví dụ câu hỏi chọn',NULL),(827,204,'tags','cơ bản; ví dụ; chọn',NULL),(828,204,'multichoice','1',NULL),(829,204,'random','1',NULL),(842,205,'name','Ví dụ câu hỏi chọn',NULL),(843,205,'tags','cơ bản; ví dụ; chọn',NULL),(844,205,'multichoice','1',NULL),(845,205,'random','1',NULL),(858,206,'name','Ví dụ câu hỏi chọn',NULL),(859,206,'tags','cơ bản; ví dụ; chọn',NULL),(860,206,'multichoice','1',NULL),(861,206,'random','1',NULL),(866,207,'name','Ví dụ câu hỏi chọn',NULL),(867,207,'tags','cơ bản; ví dụ; chọn',NULL),(868,207,'multichoice','1',NULL),(869,207,'random','1',NULL),(874,208,'name','Ví dụ câu hỏi chọn',NULL),(875,208,'tags','cơ bản; ví dụ; chọn',NULL),(876,208,'multichoice','1',NULL),(877,208,'random','1',NULL),(882,209,'name','Ví dụ câu hỏi chọn',NULL),(883,209,'tags','cơ bản; ví dụ; chọn',NULL),(884,209,'multichoice','1',NULL),(885,209,'random','1',NULL),(890,210,'name','Ví dụ câu hỏi chọn',NULL),(891,210,'tags','cơ bản; ví dụ; chọn',NULL),(892,210,'multichoice','1',NULL),(893,210,'random','1',NULL),(894,211,'name','Ví dụ câu hỏi chọn',NULL),(895,211,'tags','cơ bản; ví dụ; chọn',NULL),(896,211,'multichoice','1',NULL),(897,211,'random','1',NULL),(898,212,'name','Ví dụ câu hỏi chọn',NULL),(899,212,'tags','cơ bản; ví dụ; chọn',NULL),(900,212,'multichoice','1',NULL),(901,212,'random','1',NULL),(902,213,'name','Ví dụ câu hỏi chọn',NULL),(903,213,'tags','cơ bản; ví dụ; chọn',NULL),(904,213,'multichoice','1',NULL),(905,213,'random','1',NULL),(906,214,'name','Ví dụ câu hỏi chọn',NULL),(907,214,'tags','cơ bản; ví dụ; chọn',NULL),(908,214,'multichoice','1',NULL),(909,214,'random','1',NULL),(918,215,'name','Ví dụ câu hỏi chọn',NULL),(919,215,'tags','cơ bản; ví dụ; chọn',NULL),(920,215,'multichoice','1',NULL),(921,215,'random','1',NULL),(922,216,'name','Ví dụ câu hỏi chọn',NULL),(923,216,'tags','cơ bản; ví dụ; chọn',NULL),(924,216,'multichoice','1',NULL),(925,216,'random','1',NULL),(930,217,'name','Ví dụ câu hỏi chọn',NULL),(931,217,'tags','cơ bản; ví dụ; chọn',NULL),(932,217,'multichoice','1',NULL),(933,217,'random','1',NULL),(934,218,'name','Ví dụ câu hỏi chọn',NULL),(935,218,'tags','cơ bản; ví dụ; chọn',NULL),(936,218,'multichoice','1',NULL),(937,218,'random','1',NULL),(942,219,'name','Ví dụ câu hỏi chọn',NULL),(943,219,'tags','cơ bản; ví dụ; chọn',NULL),(944,219,'multichoice','1',NULL),(945,219,'random','1',NULL),(946,220,'name','Ví dụ câu hỏi chọn',NULL),(947,220,'tags','cơ bản; ví dụ; chọn',NULL),(948,220,'multichoice','1',NULL),(949,220,'random','1',NULL),(950,221,'name','Ví dụ câu hỏi chọn',NULL),(951,221,'tags','cơ bản; ví dụ; chọn',NULL),(952,221,'multichoice','1',NULL),(953,221,'random','1',NULL),(954,222,'name','Ví dụ câu hỏi chọn',NULL),(955,222,'tags','cơ bản; ví dụ; chọn',NULL),(956,222,'multichoice','1',NULL),(957,222,'random','1',NULL),(962,223,'name','Ví dụ câu hỏi chọn',NULL),(963,223,'tags','cơ bản; ví dụ; chọn',NULL),(964,223,'multichoice','1',NULL),(965,223,'random','1',NULL),(970,224,'name','Ví dụ câu hỏi chọn',NULL),(971,224,'tags','cơ bản; ví dụ; chọn',NULL),(972,224,'multichoice','1',NULL),(973,224,'random','1',NULL),(974,225,'name','Ví dụ câu hỏi chọn',NULL),(975,225,'tags','cơ bản; ví dụ; chọn',NULL),(976,225,'multichoice','1',NULL),(977,225,'random','1',NULL),(978,226,'name','Ví dụ câu hỏi chọn',NULL),(979,226,'tags','cơ bản; ví dụ; chọn',NULL),(980,226,'multichoice','1',NULL),(981,226,'random','1',NULL),(982,227,'name','Ví dụ câu hỏi chọn',NULL),(983,227,'tags','cơ bản; ví dụ; chọn',NULL),(984,227,'multichoice','1',NULL),(985,227,'random','1',NULL),(986,228,'name','Ví dụ câu hỏi chọn',NULL),(987,228,'tags','cơ bản; ví dụ; chọn',NULL),(988,228,'multichoice','1',NULL),(989,228,'random','1',NULL),(990,229,'name','Ví dụ câu hỏi chọn',NULL),(991,229,'tags','cơ bản; ví dụ; chọn',NULL),(992,229,'multichoice','1',NULL),(993,229,'random','1',NULL),(994,230,'name','Ví dụ câu hỏi chọn',NULL),(995,230,'tags','cơ bản; ví dụ; chọn',NULL),(996,230,'multichoice','1',NULL),(997,230,'random','1',NULL),(1002,231,'name','Ví dụ câu hỏi chọn',NULL),(1003,231,'tags','cơ bản; ví dụ; chọn',NULL),(1004,231,'multichoice','1',NULL),(1005,231,'random','1',NULL),(1010,232,'name','Ví dụ câu hỏi chọn',NULL),(1011,232,'tags','cơ bản; ví dụ; chọn',NULL),(1012,232,'multichoice','1',NULL),(1013,232,'random','1',NULL),(1018,233,'name','Ví dụ câu hỏi chọn',NULL),(1019,233,'tags','cơ bản; ví dụ; chọn',NULL),(1020,233,'multichoice','1',NULL),(1021,233,'random','1',NULL),(1034,234,'name','Ví dụ câu hỏi chọn',NULL),(1035,234,'tags','cơ bản; ví dụ; chọn',NULL),(1036,234,'multichoice','1',NULL),(1037,234,'random','1',NULL),(1038,236,'name','Ví dụ câu hỏi chọn',NULL),(1039,236,'tags','cơ bản; ví dụ; chọn',NULL),(1040,236,'multichoice','1',NULL),(1041,236,'random','1',NULL),(1042,237,'name','Ví dụ câu hỏi chọn',NULL),(1043,237,'tags','cơ bản; ví dụ; chọn',NULL),(1044,237,'multichoice','1',NULL),(1045,237,'random','1',NULL),(1046,238,'name','Ví dụ câu hỏi chọn',NULL),(1047,238,'tags','cơ bản; ví dụ; chọn',NULL),(1048,238,'multichoice','1',NULL),(1049,238,'random','1',NULL),(1050,239,'name','Ví dụ câu hỏi chọn',NULL),(1051,239,'tags','cơ bản; ví dụ; chọn',NULL),(1052,239,'multichoice','1',NULL),(1053,239,'random','1',NULL),(1054,240,'name','Ví dụ câu hỏi chọn',NULL),(1055,240,'tags','cơ bản; ví dụ; chọn',NULL),(1056,240,'multichoice','1',NULL),(1057,240,'random','1',NULL),(1058,241,'name','Ví dụ câu hỏi liên kết',NULL),(1059,241,'tags','cơ bản; ví dụ; liên kết',NULL),(1060,241,'multimatch','0',NULL),(1061,241,'random','1',NULL),(1062,242,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(1063,242,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(1064,242,'random','1',NULL),(1065,243,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(1066,243,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(1067,243,'random','1',NULL),(1068,244,'name','Ví dụ câu hỏi chọn',NULL),(1069,244,'tags','cơ bản; ví dụ; chọn',NULL),(1070,244,'multichoice','1',NULL),(1071,244,'random','1',NULL),(1072,245,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(1073,245,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(1074,245,'random','1',NULL),(1075,246,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(1076,246,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(1077,246,'random','1',NULL),(1078,247,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(1079,247,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(1080,247,'random','1',NULL),(1081,248,'name','Ví dụ câu hỏi chọn',NULL),(1082,248,'tags','cơ bản; ví dụ; chọn',NULL),(1083,248,'multichoice','1',NULL),(1084,248,'random','1',NULL),(1085,249,'name','Ví dụ câu hỏi chọn',NULL),(1086,249,'tags','cơ bản; ví dụ; chọn',NULL),(1087,249,'multichoice','1',NULL),(1088,249,'random','1',NULL),(1089,250,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(1090,250,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(1091,250,'random','1',NULL),(1092,251,'name','Thứ tự tốt xấu của độ phức tạp',NULL),(1093,251,'tags','cơ bản; ví dụ; thứ tự',NULL),(1094,252,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(1095,252,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(1096,252,'random','1',NULL),(1097,253,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(1098,253,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(1099,253,'random','1',NULL),(1100,254,'name','Ví dụ câu hỏi chọn',NULL),(1101,254,'tags','cơ bản; ví dụ; chọn',NULL),(1102,254,'multichoice','1',NULL),(1103,254,'random','1',NULL),(1104,255,'name','Ví dụ câu hỏi chọn',NULL),(1105,255,'tags','cơ bản; ví dụ; chọn',NULL),(1106,255,'multichoice','1',NULL),(1107,255,'random','1',NULL),(1108,256,'name','Ví dụ câu hỏi liên kết',NULL),(1109,256,'tags','cơ bản; ví dụ; liên kết',NULL),(1110,256,'multimatch','0',NULL),(1111,256,'random','1',NULL),(1112,257,'name','Ví dụ câu hỏi chọn',NULL),(1113,257,'tags','cơ bản; ví dụ; chọn',NULL),(1114,257,'multichoice','1',NULL),(1115,257,'random','1',NULL),(1116,258,'name','Thứ tự tốt xấu của độ phức tạp',NULL),(1117,258,'tags','cơ bản; ví dụ; thứ tự',NULL),(1118,259,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(1119,259,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(1120,259,'random','1',NULL),(1121,260,'name','Ví dụ câu hỏi liên kết',NULL),(1122,260,'tags','cơ bản; ví dụ; liên kết',NULL),(1123,260,'multimatch','0',NULL),(1124,260,'random','1',NULL),(1125,261,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(1126,261,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(1127,261,'random','1',NULL),(1128,262,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(1129,262,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(1130,262,'random','1',NULL),(1131,263,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(1132,263,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(1133,263,'random','1',NULL),(1134,264,'name','Ví dụ câu hỏi chọn',NULL),(1135,264,'tags','cơ bản; ví dụ; chọn',NULL),(1136,264,'multichoice','1',NULL),(1137,264,'random','1',NULL),(1138,265,'name','Ví dụ câu hỏi chọn',NULL),(1139,265,'tags','cơ bản; ví dụ; chọn',NULL),(1140,265,'multichoice','1',NULL),(1141,265,'random','1',NULL),(1142,266,'name','Ví dụ câu hỏi chọn',NULL),(1143,266,'tags','cơ bản; ví dụ; chọn',NULL),(1144,266,'multichoice','1',NULL),(1145,266,'random','1',NULL),(1146,267,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(1147,267,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(1148,267,'random','1',NULL),(1149,268,'name','Ví dụ câu hỏi chọn',NULL),(1150,268,'tags','cơ bản; ví dụ; chọn',NULL),(1151,268,'multichoice','1',NULL),(1152,268,'random','1',NULL),(1153,269,'name','Ví dụ câu hỏi chọn',NULL),(1154,269,'tags','cơ bản; ví dụ; chọn',NULL),(1155,269,'multichoice','1',NULL),(1156,269,'random','1',NULL),(1157,270,'name','Ví dụ câu hỏi chọn',NULL),(1158,270,'tags','cơ bản; ví dụ; chọn',NULL),(1159,270,'multichoice','1',NULL),(1160,270,'random','1',NULL),(1161,271,'name','Ví dụ câu hỏi chọn',NULL),(1162,271,'tags','cơ bản; ví dụ; chọn',NULL),(1163,271,'multichoice','1',NULL),(1164,271,'random','1',NULL),(1165,272,'name','Ví dụ câu hỏi chọn',NULL),(1166,272,'tags','cơ bản; ví dụ; chọn',NULL),(1167,272,'multichoice','1',NULL),(1168,272,'random','1',NULL),(1169,273,'name','Ví dụ câu hỏi chọn',NULL),(1170,273,'tags','cơ bản; ví dụ; chọn',NULL),(1171,273,'multichoice','1',NULL),(1172,273,'random','1',NULL),(1173,274,'name','Ví dụ câu hỏi chọn',NULL),(1174,274,'tags','cơ bản; ví dụ; chọn',NULL),(1175,274,'multichoice','1',NULL),(1176,274,'random','1',NULL),(1177,275,'name','Ví dụ câu hỏi chọn',NULL),(1178,275,'tags','cơ bản; ví dụ; chọn',NULL),(1179,275,'multichoice','1',NULL),(1180,275,'random','1',NULL),(1181,276,'name','Ví dụ câu hỏi chọn',NULL),(1182,276,'tags','cơ bản; ví dụ; chọn',NULL),(1183,276,'multichoice','1',NULL),(1184,276,'random','1',NULL),(1185,277,'name','Ví dụ câu hỏi chọn',NULL),(1186,277,'tags','cơ bản; ví dụ; chọn',NULL),(1187,277,'multichoice','1',NULL),(1188,277,'random','1',NULL),(1189,278,'name','Ví dụ câu hỏi chọn',NULL),(1190,278,'tags','cơ bản; ví dụ; chọn',NULL),(1191,278,'multichoice','1',NULL),(1192,278,'random','1',NULL),(1193,279,'name','Ví dụ câu hỏi chọn',NULL),(1194,279,'tags','cơ bản; ví dụ; chọn',NULL),(1195,279,'multichoice','1',NULL),(1196,279,'random','1',NULL),(1197,280,'name','Ví dụ câu hỏi chọn',NULL),(1198,280,'tags','cơ bản; ví dụ; chọn',NULL),(1199,280,'multichoice','1',NULL),(1200,280,'random','1',NULL),(1201,281,'name','Ví dụ câu hỏi chọn',NULL),(1202,281,'tags','cơ bản; ví dụ; chọn',NULL),(1203,281,'multichoice','1',NULL),(1204,281,'random','1',NULL),(1205,282,'name','Ví dụ câu hỏi chọn',NULL),(1206,282,'tags','cơ bản; ví dụ; chọn',NULL),(1207,282,'multichoice','1',NULL),(1208,282,'random','1',NULL),(1209,283,'name','Ví dụ câu hỏi chọn',NULL),(1210,283,'tags','cơ bản; ví dụ; chọn',NULL),(1211,283,'multichoice','1',NULL),(1212,283,'random','1',NULL),(1213,284,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(1214,284,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(1215,284,'random','1',NULL),(1216,285,'name','Ví dụ câu hỏi chọn',NULL),(1217,285,'tags','cơ bản; ví dụ; chọn',NULL),(1218,285,'multichoice','1',NULL),(1219,285,'random','1',NULL),(1220,286,'name','Ví dụ câu hỏi chọn',NULL),(1221,286,'tags','cơ bản; ví dụ; chọn',NULL),(1222,286,'multichoice','1',NULL),(1223,286,'random','1',NULL),(1224,287,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(1225,287,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(1226,287,'random','1',NULL),(1227,288,'name','Ví dụ câu hỏi liên kết',NULL),(1228,288,'tags','cơ bản; ví dụ; liên kết',NULL),(1229,288,'multimatch','0',NULL),(1230,288,'random','1',NULL),(1231,289,'name','Ví dụ câu hỏi chọn',NULL),(1232,289,'tags','cơ bản; ví dụ; chọn',NULL),(1233,289,'multichoice','1',NULL),(1234,289,'random','1',NULL),(1235,290,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(1236,290,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(1237,290,'random','1',NULL),(1238,291,'name','Ví dụ câu hỏi chọn',NULL),(1239,291,'tags','cơ bản; ví dụ; chọn',NULL),(1240,291,'multichoice','1',NULL),(1241,291,'random','1',NULL),(1242,292,'name','Thứ tự tốt xấu của độ phức tạp',NULL),(1243,292,'tags','cơ bản; ví dụ; thứ tự',NULL),(1244,293,'name','Ví dụ câu hỏi chọn',NULL),(1245,293,'tags','cơ bản; ví dụ; chọn',NULL),(1246,293,'multichoice','1',NULL),(1247,293,'random','1',NULL),(1248,294,'name','Ví dụ câu hỏi chọn',NULL),(1249,294,'tags','cơ bản; ví dụ; chọn',NULL),(1250,294,'multichoice','1',NULL),(1251,294,'random','1',NULL),(1252,295,'name','Ví dụ câu hỏi chọn',NULL),(1253,295,'tags','cơ bản; ví dụ; chọn',NULL),(1254,295,'multichoice','1',NULL),(1255,295,'random','1',NULL),(1256,296,'name','Ví dụ câu hỏi liên kết',NULL),(1257,296,'tags','cơ bản; ví dụ; liên kết',NULL),(1258,296,'multimatch','0',NULL),(1259,296,'random','1',NULL),(1260,297,'name','Thứ tự tốt xấu của độ phức tạp',NULL),(1261,297,'tags','cơ bản; ví dụ; thứ tự',NULL),(1262,298,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(1263,298,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(1264,298,'random','1',NULL),(1265,299,'name','Ví dụ câu hỏi chọn',NULL),(1266,299,'tags','cơ bản; ví dụ; chọn',NULL),(1267,299,'multichoice','1',NULL),(1268,299,'random','1',NULL),(1269,300,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(1270,300,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(1271,300,'random','1',NULL),(1272,301,'name','Ví dụ câu hỏi chọn',NULL),(1273,301,'tags','cơ bản; ví dụ; chọn',NULL),(1274,301,'multichoice','1',NULL),(1275,301,'random','1',NULL),(1276,302,'name','Ví dụ câu hỏi chọn',NULL),(1277,302,'tags','cơ bản; ví dụ; chọn',NULL),(1278,302,'multichoice','1',NULL),(1279,302,'random','1',NULL),(1280,303,'name','Ví dụ câu hỏi chọn',NULL),(1281,303,'tags','cơ bản; ví dụ; chọn',NULL),(1282,303,'multichoice','1',NULL),(1283,303,'random','1',NULL),(1284,304,'name','Ví dụ câu hỏi liên kết',NULL),(1285,304,'tags','cơ bản; ví dụ; liên kết',NULL),(1286,304,'multimatch','0',NULL),(1287,304,'random','1',NULL),(1288,305,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(1289,305,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(1290,305,'random','1',NULL),(1291,306,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(1292,306,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(1293,306,'random','1',NULL),(1294,307,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(1295,307,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(1296,307,'random','1',NULL),(1297,308,'name','Ví dụ câu hỏi chọn',NULL),(1298,308,'tags','cơ bản; ví dụ; chọn',NULL),(1299,308,'multichoice','1',NULL),(1300,308,'random','1',NULL),(1301,309,'name','Ví dụ câu hỏi chọn',NULL),(1302,309,'tags','cơ bản; ví dụ; chọn',NULL),(1303,309,'multichoice','1',NULL),(1304,309,'random','1',NULL),(1305,310,'name','Ví dụ câu hỏi chọn',NULL),(1306,310,'tags','cơ bản; ví dụ; chọn',NULL),(1307,310,'multichoice','1',NULL),(1308,310,'random','1',NULL),(1309,311,'name','Ví dụ câu hỏi chọn',NULL),(1310,311,'tags','cơ bản; ví dụ; chọn',NULL),(1311,311,'multichoice','1',NULL),(1312,311,'random','1',NULL),(1313,312,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(1314,312,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(1315,312,'random','1',NULL),(1316,313,'name','Ví dụ câu hỏi chọn',NULL),(1317,313,'tags','cơ bản; ví dụ; chọn',NULL),(1318,313,'multichoice','1',NULL),(1319,313,'random','1',NULL),(1320,314,'name','Ví dụ câu hỏi chọn',NULL),(1321,314,'tags','cơ bản; ví dụ; chọn',NULL),(1322,314,'multichoice','1',NULL),(1323,314,'random','1',NULL),(1324,315,'name','Ví dụ câu hỏi chọn',NULL),(1325,315,'tags','cơ bản; ví dụ; chọn',NULL),(1326,315,'multichoice','1',NULL),(1327,315,'random','1',NULL),(1328,316,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(1329,316,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(1330,316,'random','1',NULL),(1331,317,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(1332,317,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(1333,317,'random','1',NULL),(1334,318,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(1335,318,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(1336,318,'random','1',NULL),(1337,319,'name','Ví dụ câu hỏi liên kết',NULL),(1338,319,'tags','cơ bản; ví dụ; liên kết',NULL),(1339,319,'multimatch','0',NULL),(1340,319,'random','1',NULL),(1341,320,'name','Ví dụ câu hỏi chọn',NULL),(1342,320,'tags','cơ bản; ví dụ; chọn',NULL),(1343,320,'multichoice','1',NULL),(1344,320,'random','1',NULL),(1345,321,'name','Ví dụ câu hỏi chọn',NULL),(1346,321,'tags','cơ bản; ví dụ; chọn',NULL),(1347,321,'multichoice','1',NULL),(1348,321,'random','1',NULL),(1349,322,'name','Ví dụ câu hỏi chọn',NULL),(1350,322,'tags','cơ bản; ví dụ; chọn',NULL),(1351,322,'multichoice','1',NULL),(1352,322,'random','1',NULL),(1353,323,'name','Ví dụ câu hỏi chọn',NULL),(1354,323,'tags','cơ bản; ví dụ; chọn',NULL),(1355,323,'multichoice','1',NULL),(1356,323,'random','1',NULL),(1357,324,'name','Ví dụ câu hỏi chọn',NULL),(1358,324,'tags','cơ bản; ví dụ; chọn',NULL),(1359,324,'multichoice','1',NULL),(1360,324,'random','1',NULL),(1361,325,'name','Ví dụ câu hỏi chọn',NULL),(1362,325,'tags','cơ bản; ví dụ; chọn',NULL),(1363,325,'multichoice','1',NULL),(1364,325,'random','1',NULL),(1365,326,'name','Ví dụ câu hỏi chọn',NULL),(1366,326,'tags','cơ bản; ví dụ; chọn',NULL),(1367,326,'multichoice','1',NULL),(1368,326,'random','1',NULL),(1369,327,'name','Ví dụ câu hỏi chọn',NULL),(1370,327,'tags','cơ bản; ví dụ; chọn',NULL),(1371,327,'multichoice','1',NULL),(1372,327,'random','1',NULL),(1373,328,'name','Ví dụ câu hỏi chọn',NULL),(1374,328,'tags','cơ bản; ví dụ; chọn',NULL),(1375,328,'multichoice','1',NULL),(1376,328,'random','1',NULL),(1377,329,'name','Ví dụ câu hỏi chọn',NULL),(1378,329,'tags','cơ bản; ví dụ; chọn',NULL),(1379,329,'multichoice','1',NULL),(1380,329,'random','1',NULL),(1381,330,'name','Ví dụ câu hỏi chọn',NULL),(1382,330,'tags','cơ bản; ví dụ; chọn',NULL),(1383,330,'multichoice','1',NULL),(1384,330,'random','1',NULL),(1385,331,'name','Ví dụ câu hỏi chọn',NULL),(1386,331,'tags','cơ bản; ví dụ; chọn',NULL),(1387,331,'multichoice','1',NULL),(1388,331,'random','1',NULL),(1389,332,'name','Ví dụ câu hỏi chọn',NULL),(1390,332,'tags','cơ bản; ví dụ; chọn',NULL),(1391,332,'multichoice','1',NULL),(1392,332,'random','1',NULL),(1393,333,'name','Ví dụ câu hỏi chọn',NULL),(1394,333,'tags','cơ bản; ví dụ; chọn',NULL),(1395,333,'multichoice','1',NULL),(1396,333,'random','1',NULL),(1397,334,'name','Ví dụ câu hỏi chọn',NULL),(1398,334,'tags','cơ bản; ví dụ; chọn',NULL),(1399,334,'multichoice','1',NULL),(1400,334,'random','1',NULL),(1401,335,'name','Ví dụ câu hỏi chọn',NULL),(1402,335,'tags','cơ bản; ví dụ; chọn',NULL),(1403,335,'multichoice','1',NULL),(1404,335,'random','1',NULL),(1405,336,'name','Ví dụ câu hỏi chọn',NULL),(1406,336,'tags','cơ bản; ví dụ; chọn',NULL),(1407,336,'multichoice','1',NULL),(1408,336,'random','1',NULL),(1409,337,'name','Ví dụ câu hỏi chọn',NULL),(1410,337,'tags','cơ bản; ví dụ; chọn',NULL),(1411,337,'multichoice','1',NULL),(1412,337,'random','1',NULL),(1413,338,'name','Ví dụ câu hỏi chọn',NULL),(1414,338,'tags','cơ bản; ví dụ; chọn',NULL),(1415,338,'multichoice','1',NULL),(1416,338,'random','1',NULL),(1417,339,'name','Ví dụ câu hỏi chọn',NULL),(1418,339,'tags','cơ bản; ví dụ; chọn',NULL),(1419,339,'multichoice','1',NULL),(1420,339,'random','1',NULL),(1421,340,'name','Ví dụ câu hỏi chọn',NULL),(1422,340,'tags','cơ bản; ví dụ; chọn',NULL),(1423,340,'multichoice','1',NULL),(1424,340,'random','1',NULL),(1425,341,'name','Ví dụ câu hỏi chọn',NULL),(1426,341,'tags','cơ bản; ví dụ; chọn',NULL),(1427,341,'multichoice','1',NULL),(1428,341,'random','1',NULL),(1429,342,'name','Ví dụ câu hỏi chọn',NULL),(1430,342,'tags','cơ bản; ví dụ; chọn',NULL),(1431,342,'multichoice','1',NULL),(1432,342,'random','1',NULL),(1433,343,'name','Ví dụ câu hỏi chọn',NULL),(1434,343,'tags','cơ bản; ví dụ; chọn',NULL),(1435,343,'multichoice','1',NULL),(1436,343,'random','1',NULL),(1437,344,'name','Ví dụ câu hỏi chọn',NULL),(1438,344,'tags','cơ bản; ví dụ; chọn',NULL),(1439,344,'multichoice','1',NULL),(1440,344,'random','1',NULL),(1441,345,'name','Ví dụ câu hỏi chọn',NULL),(1442,345,'tags','cơ bản; ví dụ; chọn',NULL),(1443,345,'multichoice','1',NULL),(1444,345,'random','1',NULL),(1445,346,'name','Ví dụ câu hỏi chọn',NULL),(1446,346,'tags','cơ bản; ví dụ; chọn',NULL),(1447,346,'multichoice','1',NULL),(1448,346,'random','1',NULL),(1449,347,'name','Ví dụ câu hỏi chọn',NULL),(1450,347,'tags','cơ bản; ví dụ; chọn',NULL),(1451,347,'multichoice','1',NULL),(1452,347,'random','1',NULL),(1453,348,'name','Ví dụ câu hỏi chọn',NULL),(1454,348,'tags','cơ bản; ví dụ; chọn',NULL),(1455,348,'multichoice','1',NULL),(1456,348,'random','1',NULL),(1457,349,'name','Ví dụ câu hỏi chọn',NULL),(1458,349,'tags','cơ bản; ví dụ; chọn',NULL),(1459,349,'multichoice','1',NULL),(1460,349,'random','1',NULL),(1461,350,'name','Ví dụ câu hỏi chọn',NULL),(1462,350,'tags','cơ bản; ví dụ; chọn',NULL),(1463,350,'multichoice','1',NULL),(1464,350,'random','1',NULL),(1465,351,'name','Ví dụ câu hỏi chọn',NULL),(1466,351,'tags','cơ bản; ví dụ; chọn',NULL),(1467,351,'multichoice','1',NULL),(1468,351,'random','1',NULL),(1469,352,'name','Ví dụ câu hỏi chọn',NULL),(1470,352,'tags','cơ bản; ví dụ; chọn',NULL),(1471,352,'multichoice','1',NULL),(1472,352,'random','1',NULL),(1473,353,'name','Ví dụ câu hỏi chọn',NULL),(1474,353,'tags','cơ bản; ví dụ; chọn',NULL),(1475,353,'multichoice','1',NULL),(1476,353,'random','1',NULL),(1477,354,'name','Ví dụ câu hỏi chọn',NULL),(1478,354,'tags','cơ bản; ví dụ; chọn',NULL),(1479,354,'multichoice','1',NULL),(1480,354,'random','1',NULL),(1481,355,'name','Ví dụ câu hỏi chọn',NULL),(1482,355,'tags','cơ bản; ví dụ; chọn',NULL),(1483,355,'multichoice','1',NULL),(1484,355,'random','1',NULL),(1485,356,'name','Ví dụ câu hỏi chọn',NULL),(1486,356,'tags','cơ bản; ví dụ; chọn',NULL),(1487,356,'multichoice','1',NULL),(1488,356,'random','1',NULL),(1489,357,'name','Ví dụ câu hỏi chọn',NULL),(1490,357,'tags','cơ bản; ví dụ; chọn',NULL),(1491,357,'multichoice','1',NULL),(1492,357,'random','1',NULL),(1493,358,'name','Ví dụ câu hỏi chọn',NULL),(1494,358,'tags','cơ bản; ví dụ; chọn',NULL),(1495,358,'multichoice','1',NULL),(1496,358,'random','1',NULL),(1497,359,'name','Ví dụ câu hỏi chọn',NULL),(1498,359,'tags','cơ bản; ví dụ; chọn',NULL),(1499,359,'multichoice','1',NULL),(1500,359,'random','1',NULL),(1501,360,'name','Ví dụ câu hỏi chọn',NULL),(1502,360,'tags','cơ bản; ví dụ; chọn',NULL),(1503,360,'multichoice','1',NULL),(1504,360,'random','1',NULL),(1505,361,'name','Ví dụ câu hỏi chọn',NULL),(1506,361,'tags','cơ bản; ví dụ; chọn',NULL),(1507,361,'multichoice','1',NULL),(1508,361,'random','1',NULL),(1509,362,'name','Ví dụ câu hỏi chọn',NULL),(1510,362,'tags','cơ bản; ví dụ; chọn',NULL),(1511,362,'multichoice','1',NULL),(1512,362,'random','1',NULL),(1513,363,'name','Ví dụ câu hỏi chọn',NULL),(1514,363,'tags','cơ bản; ví dụ; chọn',NULL),(1515,363,'multichoice','1',NULL),(1516,363,'random','1',NULL),(1517,364,'name','Ví dụ câu hỏi chọn',NULL),(1518,364,'tags','cơ bản; ví dụ; chọn',NULL),(1519,364,'multichoice','1',NULL),(1520,364,'random','1',NULL),(1521,365,'name','Ví dụ câu hỏi chọn',NULL),(1522,365,'tags','cơ bản; ví dụ; chọn',NULL),(1523,365,'multichoice','1',NULL),(1524,365,'random','1',NULL),(1525,366,'name','Ví dụ câu hỏi chọn',NULL),(1526,366,'tags','cơ bản; ví dụ; chọn',NULL),(1527,366,'multichoice','1',NULL),(1528,366,'random','1',NULL),(1529,367,'name','Ví dụ câu hỏi chọn',NULL),(1530,367,'tags','cơ bản; ví dụ; chọn',NULL),(1531,367,'multichoice','1',NULL),(1532,367,'random','1',NULL),(1533,368,'name','Ví dụ câu hỏi chọn',NULL),(1534,368,'tags','cơ bản; ví dụ; chọn',NULL),(1535,368,'multichoice','1',NULL),(1536,368,'random','1',NULL),(1537,369,'name','Ví dụ câu hỏi chọn',NULL),(1538,369,'tags','cơ bản; ví dụ; chọn',NULL),(1539,369,'multichoice','1',NULL),(1540,369,'random','1',NULL),(1541,370,'name','Ví dụ câu hỏi chọn',NULL),(1542,370,'tags','cơ bản; ví dụ; chọn',NULL),(1543,370,'multichoice','1',NULL),(1544,370,'random','1',NULL),(1545,371,'name','Ví dụ câu hỏi chọn',NULL),(1546,371,'tags','cơ bản; ví dụ; chọn',NULL),(1547,371,'multichoice','1',NULL),(1548,371,'random','1',NULL),(1549,372,'name','Ví dụ câu hỏi chọn',NULL),(1550,372,'tags','cơ bản; ví dụ; chọn',NULL),(1551,372,'multichoice','1',NULL),(1552,372,'random','1',NULL),(1553,373,'name','Ví dụ câu hỏi chọn',NULL),(1554,373,'tags','cơ bản; ví dụ; chọn',NULL),(1555,373,'multichoice','1',NULL),(1556,373,'random','1',NULL),(1557,374,'name','Ví dụ câu hỏi chọn',NULL),(1558,374,'tags','cơ bản; ví dụ; chọn',NULL),(1559,374,'multichoice','1',NULL),(1560,374,'random','1',NULL),(1561,375,'name','Ví dụ câu hỏi chọn',NULL),(1562,375,'tags','cơ bản; ví dụ; chọn',NULL),(1563,375,'multichoice','1',NULL),(1564,375,'random','1',NULL),(1565,376,'name','Ví dụ câu hỏi chọn',NULL),(1566,376,'tags','cơ bản; ví dụ; chọn',NULL),(1567,376,'multichoice','1',NULL),(1568,376,'random','1',NULL),(1569,377,'name','Ví dụ câu hỏi chọn',NULL),(1570,377,'tags','cơ bản; ví dụ; chọn',NULL),(1571,377,'multichoice','1',NULL),(1572,377,'random','1',NULL),(1573,378,'name','Ví dụ câu hỏi chọn',NULL),(1574,378,'tags','cơ bản; ví dụ; chọn',NULL),(1575,378,'multichoice','1',NULL),(1576,378,'random','1',NULL),(1577,379,'name','Ví dụ câu hỏi chọn',NULL),(1578,379,'tags','cơ bản; ví dụ; chọn',NULL),(1579,379,'multichoice','1',NULL),(1580,379,'random','1',NULL),(1581,380,'name','Ví dụ câu hỏi chọn',NULL),(1582,380,'tags','cơ bản; ví dụ; chọn',NULL),(1583,380,'multichoice','1',NULL),(1584,380,'random','1',NULL),(1585,381,'name','Ví dụ câu hỏi chọn',NULL),(1586,381,'tags','cơ bản; ví dụ; chọn',NULL),(1587,381,'multichoice','1',NULL),(1588,381,'random','1',NULL),(1589,382,'name','Ví dụ câu hỏi chọn',NULL),(1590,382,'tags','cơ bản; ví dụ; chọn',NULL),(1591,382,'multichoice','1',NULL),(1592,382,'random','1',NULL),(1593,383,'name','Ví dụ câu hỏi chọn',NULL),(1594,383,'tags','cơ bản; ví dụ; chọn',NULL),(1595,383,'multichoice','1',NULL),(1596,383,'random','1',NULL),(1597,384,'name','Ví dụ câu hỏi chọn',NULL),(1598,384,'tags','cơ bản; ví dụ; chọn',NULL),(1599,384,'multichoice','1',NULL),(1600,384,'random','1',NULL),(1601,385,'name','Ví dụ câu hỏi chọn',NULL),(1602,385,'tags','cơ bản; ví dụ; chọn',NULL),(1603,385,'multichoice','1',NULL),(1604,385,'random','1',NULL),(1605,386,'name','Ví dụ câu hỏi chọn',NULL),(1606,386,'tags','cơ bản; ví dụ; chọn',NULL),(1607,386,'multichoice','1',NULL),(1608,386,'random','1',NULL),(1609,387,'name','Ví dụ câu hỏi chọn',NULL),(1610,387,'tags','cơ bản; ví dụ; chọn',NULL),(1611,387,'multichoice','1',NULL),(1612,387,'random','1',NULL),(1613,388,'name','Ví dụ câu hỏi chọn',NULL),(1614,388,'tags','cơ bản; ví dụ; chọn',NULL),(1615,388,'multichoice','1',NULL),(1616,388,'random','1',NULL),(1617,389,'name','Ví dụ câu hỏi chọn',NULL),(1618,389,'tags','cơ bản; ví dụ; chọn',NULL),(1619,389,'multichoice','1',NULL),(1620,389,'random','1',NULL),(1621,390,'name','Ví dụ câu hỏi chọn',NULL),(1622,390,'tags','cơ bản; ví dụ; chọn',NULL),(1623,390,'multichoice','1',NULL),(1624,390,'random','1',NULL),(1625,391,'name','Ví dụ câu hỏi chọn',NULL),(1626,391,'tags','cơ bản; ví dụ; chọn',NULL),(1627,391,'multichoice','1',NULL),(1628,391,'random','1',NULL),(1629,392,'name','Ví dụ câu hỏi chọn',NULL),(1630,392,'tags','cơ bản; ví dụ; chọn',NULL),(1631,392,'multichoice','1',NULL),(1632,392,'random','1',NULL),(1633,393,'name','Ví dụ câu hỏi chọn',NULL),(1634,393,'tags','cơ bản; ví dụ; chọn',NULL),(1635,393,'multichoice','1',NULL),(1636,393,'random','1',NULL),(1637,394,'name','Ví dụ câu hỏi chọn',NULL),(1638,394,'tags','cơ bản; ví dụ; chọn',NULL),(1639,394,'multichoice','1',NULL),(1640,394,'random','1',NULL),(1641,395,'name','Ví dụ câu hỏi chọn',NULL),(1642,395,'tags','cơ bản; ví dụ; chọn',NULL),(1643,395,'multichoice','1',NULL),(1644,395,'random','1',NULL),(1645,396,'name','Ví dụ câu hỏi chọn',NULL),(1646,396,'tags','cơ bản; ví dụ; chọn',NULL),(1647,396,'multichoice','1',NULL),(1648,396,'random','1',NULL),(1649,397,'name','Ví dụ câu hỏi chọn',NULL),(1650,397,'tags','cơ bản; ví dụ; chọn',NULL),(1651,397,'multichoice','1',NULL),(1652,397,'random','1',NULL),(1653,398,'name','Ví dụ câu hỏi chọn',NULL),(1654,398,'tags','cơ bản; ví dụ; chọn',NULL),(1655,398,'multichoice','1',NULL),(1656,398,'random','1',NULL),(1657,399,'name','Ví dụ câu hỏi chọn',NULL),(1658,399,'tags','cơ bản; ví dụ; chọn',NULL),(1659,399,'multichoice','1',NULL),(1660,399,'random','1',NULL),(1661,400,'name','Ví dụ câu hỏi chọn',NULL),(1662,400,'tags','cơ bản; ví dụ; chọn',NULL),(1663,400,'multichoice','1',NULL),(1664,400,'random','1',NULL),(1665,401,'name','Ví dụ câu hỏi chọn',NULL),(1666,401,'tags','cơ bản; ví dụ; chọn',NULL),(1667,401,'multichoice','1',NULL),(1668,401,'random','1',NULL),(1669,402,'name','Ví dụ câu hỏi chọn',NULL),(1670,402,'tags','cơ bản; ví dụ; chọn',NULL),(1671,402,'multichoice','1',NULL),(1672,402,'random','1',NULL),(1673,403,'name','Ví dụ câu hỏi chọn',NULL),(1674,403,'tags','cơ bản; ví dụ; chọn',NULL),(1675,403,'multichoice','1',NULL),(1676,403,'random','1',NULL),(1677,404,'name','Ví dụ câu hỏi chọn',NULL),(1678,404,'tags','cơ bản; ví dụ; chọn',NULL),(1679,404,'multichoice','1',NULL),(1680,404,'random','1',NULL),(1681,405,'name','Ví dụ câu hỏi chọn',NULL),(1682,405,'tags','cơ bản; ví dụ; chọn',NULL),(1683,405,'multichoice','1',NULL),(1684,405,'random','1',NULL),(1685,406,'name','Ví dụ câu hỏi chọn',NULL),(1686,406,'tags','cơ bản; ví dụ; chọn',NULL),(1687,406,'multichoice','1',NULL),(1688,406,'random','1',NULL),(1689,407,'name','Ví dụ câu hỏi chọn',NULL),(1690,407,'tags','cơ bản; ví dụ; chọn',NULL),(1691,407,'multichoice','1',NULL),(1692,407,'random','1',NULL),(1693,408,'name','Ví dụ câu hỏi chọn',NULL),(1694,408,'tags','cơ bản; ví dụ; chọn',NULL),(1695,408,'multichoice','1',NULL),(1696,408,'random','1',NULL),(1697,409,'name','Ví dụ câu hỏi chọn',NULL),(1698,409,'tags','cơ bản; ví dụ; chọn',NULL),(1699,409,'multichoice','1',NULL),(1700,409,'random','1',NULL),(1701,410,'name','Ví dụ câu hỏi chọn',NULL),(1702,410,'tags','cơ bản; ví dụ; chọn',NULL),(1703,410,'multichoice','1',NULL),(1704,410,'random','1',NULL),(1705,411,'name','Ví dụ câu hỏi chọn',NULL),(1706,411,'tags','cơ bản; ví dụ; chọn',NULL),(1707,411,'multichoice','1',NULL),(1708,411,'random','1',NULL),(1709,412,'name','Ví dụ câu hỏi chọn',NULL),(1710,412,'tags','cơ bản; ví dụ; chọn',NULL),(1711,412,'multichoice','1',NULL),(1712,412,'random','1',NULL),(1713,413,'name','Ví dụ câu hỏi chọn',NULL),(1714,413,'tags','cơ bản; ví dụ; chọn',NULL),(1715,413,'multichoice','1',NULL),(1716,413,'random','1',NULL),(1717,414,'name','Ví dụ câu hỏi chọn',NULL),(1718,414,'tags','cơ bản; ví dụ; chọn',NULL),(1719,414,'multichoice','1',NULL),(1720,414,'random','1',NULL),(1721,415,'name','Ví dụ câu hỏi chọn',NULL),(1722,415,'tags','cơ bản; ví dụ; chọn',NULL),(1723,415,'multichoice','1',NULL),(1724,415,'random','1',NULL),(1725,416,'name','Ví dụ câu hỏi chọn',NULL),(1726,416,'tags','cơ bản; ví dụ; chọn',NULL),(1727,416,'multichoice','1',NULL),(1728,416,'random','1',NULL),(1729,417,'name','Ví dụ câu hỏi chọn',NULL),(1730,417,'tags','cơ bản; ví dụ; chọn',NULL),(1731,417,'multichoice','1',NULL),(1732,417,'random','1',NULL),(1733,418,'name','Ví dụ câu hỏi chọn',NULL),(1734,418,'tags','cơ bản; ví dụ; chọn',NULL),(1735,418,'multichoice','1',NULL),(1736,418,'random','1',NULL),(1737,419,'name','Ví dụ câu hỏi chọn',NULL),(1738,419,'tags','cơ bản; ví dụ; chọn',NULL),(1739,419,'multichoice','1',NULL),(1740,419,'random','1',NULL),(1741,420,'name','Ví dụ câu hỏi chọn',NULL),(1742,420,'tags','cơ bản; ví dụ; chọn',NULL),(1743,420,'multichoice','1',NULL),(1744,420,'random','1',NULL),(1745,421,'name','Ví dụ câu hỏi chọn',NULL),(1746,421,'tags','cơ bản; ví dụ; chọn',NULL),(1747,421,'multichoice','1',NULL),(1748,421,'random','1',NULL),(1749,422,'name','Ví dụ câu hỏi chọn',NULL),(1750,422,'tags','cơ bản; ví dụ; chọn',NULL),(1751,422,'multichoice','1',NULL),(1752,422,'random','1',NULL),(1753,423,'name','Ví dụ câu hỏi chọn',NULL),(1754,423,'tags','cơ bản; ví dụ; chọn',NULL),(1755,423,'multichoice','1',NULL),(1756,423,'random','1',NULL),(1757,424,'name','Ví dụ câu hỏi chọn',NULL),(1758,424,'tags','cơ bản; ví dụ; chọn',NULL),(1759,424,'multichoice','1',NULL),(1760,424,'random','1',NULL),(1761,425,'name','Ví dụ câu hỏi chọn',NULL),(1762,425,'tags','cơ bản; ví dụ; chọn',NULL),(1763,425,'multichoice','1',NULL),(1764,425,'random','1',NULL),(1765,426,'name','Ví dụ câu hỏi chọn',NULL),(1766,426,'tags','cơ bản; ví dụ; chọn',NULL),(1767,426,'multichoice','1',NULL),(1768,426,'random','1',NULL),(1769,427,'name','Ví dụ câu hỏi chọn',NULL),(1770,427,'tags','cơ bản; ví dụ; chọn',NULL),(1771,427,'multichoice','1',NULL),(1772,427,'random','1',NULL),(1777,429,'name','Ví dụ câu hỏi chọn',NULL),(1778,429,'tags','cơ bản; ví dụ; chọn',NULL),(1779,429,'multichoice','0',NULL),(1780,429,'random','1',NULL),(1781,428,'name','Ví dụ câu hỏi chọn',NULL),(1782,428,'tags','cơ bản; ví dụ; chọn',NULL),(1783,428,'multichoice','0',NULL),(1784,428,'random','1',NULL),(1785,430,'name','Ví dụ câu hỏi chọn',NULL),(1786,430,'tags','cơ bản; ví dụ; chọn',NULL),(1787,430,'multichoice','0',NULL),(1788,430,'random','1',NULL),(1789,431,'name','Ví dụ câu hỏi chọn',NULL),(1790,431,'tags','cơ bản; ví dụ; chọn',NULL),(1791,431,'multichoice','0',NULL),(1792,431,'random','1',NULL),(1793,432,'name','Ví dụ câu hỏi chọn',NULL),(1794,432,'tags','cơ bản; ví dụ; chọn',NULL),(1795,432,'multichoice','1',NULL),(1796,432,'random','1',NULL),(1797,433,'name','Ví dụ câu hỏi chọn',NULL),(1798,433,'tags','cơ bản; ví dụ; chọn',NULL),(1799,433,'multichoice','0',NULL),(1800,433,'random','1',NULL),(1801,434,'name','Ví dụ câu hỏi chọn',NULL),(1802,434,'tags','cơ bản; ví dụ; chọn',NULL),(1803,434,'multichoice','1',NULL),(1804,434,'random','1',NULL),(1805,435,'name','Ví dụ câu hỏi chọn',NULL),(1806,435,'tags','cơ bản; ví dụ; chọn',NULL),(1807,435,'multichoice','0',NULL),(1808,435,'random','1',NULL),(1809,436,'name','Ví dụ câu hỏi chọn',NULL),(1810,436,'tags','cơ bản; ví dụ; chọn',NULL),(1811,436,'multichoice','1',NULL),(1812,436,'random','1',NULL),(1813,437,'name','Ví dụ câu hỏi chọn',NULL),(1814,437,'tags','cơ bản; ví dụ; chọn',NULL),(1815,437,'multichoice','1',NULL),(1816,437,'random','1',NULL),(1817,438,'name','Ví dụ câu hỏi chọn',NULL),(1818,438,'tags','cơ bản; ví dụ; chọn',NULL),(1819,438,'multichoice','1',NULL),(1820,438,'random','1',NULL),(1821,439,'name','Ví dụ câu hỏi chọn',NULL),(1822,439,'tags','cơ bản; ví dụ; chọn',NULL),(1823,439,'multichoice','1',NULL),(1824,439,'random','1',NULL),(1825,440,'name','Ví dụ câu hỏi chọn',NULL),(1826,440,'tags','cơ bản; ví dụ; chọn',NULL),(1827,440,'multichoice','0',NULL),(1828,440,'random','1',NULL),(1829,441,'name','Ví dụ câu hỏi chọn',NULL),(1830,441,'tags','cơ bản; ví dụ; chọn',NULL),(1831,441,'multichoice','1',NULL),(1832,441,'random','1',NULL),(1833,442,'name','Ví dụ câu hỏi chọn',NULL),(1834,442,'tags','cơ bản; ví dụ; chọn',NULL),(1835,442,'multichoice','1',NULL),(1836,442,'random','1',NULL),(1837,443,'name','Ví dụ câu hỏi chọn',NULL),(1838,443,'tags','cơ bản; ví dụ; chọn',NULL),(1839,443,'multichoice','0',NULL),(1840,443,'random','1',NULL),(1841,444,'name','Ví dụ câu hỏi chọn',NULL),(1842,444,'tags','cơ bản; ví dụ; chọn',NULL),(1843,444,'multichoice','1',NULL),(1844,444,'random','1',NULL),(1845,445,'name','Ví dụ câu hỏi chọn',NULL),(1846,445,'tags','cơ bản; ví dụ; chọn',NULL),(1847,445,'multichoice','0',NULL),(1848,445,'random','1',NULL),(1849,446,'name','Ví dụ câu hỏi chọn',NULL),(1850,446,'tags','cơ bản; ví dụ; chọn',NULL),(1851,446,'multichoice','1',NULL),(1852,446,'random','1',NULL),(1853,447,'name','Ví dụ câu hỏi chọn',NULL),(1854,447,'tags','cơ bản; ví dụ; chọn',NULL),(1855,447,'multichoice','1',NULL),(1856,447,'random','1',NULL),(1857,448,'name','Ví dụ câu hỏi chọn',NULL),(1858,448,'tags','cơ bản; ví dụ; chọn',NULL),(1859,448,'multichoice','1',NULL),(1860,448,'random','1',NULL),(1861,449,'name','Ví dụ câu hỏi chọn',NULL),(1862,449,'tags','cơ bản; ví dụ; chọn',NULL),(1863,449,'multichoice','1',NULL),(1864,449,'random','1',NULL),(1865,450,'name','Ví dụ câu hỏi chọn',NULL),(1866,450,'tags','cơ bản; ví dụ; chọn',NULL),(1867,450,'multichoice','1',NULL),(1868,450,'random','1',NULL),(1869,451,'name','Ví dụ câu hỏi chọn',NULL),(1870,451,'tags','cơ bản; ví dụ; chọn',NULL),(1871,451,'multichoice','1',NULL),(1872,451,'random','1',NULL),(1873,452,'name','Ví dụ câu hỏi chọn',NULL),(1874,452,'tags','cơ bản; ví dụ; chọn',NULL),(1875,452,'multichoice','1',NULL),(1876,452,'random','1',NULL),(1877,453,'name','Ví dụ câu hỏi chọn',NULL),(1878,453,'tags','cơ bản; ví dụ; chọn',NULL),(1879,453,'multichoice','1',NULL),(1880,453,'random','1',NULL),(1881,454,'name','Ví dụ câu hỏi chọn',NULL),(1882,454,'tags','cơ bản; ví dụ; chọn',NULL),(1883,454,'multichoice','1',NULL),(1884,454,'random','1',NULL),(1885,455,'name','Ví dụ câu hỏi chọn',NULL),(1886,455,'tags','cơ bản; ví dụ; chọn',NULL),(1887,455,'multichoice','1',NULL),(1888,455,'random','1',NULL),(1889,456,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(1890,456,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(1891,456,'random','1',NULL),(1892,457,'name','Ví dụ câu hỏi chọn',NULL),(1893,457,'tags','cơ bản; ví dụ; chọn',NULL),(1894,457,'multichoice','1',NULL),(1895,457,'random','1',NULL),(1896,458,'name','Ví dụ câu hỏi chọn',NULL),(1897,458,'tags','cơ bản; ví dụ; chọn',NULL),(1898,458,'multichoice','1',NULL),(1899,458,'random','1',NULL),(1906,461,'name','Thứ tự tốt xấu của độ phức tạp',NULL),(1907,461,'tags','cơ bản; ví dụ; thứ tự',NULL),(1908,462,'name','Ví dụ câu hỏi liên kết',NULL),(1909,462,'tags','cơ bản; ví dụ; liên kết',NULL),(1910,462,'multimatch','0',NULL),(1911,462,'random','1',NULL),(1940,470,'name','Ví dụ câu hỏi chọn',NULL),(1941,470,'tags','cơ bản; ví dụ; chọn',NULL),(1942,470,'multichoice','1',NULL),(1943,470,'random','1',NULL),(1944,471,'name','Ví dụ câu hỏi chọn',NULL),(1945,471,'tags','cơ bản; ví dụ; chọn',NULL),(1946,471,'multichoice','1',NULL),(1947,471,'random','1',NULL),(1948,472,'name','Ví dụ câu hỏi chọn',NULL),(1949,472,'tags','cơ bản; ví dụ; chọn',NULL),(1950,472,'multichoice','1',NULL),(1951,472,'random','1',NULL),(1964,476,'name','Ví dụ câu hỏi chọn',NULL),(1965,476,'tags','cơ bản; ví dụ; chọn',NULL),(1966,476,'multichoice','1',NULL),(1967,476,'random','1',NULL),(1968,477,'name','Ví dụ câu hỏi chọn',NULL),(1969,477,'tags','cơ bản; ví dụ; chọn',NULL),(1970,477,'multichoice','1',NULL),(1971,477,'random','1',NULL),(1972,478,'name','Ví dụ câu hỏi chọn',NULL),(1973,478,'tags','cơ bản; ví dụ; chọn',NULL),(1974,478,'multichoice','1',NULL),(1975,478,'random','1',NULL),(1976,479,'name','Ví dụ câu hỏi chọn',NULL),(1977,479,'tags','cơ bản; ví dụ; chọn',NULL),(1978,479,'multichoice','1',NULL),(1979,479,'random','1',NULL),(1980,480,'name','Ví dụ câu hỏi chọn',NULL),(1981,480,'tags','cơ bản; ví dụ; chọn',NULL),(1982,480,'multichoice','1',NULL),(1983,480,'random','1',NULL),(1988,482,'name','Ví dụ câu hỏi chọn',NULL),(1989,482,'tags','cơ bản; ví dụ; chọn',NULL),(1990,482,'multichoice','1',NULL),(1991,482,'random','1',NULL),(1992,483,'name','Ví dụ câu hỏi chọn',NULL),(1993,483,'tags','cơ bản; ví dụ; chọn',NULL),(1994,483,'multichoice','1',NULL),(1995,483,'random','1',NULL),(1996,484,'name','Ví dụ câu hỏi chọn',NULL),(1997,484,'tags','cơ bản; ví dụ; chọn',NULL),(1998,484,'multichoice','1',NULL),(1999,484,'random','1',NULL),(2000,485,'name','Ví dụ câu hỏi chọn',NULL),(2001,485,'tags','cơ bản; ví dụ; chọn',NULL),(2002,485,'multichoice','1',NULL),(2003,485,'random','1',NULL),(2004,486,'name','Ví dụ câu hỏi chọn',NULL),(2005,486,'tags','cơ bản; ví dụ; chọn',NULL),(2006,486,'multichoice','1',NULL),(2007,486,'random','1',NULL),(2008,487,'name','Ví dụ câu hỏi chọn',NULL),(2009,487,'tags','cơ bản; ví dụ; chọn',NULL),(2010,487,'multichoice','1',NULL),(2011,487,'random','1',NULL),(2012,488,'name','Ví dụ câu hỏi chọn',NULL),(2013,488,'tags','cơ bản; ví dụ; chọn',NULL),(2014,488,'multichoice','1',NULL),(2015,488,'random','1',NULL),(2016,489,'name','Ví dụ câu hỏi chọn',NULL),(2017,489,'tags','cơ bản; ví dụ; chọn',NULL),(2018,489,'multichoice','1',NULL),(2019,489,'random','1',NULL),(2020,490,'name','Ví dụ câu hỏi chọn',NULL),(2021,490,'tags','cơ bản; ví dụ; chọn',NULL),(2022,490,'multichoice','1',NULL),(2023,490,'random','1',NULL),(2024,491,'name','Ví dụ câu hỏi chọn',NULL),(2025,491,'tags','cơ bản; ví dụ; chọn',NULL),(2026,491,'multichoice','1',NULL),(2027,491,'random','1',NULL),(2028,492,'name','Ví dụ câu hỏi chọn',NULL),(2029,492,'tags','cơ bản; ví dụ; chọn',NULL),(2030,492,'multichoice','1',NULL),(2031,492,'random','1',NULL),(2032,493,'name','Ví dụ câu hỏi chọn',NULL),(2033,493,'tags','cơ bản; ví dụ; chọn',NULL),(2034,493,'multichoice','1',NULL),(2035,493,'random','1',NULL),(2036,494,'name','Ví dụ câu hỏi chọn',NULL),(2037,494,'tags','cơ bản; ví dụ; chọn',NULL),(2038,494,'multichoice','1',NULL),(2039,494,'random','1',NULL),(2040,495,'name','Ví dụ câu hỏi chọn',NULL),(2041,495,'tags','cơ bản; ví dụ; chọn',NULL),(2042,495,'multichoice','1',NULL),(2043,495,'random','1',NULL),(2044,496,'name','Ví dụ câu hỏi chọn',NULL),(2045,496,'tags','cơ bản; ví dụ; chọn',NULL),(2046,496,'multichoice','1',NULL),(2047,496,'random','1',NULL),(2048,497,'name','Ví dụ câu hỏi chọn',NULL),(2049,497,'tags','cơ bản; ví dụ; chọn',NULL),(2050,497,'multichoice','1',NULL),(2051,497,'random','1',NULL),(2052,498,'name','Ví dụ câu hỏi chọn',NULL),(2053,498,'tags','cơ bản; ví dụ; chọn',NULL),(2054,498,'multichoice','1',NULL),(2055,498,'random','1',NULL),(2056,499,'name','Ví dụ câu hỏi chọn',NULL),(2057,499,'tags','cơ bản; ví dụ; chọn',NULL),(2058,499,'multichoice','1',NULL),(2059,499,'random','1',NULL),(2060,500,'name','Ví dụ câu hỏi chọn',NULL),(2061,500,'tags','cơ bản; ví dụ; chọn',NULL),(2062,500,'multichoice','1',NULL),(2063,500,'random','1',NULL),(2064,501,'name','Ví dụ câu hỏi chọn',NULL),(2065,501,'tags','cơ bản; ví dụ; chọn',NULL),(2066,501,'multichoice','1',NULL),(2067,501,'random','1',NULL),(2068,502,'name','Ví dụ câu hỏi chọn',NULL),(2069,502,'tags','cơ bản; ví dụ; chọn',NULL),(2070,502,'multichoice','1',NULL),(2071,502,'random','1',NULL),(2072,503,'name','Ví dụ câu hỏi chọn',NULL),(2073,503,'tags','cơ bản; ví dụ; chọn',NULL),(2074,503,'multichoice','1',NULL),(2075,503,'random','1',NULL),(2076,504,'name','Ví dụ câu hỏi chọn',NULL),(2077,504,'tags','cơ bản; ví dụ; chọn',NULL),(2078,504,'multichoice','1',NULL),(2079,504,'random','1',NULL),(2080,505,'name','Ví dụ câu hỏi chọn',NULL),(2081,505,'tags','cơ bản; ví dụ; chọn',NULL),(2082,505,'multichoice','1',NULL),(2083,505,'random','1',NULL),(2084,506,'name','Ví dụ câu hỏi chọn',NULL),(2085,506,'tags','cơ bản; ví dụ; chọn',NULL),(2086,506,'multichoice','1',NULL),(2087,506,'random','1',NULL),(2088,507,'name','Ví dụ câu hỏi chọn',NULL),(2089,507,'tags','cơ bản; ví dụ; chọn',NULL),(2090,507,'multichoice','1',NULL),(2091,507,'random','1',NULL),(2092,508,'name','Ví dụ câu hỏi chọn',NULL),(2093,508,'tags','cơ bản; ví dụ; chọn',NULL),(2094,508,'multichoice','1',NULL),(2095,508,'random','1',NULL),(2096,509,'name','Ví dụ câu hỏi chọn',NULL),(2097,509,'tags','cơ bản; ví dụ; chọn',NULL),(2098,509,'multichoice','1',NULL),(2099,509,'random','1',NULL),(2100,510,'name','Ví dụ câu hỏi chọn',NULL),(2101,510,'tags','cơ bản; ví dụ; chọn',NULL),(2102,510,'multichoice','1',NULL),(2103,510,'random','1',NULL),(2104,511,'name','Ví dụ câu hỏi chọn',NULL),(2105,511,'tags','cơ bản; ví dụ; chọn',NULL),(2106,511,'multichoice','1',NULL),(2107,511,'random','1',NULL),(2108,512,'name','Ví dụ câu hỏi chọn',NULL),(2109,512,'tags','cơ bản; ví dụ; chọn',NULL),(2110,512,'multichoice','1',NULL),(2111,512,'random','1',NULL),(2112,513,'name','Ví dụ câu hỏi chọn',NULL),(2113,513,'tags','cơ bản; ví dụ; chọn',NULL),(2114,513,'multichoice','1',NULL),(2115,513,'random','1',NULL),(2116,514,'name','Ví dụ câu hỏi chọn',NULL),(2117,514,'tags','cơ bản; ví dụ; chọn',NULL),(2118,514,'multichoice','1',NULL),(2119,514,'random','1',NULL),(2120,515,'name','Ví dụ câu hỏi chọn',NULL),(2121,515,'tags','cơ bản; ví dụ; chọn',NULL),(2122,515,'multichoice','1',NULL),(2123,515,'random','1',NULL),(2124,516,'name','Ví dụ câu hỏi chọn',NULL),(2125,516,'tags','cơ bản; ví dụ; chọn',NULL),(2126,516,'multichoice','1',NULL),(2127,516,'random','1',NULL),(2128,517,'name','Ví dụ câu hỏi chọn',NULL),(2129,517,'tags','cơ bản; ví dụ; chọn',NULL),(2130,517,'multichoice','1',NULL),(2131,517,'random','1',NULL),(2132,518,'name','Ví dụ câu hỏi chọn',NULL),(2133,518,'tags','cơ bản; ví dụ; chọn',NULL),(2134,518,'multichoice','1',NULL),(2135,518,'random','1',NULL),(2136,519,'name','Ví dụ câu hỏi chọn',NULL),(2137,519,'tags','cơ bản; ví dụ; chọn',NULL),(2138,519,'multichoice','1',NULL),(2139,519,'random','1',NULL),(2140,520,'name','Ví dụ câu hỏi chọn',NULL),(2141,520,'tags','cơ bản; ví dụ; chọn',NULL),(2142,520,'multichoice','1',NULL),(2143,520,'random','1',NULL),(2144,521,'name','Ví dụ câu hỏi chọn',NULL),(2145,521,'tags','cơ bản; ví dụ; chọn',NULL),(2146,521,'multichoice','1',NULL),(2147,521,'random','1',NULL),(2148,522,'name','Ví dụ câu hỏi chọn',NULL),(2149,522,'tags','cơ bản; ví dụ; chọn',NULL),(2150,522,'multichoice','1',NULL),(2151,522,'random','1',NULL),(2152,523,'name','Ví dụ câu hỏi chọn',NULL),(2153,523,'tags','cơ bản; ví dụ; chọn',NULL),(2154,523,'multichoice','1',NULL),(2155,523,'random','1',NULL),(2156,524,'name','Ví dụ câu hỏi chọn',NULL),(2157,524,'tags','cơ bản; ví dụ; chọn',NULL),(2158,524,'multichoice','1',NULL),(2159,524,'random','1',NULL),(2160,525,'name','Ví dụ câu hỏi chọn',NULL),(2161,525,'tags','cơ bản; ví dụ; chọn',NULL),(2162,525,'multichoice','1',NULL),(2163,525,'random','1',NULL),(2164,526,'name','Ví dụ câu hỏi chọn',NULL),(2165,526,'tags','cơ bản; ví dụ; chọn',NULL),(2166,526,'multichoice','1',NULL),(2167,526,'random','1',NULL),(2168,527,'name','Ví dụ câu hỏi chọn',NULL),(2169,527,'tags','cơ bản; ví dụ; chọn',NULL),(2170,527,'multichoice','1',NULL),(2171,527,'random','1',NULL),(2172,528,'name','Ví dụ câu hỏi chọn',NULL),(2173,528,'tags','cơ bản; ví dụ; chọn',NULL),(2174,528,'multichoice','1',NULL),(2175,528,'random','1',NULL),(2176,529,'name','Ví dụ câu hỏi chọn',NULL),(2177,529,'tags','cơ bản; ví dụ; chọn',NULL),(2178,529,'multichoice','1',NULL),(2179,529,'random','1',NULL),(2184,531,'name','Ví dụ câu hỏi chọn',NULL),(2185,531,'tags','cơ bản; ví dụ; chọn',NULL),(2186,531,'multichoice','1',NULL),(2187,531,'random','1',NULL),(2188,532,'name','Ví dụ câu hỏi chọn',NULL),(2189,532,'tags','cơ bản; ví dụ; chọn',NULL),(2190,532,'multichoice','1',NULL),(2191,532,'random','1',NULL),(2192,533,'name','Ví dụ câu hỏi chọn',NULL),(2193,533,'tags','cơ bản; ví dụ; chọn',NULL),(2194,533,'multichoice','1',NULL),(2195,533,'random','1',NULL),(2200,535,'name','Ví dụ câu hỏi chọn',NULL),(2201,535,'tags','cơ bản; ví dụ; chọn',NULL),(2202,535,'multichoice','1',NULL),(2203,535,'random','1',NULL),(2204,536,'name','Ví dụ câu hỏi chọn',NULL),(2205,536,'tags','cơ bản; ví dụ; chọn',NULL),(2206,536,'multichoice','1',NULL),(2207,536,'random','1',NULL),(2208,537,'name','Ví dụ câu hỏi chọn',NULL),(2209,537,'tags','cơ bản; ví dụ; chọn',NULL),(2210,537,'multichoice','1',NULL),(2211,537,'random','1',NULL),(2212,538,'name','Ví dụ câu hỏi chọn',NULL),(2213,538,'tags','cơ bản; ví dụ; chọn',NULL),(2214,538,'multichoice','1',NULL),(2215,538,'random','1',NULL),(2216,539,'name','Ví dụ câu hỏi chọn',NULL),(2217,539,'tags','cơ bản; ví dụ; chọn',NULL),(2218,539,'multichoice','1',NULL),(2219,539,'random','1',NULL),(2220,540,'name','Ví dụ câu hỏi chọn',NULL),(2221,540,'tags','cơ bản; ví dụ; chọn',NULL),(2222,540,'multichoice','1',NULL),(2223,540,'random','1',NULL),(2224,541,'name','Ví dụ câu hỏi chọn',NULL),(2225,541,'tags','cơ bản; ví dụ; chọn',NULL),(2226,541,'multichoice','1',NULL),(2227,541,'random','1',NULL),(2228,542,'name','Ví dụ câu hỏi chọn',NULL),(2229,542,'tags','cơ bản; ví dụ; chọn',NULL),(2230,542,'multichoice','1',NULL),(2231,542,'random','1',NULL),(2232,543,'name','Ví dụ câu hỏi chọn',NULL),(2233,543,'tags','cơ bản; ví dụ; chọn',NULL),(2234,543,'multichoice','1',NULL),(2235,543,'random','1',NULL),(2236,544,'name','Ví dụ câu hỏi chọn',NULL),(2237,544,'tags','cơ bản; ví dụ; chọn',NULL),(2238,544,'multichoice','1',NULL),(2239,544,'random','1',NULL),(2240,545,'name','Ví dụ câu hỏi chọn',NULL),(2241,545,'tags','cơ bản; ví dụ; chọn',NULL),(2242,545,'multichoice','1',NULL),(2243,545,'random','1',NULL),(2244,546,'name','Ví dụ câu hỏi chọn',NULL),(2245,546,'tags','cơ bản; ví dụ; chọn',NULL),(2246,546,'multichoice','1',NULL),(2247,546,'random','1',NULL),(2248,547,'name','Ví dụ câu hỏi chọn',NULL),(2249,547,'tags','cơ bản; ví dụ; chọn',NULL),(2250,547,'multichoice','1',NULL),(2251,547,'random','1',NULL),(2252,548,'name','Ví dụ câu hỏi chọn',NULL),(2253,548,'tags','cơ bản; ví dụ; chọn',NULL),(2254,548,'multichoice','1',NULL),(2255,548,'random','1',NULL),(2256,549,'name','Ví dụ câu hỏi chọn',NULL),(2257,549,'tags','cơ bản; ví dụ; chọn',NULL),(2258,549,'multichoice','1',NULL),(2259,549,'random','1',NULL),(2260,550,'name','Ví dụ câu hỏi chọn',NULL),(2261,550,'tags','cơ bản; ví dụ; chọn',NULL),(2262,550,'multichoice','1',NULL),(2263,550,'random','1',NULL),(2264,551,'name','Ví dụ câu hỏi chọn',NULL),(2265,551,'tags','cơ bản; ví dụ; chọn',NULL),(2266,551,'multichoice','1',NULL),(2267,551,'random','1',NULL),(2268,552,'name','Ví dụ câu hỏi chọn',NULL),(2269,552,'tags','cơ bản; ví dụ; chọn',NULL),(2270,552,'multichoice','1',NULL),(2271,552,'random','1',NULL),(2272,553,'name','Ví dụ câu hỏi chọn',NULL),(2273,553,'tags','cơ bản; ví dụ; chọn',NULL),(2274,553,'multichoice','1',NULL),(2275,553,'random','1',NULL),(2276,554,'name','Ví dụ câu hỏi chọn',NULL),(2277,554,'tags','cơ bản; ví dụ; chọn',NULL),(2278,554,'multichoice','1',NULL),(2279,554,'random','1',NULL),(2284,556,'name','Ví dụ câu hỏi chọn',NULL),(2285,556,'tags','cơ bản; ví dụ; chọn',NULL),(2286,556,'multichoice','1',NULL),(2287,556,'random','1',NULL),(2288,557,'name','Ví dụ câu hỏi chọn',NULL),(2289,557,'tags','cơ bản; ví dụ; chọn',NULL),(2290,557,'multichoice','1',NULL),(2291,557,'random','1',NULL),(2292,558,'name','Ví dụ câu hỏi chọn',NULL),(2293,558,'tags','cơ bản; ví dụ; chọn',NULL),(2294,558,'multichoice','1',NULL),(2295,558,'random','1',NULL),(2296,559,'name','Ví dụ câu hỏi chọn',NULL),(2297,559,'tags','cơ bản; ví dụ; chọn',NULL),(2298,559,'multichoice','1',NULL),(2299,559,'random','1',NULL),(2300,560,'name','Ví dụ câu hỏi chọn',NULL),(2301,560,'tags','cơ bản; ví dụ; chọn',NULL),(2302,560,'multichoice','1',NULL),(2303,560,'random','1',NULL),(2304,561,'name','Ví dụ câu hỏi chọn',NULL),(2305,561,'tags','cơ bản; ví dụ; chọn',NULL),(2306,561,'multichoice','1',NULL),(2307,561,'random','1',NULL),(2308,562,'name','Ví dụ câu hỏi chọn',NULL),(2309,562,'tags','cơ bản; ví dụ; chọn',NULL),(2310,562,'multichoice','1',NULL),(2311,562,'random','1',NULL),(2312,563,'name','Ví dụ câu hỏi chọn',NULL),(2313,563,'tags','cơ bản; ví dụ; chọn',NULL),(2314,563,'multichoice','1',NULL),(2315,563,'random','1',NULL),(2316,564,'name','Ví dụ câu hỏi chọn',NULL),(2317,564,'tags','cơ bản; ví dụ; chọn',NULL),(2318,564,'multichoice','1',NULL),(2319,564,'random','1',NULL),(2320,565,'name','Ví dụ câu hỏi chọn',NULL),(2321,565,'tags','cơ bản; ví dụ; chọn',NULL),(2322,565,'multichoice','1',NULL),(2323,565,'random','1',NULL),(2324,566,'name','Ví dụ câu hỏi chọn',NULL),(2325,566,'tags','cơ bản; ví dụ; chọn',NULL),(2326,566,'multichoice','1',NULL),(2327,566,'random','1',NULL),(2328,567,'name','Ví dụ câu hỏi chọn',NULL),(2329,567,'tags','cơ bản; ví dụ; chọn',NULL),(2330,567,'multichoice','1',NULL),(2331,567,'random','1',NULL),(2332,568,'name','Ví dụ câu hỏi chọn',NULL),(2333,568,'tags','cơ bản; ví dụ; chọn',NULL),(2334,568,'multichoice','1',NULL),(2335,568,'random','1',NULL),(2336,569,'name','Ví dụ câu hỏi chọn',NULL),(2337,569,'tags','cơ bản; ví dụ; chọn',NULL),(2338,569,'multichoice','1',NULL),(2339,569,'random','1',NULL),(2340,570,'name','Ví dụ câu hỏi chọn',NULL),(2341,570,'tags','cơ bản; ví dụ; chọn',NULL),(2342,570,'multichoice','1',NULL),(2343,570,'random','1',NULL),(2344,571,'name','Ví dụ câu hỏi chọn',NULL),(2345,571,'tags','cơ bản; ví dụ; chọn',NULL),(2346,571,'multichoice','1',NULL),(2347,571,'random','1',NULL),(2348,572,'name','Ví dụ câu hỏi chọn',NULL),(2349,572,'tags','cơ bản; ví dụ; chọn',NULL),(2350,572,'multichoice','1',NULL),(2351,572,'random','1',NULL),(2352,573,'name','Ví dụ câu hỏi chọn',NULL),(2353,573,'tags','cơ bản; ví dụ; chọn',NULL),(2354,573,'multichoice','1',NULL),(2355,573,'random','1',NULL),(2356,574,'name','Ví dụ câu hỏi chọn',NULL),(2357,574,'tags','cơ bản; ví dụ; chọn',NULL),(2358,574,'multichoice','1',NULL),(2359,574,'random','1',NULL),(2360,575,'name','Ví dụ câu hỏi chọn',NULL),(2361,575,'tags','cơ bản; ví dụ; chọn',NULL),(2362,575,'multichoice','1',NULL),(2363,575,'random','1',NULL),(2364,576,'name','Ví dụ câu hỏi chọn',NULL),(2365,576,'tags','cơ bản; ví dụ; chọn',NULL),(2366,576,'multichoice','1',NULL),(2367,576,'random','1',NULL),(2368,577,'name','Ví dụ câu hỏi chọn',NULL),(2369,577,'tags','cơ bản; ví dụ; chọn',NULL),(2370,577,'multichoice','1',NULL),(2371,577,'random','1',NULL),(2372,578,'name','Ví dụ câu hỏi chọn',NULL),(2373,578,'tags','cơ bản; ví dụ; chọn',NULL),(2374,578,'multichoice','1',NULL),(2375,578,'random','1',NULL),(2376,579,'name','Ví dụ câu hỏi chọn',NULL),(2377,579,'tags','cơ bản; ví dụ; chọn',NULL),(2378,579,'multichoice','1',NULL),(2379,579,'random','1',NULL),(2380,580,'name','Ví dụ câu hỏi chọn',NULL),(2381,580,'tags','cơ bản; ví dụ; chọn',NULL),(2382,580,'multichoice','1',NULL),(2383,580,'random','1',NULL),(2384,581,'name','Ví dụ câu hỏi chọn',NULL),(2385,581,'tags','cơ bản; ví dụ; chọn',NULL),(2386,581,'multichoice','1',NULL),(2387,581,'random','1',NULL),(2388,582,'name','Ví dụ câu hỏi chọn',NULL),(2389,582,'tags','cơ bản; ví dụ; chọn',NULL),(2390,582,'multichoice','1',NULL),(2391,582,'random','1',NULL),(2392,583,'name','Ví dụ câu hỏi chọn',NULL),(2393,583,'tags','cơ bản; ví dụ; chọn',NULL),(2394,583,'multichoice','1',NULL),(2395,583,'random','1',NULL),(2396,584,'name','Ví dụ câu hỏi chọn',NULL),(2397,584,'tags','cơ bản; ví dụ; chọn',NULL),(2398,584,'multichoice','1',NULL),(2399,584,'random','1',NULL),(2400,585,'name','Ví dụ câu hỏi chọn',NULL),(2401,585,'tags','cơ bản; ví dụ; chọn',NULL),(2402,585,'multichoice','1',NULL),(2403,585,'random','1',NULL),(2404,586,'name','Ví dụ câu hỏi chọn',NULL),(2405,586,'tags','cơ bản; ví dụ; chọn',NULL),(2406,586,'multichoice','1',NULL),(2407,586,'random','1',NULL),(2408,587,'name','Ví dụ câu hỏi chọn',NULL),(2409,587,'tags','cơ bản; ví dụ; chọn',NULL),(2410,587,'multichoice','1',NULL),(2411,587,'random','1',NULL),(2412,588,'name','Ví dụ câu hỏi chọn',NULL),(2413,588,'tags','cơ bản; ví dụ; chọn',NULL),(2414,588,'multichoice','1',NULL),(2415,588,'random','1',NULL),(2416,589,'name','Ví dụ câu hỏi chọn',NULL),(2417,589,'tags','cơ bản; ví dụ; chọn',NULL),(2418,589,'multichoice','1',NULL),(2419,589,'random','1',NULL),(2420,590,'name','Ví dụ câu hỏi chọn',NULL),(2421,590,'tags','cơ bản; ví dụ; chọn',NULL),(2422,590,'multichoice','1',NULL),(2423,590,'random','1',NULL),(2424,591,'name','Ví dụ câu hỏi chọn',NULL),(2425,591,'tags','cơ bản; ví dụ; chọn',NULL),(2426,591,'multichoice','1',NULL),(2427,591,'random','1',NULL),(2428,592,'name','Ví dụ câu hỏi chọn',NULL),(2429,592,'tags','cơ bản; ví dụ; chọn',NULL),(2430,592,'multichoice','1',NULL),(2431,592,'random','1',NULL),(2432,593,'name','Ví dụ câu hỏi chọn',NULL),(2433,593,'tags','cơ bản; ví dụ; chọn',NULL),(2434,593,'multichoice','1',NULL),(2435,593,'random','1',NULL),(2436,594,'name','Ví dụ câu hỏi chọn',NULL),(2437,594,'tags','cơ bản; ví dụ; chọn',NULL),(2438,594,'multichoice','1',NULL),(2439,594,'random','1',NULL),(2440,595,'name','Ví dụ câu hỏi chọn',NULL),(2441,595,'tags','cơ bản; ví dụ; chọn',NULL),(2442,595,'multichoice','1',NULL),(2443,595,'random','1',NULL),(2444,596,'name','Ví dụ câu hỏi chọn',NULL),(2445,596,'tags','cơ bản; ví dụ; chọn',NULL),(2446,596,'multichoice','1',NULL),(2447,596,'random','1',NULL),(2448,597,'name','Ví dụ câu hỏi chọn',NULL),(2449,597,'tags','cơ bản; ví dụ; chọn',NULL),(2450,597,'multichoice','1',NULL),(2451,597,'random','1',NULL),(2452,598,'name','Ví dụ câu hỏi chọn',NULL),(2453,598,'tags','cơ bản; ví dụ; chọn',NULL),(2454,598,'multichoice','1',NULL),(2455,598,'random','1',NULL),(2456,599,'name','Ví dụ câu hỏi chọn',NULL),(2457,599,'tags','cơ bản; ví dụ; chọn',NULL),(2458,599,'multichoice','1',NULL),(2459,599,'random','1',NULL),(2460,600,'name','Ví dụ câu hỏi chọn',NULL),(2461,600,'tags','cơ bản; ví dụ; chọn',NULL),(2462,600,'multichoice','1',NULL),(2463,600,'random','1',NULL),(2464,601,'name','Ví dụ câu hỏi chọn',NULL),(2465,601,'tags','cơ bản; ví dụ; chọn',NULL),(2466,601,'multichoice','1',NULL),(2467,601,'random','1',NULL),(2468,602,'name','Ví dụ câu hỏi chọn',NULL),(2469,602,'tags','cơ bản; ví dụ; chọn',NULL),(2470,602,'multichoice','1',NULL),(2471,602,'random','1',NULL),(2472,603,'name','Ví dụ câu hỏi chọn',NULL),(2473,603,'tags','cơ bản; ví dụ; chọn',NULL),(2474,603,'multichoice','1',NULL),(2475,603,'random','1',NULL),(2476,604,'name','Ví dụ câu hỏi chọn',NULL),(2477,604,'tags','cơ bản; ví dụ; chọn',NULL),(2478,604,'multichoice','1',NULL),(2479,604,'random','1',NULL),(2480,605,'name','Ví dụ câu hỏi chọn',NULL),(2481,605,'tags','cơ bản; ví dụ; chọn',NULL),(2482,605,'multichoice','1',NULL),(2483,605,'random','1',NULL),(2484,606,'name','Ví dụ câu hỏi chọn',NULL),(2485,606,'tags','cơ bản; ví dụ; chọn',NULL),(2486,606,'multichoice','1',NULL),(2487,606,'random','1',NULL),(2488,607,'name','Ví dụ câu hỏi chọn',NULL),(2489,607,'tags','cơ bản; ví dụ; chọn',NULL),(2490,607,'multichoice','1',NULL),(2491,607,'random','1',NULL),(2492,608,'name','Ví dụ câu hỏi chọn',NULL),(2493,608,'tags','cơ bản; ví dụ; chọn',NULL),(2494,608,'multichoice','1',NULL),(2495,608,'random','1',NULL),(2496,609,'name','Ví dụ câu hỏi chọn',NULL),(2497,609,'tags','cơ bản; ví dụ; chọn',NULL),(2498,609,'multichoice','1',NULL),(2499,609,'random','1',NULL),(2500,610,'name','Ví dụ câu hỏi chọn',NULL),(2501,610,'tags','cơ bản; ví dụ; chọn',NULL),(2502,610,'multichoice','1',NULL),(2503,610,'random','1',NULL),(2504,611,'name','Ví dụ câu hỏi chọn',NULL),(2505,611,'tags','cơ bản; ví dụ; chọn',NULL),(2506,611,'multichoice','1',NULL),(2507,611,'random','1',NULL),(2508,612,'name','Ví dụ câu hỏi chọn',NULL),(2509,612,'tags','cơ bản; ví dụ; chọn',NULL),(2510,612,'multichoice','1',NULL),(2511,612,'random','1',NULL),(2512,613,'name','Ví dụ câu hỏi chọn',NULL),(2513,613,'tags','cơ bản; ví dụ; chọn',NULL),(2514,613,'multichoice','1',NULL),(2515,613,'random','1',NULL),(2516,614,'name','Ví dụ câu hỏi chọn',NULL),(2517,614,'tags','cơ bản; ví dụ; chọn',NULL),(2518,614,'multichoice','1',NULL),(2519,614,'random','1',NULL),(2520,615,'name','Ví dụ câu hỏi chọn',NULL),(2521,615,'tags','cơ bản; ví dụ; chọn',NULL),(2522,615,'multichoice','1',NULL),(2523,615,'random','1',NULL),(2524,616,'name','Ví dụ câu hỏi chọn',NULL),(2525,616,'tags','cơ bản; ví dụ; chọn',NULL),(2526,616,'multichoice','1',NULL),(2527,616,'random','1',NULL),(2528,617,'name','Ví dụ câu hỏi chọn',NULL),(2529,617,'tags','cơ bản; ví dụ; chọn',NULL),(2530,617,'multichoice','1',NULL),(2531,617,'random','1',NULL),(2532,618,'name','Ví dụ câu hỏi chọn',NULL),(2533,618,'tags','cơ bản; ví dụ; chọn',NULL),(2534,618,'multichoice','1',NULL),(2535,618,'random','1',NULL),(2536,619,'name','Ví dụ câu hỏi chọn',NULL),(2537,619,'tags','cơ bản; ví dụ; chọn',NULL),(2538,619,'multichoice','1',NULL),(2539,619,'random','1',NULL),(2540,620,'name','Ví dụ câu hỏi chọn',NULL),(2541,620,'tags','cơ bản; ví dụ; chọn',NULL),(2542,620,'multichoice','1',NULL),(2543,620,'random','1',NULL),(2544,621,'name','Ví dụ câu hỏi chọn',NULL),(2545,621,'tags','cơ bản; ví dụ; chọn',NULL),(2546,621,'multichoice','1',NULL),(2547,621,'random','1',NULL),(2548,622,'name','Ví dụ câu hỏi chọn',NULL),(2549,622,'tags','cơ bản; ví dụ; chọn',NULL),(2550,622,'multichoice','1',NULL),(2551,622,'random','1',NULL),(2552,623,'name','Ví dụ câu hỏi chọn',NULL),(2553,623,'tags','cơ bản; ví dụ; chọn',NULL),(2554,623,'multichoice','1',NULL),(2555,623,'random','1',NULL),(2556,624,'name','Ví dụ câu hỏi chọn',NULL),(2557,624,'tags','cơ bản; ví dụ; chọn',NULL),(2558,624,'multichoice','1',NULL),(2559,624,'random','1',NULL),(2560,625,'name','Ví dụ câu hỏi chọn',NULL),(2561,625,'tags','cơ bản; ví dụ; chọn',NULL),(2562,625,'multichoice','1',NULL),(2563,625,'random','1',NULL),(2564,626,'name','Ví dụ câu hỏi chọn',NULL),(2565,626,'tags','cơ bản; ví dụ; chọn',NULL),(2566,626,'multichoice','1',NULL),(2567,626,'random','1',NULL),(2568,627,'name','Ví dụ câu hỏi chọn',NULL),(2569,627,'tags','cơ bản; ví dụ; chọn',NULL),(2570,627,'multichoice','1',NULL),(2571,627,'random','1',NULL),(2572,628,'name','Ví dụ câu hỏi chọn',NULL),(2573,628,'tags','cơ bản; ví dụ; chọn',NULL),(2574,628,'multichoice','1',NULL),(2575,628,'random','1',NULL),(2576,629,'name','Ví dụ câu hỏi chọn',NULL),(2577,629,'tags','cơ bản; ví dụ; chọn',NULL),(2578,629,'multichoice','1',NULL),(2579,629,'random','1',NULL),(2580,630,'name','Ví dụ câu hỏi chọn',NULL),(2581,630,'tags','cơ bản; ví dụ; chọn',NULL),(2582,630,'multichoice','1',NULL),(2583,630,'random','1',NULL),(2584,631,'name','Ví dụ câu hỏi chọn',NULL),(2585,631,'tags','cơ bản; ví dụ; chọn',NULL),(2586,631,'multichoice','1',NULL),(2587,631,'random','1',NULL),(2588,632,'name','Ví dụ câu hỏi chọn',NULL),(2589,632,'tags','cơ bản; ví dụ; chọn',NULL),(2590,632,'multichoice','1',NULL),(2591,632,'random','1',NULL),(2592,633,'name','Ví dụ câu hỏi chọn',NULL),(2593,633,'tags','cơ bản; ví dụ; chọn',NULL),(2594,633,'multichoice','1',NULL),(2595,633,'random','1',NULL),(2596,634,'name','Ví dụ câu hỏi chọn',NULL),(2597,634,'tags','cơ bản; ví dụ; chọn',NULL),(2598,634,'multichoice','1',NULL),(2599,634,'random','1',NULL),(2600,635,'name','Ví dụ câu hỏi chọn',NULL),(2601,635,'tags','cơ bản; ví dụ; chọn',NULL),(2602,635,'multichoice','1',NULL),(2603,635,'random','1',NULL),(2604,636,'name','Ví dụ câu hỏi chọn',NULL),(2605,636,'tags','cơ bản; ví dụ; chọn',NULL),(2606,636,'multichoice','1',NULL),(2607,636,'random','1',NULL),(2608,637,'name','Ví dụ câu hỏi chọn',NULL),(2609,637,'tags','cơ bản; ví dụ; chọn',NULL),(2610,637,'multichoice','1',NULL),(2611,637,'random','1',NULL),(2612,638,'name','Ví dụ câu hỏi chọn',NULL),(2613,638,'tags','cơ bản; ví dụ; chọn',NULL),(2614,638,'multichoice','1',NULL),(2615,638,'random','1',NULL),(2616,639,'name','Ví dụ câu hỏi chọn',NULL),(2617,639,'tags','cơ bản; ví dụ; chọn',NULL),(2618,639,'multichoice','1',NULL),(2619,639,'random','1',NULL),(2620,640,'name','Ví dụ câu hỏi chọn',NULL),(2621,640,'tags','cơ bản; ví dụ; chọn',NULL),(2622,640,'multichoice','1',NULL),(2623,640,'random','1',NULL),(2624,641,'name','Ví dụ câu hỏi chọn',NULL),(2625,641,'tags','cơ bản; ví dụ; chọn',NULL),(2626,641,'multichoice','1',NULL),(2627,641,'random','1',NULL),(2628,642,'name','Ví dụ câu hỏi chọn',NULL),(2629,642,'tags','cơ bản; ví dụ; chọn',NULL),(2630,642,'multichoice','1',NULL),(2631,642,'random','1',NULL),(2632,643,'name','Ví dụ câu hỏi chọn',NULL),(2633,643,'tags','cơ bản; ví dụ; chọn',NULL),(2634,643,'multichoice','1',NULL),(2635,643,'random','1',NULL),(2636,644,'name','Ví dụ câu hỏi chọn',NULL),(2637,644,'tags','cơ bản; ví dụ; chọn',NULL),(2638,644,'multichoice','1',NULL),(2639,644,'random','1',NULL),(2640,645,'name','Ví dụ câu hỏi chọn',NULL),(2641,645,'tags','cơ bản; ví dụ; chọn',NULL),(2642,645,'multichoice','1',NULL),(2643,645,'random','1',NULL),(2644,646,'name','Ví dụ câu hỏi chọn',NULL),(2645,646,'tags','cơ bản; ví dụ; chọn',NULL),(2646,646,'multichoice','1',NULL),(2647,646,'random','1',NULL),(2648,647,'name','Ví dụ câu hỏi chọn',NULL),(2649,647,'tags','cơ bản; ví dụ; chọn',NULL),(2650,647,'multichoice','1',NULL),(2651,647,'random','1',NULL),(2652,648,'name','Ví dụ câu hỏi chọn',NULL),(2653,648,'tags','cơ bản; ví dụ; chọn',NULL),(2654,648,'multichoice','1',NULL),(2655,648,'random','1',NULL),(2656,649,'name','Ví dụ câu hỏi chọn',NULL),(2657,649,'tags','cơ bản; ví dụ; chọn',NULL),(2658,649,'multichoice','1',NULL),(2659,649,'random','1',NULL),(2660,650,'name','Ví dụ câu hỏi chọn',NULL),(2661,650,'tags','cơ bản; ví dụ; chọn',NULL),(2662,650,'multichoice','1',NULL),(2663,650,'random','1',NULL),(2664,651,'name','Ví dụ câu hỏi chọn',NULL),(2665,651,'tags','cơ bản; ví dụ; chọn',NULL),(2666,651,'multichoice','1',NULL),(2667,651,'random','1',NULL),(2668,652,'name','Ví dụ câu hỏi chọn',NULL),(2669,652,'tags','cơ bản; ví dụ; chọn',NULL),(2670,652,'multichoice','1',NULL),(2671,652,'random','1',NULL),(2672,653,'name','Ví dụ câu hỏi chọn',NULL),(2673,653,'tags','cơ bản; ví dụ; chọn',NULL),(2674,653,'multichoice','1',NULL),(2675,653,'random','1',NULL),(2676,654,'name','Ví dụ câu hỏi chọn',NULL),(2677,654,'tags','cơ bản; ví dụ; chọn',NULL),(2678,654,'multichoice','1',NULL),(2679,654,'random','1',NULL),(2680,655,'name','Ví dụ câu hỏi chọn',NULL),(2681,655,'tags','cơ bản; ví dụ; chọn',NULL),(2682,655,'multichoice','1',NULL),(2683,655,'random','1',NULL),(2684,656,'name','Ví dụ câu hỏi chọn',NULL),(2685,656,'tags','cơ bản; ví dụ; chọn',NULL),(2686,656,'multichoice','1',NULL),(2687,656,'random','1',NULL),(2688,657,'name','Ví dụ câu hỏi chọn',NULL),(2689,657,'tags','cơ bản; ví dụ; chọn',NULL),(2690,657,'multichoice','1',NULL),(2691,657,'random','1',NULL),(2692,658,'name','Ví dụ câu hỏi chọn',NULL),(2693,658,'tags','cơ bản; ví dụ; chọn',NULL),(2694,658,'multichoice','1',NULL),(2695,658,'random','1',NULL),(2696,659,'name','Ví dụ câu hỏi chọn',NULL),(2697,659,'tags','cơ bản; ví dụ; chọn',NULL),(2698,659,'multichoice','1',NULL),(2699,659,'random','1',NULL),(2700,660,'name','Ví dụ câu hỏi chọn',NULL),(2701,660,'tags','cơ bản; ví dụ; chọn',NULL),(2702,660,'multichoice','1',NULL),(2703,660,'random','1',NULL),(2704,661,'name','Ví dụ câu hỏi chọn',NULL),(2705,661,'tags','cơ bản; ví dụ; chọn',NULL),(2706,661,'multichoice','1',NULL),(2707,661,'random','1',NULL),(2708,662,'name','Ví dụ câu hỏi chọn',NULL),(2709,662,'tags','cơ bản; ví dụ; chọn',NULL),(2710,662,'multichoice','1',NULL),(2711,662,'random','1',NULL),(2712,663,'name','Ví dụ câu hỏi chọn',NULL),(2713,663,'tags','cơ bản; ví dụ; chọn',NULL),(2714,663,'multichoice','1',NULL),(2715,663,'random','1',NULL),(2716,664,'name','Ví dụ câu hỏi chọn',NULL),(2717,664,'tags','cơ bản; ví dụ; chọn',NULL),(2718,664,'multichoice','1',NULL),(2719,664,'random','1',NULL),(2720,665,'name','Ví dụ câu hỏi chọn',NULL),(2721,665,'tags','cơ bản; ví dụ; chọn',NULL),(2722,665,'multichoice','1',NULL),(2723,665,'random','1',NULL),(2724,666,'name','Ví dụ câu hỏi chọn',NULL),(2725,666,'tags','cơ bản; ví dụ; chọn',NULL),(2726,666,'multichoice','1',NULL),(2727,666,'random','1',NULL),(2728,667,'name','Ví dụ câu hỏi chọn',NULL),(2729,667,'tags','cơ bản; ví dụ; chọn',NULL),(2730,667,'multichoice','1',NULL),(2731,667,'random','1',NULL),(2732,668,'name','Ví dụ câu hỏi chọn',NULL),(2733,668,'tags','cơ bản; ví dụ; chọn',NULL),(2734,668,'multichoice','1',NULL),(2735,668,'random','1',NULL),(2736,669,'name','Ví dụ câu hỏi chọn',NULL),(2737,669,'tags','cơ bản; ví dụ; chọn',NULL),(2738,669,'multichoice','1',NULL),(2739,669,'random','1',NULL),(2740,670,'name','Ví dụ câu hỏi chọn',NULL),(2741,670,'tags','cơ bản; ví dụ; chọn',NULL),(2742,670,'multichoice','1',NULL),(2743,670,'random','1',NULL),(2744,671,'name','Ví dụ câu hỏi chọn',NULL),(2745,671,'tags','cơ bản; ví dụ; chọn',NULL),(2746,671,'multichoice','1',NULL),(2747,671,'random','1',NULL),(2748,672,'name','Ví dụ câu hỏi chọn',NULL),(2749,672,'tags','cơ bản; ví dụ; chọn',NULL),(2750,672,'multichoice','1',NULL),(2751,672,'random','1',NULL),(2752,673,'name','Ví dụ câu hỏi chọn',NULL),(2753,673,'tags','cơ bản; ví dụ; chọn',NULL),(2754,673,'multichoice','1',NULL),(2755,673,'random','1',NULL),(2756,674,'name','Ví dụ câu hỏi chọn',NULL),(2757,674,'tags','cơ bản; ví dụ; chọn',NULL),(2758,674,'multichoice','1',NULL),(2759,674,'random','1',NULL),(2760,675,'name','Ví dụ câu hỏi chọn',NULL),(2761,675,'tags','cơ bản; ví dụ; chọn',NULL),(2762,675,'multichoice','1',NULL),(2763,675,'random','1',NULL),(2764,676,'name','Ví dụ câu hỏi chọn',NULL),(2765,676,'tags','cơ bản; ví dụ; chọn',NULL),(2766,676,'multichoice','1',NULL),(2767,676,'random','1',NULL),(2768,677,'name','Ví dụ câu hỏi chọn',NULL),(2769,677,'tags','cơ bản; ví dụ; chọn',NULL),(2770,677,'multichoice','1',NULL),(2771,677,'random','1',NULL),(2772,678,'name','Ví dụ câu hỏi chọn',NULL),(2773,678,'tags','cơ bản; ví dụ; chọn',NULL),(2774,678,'multichoice','1',NULL),(2775,678,'random','1',NULL),(2776,679,'name','Ví dụ câu hỏi chọn',NULL),(2777,679,'tags','cơ bản; ví dụ; chọn',NULL),(2778,679,'multichoice','1',NULL),(2779,679,'random','1',NULL),(2780,680,'name','Ví dụ câu hỏi chọn',NULL),(2781,680,'tags','cơ bản; ví dụ; chọn',NULL),(2782,680,'multichoice','1',NULL),(2783,680,'random','1',NULL),(2784,681,'name','Ví dụ câu hỏi chọn',NULL),(2785,681,'tags','cơ bản; ví dụ; chọn',NULL),(2786,681,'multichoice','1',NULL),(2787,681,'random','1',NULL),(2788,682,'name','Ví dụ câu hỏi chọn',NULL),(2789,682,'tags','cơ bản; ví dụ; chọn',NULL),(2790,682,'multichoice','1',NULL),(2791,682,'random','1',NULL),(2792,683,'name','Ví dụ câu hỏi chọn',NULL),(2793,683,'tags','cơ bản; ví dụ; chọn',NULL),(2794,683,'multichoice','1',NULL),(2795,683,'random','1',NULL),(2796,684,'name','Ví dụ câu hỏi chọn',NULL),(2797,684,'tags','cơ bản; ví dụ; chọn',NULL),(2798,684,'multichoice','1',NULL),(2799,684,'random','1',NULL),(2800,685,'name','Ví dụ câu hỏi chọn',NULL),(2801,685,'tags','cơ bản; ví dụ; chọn',NULL),(2802,685,'multichoice','1',NULL),(2803,685,'random','1',NULL),(2804,686,'name','Ví dụ câu hỏi chọn',NULL),(2805,686,'tags','cơ bản; ví dụ; chọn',NULL),(2806,686,'multichoice','1',NULL),(2807,686,'random','1',NULL),(2808,687,'name','Ví dụ câu hỏi chọn',NULL),(2809,687,'tags','cơ bản; ví dụ; chọn',NULL),(2810,687,'multichoice','1',NULL),(2811,687,'random','1',NULL),(2812,688,'name','Ví dụ câu hỏi chọn',NULL),(2813,688,'tags','cơ bản; ví dụ; chọn',NULL),(2814,688,'multichoice','1',NULL),(2815,688,'random','1',NULL),(2816,689,'name','Ví dụ câu hỏi chọn',NULL),(2817,689,'tags','cơ bản; ví dụ; chọn',NULL),(2818,689,'multichoice','1',NULL),(2819,689,'random','1',NULL),(2820,690,'name','Ví dụ câu hỏi chọn',NULL),(2821,690,'tags','cơ bản; ví dụ; chọn',NULL),(2822,690,'multichoice','1',NULL),(2823,690,'random','1',NULL),(2824,691,'name','Ví dụ câu hỏi chọn',NULL),(2825,691,'tags','cơ bản; ví dụ; chọn',NULL),(2826,691,'multichoice','1',NULL),(2827,691,'random','1',NULL),(2872,703,'name','Ví dụ câu hỏi chọn',NULL),(2873,703,'tags','cơ bản; ví dụ; chọn',NULL),(2874,703,'multichoice','1',NULL),(2875,703,'random','1',NULL),(2876,704,'name','Ví dụ câu hỏi chọn',NULL),(2877,704,'tags','cơ bản; ví dụ; chọn',NULL),(2878,704,'multichoice','1',NULL),(2879,704,'random','1',NULL),(2880,705,'name','Ví dụ câu hỏi chọn',NULL),(2881,705,'tags','cơ bản; ví dụ; chọn',NULL),(2882,705,'multichoice','1',NULL),(2883,705,'random','1',NULL),(2884,706,'name','Ví dụ câu hỏi chọn',NULL),(2885,706,'tags','cơ bản; ví dụ; chọn',NULL),(2886,706,'multichoice','1',NULL),(2887,706,'random','1',NULL),(2888,707,'name','Ví dụ câu hỏi chọn',NULL),(2889,707,'tags','cơ bản; ví dụ; chọn',NULL),(2890,707,'multichoice','1',NULL),(2891,707,'random','1',NULL),(2892,708,'name','Ví dụ câu hỏi chọn',NULL),(2893,708,'tags','cơ bản; ví dụ; chọn',NULL),(2894,708,'multichoice','1',NULL),(2895,708,'random','1',NULL),(2896,709,'name','Ví dụ câu hỏi chọn',NULL),(2897,709,'tags','cơ bản; ví dụ; chọn',NULL),(2898,709,'multichoice','1',NULL),(2899,709,'random','1',NULL),(2900,710,'name','Ví dụ câu hỏi chọn',NULL),(2901,710,'tags','cơ bản; ví dụ; chọn',NULL),(2902,710,'multichoice','1',NULL),(2903,710,'random','1',NULL),(2904,711,'name','Ví dụ câu hỏi chọn',NULL),(2905,711,'tags','cơ bản; ví dụ; chọn',NULL),(2906,711,'multichoice','1',NULL),(2907,711,'random','1',NULL),(2908,712,'name','Ví dụ câu hỏi chọn',NULL),(2909,712,'tags','cơ bản; ví dụ; chọn',NULL),(2910,712,'multichoice','1',NULL),(2911,712,'random','1',NULL),(2912,713,'name','Ví dụ câu hỏi chọn',NULL),(2913,713,'tags','cơ bản; ví dụ; chọn',NULL),(2914,713,'multichoice','1',NULL),(2915,713,'random','1',NULL),(2916,714,'name','Ví dụ câu hỏi chọn',NULL),(2917,714,'tags','cơ bản; ví dụ; chọn',NULL),(2918,714,'multichoice','1',NULL),(2919,714,'random','1',NULL),(2920,715,'name','Ví dụ câu hỏi chọn',NULL),(2921,715,'tags','cơ bản; ví dụ; chọn',NULL),(2922,715,'multichoice','1',NULL),(2923,715,'random','1',NULL),(2924,716,'name','Ví dụ câu hỏi chọn',NULL),(2925,716,'tags','cơ bản; ví dụ; chọn',NULL),(2926,716,'multichoice','1',NULL),(2927,716,'random','1',NULL),(2928,717,'name','Ví dụ câu hỏi chọn',NULL),(2929,717,'tags','cơ bản; ví dụ; chọn',NULL),(2930,717,'multichoice','1',NULL),(2931,717,'random','1',NULL),(2932,718,'name','Ví dụ câu hỏi chọn',NULL),(2933,718,'tags','cơ bản; ví dụ; chọn',NULL),(2934,718,'multichoice','1',NULL),(2935,718,'random','1',NULL),(2936,719,'name','Ví dụ câu hỏi chọn',NULL),(2937,719,'tags','cơ bản; ví dụ; chọn',NULL),(2938,719,'multichoice','1',NULL),(2939,719,'random','1',NULL),(2940,692,'name','Ví dụ câu hỏi chọn',NULL),(2941,692,'tags','cơ bản; ví dụ; chọn',NULL),(2942,692,'multichoice','0',NULL),(2943,692,'random','1',NULL),(2944,693,'name','Ví dụ câu hỏi chọn',NULL),(2945,693,'tags','cơ bản; ví dụ; chọn',NULL),(2946,693,'multichoice','0',NULL),(2947,693,'random','1',NULL),(2948,694,'name','Ví dụ câu hỏi chọn',NULL),(2949,694,'tags','cơ bản; ví dụ; chọn',NULL),(2950,694,'multichoice','0',NULL),(2951,694,'random','1',NULL),(2952,695,'name','Ví dụ câu hỏi chọn',NULL),(2953,695,'tags','cơ bản; ví dụ; chọn',NULL),(2954,695,'multichoice','0',NULL),(2955,695,'random','1',NULL),(2956,696,'name','Ví dụ câu hỏi chọn',NULL),(2957,696,'tags','cơ bản; ví dụ; chọn',NULL),(2958,696,'multichoice','0',NULL),(2959,696,'random','1',NULL),(2960,697,'name','Ví dụ câu hỏi chọn',NULL),(2961,697,'tags','cơ bản; ví dụ; chọn',NULL),(2962,697,'multichoice','0',NULL),(2963,697,'random','1',NULL),(2964,698,'name','Ví dụ câu hỏi chọn',NULL),(2965,698,'tags','cơ bản; ví dụ; chọn',NULL),(2966,698,'multichoice','0',NULL),(2967,698,'random','1',NULL),(2968,699,'name','Ví dụ câu hỏi chọn',NULL),(2969,699,'tags','cơ bản; ví dụ; chọn',NULL),(2970,699,'multichoice','0',NULL),(2971,699,'random','1',NULL),(2972,700,'name','Ví dụ câu hỏi chọn',NULL),(2973,700,'tags','cơ bản; ví dụ; chọn',NULL),(2974,700,'multichoice','0',NULL),(2975,700,'random','1',NULL),(2976,701,'name','Ví dụ câu hỏi chọn',NULL),(2977,701,'tags','cơ bản; ví dụ; chọn',NULL),(2978,701,'multichoice','0',NULL),(2979,701,'random','1',NULL),(2980,702,'name','Ví dụ câu hỏi chọn',NULL),(2981,702,'tags','cơ bản; ví dụ; chọn',NULL),(2982,702,'multichoice','0',NULL),(2983,702,'random','1',NULL),(2984,555,'name','Ví dụ câu hỏi chọn',NULL),(2985,555,'tags','cơ bản; ví dụ; chọn',NULL),(2986,555,'multichoice','0',NULL),(2987,555,'random','1',NULL),(2988,464,'name','Ví dụ câu hỏi liên kết',NULL),(2989,464,'tags','cơ bản; ví dụ; liên kết',NULL),(2990,464,'multimatch','0',NULL),(2991,464,'random','1',NULL),(2998,721,'name','Ví dụ câu hỏi chọn',NULL),(2999,721,'tags','cơ bản; ví dụ; chọn',NULL),(3000,721,'multichoice','0',NULL),(3001,721,'random','1',NULL),(3006,722,'name','Ví dụ câu hỏi chọn',NULL),(3007,722,'tags','cơ bản; ví dụ; chọn',NULL),(3008,722,'multichoice','0',NULL),(3009,722,'random','1',NULL),(3014,723,'name','Ví dụ câu hỏi chọn',NULL),(3015,723,'tags','cơ bản; ví dụ; chọn',NULL),(3016,723,'multichoice','0',NULL),(3017,723,'random','1',NULL),(3022,724,'name','Ví dụ câu hỏi chọn',NULL),(3023,724,'tags','cơ bản; ví dụ; chọn',NULL),(3024,724,'multichoice','0',NULL),(3025,724,'random','1',NULL),(3026,725,'name','Ví dụ câu hỏi chọn',NULL),(3027,725,'tags','cơ bản; ví dụ; chọn',NULL),(3028,725,'multichoice','1',NULL),(3029,725,'random','1',NULL),(3040,726,'name','Ví dụ câu hỏi chọn',NULL),(3041,726,'tags','cơ bản; ví dụ; chọn',NULL),(3042,726,'multichoice','1',NULL),(3043,726,'random','1',NULL),(3044,727,'name','Ví dụ câu hỏi chọn',NULL),(3045,727,'tags','cơ bản; ví dụ; chọn',NULL),(3046,727,'multichoice','0',NULL),(3047,727,'random','1',NULL),(3048,728,'name','Ví dụ câu hỏi chọn',NULL),(3049,728,'tags','cơ bản; ví dụ; chọn',NULL),(3050,728,'multichoice','0',NULL),(3051,728,'random','1',NULL),(3052,729,'name','Ví dụ câu hỏi chọn',NULL),(3053,729,'tags','cơ bản; ví dụ; chọn',NULL),(3054,729,'multichoice','0',NULL),(3055,729,'random','1',NULL),(3056,730,'name','Ví dụ câu hỏi chọn',NULL),(3057,730,'tags','cơ bản; ví dụ; chọn',NULL),(3058,730,'multichoice','0',NULL),(3059,730,'random','1',NULL),(3064,731,'name','Ví dụ câu hỏi chọn',NULL),(3065,731,'tags','cơ bản; ví dụ; chọn',NULL),(3066,731,'multichoice','0',NULL),(3067,731,'random','1',NULL),(3068,732,'name','Ví dụ câu hỏi chọn',NULL),(3069,732,'tags','cơ bản; ví dụ; chọn',NULL),(3070,732,'multichoice','0',NULL),(3071,732,'random','1',NULL),(3072,733,'name','Ví dụ câu hỏi chọn',NULL),(3073,733,'tags','cơ bản; ví dụ; chọn',NULL),(3074,733,'multichoice','0',NULL),(3075,733,'random','1',NULL),(3076,734,'name','Ví dụ câu hỏi chọn',NULL),(3077,734,'tags','cơ bản; ví dụ; chọn',NULL),(3078,734,'multichoice','0',NULL),(3079,734,'random','1',NULL),(3080,735,'name','Ví dụ câu hỏi chọn',NULL),(3081,735,'tags','cơ bản; ví dụ; chọn',NULL),(3082,735,'multichoice','0',NULL),(3083,735,'random','1',NULL),(3088,736,'name','Ví dụ câu hỏi chọn',NULL),(3089,736,'tags','cơ bản; ví dụ; chọn',NULL),(3090,736,'multichoice','0',NULL),(3091,736,'random','1',NULL),(3092,737,'name','Ví dụ câu hỏi chọn',NULL),(3093,737,'tags','cơ bản; ví dụ; chọn',NULL),(3094,737,'multichoice','0',NULL),(3095,737,'random','1',NULL),(3096,738,'name','Ví dụ câu hỏi chọn',NULL),(3097,738,'tags','cơ bản; ví dụ; chọn',NULL),(3098,738,'multichoice','0',NULL),(3099,738,'random','1',NULL),(3100,739,'name','Ví dụ câu hỏi chọn',NULL),(3101,739,'tags','cơ bản; ví dụ; chọn',NULL),(3102,739,'multichoice','0',NULL),(3103,739,'random','1',NULL),(3104,740,'name','Ví dụ câu hỏi chọn',NULL),(3105,740,'tags','cơ bản; ví dụ; chọn',NULL),(3106,740,'multichoice','0',NULL),(3107,740,'random','1',NULL),(3108,741,'name','Ví dụ câu hỏi chọn',NULL),(3109,741,'tags','cơ bản; ví dụ; chọn',NULL),(3110,741,'multichoice','0',NULL),(3111,741,'random','1',NULL),(3112,742,'name','Ví dụ câu hỏi chọn',NULL),(3113,742,'tags','cơ bản; ví dụ; chọn',NULL),(3114,742,'multichoice','1',NULL),(3115,742,'random','1',NULL),(3116,743,'name','Ví dụ câu hỏi chọn',NULL),(3117,743,'tags','cơ bản; ví dụ; chọn',NULL),(3118,743,'multichoice','0',NULL),(3119,743,'random','1',NULL),(3120,744,'name','Ví dụ câu hỏi chọn',NULL),(3121,744,'tags','cơ bản; ví dụ; chọn',NULL),(3122,744,'multichoice','0',NULL),(3123,744,'random','1',NULL),(3124,745,'name','Ví dụ câu hỏi chọn',NULL),(3125,745,'tags','cơ bản; ví dụ; chọn',NULL),(3126,745,'multichoice','0',NULL),(3127,745,'random','1',NULL),(3128,746,'name','Ví dụ câu hỏi chọn',NULL),(3129,746,'tags','cơ bản; ví dụ; chọn',NULL),(3130,746,'multichoice','0',NULL),(3131,746,'random','1',NULL),(3136,747,'name','Ví dụ câu hỏi chọn',NULL),(3137,747,'tags','cơ bản; ví dụ; chọn',NULL),(3138,747,'multichoice','0',NULL),(3139,747,'random','1',NULL),(3140,748,'name','Ví dụ câu hỏi chọn',NULL),(3141,748,'tags','cơ bản; ví dụ; chọn',NULL),(3142,748,'multichoice','1',NULL),(3143,748,'random','1',NULL),(3144,749,'name','Ví dụ câu hỏi chọn',NULL),(3145,749,'tags','cơ bản; ví dụ; chọn',NULL),(3146,749,'multichoice','0',NULL),(3147,749,'random','1',NULL),(3148,750,'name','Ví dụ câu hỏi chọn',NULL),(3149,750,'tags','cơ bản; ví dụ; chọn',NULL),(3150,750,'multichoice','0',NULL),(3151,750,'random','1',NULL),(3152,751,'name','Ví dụ câu hỏi chọn',NULL),(3153,751,'tags','cơ bản; ví dụ; chọn',NULL),(3154,751,'multichoice','0',NULL),(3155,751,'random','1',NULL),(3156,752,'name','Ví dụ câu hỏi liên kết',NULL),(3157,752,'tags','cơ bản; ví dụ; liên kết',NULL),(3158,752,'multimatch','0',NULL),(3159,752,'random','1',NULL),(3160,753,'name','Ví dụ câu hỏi chọn',NULL),(3161,753,'tags','cơ bản; ví dụ; chọn',NULL),(3162,753,'multichoice','0',NULL),(3163,753,'random','1',NULL),(3164,754,'name','Ví dụ câu hỏi chọn',NULL),(3165,754,'tags','cơ bản; ví dụ; chọn',NULL),(3166,754,'multichoice','0',NULL),(3167,754,'random','1',NULL),(3168,755,'name','Ví dụ câu hỏi chọn',NULL),(3169,755,'tags','cơ bản; ví dụ; chọn',NULL),(3170,755,'multichoice','0',NULL),(3171,755,'random','1',NULL),(3172,756,'name','Ví dụ câu hỏi chọn',NULL),(3173,756,'tags','cơ bản; ví dụ; chọn',NULL),(3174,756,'multichoice','0',NULL),(3175,756,'random','1',NULL),(3176,757,'name','Ví dụ câu hỏi chọn',NULL),(3177,757,'tags','cơ bản; ví dụ; chọn',NULL),(3178,757,'multichoice','0',NULL),(3179,757,'random','1',NULL),(3180,758,'name','Ví dụ câu hỏi chọn',NULL),(3181,758,'tags','cơ bản; ví dụ; chọn',NULL),(3182,758,'multichoice','0',NULL),(3183,758,'random','1',NULL),(3184,759,'name','Ví dụ câu hỏi chọn',NULL),(3185,759,'tags','cơ bản; ví dụ; chọn',NULL),(3186,759,'multichoice','0',NULL),(3187,759,'random','1',NULL),(3188,760,'name','Ví dụ câu hỏi chọn',NULL),(3189,760,'tags','cơ bản; ví dụ; chọn',NULL),(3190,760,'multichoice','0',NULL),(3191,760,'random','1',NULL),(3192,761,'name','Ví dụ câu hỏi chọn',NULL),(3193,761,'tags','cơ bản; ví dụ; chọn',NULL),(3194,761,'multichoice','0',NULL),(3195,761,'random','1',NULL),(3196,762,'name','Ví dụ câu hỏi chọn',NULL),(3197,762,'tags','cơ bản; ví dụ; chọn',NULL),(3198,762,'multichoice','0',NULL),(3199,762,'random','1',NULL),(3200,763,'name','Ví dụ câu hỏi chọn',NULL),(3201,763,'tags','cơ bản; ví dụ; chọn',NULL),(3202,763,'multichoice','0',NULL),(3203,763,'random','1',NULL),(3204,764,'name','Ví dụ câu hỏi chọn',NULL),(3205,764,'tags','cơ bản; ví dụ; chọn',NULL),(3206,764,'multichoice','0',NULL),(3207,764,'random','1',NULL),(3210,765,'name','Ví dụ câu hỏi chọn',NULL),(3211,765,'tags','cơ bản; ví dụ; chọn',NULL),(3212,765,'multichoice','0',NULL),(3213,765,'random','1',NULL),(3214,766,'name','Ví dụ câu hỏi chọn',NULL),(3215,766,'tags','cơ bản; ví dụ; chọn',NULL),(3216,766,'multichoice','0',NULL),(3217,766,'random','1',NULL),(3218,767,'name','Ví dụ câu hỏi chọn',NULL),(3219,767,'tags','cơ bản; ví dụ; chọn',NULL),(3220,767,'multichoice','0',NULL),(3221,767,'random','1',NULL),(3222,768,'name','Ví dụ câu hỏi chọn',NULL),(3223,768,'tags','cơ bản; ví dụ; chọn',NULL),(3224,768,'multichoice','0',NULL),(3225,768,'random','1',NULL),(3226,769,'name','Ví dụ câu hỏi chọn',NULL),(3227,769,'tags','cơ bản; ví dụ; chọn',NULL),(3228,769,'multichoice','0',NULL),(3229,769,'random','1',NULL),(3230,770,'name','Ví dụ câu hỏi chọn',NULL),(3231,770,'tags','cơ bản; ví dụ; chọn',NULL),(3232,770,'multichoice','0',NULL),(3233,770,'random','1',NULL),(3234,771,'name','Ví dụ câu hỏi chọn',NULL),(3235,771,'tags','cơ bản; ví dụ; chọn',NULL),(3236,771,'multichoice','0',NULL),(3237,771,'random','1',NULL),(3238,772,'name','Ví dụ câu hỏi chọn',NULL),(3239,772,'tags','cơ bản; ví dụ; chọn',NULL),(3240,772,'multichoice','0',NULL),(3241,772,'random','1',NULL),(3242,773,'name','Ví dụ câu hỏi chọn',NULL),(3243,773,'tags','cơ bản; ví dụ; chọn',NULL),(3244,773,'multichoice','0',NULL),(3245,773,'random','1',NULL),(3246,774,'name','Ví dụ câu hỏi chọn',NULL),(3247,774,'tags','cơ bản; ví dụ; chọn',NULL),(3248,774,'multichoice','0',NULL),(3249,774,'random','1',NULL),(3250,775,'name','Ví dụ câu hỏi chọn',NULL),(3251,775,'tags','cơ bản; ví dụ; chọn',NULL),(3252,775,'multichoice','0',NULL),(3253,775,'random','1',NULL),(3254,776,'name','Ví dụ câu hỏi chọn',NULL),(3255,776,'tags','cơ bản; ví dụ; chọn',NULL),(3256,776,'multichoice','0',NULL),(3257,776,'random','1',NULL),(3258,777,'name','Ví dụ câu hỏi chọn',NULL),(3259,777,'tags','cơ bản; ví dụ; chọn',NULL),(3260,777,'multichoice','0',NULL),(3261,777,'random','1',NULL),(3262,778,'name','Ví dụ câu hỏi chọn',NULL),(3263,778,'tags','cơ bản; ví dụ; chọn',NULL),(3264,778,'multichoice','0',NULL),(3265,778,'random','1',NULL),(3266,779,'name','Ví dụ câu hỏi chọn',NULL),(3267,779,'tags','cơ bản; ví dụ; chọn',NULL),(3268,779,'multichoice','0',NULL),(3269,779,'random','1',NULL),(3270,780,'name','Ví dụ câu hỏi chọn',NULL),(3271,780,'tags','cơ bản; ví dụ; chọn',NULL),(3272,780,'multichoice','0',NULL),(3273,780,'random','1',NULL),(3274,781,'name','Ví dụ câu hỏi chọn',NULL),(3275,781,'tags','cơ bản; ví dụ; chọn',NULL),(3276,781,'multichoice','0',NULL),(3277,781,'random','1',NULL),(3278,782,'name','Ví dụ câu hỏi chọn',NULL),(3279,782,'tags','cơ bản; ví dụ; chọn',NULL),(3280,782,'multichoice','0',NULL),(3281,782,'random','1',NULL),(3282,783,'name','Ví dụ câu hỏi chọn',NULL),(3283,783,'tags','cơ bản; ví dụ; chọn',NULL),(3284,783,'multichoice','0',NULL),(3285,783,'random','1',NULL),(3286,784,'name','Ví dụ câu hỏi chọn',NULL),(3287,784,'tags','cơ bản; ví dụ; chọn',NULL),(3288,784,'multichoice','0',NULL),(3289,784,'random','1',NULL),(3290,785,'name','Ví dụ câu hỏi chọn',NULL),(3291,785,'tags','cơ bản; ví dụ; chọn',NULL),(3292,785,'multichoice','0',NULL),(3293,785,'random','1',NULL),(3294,786,'name','Ví dụ câu hỏi chọn',NULL),(3295,786,'tags','cơ bản; ví dụ; chọn',NULL),(3296,786,'multichoice','0',NULL),(3297,786,'random','1',NULL),(3298,787,'name','Ví dụ câu hỏi chọn',NULL),(3299,787,'tags','cơ bản; ví dụ; chọn',NULL),(3300,787,'multichoice','0',NULL),(3301,787,'random','1',NULL),(3302,788,'name','Ví dụ câu hỏi chọn',NULL),(3303,788,'tags','cơ bản; ví dụ; chọn',NULL),(3304,788,'multichoice','0',NULL),(3305,788,'random','1',NULL),(3306,789,'name','Ví dụ câu hỏi chọn',NULL),(3307,789,'tags','cơ bản; ví dụ; chọn',NULL),(3308,789,'multichoice','0',NULL),(3309,789,'random','1',NULL),(3310,790,'name','Ví dụ câu hỏi chọn',NULL),(3311,790,'tags','cơ bản; ví dụ; chọn',NULL),(3312,790,'multichoice','0',NULL),(3313,790,'random','1',NULL),(3314,791,'name','Ví dụ câu hỏi chọn',NULL),(3315,791,'tags','cơ bản; ví dụ; chọn',NULL),(3316,791,'multichoice','0',NULL),(3317,791,'random','1',NULL),(3318,792,'name','Ví dụ câu hỏi chọn',NULL),(3319,792,'tags','cơ bản; ví dụ; chọn',NULL),(3320,792,'multichoice','0',NULL),(3321,792,'random','1',NULL),(3322,793,'name','Ví dụ câu hỏi chọn',NULL),(3323,793,'tags','cơ bản; ví dụ; chọn',NULL),(3324,793,'multichoice','0',NULL),(3325,793,'random','1',NULL),(3326,794,'name','Ví dụ câu hỏi chọn',NULL),(3327,794,'tags','cơ bản; ví dụ; chọn',NULL),(3328,794,'multichoice','0',NULL),(3329,794,'random','1',NULL),(3330,795,'name','Ví dụ câu hỏi chọn',NULL),(3331,795,'tags','cơ bản; ví dụ; chọn',NULL),(3332,795,'multichoice','0',NULL),(3333,795,'random','1',NULL),(3334,796,'name','Ví dụ câu hỏi chọn',NULL),(3335,796,'tags','cơ bản; ví dụ; chọn',NULL),(3336,796,'multichoice','0',NULL),(3337,796,'random','1',NULL),(3338,797,'name','Ví dụ câu hỏi chọn',NULL),(3339,797,'tags','cơ bản; ví dụ; chọn',NULL),(3340,797,'multichoice','0',NULL),(3341,797,'random','1',NULL),(3342,798,'name','Ví dụ câu hỏi chọn',NULL),(3343,798,'tags','cơ bản; ví dụ; chọn',NULL),(3344,798,'multichoice','0',NULL),(3345,798,'random','1',NULL),(3346,799,'name','Ví dụ câu hỏi chọn',NULL),(3347,799,'tags','cơ bản; ví dụ; chọn',NULL),(3348,799,'multichoice','0',NULL),(3349,799,'random','1',NULL),(3350,800,'name','Ví dụ câu hỏi chọn',NULL),(3351,800,'tags','cơ bản; ví dụ; chọn',NULL),(3352,800,'multichoice','0',NULL),(3353,800,'random','1',NULL),(3354,801,'name','Ví dụ câu hỏi chọn',NULL),(3355,801,'tags','cơ bản; ví dụ; chọn',NULL),(3356,801,'multichoice','0',NULL),(3357,801,'random','1',NULL),(3358,802,'name','Ví dụ câu hỏi chọn',NULL),(3359,802,'tags','cơ bản; ví dụ; chọn',NULL),(3360,802,'multichoice','0',NULL),(3361,802,'random','1',NULL),(3362,803,'name','Ví dụ câu hỏi chọn',NULL),(3363,803,'tags','cơ bản; ví dụ; chọn',NULL),(3364,803,'multichoice','0',NULL),(3365,803,'random','1',NULL),(3366,804,'name','Ví dụ câu hỏi chọn',NULL),(3367,804,'tags','cơ bản; ví dụ; chọn',NULL),(3368,804,'multichoice','0',NULL),(3369,804,'random','1',NULL),(3370,805,'name','Ví dụ câu hỏi chọn',NULL),(3371,805,'tags','cơ bản; ví dụ; chọn',NULL),(3372,805,'multichoice','0',NULL),(3373,805,'random','1',NULL),(3374,465,'name','Ví dụ câu hỏi chọn',NULL),(3375,465,'tags','cơ bản; ví dụ; chọn',NULL),(3376,465,'multichoice','0',NULL),(3377,465,'random','1',NULL),(3378,467,'name','Ví dụ câu hỏi chọn',NULL),(3379,467,'tags','cơ bản; ví dụ; chọn',NULL),(3380,467,'multichoice','0',NULL),(3381,467,'random','1',NULL),(3382,468,'name','Ví dụ câu hỏi chọn',NULL),(3383,468,'tags','cơ bản; ví dụ; chọn',NULL),(3384,468,'multichoice','0',NULL),(3385,468,'random','1',NULL),(3386,469,'name','Ví dụ câu hỏi chọn',NULL),(3387,469,'tags','cơ bản; ví dụ; chọn',NULL),(3388,469,'multichoice','0',NULL),(3389,469,'random','1',NULL),(3390,473,'name','Ví dụ câu hỏi chọn',NULL),(3391,473,'tags','cơ bản; ví dụ; chọn',NULL),(3392,473,'multichoice','0',NULL),(3393,473,'random','1',NULL),(3394,474,'name','Ví dụ câu hỏi chọn',NULL),(3395,474,'tags','cơ bản; ví dụ; chọn',NULL),(3396,474,'multichoice','0',NULL),(3397,474,'random','1',NULL),(3400,475,'name','Ví dụ câu hỏi chọn',NULL),(3401,475,'tags','cơ bản; ví dụ; chọn',NULL),(3402,475,'multichoice','0',NULL),(3403,475,'random','1',NULL),(3404,481,'name','Ví dụ câu hỏi chọn',NULL),(3405,481,'tags','cơ bản; ví dụ; chọn',NULL),(3406,481,'multichoice','0',NULL),(3407,481,'random','1',NULL),(3408,534,'name','Ví dụ câu hỏi chọn',NULL),(3409,534,'tags','cơ bản; ví dụ; chọn',NULL),(3410,534,'multichoice','0',NULL),(3411,534,'random','1',NULL),(3412,530,'name','Ví dụ câu hỏi chọn',NULL),(3413,530,'tags','cơ bản; ví dụ; chọn',NULL),(3414,530,'multichoice','0',NULL),(3415,530,'random','1',NULL),(3416,806,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(3417,806,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(3418,806,'random','1',NULL),(3419,807,'name','Ví dụ câu hỏi chọn',NULL),(3420,807,'tags','cơ bản; ví dụ; chọn',NULL),(3421,807,'multichoice','1',NULL),(3422,807,'random','1',NULL),(3423,808,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(3424,808,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(3425,808,'random','1',NULL),(3426,809,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(3427,809,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(3428,809,'random','1',NULL),(3429,810,'name','Ví dụ câu hỏi chọn',NULL),(3430,810,'tags','cơ bản; ví dụ; chọn',NULL),(3431,810,'multichoice','1',NULL),(3432,810,'random','1',NULL),(3433,811,'name','Ví dụ câu hỏi liên kết',NULL),(3434,811,'tags','cơ bản; ví dụ; liên kết',NULL),(3435,811,'multimatch','0',NULL),(3436,811,'random','1',NULL),(3437,812,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(3438,812,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(3439,812,'random','1',NULL),(3454,818,'name','Ví dụ câu hỏi chọn',NULL),(3455,818,'tags','cơ bản; ví dụ; chọn',NULL),(3456,818,'multichoice','1',NULL),(3457,818,'random','1',NULL),(3458,819,'name','Ví dụ câu hỏi chọn',NULL),(3459,819,'tags','cơ bản; ví dụ; chọn',NULL),(3460,819,'multichoice','1',NULL),(3461,819,'random','1',NULL),(3462,820,'name','Ví dụ câu hỏi chọn',NULL),(3463,820,'tags','cơ bản; ví dụ; chọn',NULL),(3464,820,'multichoice','1',NULL),(3465,820,'random','1',NULL),(3466,821,'name','Ví dụ câu hỏi chọn',NULL),(3467,821,'tags','cơ bản; ví dụ; chọn',NULL),(3468,821,'multichoice','1',NULL),(3469,821,'random','1',NULL),(3470,822,'name','Ví dụ câu hỏi chọn',NULL),(3471,822,'tags','cơ bản; ví dụ; chọn',NULL),(3472,822,'multichoice','1',NULL),(3473,822,'random','1',NULL),(3474,823,'name','Ví dụ câu hỏi chọn',NULL),(3475,823,'tags','cơ bản; ví dụ; chọn',NULL),(3476,823,'multichoice','1',NULL),(3477,823,'random','1',NULL),(3478,824,'name','Ví dụ câu hỏi chọn',NULL),(3479,824,'tags','cơ bản; ví dụ; chọn',NULL),(3480,824,'multichoice','1',NULL),(3481,824,'random','1',NULL),(3482,825,'name','Ví dụ câu hỏi chọn',NULL),(3483,825,'tags','cơ bản; ví dụ; chọn',NULL),(3484,825,'multichoice','1',NULL),(3485,825,'random','1',NULL),(3486,826,'name','Ví dụ câu hỏi chọn',NULL),(3487,826,'tags','cơ bản; ví dụ; chọn',NULL),(3488,826,'multichoice','1',NULL),(3489,826,'random','1',NULL),(3494,829,'name','Ví dụ câu hỏi chọn',NULL),(3495,829,'tags','cơ bản; ví dụ; chọn',NULL),(3496,829,'multichoice','1',NULL),(3497,829,'random','1',NULL),(3498,830,'name','Ví dụ câu hỏi chọn',NULL),(3499,830,'tags','cơ bản; ví dụ; chọn',NULL),(3500,830,'multichoice','1',NULL),(3501,830,'random','1',NULL),(3502,831,'name','Ví dụ câu hỏi chọn',NULL),(3503,831,'tags','cơ bản; ví dụ; chọn',NULL),(3504,831,'multichoice','1',NULL),(3505,831,'random','1',NULL),(3506,832,'name','Ví dụ câu hỏi chọn',NULL),(3507,832,'tags','cơ bản; ví dụ; chọn',NULL),(3508,832,'multichoice','1',NULL),(3509,832,'random','1',NULL),(3510,833,'name','Ví dụ câu hỏi chọn',NULL),(3511,833,'tags','cơ bản; ví dụ; chọn',NULL),(3512,833,'multichoice','1',NULL),(3513,833,'random','1',NULL),(3514,834,'name','Ví dụ câu hỏi chọn',NULL),(3515,834,'tags','cơ bản; ví dụ; chọn',NULL),(3516,834,'multichoice','1',NULL),(3517,834,'random','1',NULL),(3518,835,'name','Ví dụ câu hỏi chọn',NULL),(3519,835,'tags','cơ bản; ví dụ; chọn',NULL),(3520,835,'multichoice','1',NULL),(3521,835,'random','1',NULL),(3522,836,'name','Ví dụ câu hỏi chọn',NULL),(3523,836,'tags','cơ bản; ví dụ; chọn',NULL),(3524,836,'multichoice','1',NULL),(3525,836,'random','1',NULL),(3526,837,'name','Ví dụ câu hỏi chọn',NULL),(3527,837,'tags','cơ bản; ví dụ; chọn',NULL),(3528,837,'multichoice','1',NULL),(3529,837,'random','1',NULL),(3720,903,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(3721,903,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(3722,903,'random','1',NULL),(3723,904,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(3724,904,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(3725,904,'random','1',NULL),(3726,905,'name','Ví dụ câu hỏi chọn',NULL),(3727,905,'tags','cơ bản; ví dụ; chọn',NULL),(3728,905,'multichoice','1',NULL),(3729,905,'random','1',NULL),(3730,906,'name','Ví dụ câu hỏi chọn',NULL),(3731,906,'tags','cơ bản; ví dụ; chọn',NULL),(3732,906,'multichoice','0',NULL),(3733,906,'random','1',NULL),(3734,907,'name','Ví dụ câu hỏi chọn',NULL),(3735,907,'tags','cơ bản; ví dụ; chọn',NULL),(3736,907,'multichoice','1',NULL),(3737,907,'random','1',NULL),(3738,908,'name','Ví dụ câu hỏi chọn',NULL),(3739,908,'tags','cơ bản; ví dụ; chọn',NULL),(3740,908,'multichoice','1',NULL),(3741,908,'random','1',NULL),(3742,909,'name','Ví dụ câu hỏi chọn',NULL),(3743,909,'tags','cơ bản; ví dụ; chọn',NULL),(3744,909,'multichoice','1',NULL),(3745,909,'random','1',NULL),(3746,910,'name','Ví dụ câu hỏi chọn',NULL),(3747,910,'tags','cơ bản; ví dụ; chọn',NULL),(3748,910,'multichoice','1',NULL),(3749,910,'random','1',NULL),(3750,911,'name','Ví dụ câu hỏi chọn',NULL),(3751,911,'tags','cơ bản; ví dụ; chọn',NULL),(3752,911,'multichoice','1',NULL),(3753,911,'random','1',NULL),(3754,912,'name','Ví dụ câu hỏi chọn',NULL),(3755,912,'tags','cơ bản; ví dụ; chọn',NULL),(3756,912,'multichoice','1',NULL),(3757,912,'random','1',NULL),(3758,913,'name','Ví dụ câu hỏi chọn',NULL),(3759,913,'tags','cơ bản; ví dụ; chọn',NULL),(3760,913,'multichoice','0',NULL),(3761,913,'random','1',NULL),(3762,914,'name','Ví dụ câu hỏi chọn',NULL),(3763,914,'tags','cơ bản; ví dụ; chọn',NULL),(3764,914,'multichoice','1',NULL),(3765,914,'random','1',NULL),(3766,915,'name','Ví dụ câu hỏi chọn',NULL),(3767,915,'tags','cơ bản; ví dụ; chọn',NULL),(3768,915,'multichoice','1',NULL),(3769,915,'random','1',NULL),(3770,916,'name','Ví dụ câu hỏi chọn',NULL),(3771,916,'tags','cơ bản; ví dụ; chọn',NULL),(3772,916,'multichoice','1',NULL),(3773,916,'random','1',NULL),(3774,917,'name','Ví dụ câu hỏi chọn',NULL),(3775,917,'tags','cơ bản; ví dụ; chọn',NULL),(3776,917,'multichoice','1',NULL),(3777,917,'random','1',NULL),(3778,918,'name','Ví dụ câu hỏi chọn',NULL),(3779,918,'tags','cơ bản; ví dụ; chọn',NULL),(3780,918,'multichoice','1',NULL),(3781,918,'random','1',NULL),(3782,919,'name','Ví dụ câu hỏi chọn',NULL),(3783,919,'tags','cơ bản; ví dụ; chọn',NULL),(3784,919,'multichoice','1',NULL),(3785,919,'random','1',NULL),(3786,920,'name','Ví dụ câu hỏi chọn',NULL),(3787,920,'tags','cơ bản; ví dụ; chọn',NULL),(3788,920,'multichoice','1',NULL),(3789,920,'random','1',NULL),(3790,921,'name','Ví dụ câu hỏi chọn',NULL),(3791,921,'tags','cơ bản; ví dụ; chọn',NULL),(3792,921,'multichoice','0',NULL),(3793,921,'random','1',NULL),(3794,922,'name','Ví dụ câu hỏi chọn',NULL),(3795,922,'tags','cơ bản; ví dụ; chọn',NULL),(3796,922,'multichoice','1',NULL),(3797,922,'random','1',NULL),(3798,923,'name','Ví dụ câu hỏi chọn',NULL),(3799,923,'tags','cơ bản; ví dụ; chọn',NULL),(3800,923,'multichoice','0',NULL),(3801,923,'random','1',NULL),(3802,924,'name','Ví dụ câu hỏi chọn',NULL),(3803,924,'tags','cơ bản; ví dụ; chọn',NULL),(3804,924,'multichoice','0',NULL),(3805,924,'random','1',NULL),(3806,925,'name','Ví dụ câu hỏi chọn',NULL),(3807,925,'tags','cơ bản; ví dụ; chọn',NULL),(3808,925,'multichoice','0',NULL),(3809,925,'random','1',NULL),(3810,926,'name','Ví dụ câu hỏi liên kết',NULL),(3811,926,'tags','cơ bản; ví dụ; liên kết',NULL),(3812,926,'multimatch','0',NULL),(3813,926,'random','1',NULL),(3814,927,'name','Ví dụ câu hỏi chọn',NULL),(3815,927,'tags','cơ bản; ví dụ; chọn',NULL),(3816,927,'multichoice','0',NULL),(3817,927,'random','1',NULL),(3818,928,'name','Ví dụ câu hỏi chọn',NULL),(3819,928,'tags','cơ bản; ví dụ; chọn',NULL),(3820,928,'multichoice','0',NULL),(3821,928,'random','1',NULL),(3822,929,'name','Ví dụ câu hỏi chọn',NULL),(3823,929,'tags','cơ bản; ví dụ; chọn',NULL),(3824,929,'multichoice','0',NULL),(3825,929,'random','1',NULL),(3826,930,'name','Ví dụ câu hỏi chọn',NULL),(3827,930,'tags','cơ bản; ví dụ; chọn',NULL),(3828,930,'multichoice','0',NULL),(3829,930,'random','1',NULL),(3830,931,'name','Ví dụ câu hỏi chọn',NULL),(3831,931,'tags','cơ bản; ví dụ; chọn',NULL),(3832,931,'multichoice','0',NULL),(3833,931,'random','1',NULL),(3834,932,'name','Ví dụ câu hỏi chọn',NULL),(3835,932,'tags','cơ bản; ví dụ; chọn',NULL),(3836,932,'multichoice','0',NULL),(3837,932,'random','1',NULL),(3838,933,'name','Ví dụ câu hỏi chọn',NULL),(3839,933,'tags','cơ bản; ví dụ; chọn',NULL),(3840,933,'multichoice','0',NULL),(3841,933,'random','1',NULL),(3842,934,'name','Ví dụ câu hỏi chọn',NULL),(3843,934,'tags','cơ bản; ví dụ; chọn',NULL),(3844,934,'multichoice','0',NULL),(3845,934,'random','1',NULL),(3846,935,'name','Ví dụ câu hỏi chọn',NULL),(3847,935,'tags','cơ bản; ví dụ; chọn',NULL),(3848,935,'multichoice','0',NULL),(3849,935,'random','1',NULL),(3850,936,'name','Ví dụ câu hỏi chọn',NULL),(3851,936,'tags','cơ bản; ví dụ; chọn',NULL),(3852,936,'multichoice','0',NULL),(3853,936,'random','1',NULL),(3854,937,'name','Ví dụ câu hỏi chọn',NULL),(3855,937,'tags','cơ bản; ví dụ; chọn',NULL),(3856,937,'multichoice','0',NULL),(3857,937,'random','1',NULL),(3858,938,'name','Ví dụ câu hỏi chọn',NULL),(3859,938,'tags','cơ bản; ví dụ; chọn',NULL),(3860,938,'multichoice','0',NULL),(3861,938,'random','1',NULL),(3862,939,'name','Ví dụ câu hỏi chọn',NULL),(3863,939,'tags','cơ bản; ví dụ; chọn',NULL),(3864,939,'multichoice','0',NULL),(3865,939,'random','1',NULL),(3866,940,'name','Ví dụ câu hỏi chọn',NULL),(3867,940,'tags','cơ bản; ví dụ; chọn',NULL),(3868,940,'multichoice','0',NULL),(3869,940,'random','1',NULL),(3870,941,'name','Ví dụ câu hỏi chọn',NULL),(3871,941,'tags','cơ bản; ví dụ; chọn',NULL),(3872,941,'multichoice','0',NULL),(3873,941,'random','1',NULL),(3874,942,'name','Ví dụ câu hỏi chọn',NULL),(3875,942,'tags','cơ bản; ví dụ; chọn',NULL),(3876,942,'multichoice','0',NULL),(3877,942,'random','1',NULL),(3878,943,'name','Ví dụ câu hỏi chọn',NULL),(3879,943,'tags','cơ bản; ví dụ; chọn',NULL),(3880,943,'multichoice','0',NULL),(3881,943,'random','1',NULL),(3882,944,'name','Ví dụ câu hỏi chọn',NULL),(3883,944,'tags','cơ bản; ví dụ; chọn',NULL),(3884,944,'multichoice','0',NULL),(3885,944,'random','1',NULL),(3886,945,'name','Ví dụ câu hỏi chọn',NULL),(3887,945,'tags','cơ bản; ví dụ; chọn',NULL),(3888,945,'multichoice','0',NULL),(3889,945,'random','1',NULL),(3890,946,'name','Ví dụ câu hỏi chọn',NULL),(3891,946,'tags','cơ bản; ví dụ; chọn',NULL),(3892,946,'multichoice','0',NULL),(3893,946,'random','1',NULL),(3894,947,'name','Ví dụ câu hỏi chọn',NULL),(3895,947,'tags','cơ bản; ví dụ; chọn',NULL),(3896,947,'multichoice','0',NULL),(3897,947,'random','1',NULL),(3898,948,'name','Ví dụ câu hỏi chọn',NULL),(3899,948,'tags','cơ bản; ví dụ; chọn',NULL),(3900,948,'multichoice','0',NULL),(3901,948,'random','1',NULL),(3902,949,'name','Ví dụ câu hỏi chọn',NULL),(3903,949,'tags','cơ bản; ví dụ; chọn',NULL),(3904,949,'multichoice','0',NULL),(3905,949,'random','1',NULL),(3906,950,'name','Ví dụ câu hỏi chọn',NULL),(3907,950,'tags','cơ bản; ví dụ; chọn',NULL),(3908,950,'multichoice','0',NULL),(3909,950,'random','1',NULL),(3910,951,'name','Ví dụ câu hỏi chọn',NULL),(3911,951,'tags','cơ bản; ví dụ; chọn',NULL),(3912,951,'multichoice','0',NULL),(3913,951,'random','1',NULL),(3914,952,'name','Ví dụ câu hỏi chọn',NULL),(3915,952,'tags','cơ bản; ví dụ; chọn',NULL),(3916,952,'multichoice','0',NULL),(3917,952,'random','1',NULL),(3918,953,'name','Ví dụ câu hỏi chọn',NULL),(3919,953,'tags','cơ bản; ví dụ; chọn',NULL),(3920,953,'multichoice','0',NULL),(3921,953,'random','1',NULL),(3922,954,'name','Ví dụ câu hỏi chọn',NULL),(3923,954,'tags','cơ bản; ví dụ; chọn',NULL),(3924,954,'multichoice','0',NULL),(3925,954,'random','1',NULL),(3926,955,'name','Ví dụ câu hỏi chọn',NULL),(3927,955,'tags','cơ bản; ví dụ; chọn',NULL),(3928,955,'multichoice','0',NULL),(3929,955,'random','1',NULL),(3930,956,'name','Ví dụ câu hỏi chọn',NULL),(3931,956,'tags','cơ bản; ví dụ; chọn',NULL),(3932,956,'multichoice','0',NULL),(3933,956,'random','1',NULL),(3934,957,'name','Ví dụ câu hỏi chọn',NULL),(3935,957,'tags','cơ bản; ví dụ; chọn',NULL),(3936,957,'multichoice','0',NULL),(3937,957,'random','1',NULL),(3938,958,'name','Ví dụ câu hỏi chọn',NULL),(3939,958,'tags','cơ bản; ví dụ; chọn',NULL),(3940,958,'multichoice','0',NULL),(3941,958,'random','1',NULL),(3942,959,'name','Ví dụ câu hỏi chọn',NULL),(3943,959,'tags','cơ bản; ví dụ; chọn',NULL),(3944,959,'multichoice','0',NULL),(3945,959,'random','1',NULL),(3946,960,'name','Ví dụ câu hỏi chọn',NULL),(3947,960,'tags','cơ bản; ví dụ; chọn',NULL),(3948,960,'multichoice','0',NULL),(3949,960,'random','1',NULL),(3950,961,'name','Ví dụ câu hỏi chọn',NULL),(3951,961,'tags','cơ bản; ví dụ; chọn',NULL),(3952,961,'multichoice','0',NULL),(3953,961,'random','1',NULL),(3954,962,'name','Ví dụ câu hỏi chọn',NULL),(3955,962,'tags','cơ bản; ví dụ; chọn',NULL),(3956,962,'multichoice','0',NULL),(3957,962,'random','1',NULL),(3958,963,'name','Ví dụ câu hỏi chọn',NULL),(3959,963,'tags','cơ bản; ví dụ; chọn',NULL),(3960,963,'multichoice','0',NULL),(3961,963,'random','1',NULL),(3962,964,'name','Ví dụ câu hỏi chọn',NULL),(3963,964,'tags','cơ bản; ví dụ; chọn',NULL),(3964,964,'multichoice','0',NULL),(3965,964,'random','1',NULL),(3966,965,'name','Ví dụ câu hỏi chọn',NULL),(3967,965,'tags','cơ bản; ví dụ; chọn',NULL),(3968,965,'multichoice','0',NULL),(3969,965,'random','1',NULL),(3970,966,'name','Ví dụ câu hỏi chọn',NULL),(3971,966,'tags','cơ bản; ví dụ; chọn',NULL),(3972,966,'multichoice','0',NULL),(3973,966,'random','1',NULL),(3974,967,'name','Ví dụ câu hỏi chọn',NULL),(3975,967,'tags','cơ bản; ví dụ; chọn',NULL),(3976,967,'multichoice','1',NULL),(3977,967,'random','1',NULL),(3978,968,'name','Ví dụ câu hỏi chọn',NULL),(3979,968,'tags','cơ bản; ví dụ; chọn',NULL),(3980,968,'multichoice','1',NULL),(3981,968,'random','1',NULL),(3982,969,'name','Ví dụ câu hỏi chọn',NULL),(3983,969,'tags','cơ bản; ví dụ; chọn',NULL),(3984,969,'multichoice','1',NULL),(3985,969,'random','1',NULL),(3986,970,'name','Ví dụ câu hỏi chọn',NULL),(3987,970,'tags','cơ bản; ví dụ; chọn',NULL),(3988,970,'multichoice','1',NULL),(3989,970,'random','1',NULL),(3990,971,'name','Ví dụ câu hỏi chọn',NULL),(3991,971,'tags','cơ bản; ví dụ; chọn',NULL),(3992,971,'multichoice','1',NULL),(3993,971,'random','1',NULL),(3994,972,'name','Ví dụ câu hỏi chọn',NULL),(3995,972,'tags','cơ bản; ví dụ; chọn',NULL),(3996,972,'multichoice','1',NULL),(3997,972,'random','1',NULL),(3998,973,'name','Ví dụ câu hỏi chọn',NULL),(3999,973,'tags','cơ bản; ví dụ; chọn',NULL),(4000,973,'multichoice','1',NULL),(4001,973,'random','1',NULL),(4002,974,'name','Ví dụ câu hỏi chọn',NULL),(4003,974,'tags','cơ bản; ví dụ; chọn',NULL),(4004,974,'multichoice','0',NULL),(4005,974,'random','1',NULL),(4006,975,'name','Ví dụ câu hỏi chọn',NULL),(4007,975,'tags','cơ bản; ví dụ; chọn',NULL),(4008,975,'multichoice','1',NULL),(4009,975,'random','1',NULL),(4010,976,'name','Ví dụ câu hỏi chọn',NULL),(4011,976,'tags','cơ bản; ví dụ; chọn',NULL),(4012,976,'multichoice','1',NULL),(4013,976,'random','1',NULL),(4014,977,'name','Ví dụ câu hỏi chọn',NULL),(4015,977,'tags','cơ bản; ví dụ; chọn',NULL),(4016,977,'multichoice','1',NULL),(4017,977,'random','1',NULL),(4018,978,'name','Ví dụ câu hỏi chọn',NULL),(4019,978,'tags','cơ bản; ví dụ; chọn',NULL),(4020,978,'multichoice','1',NULL),(4021,978,'random','1',NULL),(4022,979,'name','Ví dụ câu hỏi chọn',NULL),(4023,979,'tags','cơ bản; ví dụ; chọn',NULL),(4024,979,'multichoice','1',NULL),(4025,979,'random','1',NULL),(4026,980,'name','Ví dụ câu hỏi chọn',NULL),(4027,980,'tags','cơ bản; ví dụ; chọn',NULL),(4028,980,'multichoice','1',NULL),(4029,980,'random','1',NULL),(4030,981,'name','Ví dụ câu hỏi chọn',NULL),(4031,981,'tags','cơ bản; ví dụ; chọn',NULL),(4032,981,'multichoice','1',NULL),(4033,981,'random','1',NULL),(4034,982,'name','Ví dụ câu hỏi chọn',NULL),(4035,982,'tags','cơ bản; ví dụ; chọn',NULL),(4036,982,'multichoice','1',NULL),(4037,982,'random','1',NULL),(4038,983,'name','Ví dụ câu hỏi chọn',NULL),(4039,983,'tags','cơ bản; ví dụ; chọn',NULL),(4040,983,'multichoice','1',NULL),(4041,983,'random','1',NULL),(4042,984,'name','Thứ tự tốt xấu của độ phức tạp',NULL),(4043,984,'tags','cơ bản; ví dụ; thứ tự',NULL),(4044,985,'name','Ví dụ câu hỏi chọn',NULL),(4045,985,'tags','cơ bản; ví dụ; chọn',NULL),(4046,985,'multichoice','1',NULL),(4047,985,'random','1',NULL),(4048,986,'name','Ví dụ câu hỏi điền chỗ trống',NULL),(4049,986,'tags','cơ bản; ví dụ; điền chỗ trống',NULL),(4050,986,'random','1',NULL),(4051,987,'name','Ví dụ câu hỏi chọn',NULL),(4052,987,'tags','cơ bản; ví dụ; chọn',NULL),(4053,987,'multichoice','1',NULL),(4054,987,'random','1',NULL),(4055,988,'name','Ví dụ câu hỏi chọn',NULL),(4056,988,'tags','cơ bản; ví dụ; chọn',NULL),(4057,988,'multichoice','1',NULL),(4058,988,'random','1',NULL);

/*Table structure for table `question_item` */

DROP TABLE IF EXISTS `question_item`;

CREATE TABLE `question_item` (
  `item_id` int(11) NOT NULL AUTO_INCREMENT,
  `question_id` int(11) DEFAULT NULL,
  `item_code` char(10) COLLATE utf8_unicode_ci DEFAULT NULL COMMENT 'examples:\n            a. \n            b. \n            ..',
  `item_desc` text COLLATE utf8_unicode_ci,
  `item_order` tinyint(4) DEFAULT NULL COMMENT 'this attribute help to order items inside of question. \n            to render:\n             a. need user input: n rows (or n cols)\n             b. output items in n rows (or n cols) and make new col (or row) if there are still items have not outputed so far.',
  `item_reviewer_comment` text COLLATE utf8_unicode_ci,
  `item_taker_comment` text COLLATE utf8_unicode_ci,
  PRIMARY KEY (`item_id`),
  KEY `fk_items_of_question` (`question_id`),
  CONSTRAINT `fk_items_of_question` FOREIGN KEY (`question_id`) REFERENCES `question` (`question_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=3918 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `question_item` */

insert  into `question_item`(`item_id`,`question_id`,`item_code`,`item_desc`,`item_order`,`item_reviewer_comment`,`item_taker_comment`) values (160,53,'0','<p>Bàn phím</p>',0,NULL,NULL),(161,53,'1','<p>RAM</p>',1,NULL,NULL),(162,53,'2','<p>Đĩa cứng</p>',2,NULL,NULL),(163,53,'3','<p>Màn hình</p>',3,NULL,NULL),(164,54,'0','<p>Màn hình</p>',0,NULL,NULL),(165,54,'0','<p>Bàn phím</p>',1,NULL,NULL),(166,54,'0','<p>Đĩa cứng</p>',2,NULL,NULL),(167,54,'0','<p>RAM</p>',3,NULL,NULL),(168,54,'1','<p>Bộ nhớ để xử lý</p>',0,NULL,NULL),(169,54,'1','<p>Lưu trữ thông tin</p>',1,NULL,NULL),(170,54,'1','<p>Hiển thị</p>',2,NULL,NULL),(171,54,'1','<p>Nhập dữ liệu</p>',3,NULL,NULL),(174,56,'0','<p>O(1)</p>',0,NULL,NULL),(175,56,'1','<p>O(n)</p>',1,NULL,NULL),(176,56,'2','<p>O(n<sup>2</sup>)</p>',2,NULL,NULL),(177,56,'3','<p>O(2<sup>n</sup>)</p>',3,NULL,NULL),(178,57,'0','<p>Bàn phím</p>',0,NULL,NULL),(179,57,'1','<p>RAM</p>',1,NULL,NULL),(180,57,'2','<p>Đĩa cứng</p>',2,NULL,NULL),(181,57,'3','<p>Màn hình</p>',3,NULL,NULL),(188,60,'0','<p>Bàn phím</p>',0,NULL,NULL),(189,60,'1','<p>RAM</p>',1,NULL,NULL),(190,60,'2','<p>Đĩa cứng</p>',2,NULL,NULL),(191,60,'3','<p>Màn hình</p>',3,NULL,NULL),(192,61,'1','<p>Số lượng<br></p>',0,NULL,NULL),(193,62,'1','<p>Con số<br></p>',0,NULL,NULL),(196,55,'1','<p>Thuật toán<br></p>',0,NULL,NULL),(197,58,'1','<p>Số lần<br></p>',0,NULL,NULL),(198,63,'0','<p>p = Head</p>',0,NULL,NULL),(199,63,'1','<p>Head = Head-&gt;pNext</p>',1,NULL,NULL),(200,63,'2','<p>delete(p)</p>',2,NULL,NULL),(201,63,'3','<p>Nếu Head=NULL thì Tail=NULL</p>',3,NULL,NULL),(205,64,'1','<p>Tên</p>',0,NULL,NULL),(206,64,'2','<p><br data-mce-bogus=\"1\"></p>',1,NULL,NULL),(209,59,'1','<p>Độ phức tạp</p>',0,NULL,NULL),(214,66,'0','<p>for(int i=0; i&lt;=15; i++) printf(\"%d\",i);</p>',0,NULL,NULL),(215,66,'1','<p>for(int i=0, i&lt;=15, i++) printf(\"%d\",i);</p>',1,NULL,NULL),(216,66,'2','<p>for(int i=0; i&lt;15; i++) printf(\"%d\",i);</p>',2,NULL,NULL),(217,66,'3','<p>for(int i=0, i&lt;15, i++) printf(\"%d\",i);</p>',3,NULL,NULL),(218,65,'0','<p>100<br></p>',0,NULL,NULL),(219,65,'1','<p>5<br></p>',1,NULL,NULL),(220,65,'2','<p>125<br></p>',2,NULL,NULL),(221,65,'3','<p>25<br></p>',3,NULL,NULL),(222,67,'0','<p>O(0)</p>',0,NULL,NULL),(223,67,'1','<p>O(n^2)</p>',1,NULL,NULL),(224,67,'2','<p>O(n)</p>',2,NULL,NULL),(225,67,'3','<p>O(1)</p>',3,NULL,NULL),(226,68,'0','<p>c<br></p>',0,NULL,NULL),(227,68,'1','<p>ll4</p>',1,NULL,NULL),(228,68,'2','<p>inc<br></p>',2,NULL,NULL),(229,68,'3','<p>oll4<br></p>',3,NULL,NULL),(230,69,'0','<p>1<br></p>',0,NULL,NULL),(231,69,'1','<p>2<br></p>',1,NULL,NULL),(232,69,'2','<p>3<br></p>',2,NULL,NULL),(233,69,'3','<p>4<br></p>',3,NULL,NULL),(237,70,'1','<p>giá trị số<br></p>',0,NULL,NULL),(238,71,'0','<p>a=9, b=10, p=7</p>',0,NULL,NULL),(239,71,'1','<p>a=10, b=10, p=7</p>',1,NULL,NULL),(240,71,'2','<p>a=10, b=10, p=10</p>',2,NULL,NULL),(241,71,'3','<p>a=9, b=10, p=9</p>',3,NULL,NULL),(242,71,'4','<p>a=8, b=9, p=10</p>',4,NULL,NULL),(243,72,'0','<p>857<br></p>',0,NULL,NULL),(244,72,'1','<p>7580<br></p>',1,NULL,NULL),(245,72,'2','<p>758<br></p>',2,NULL,NULL),(246,72,'3','<p>8570<br></p>',3,NULL,NULL),(247,73,'0','<p>1<br></p>',0,NULL,NULL),(248,73,'1','<p>2<br></p>',1,NULL,NULL),(249,73,'2','<p>4<br></p>',2,NULL,NULL),(250,73,'3','<p>8<br></p>',3,NULL,NULL),(251,73,'4','<p>16</p>',4,NULL,NULL),(257,74,'0','<p>2<sup>n</sup></p>',0,NULL,NULL),(258,74,'1','<p>n<sup>2</sup></p>',1,NULL,NULL),(259,74,'2','<p>n*logn</p>',2,NULL,NULL),(260,74,'3','<p>n<br></p>',3,NULL,NULL),(261,74,'4','<p>logn</p>',4,NULL,NULL),(262,74,'5','<p>1</p>',5,NULL,NULL),(263,75,'0','<p>1 2 4 8 16</p>',0,NULL,NULL),(264,75,'1','<p>32 16 8 4 2</p>',1,NULL,NULL),(265,75,'2','<p>2 4 8 16 32</p>',2,NULL,NULL),(266,75,'3','<p>16 8 4 2 1</p>',3,NULL,NULL),(267,76,'0','<p>n^2, 2^n, n*logn, logn, n, 1</p>',0,NULL,NULL),(268,76,'1','<p>2^n, n^2, n*logn, n, logn, 1</p>',1,NULL,NULL),(269,76,'2','<p>n*logn, 2^n, n^2, n, logn, 1</p>',2,NULL,NULL),(270,76,'3','<p>2^n, n*logn, n^2, n, logn, 1</p>',3,NULL,NULL),(275,77,'0','<p>1 4 7 10</p>',0,NULL,NULL),(276,77,'1','<p>X X X X</p>',1,NULL,NULL),(277,77,'2','<p>X 1 4 7</p>',2,NULL,NULL),(278,77,'3','<p>1 4 7 10 X</p>',3,NULL,NULL),(279,78,'0','<p>1 3 4</p>',0,NULL,NULL),(280,78,'1','<p>X 1 3 4</p>',1,NULL,NULL),(281,78,'2','<p>X X X</p>',2,NULL,NULL),(282,78,'3','<p>X X X X</p>',3,NULL,NULL),(283,79,'0','<p>28</p>',0,NULL,NULL),(284,79,'1','<p>30</p>',1,NULL,NULL),(285,79,'2','<p>18</p>',2,NULL,NULL),(286,79,'3','<p>10</p>',3,NULL,NULL),(287,80,'0','<p>3 11</p>',0,NULL,NULL),(288,80,'1','<p>3 5</p>',1,NULL,NULL),(289,80,'2','<p>5 11</p>',2,NULL,NULL),(290,80,'3','<p>11 33</p>',3,NULL,NULL),(295,82,'0','<p>int *t</p>',0,NULL,NULL),(296,82,'1','<p>int *y</p>',1,NULL,NULL),(297,82,'2','<p>int y</p>',2,NULL,NULL),(298,82,'3','<p>int &amp;y</p>',3,NULL,NULL),(299,83,'0','<p>for(int i=0; i&lt;n; i++)</p>',0,NULL,NULL),(300,83,'1','<p>for(int i=1; i&lt;n; i++)</p>',1,NULL,NULL),(301,83,'2','<p>for(int i=0; i&lt;=n; i++)</p>',2,NULL,NULL),(302,83,'3','<p>for(int i=0; i&lt;=n; i--)</p>',3,NULL,NULL),(303,84,'0','<p>ps.Tuso, ps.Mauso </p>',0,NULL,NULL),(304,84,'1','<p>*ps.Tuso, *ps.Mauso</p>',1,NULL,NULL),(305,84,'2','<p>&amp;ps.Tuso, &amp;ps.Mauso</p>',2,NULL,NULL),(306,84,'3','<p>Tuso, Mauso</p>',3,NULL,NULL),(307,85,'0','<p>không phần tử nào bị thay đổi</p>',0,NULL,NULL),(308,85,'1','<p>n</p>',1,NULL,NULL),(309,85,'2','<p>k</p>',2,NULL,NULL),(310,85,'3','<p>x</p>',3,NULL,NULL),(311,86,'0','<p>sv1.MSSV = “Nguyen Van A”;</p><p>&nbsp;&nbsp;&nbsp;&nbsp; sv2.MSSV = “Nguyen Van B”;</p>',0,NULL,NULL),(312,86,'1','<p>sv1.MSSV = “Nguyen Van A”;</p><p>&nbsp;&nbsp;&nbsp;&nbsp; sv2-&gt;MSSV = “Nguyen Van B”;</p>',1,NULL,NULL),(313,86,'2','<p>sv1-&gt;MSSV = “Nguyen Van A”;</p><p>&nbsp;&nbsp;&nbsp;&nbsp; sv2-&gt;MSSV = “Nguyen Van B”;</p>',2,NULL,NULL),(314,86,'3','<p>sv1-&gt;MSSV = “Nguyen Van A”;</p><p>&nbsp;&nbsp;&nbsp;&nbsp; sv2.MSSV = “Nguyen Van B”;</p>',3,NULL,NULL),(315,87,'0','<p>Cần C chỉ thị thực thi.</p>',0,NULL,NULL),(316,87,'1','<p class=\"TableContents\"><span style=\"color: black;\" data-mce-style=\"color: black;\">Cần T(n) chỉ thị thực thi.</span></p>',1,NULL,NULL),(317,87,'2','<p>Cần n chỉ thị thực thi.</p>',2,NULL,NULL),(318,87,'3','<p>Cần Cn chỉ thị thực thi </p>',3,NULL,NULL),(319,88,'0','<p>Sự sắp xếp dữ liệu được tổ chức trong bộ nhớ trong của máy tính</p>',0,NULL,NULL),(320,88,'1','<p>Là sự sắp xếp được sử dụng khi số lượng đối tượng cần sắp xếp lớn không thể lưu trữ trong bộ nhớ trong mà phải lưu trữ trên bộ nhớ ngoài</p>',1,NULL,NULL),(321,88,'2','<p>Là sự sắp xếp dữ liệu được tổ chức sắp xếp dữ liệu được lưu trữ trong các tập tin</p>',2,NULL,NULL),(322,88,'3','<p>Là sự sắp xếp được tổ chức sao cho truy cập ngẫu nhiên một cách nhanh chóng</p>',3,NULL,NULL),(323,89,'0','<p>1 trường</p>',0,NULL,NULL),(324,89,'1','<p>2 trường</p>',1,NULL,NULL),(325,89,'2','<p>3 trường</p>',2,NULL,NULL),(326,89,'3','<p>1 hoặc nhiều trường</p>',3,NULL,NULL),(327,90,'0','<p>Sử dụng khả năng truy nhập ngẫu nhiên của bộ nhớ để truy nhập được thực hiện nhanh.</p>',0,NULL,NULL),(328,90,'1','<p>Tổ chức lại các mẩu tin sao cho các khóa của chúng được sắp thứ tự tương ứng với quy luật sắp xếp</p>',1,NULL,NULL),(329,90,'2','<p>Tìm kiếm một đối tượng trong một danh sách các đối tượng bằng giải thuật tìm kiếm nhị phân nhanh chóng</p>',2,NULL,NULL),(330,90,'3','<p>Tổ chức lại mẩu tin, sau đó phân tích độ phức tạp của phương pháp tổ chức</p>',3,NULL,NULL),(331,91,'0','<p>Sắp xếp xen (Insertion Sort)</p>',0,NULL,NULL),(332,91,'1','<p>Sắp xếp nổi bọt (Bubble Sort)</p>',1,NULL,NULL),(333,91,'2','<p>Sắp xếp chọn (Selection Sort)</p>',2,NULL,NULL),(334,91,'3','<p>Sắp xếp trộn (Merge Sort)</p>',3,NULL,NULL),(335,92,'0','<p>Lặp lại quá trình chọn phần tử nhỏ nhất trong số các phần tử chưa được sắp</p>',0,NULL,NULL),(336,92,'1','<p>Lặp lại quá trình chọn phần tử trung bình trong số các phần tử chưa được sắp</p>',1,NULL,NULL),(337,92,'2','<p>Lặp lại quá trình chọn phần tử lớn nhất trong số các phần tử chưa được sắp</p>',2,NULL,NULL),(338,92,'3','<p>Lặp lại quá trình chọn phần tử lớn nhất trong số các phần tử đã được sắp</p>',3,NULL,NULL),(339,93,'0','<p>Sắp xếp xen (Insertion Sort)</p>',0,NULL,NULL),(340,93,'1','<p>Sắp xếp nổi bọt (Bubble Sort)</p>',1,NULL,NULL),(341,93,'2','<p>Sắp xếp chọn (Selection Sort)</p>',2,NULL,NULL),(342,93,'3','<p>Sắp xếp vun đống (Heap Sort)</p>',3,NULL,NULL),(343,94,'0','<p>Sắp xếp dữ liệu trước</p>',0,NULL,NULL),(344,94,'1','<p>Tìm kiếm bằng cách chia đôi dữ liệu</p>',1,NULL,NULL),(345,94,'2','<p>So sánh lần lượt với từng phần tử của dữ liệu từ đầu</p>',2,NULL,NULL),(346,94,'3','<p>Bắt đầu so sánh với phần tử nằm giữa dãy dữ liệu</p>',3,NULL,NULL),(347,95,'0','<p>Sắp xếp dữ liệu trước</p>',0,NULL,NULL),(348,95,'1','<p>Tìm kiếm xong sau đó mới sắp xếp</p>',1,NULL,NULL),(349,95,'2','<p>Không cần sắp xếp dữ liệu</p>',2,NULL,NULL),(350,95,'3','<p>Phải tìm phần tử lớn nhất và bé nhất</p>',3,NULL,NULL),(351,96,'0','<p>Mảng được sắp xếp giảm dần</p>',0,NULL,NULL),(352,96,'1','<p>Mảng được sắp xếp tăng dần</p>',1,NULL,NULL),(353,96,'2','<p>Mảng không cần sắp xếp </p>',2,NULL,NULL),(354,96,'3','<p>Mảng các số nguyên dương</p>',3,NULL,NULL),(355,97,'0','<p>Mảng được sắp xếp giảm dần</p>',0,NULL,NULL),(356,97,'1','<p>Mảng được sắp xếp tăng dần</p>',1,NULL,NULL),(357,97,'2','<p>Mảng không cần sắp xếp </p>',2,NULL,NULL),(358,97,'3','<p>Mảng các số nguyên dương</p>',3,NULL,NULL),(359,98,'0','<p>Chỉ thực hiện trên dãy số có thứ tự</p>',0,NULL,NULL),(360,98,'1','<p>Có thể áp dụng cho bất kỳ danh sách nào </p>',1,NULL,NULL),(361,98,'2','<p>Thời gian tìm kiếm lâu khi dữ liệu lớn</p>',2,NULL,NULL),(362,98,'3','<p>Không có nhược điểm</p>',3,NULL,NULL),(363,99,'0','<p>Thời gian tìm kiếm nhanh</p>',0,NULL,NULL),(364,99,'1','<p>Cài đặt đơn giản</p>',1,NULL,NULL),(365,99,'2','<p>Chỉ thực hiện trên dãy số có thứ tự</p>',2,NULL,NULL),(366,99,'3','<p>Không có ưu điểm</p>',3,NULL,NULL),(367,100,'0','<p>Tìm kiếm nhị phân x</p>',0,NULL,NULL),(368,100,'1','<p>Tìm kiếm tuần tự x</p>',1,NULL,NULL),(369,100,'2','<p>Thêm x vào mảng a</p>',2,NULL,NULL),(370,100,'3','<p>Thêm n vào mảng a</p>',3,NULL,NULL),(371,101,'0','<p>Tìm kiếm nhị phân x</p>',0,NULL,NULL),(372,101,'1','<p>Tìm kiếm tuần tự x</p>',1,NULL,NULL),(373,101,'2','<p>Thêm x vào mảng a</p>',2,NULL,NULL),(374,101,'3','<p>Thêm n vào mảng a</p>',3,NULL,NULL),(375,102,'0','<p>Để chứa phần tử của mảng</p>',0,NULL,NULL),(376,102,'1','<p>Là các phần tử khởi tạo của mảng</p>',1,NULL,NULL),(377,102,'2','<p>Chứa giá trị đầu và cuối</p>',2,NULL,NULL),(378,102,'3','<p>Không có ý nghĩa gì</p>',3,NULL,NULL),(379,103,'0','<p>Tìm nhị phân phần tử có giá trị X</p>',0,NULL,NULL),(380,103,'1','<p>Tìm phần tử nhỏ nhất trong mảng M bao gồm N phần tử</p>',1,NULL,NULL),(381,103,'2','<p>Tìm tuyến tính phần tử có giá trị X</p>',2,NULL,NULL),(382,103,'3','<p>Tìm phần tử lớn nhất trong mảng N bao gồm M phần tử</p>',3,NULL,NULL),(383,104,'0','<p>Hàm sẽ trả về 0 nếu không tìm thấy phần tử có giá trị X</p>',0,NULL,NULL),(384,104,'1','<p>Hàm sẽ trả về 1 nếu tìm thấy phần tử có giá trị X</p>',1,NULL,NULL),(385,104,'2','<p>Hàm sẽ trả về -1 nếu không tìm thấy phần tử có giá trị X</p>',2,NULL,NULL),(386,104,'3','<p>Hàm sẽ trả về 1 nếu không tìm thấy phần tử có giá trị X</p>',3,NULL,NULL),(387,105,'0','<p>Hàm tìm kiếm phần tử có giá trị X trên mảng các phần tử từ chỉ số First đến chỉ số Last</p>',0,NULL,NULL),(388,105,'1','<p>Hàm tìm kiếm đệ quy phần tử có giá trị X trên mảng các phần tử từ chỉ số First đến chỉ số Last</p>',1,NULL,NULL),(389,105,'2','<p>Hàm tìm kiếm đệ quy phần tử có giá trị X trên mảng các phần tử từ chỉ số Last đến chỉ số First</p>',2,NULL,NULL),(390,105,'3','<p>Hàm tìm kiếm không đệ quy phần tử có giá trị X trên mảng các phần tử từ chỉ số Last đến chỉ số First</p>',3,NULL,NULL),(391,106,'0','<p>for (int J = N-1; J &gt; I; J++)</p>',0,NULL,NULL),(392,106,'1','<p>for (int J = N; J &lt; I; J--)</p>',1,NULL,NULL),(393,106,'2','<p>for (int J = N-1; J &gt; I; J--)</p>',2,NULL,NULL),(394,106,'3','<p>Không có dòng lệnh nào phù hợp, không cần thêm vào thuật toán vẫn chạy đúng</p>',3,NULL,NULL),(395,107,'0','<p>Temp=M[K]; Temp=M[PosMin]; M[PosMin]=Temp;</p>',0,NULL,NULL),(396,107,'1','<p>M[K]=Temp; M[K]=M[PosMin]; M[PosMin]=Temp;</p>',1,NULL,NULL),(397,107,'2','<p>Temp=M[K]; M[PosMin]=M[K]; M[PosMin]=Temp;</p>',2,NULL,NULL),(398,107,'3','<p>Temp=M[K]; M[K]=M[PosMin]; M[PosMin]=Temp;</p>',3,NULL,NULL),(399,108,'0','<p>Bubble sort</p>',0,NULL,NULL),(400,108,'1','<p>Selection sort</p>',1,NULL,NULL),(401,108,'2','<p>Insertion sort</p>',2,NULL,NULL),(402,108,'3','<p>Quick sort</p>',3,NULL,NULL),(403,109,'0','<p>9 lần</p>',0,NULL,NULL),(404,109,'1','<p>10 lần</p>',1,NULL,NULL),(405,109,'2','<p>8 lần </p>',2,NULL,NULL),(406,109,'3','<p>7 lần</p>',3,NULL,NULL),(407,110,'0','<p>7 lần</p>',0,NULL,NULL),(408,110,'1','<p>8 lần</p>',1,NULL,NULL),(409,110,'2','<p>9 lần </p>',2,NULL,NULL),(410,110,'3','<p>10 lần</p>',3,NULL,NULL),(411,111,'0','<p>void Swap(int &amp;X, int &amp;Y){ int Temp=X; X=Y; Y=Temp; }</p>',0,NULL,NULL),(412,111,'1','<p>void Swap(float X, float Y){ int Temp=X; X=Y; Y=Temp; }</p>',1,NULL,NULL),(413,111,'2','<p>void Swap(int *X, int *Y){ int Temp=X; X=Y; Y=Temp; }</p>',2,NULL,NULL),(414,111,'3','<p>void Swap(int X, int Y){ int Temp=X; X=Y; Y=Temp; }</p>',3,NULL,NULL),(415,112,'0','<p>11 23 42 74 58 65</p>',0,NULL,NULL),(416,112,'1','<p>42 11 74 23 58 65</p>',1,NULL,NULL),(417,112,'2','<p>11 23 42 74 65 58</p>',2,NULL,NULL),(418,112,'3','<p>11 23 74 58 65 42</p>',3,NULL,NULL),(419,113,'0','<p>11 23 42 74 65 58</p>',0,NULL,NULL),(420,113,'1','<p>11 23 42 65 74 58</p>',1,NULL,NULL),(421,113,'2','<p>11 23 58 65 42 74</p>',2,NULL,NULL),(422,113,'3','<p>11 23 42 74 58 65</p>',3,NULL,NULL),(423,114,'0','<p>4</p>',0,NULL,NULL),(424,114,'1','<p>2</p>',1,NULL,NULL),(425,114,'2','<p>3</p>',2,NULL,NULL),(426,114,'3','<p>5<br></p>',3,NULL,NULL),(427,115,'0','<p>1</p>',0,NULL,NULL),(428,115,'1','<p>2<br></p>',1,NULL,NULL),(429,115,'2','<p>3<br></p>',2,NULL,NULL),(430,115,'3','<p>4<br></p>',3,NULL,NULL),(431,116,'0','<p>7</p>',0,NULL,NULL),(432,116,'1','<p>8<br></p>',1,NULL,NULL),(433,116,'2','<p>9<br></p>',2,NULL,NULL),(434,116,'3','<p>10<br></p>',3,NULL,NULL),(435,117,'0','<p>74 99 87<br></p>',0,NULL,NULL),(436,117,'1','<p>58 87 99</p>',1,NULL,NULL),(437,117,'2','<p>87 94 99</p>',2,NULL,NULL),(438,117,'3','<p>36 99 87</p>',3,NULL,NULL),(439,81,'0','<p>4</p>',0,NULL,NULL),(440,81,'1','<p>-4</p>',1,NULL,NULL),(441,81,'2','<p>-2</p>',2,NULL,NULL),(442,81,'3','<p>&nbsp;2</p>',3,NULL,NULL),(443,118,'0','<p>11 23 36</p>',0,NULL,NULL),(444,118,'1','<p>11 42 23</p>',1,NULL,NULL),(445,118,'2','<p>11 42 36</p>',2,NULL,NULL),(446,118,'3','<p>11 42 58</p>',3,NULL,NULL),(447,119,'0','<p>65 94 99</p>',0,NULL,NULL),(448,119,'1','<p>87 94 99</p>',1,NULL,NULL),(449,119,'2','<p>36 99 87</p>',2,NULL,NULL),(450,119,'3','<p>58 94 99</p>',3,NULL,NULL),(451,120,'0','<p>Quick Sort</p>',0,NULL,NULL),(452,120,'1','<p>Bubble Sort</p>',1,NULL,NULL),(453,120,'2','<p>Selection Sort</p>',2,NULL,NULL),(454,120,'3','<p>Insertion Sort</p>',3,NULL,NULL),(455,121,'0','<p>Quick sort</p>',0,NULL,NULL),(456,121,'1','<p>Insertion sort</p>',1,NULL,NULL),(457,121,'2','<p>Bubble sort</p>',2,NULL,NULL),(458,121,'3','<p>Selection sort</p>',3,NULL,NULL),(459,122,'0','<p>Selection sort</p>',0,NULL,NULL),(460,122,'1','<p>Quick sort</p>',1,NULL,NULL),(461,122,'2','<p>Insertion sort</p>',2,NULL,NULL),(462,122,'3','<p>Bubble sort</p>',3,NULL,NULL),(463,123,'0','<p>mid</p>',0,NULL,NULL),(464,123,'1','<p>item</p>',1,NULL,NULL),(465,123,'2','<p>first</p>',2,NULL,NULL),(466,123,'3','<p>last</p>',3,NULL,NULL),(467,124,'0','<p>Bubble sort</p>',0,NULL,NULL),(468,124,'1','<p>Insertion sort</p>',1,NULL,NULL),(469,124,'2','<p>Interchange sort</p>',2,NULL,NULL),(470,124,'3','<p>Selection sort</p>',3,NULL,NULL),(471,125,'0','<p>-1</p>',0,NULL,NULL),(472,125,'1','<p>2</p>',1,NULL,NULL),(473,125,'2','<p>4</p>',2,NULL,NULL),(474,125,'3','<p>8</p>',3,NULL,NULL),(475,126,'0','<p>4<br></p>',0,NULL,NULL),(476,126,'1','<p>5<br></p>',1,NULL,NULL),(477,126,'2','<p>6<br></p>',2,NULL,NULL),(478,126,'3','<p>7<br></p>',3,NULL,NULL),(479,127,'0','<p>N-1</p>',0,NULL,NULL),(480,127,'1','<p>N</p>',1,NULL,NULL),(481,127,'2','<p>M-1</p>',2,NULL,NULL),(482,127,'3','<p>M</p>',3,NULL,NULL),(483,128,'0','<p>Thủ tục tìm nhị phân phần tử được nhập từ bàn phím, nếu tìm thấy sẽ thông báo ABSENT</p>',0,NULL,NULL),(484,128,'1','<p>Thủ tục tìm nhị phân phần tử được nhập từ bàn phím, nếu không tìm thấy sẽ thông báo ABSENT</p>',1,NULL,NULL),(485,128,'2','<p>Thủ tục tìm tuyến tính phần tử được nhập từ bàn phím, nếu tìm thấy sẽ thông báo ABSENT</p>',2,NULL,NULL),(486,128,'3','<p>Thủ tục tìm tuyến tính phần tử được nhập từ bàn phím, nếu không tìm thấy sẽ thông báo ABSENT</p>',3,NULL,NULL),(487,129,'0','<p>L và R trong đó L từ bên trái và R từ bên phải</p>',0,NULL,NULL),(488,129,'1','<p>L và R trong đó L từ bên phải và R từ bên trái</p>',1,NULL,NULL),(489,129,'2','<p>T và D trong đó T từ bên trên và D từ bên dưới</p>',2,NULL,NULL),(490,129,'3','<p>T và D trong đó T từ bên dưới và D từ bên trên</p>',3,NULL,NULL),(491,130,'0','<p>Danh sách liên kết là cấu trúc dữ liệu dạng cây</p>',0,NULL,NULL),(492,130,'1','<p>Danh sách liên kết là cấu trúc dữ liệu tự định nghĩa</p>',1,NULL,NULL),(493,130,'2','<p>Danh sách liên kết là tập hợp cácphần tử mà giữa chúng có một sự nối kết với nhau thông qua vùng liên kết của chúng</p>',2,NULL,NULL),(494,130,'3','<p>Danh sách liên kết là tập hợp các phần tử mà đặt kề cận với nhau trong vùng nhớ</p>',3,NULL,NULL),(495,131,'0','<p>Không có trong C/C++</p>',0,NULL,NULL),(496,131,'1','<p>Là hàm trả về giá trị 0</p>',1,NULL,NULL),(497,131,'2','<p>Là từ khóa mang giá trị đặc biệt, ý nghĩa: không có,…</p>',2,NULL,NULL),(498,131,'3','<p>Là hàm trả về giá trị 1</p>',3,NULL,NULL),(499,132,'0','<p>Dễ truy cập đến các phần tử</p>',0,NULL,NULL),(500,132,'1','<p>Dễ thao tác: xóa, thêm phần tử</p>',1,NULL,NULL),(501,132,'2','<p>Chiếm ít không gian nhớ</p>',2,NULL,NULL),(502,132,'3','<p>Không có ưu điểm</p>',3,NULL,NULL),(503,133,'0','<p>Định danh (tên biến)</p>',0,NULL,NULL),(504,133,'1','<p>Địa chỉ biến</p>',1,NULL,NULL),(505,133,'2','<p>Con trỏ lưu địa chỉ biến</p>',2,NULL,NULL),(506,133,'3','<p>Không thể truy xuất</p>',3,NULL,NULL),(507,134,'0','<p>int *p;</p>',0,NULL,NULL),(508,134,'1','<p>typedef int *contro; contro p;</p>',1,NULL,NULL),(509,134,'2','<p>*int p;</p>',2,NULL,NULL),(510,134,'3','<p>int **p;</p>',3,NULL,NULL),(511,135,'0','<p>Địa chỉ phần tử đầu danh sách</p>',0,NULL,NULL),(512,135,'1','<p>Địa chỉ phần tử cuối danh sách</p>',1,NULL,NULL),(513,135,'2','<p>Địa chỉ của phần tử đầu và giữa danh sách</p>',2,NULL,NULL),(514,135,'3','<p>Địa chỉ tất cả các phần tử trong danh sách</p>',3,NULL,NULL),(515,136,'0','<p>Con trỏ trỏ tới phần dữ liệu</p>',0,NULL,NULL),(516,136,'1','<p>Vùng liên kết quản lý địa chỉ phần tử kế tiếp </p>',1,NULL,NULL),(517,136,'2','<p>Con trỏ trỏ tới địa chỉ vùng nhớ của phần tử trước đó</p>',2,NULL,NULL),(518,136,'3','<p>Con trỏ trỏ tới địa chỉ vùng nhớ của phần tử đầu tiên</p>',3,NULL,NULL),(519,137,'0','<p>3</p>',0,NULL,NULL),(520,137,'1','<p>2<br></p>',1,NULL,NULL),(521,137,'2','<p>1<br></p>',2,NULL,NULL),(522,137,'3','<p>4</p>',3,NULL,NULL),(527,138,'0','<p>(L-&gt;left == NULL) </p>',0,NULL,NULL),(528,138,'1','<p>(L-&gt;info == NULL)</p>',1,NULL,NULL),(529,138,'2','<p>(L-&gt;info == NULL)</p><p>(L-&gt;next == NULL)</p>',2,NULL,NULL),(530,138,'3','<p>(L == NULL)</p>',3,NULL,NULL),(531,139,'0','<p>Chuỗi các node</p>',0,NULL,NULL),(532,139,'1','<p>Chuổi các số nguyên</p>',1,NULL,NULL),(533,139,'2','<p>Chuỗi các struct</p>',2,NULL,NULL),(534,139,'3','<p>Chuổi các ký tự</p>',3,NULL,NULL),(535,140,'0','<p>Vùng liên kết của một phần tử trong danh sách liên đôi có 02 mối liên kết với 01 phần tử khác trong danh sách.</p>',0,NULL,NULL),(536,140,'1','<p>Vùng liên kết của một phần tử trong danh sách liên đôi có 01 mối liên kết với 02 phần tử khác trong danh sách.</p>',1,NULL,NULL),(537,140,'2','<p>Vùng liên kết của một phần tử trong danh sách liên đôi có 02 mối liên kết với 02 trước và sau nó trong danh sách.</p>',2,NULL,NULL),(538,140,'3','<p>Vùng liên kết của một phần tử trong danh sách liên đôi có 02 mối liên kết với phần tử đầu và cuối của danh sách</p>',3,NULL,NULL),(539,141,'0','<p>struct Node *pNext;</p>',0,NULL,NULL),(540,141,'1','<p>struct List *pNext;</p>',1,NULL,NULL),(541,141,'2','<p>struct int *pNext;</p>',2,NULL,NULL),(542,141,'3','<p>struct char *pNext;</p>',3,NULL,NULL),(543,142,'0','<p>Con trỏ trỏ tới phần dữ liệu</p>',0,NULL,NULL),(544,142,'1','<p>Vùng liên kết quản lý địa chỉ phần tử kế tiếp</p>',1,NULL,NULL),(545,142,'2','<p>Con trỏ trỏ tới phần dữ liệu cuối của danh sách</p>',2,NULL,NULL),(546,142,'3','<p>Vùng liên kết quản lý địa chỉ phần tử kế tiếp của phần tử cuối</p>',3,NULL,NULL),(547,143,'0','<p>NODE *FindNode(int Data)</p><p>&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NODE *temp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(temp=pHead; (pHead!=NULL &amp;&amp; pHead-&gt;Data!=Data); temp=temp-&gt;next);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return temp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>',0,NULL,NULL),(548,143,'1','<p>NODE *FindNode(int Data)</p><p>&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NODE *temp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(pHead=temp; (pHead!=NULL &amp;&amp; pHead-&gt;Data!=Data); temp=temp-&gt;next);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return temp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>',1,NULL,NULL),(549,143,'2','<p>NODE *FindNode(int Data)</p><p>&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NODE *temp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(temp=NULL; (temp!=NULL &amp;&amp; temp-&gt;Data!=Data); temp=temp-&gt;next)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return temp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>',2,NULL,NULL),(550,143,'3','<p>NODE *FindNode(int Data)</p><p>&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NODE *temp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(temp=pHead; (temp!=NULL &amp;&amp; temp-&gt;Data!=Data); temp=temp-&gt;next);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return temp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>',3,NULL,NULL),(551,144,'0','<p>int size(Node *n)</p><p>&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (n=NULL) return 0;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return 1+size(n-&gt;next);</p><p>&nbsp;&nbsp;&nbsp;&nbsp; }</p>',0,NULL,NULL),(552,144,'1','<p>int size(Node *n)</p><p>&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (n==NULL) return 0;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return 1+size(n);</p><p>&nbsp;&nbsp;&nbsp;&nbsp; }</p>',1,NULL,NULL),(553,144,'2','<p>int size(Node *n)</p><p>&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (n==NULL) return 0;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return 1+size(n-&gt;next);</p><p>&nbsp;&nbsp;&nbsp;&nbsp; }</p>',2,NULL,NULL),(554,144,'3','<p>int size(Node *n)</p><p>&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (n==NULL) return 0;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return 1+size(n-&gt;pre);</p><p>&nbsp;&nbsp;&nbsp;&nbsp; }</p>',3,NULL,NULL),(555,145,'0','<p>head = new Node;</p>',0,NULL,NULL),(556,145,'1','<p>head = new int;</p>',1,NULL,NULL),(557,145,'2','<p>head-&gt;link = NULL;</p>',2,NULL,NULL),(558,145,'3','<p>haed-&gt;data = NULL;</p>',3,NULL,NULL),(559,146,'0','<p>ptr = ptr-&gt;next;</p>',0,NULL,NULL),(560,146,'1','<p>ptr++;</p>',1,NULL,NULL),(561,146,'2','<p>ptr-&gt;next = ptr;</p>',2,NULL,NULL),(562,146,'3','<p>*ptr = ptr-&gt;next;</p>',3,NULL,NULL),(563,147,'0','<p>p-&gt;next = new Node;</p>',0,NULL,NULL),(564,147,'1','<p>q = p-&gt;next;</p>',1,NULL,NULL),(565,147,'2','<p>p-&gt;next = q-&gt;next;</p>',2,NULL,NULL),(566,147,'3','<p>p-&gt;next = q;</p>',3,NULL,NULL),(567,148,'0','<p>L-&gt;left == NULL</p>',0,NULL,NULL),(568,148,'1','<p>L-&gt;info == NULL</p>',1,NULL,NULL),(569,148,'2','<p>L-&gt;next == NULL</p>',2,NULL,NULL),(570,148,'3','<p>L == NULL</p>',3,NULL,NULL),(571,149,'0','<p>Xóa phần tử đầu danh sách</p>',0,NULL,NULL),(572,149,'1','<p>Xóa phần tử bất kỳ</p>',1,NULL,NULL),(573,149,'2','<p>Không có giải thuật nào mô tả như trên</p>',2,NULL,NULL),(574,149,'3','<p>Xóa phần tử cuối</p>',3,NULL,NULL),(575,150,'0','<p>Thêm phần tử p vào đầu danh sách</p>',0,NULL,NULL),(576,150,'1','<p>Thêm phần tử p vào cuối danh sách</p>',1,NULL,NULL),(577,150,'2','<p>Xóa phần tử p khỏi danh sách</p>',2,NULL,NULL),(578,150,'3','<p>Xóa phần tử cuối danh sách</p>',3,NULL,NULL),(579,151,'0','<p>(1)</p>',0,NULL,NULL),(580,151,'1','<p>(2)</p>',1,NULL,NULL),(581,151,'2','<p>(4)</p>',2,NULL,NULL),(582,151,'3','<p>(5)</p>',3,NULL,NULL),(583,152,'0','<p>Trả về địa chỉ của phần tử có Info = X</p>',0,NULL,NULL),(584,152,'1','<p>Trả về giá trị phần tử có Info = X</p>',1,NULL,NULL),(585,152,'2','<p>Trả về địa chỉ của phần tử cuối danh sách</p>',2,NULL,NULL),(586,152,'3','<p>Trả về địa chỉ của phần tử đầu danh sách</p>',3,NULL,NULL),(587,153,'0','<p>2<br></p>',0,NULL,NULL),(588,153,'1','<p>3<br></p>',1,NULL,NULL),(589,153,'2','<p>4<br></p>',2,NULL,NULL),(590,153,'3','<p>5<br></p>',3,NULL,NULL),(591,154,'0','<p>6</p>',0,NULL,NULL),(592,154,'1','<p>-3</p>',1,NULL,NULL),(593,154,'2','<p>8</p>',2,NULL,NULL),(594,154,'3','<p>1</p>',3,NULL,NULL),(595,155,'0','<p>NULL</p>',0,NULL,NULL),(596,155,'1','<p>0</p>',1,NULL,NULL),(597,155,'2','<p>25<br></p>',2,NULL,NULL),(598,155,'3','<p>NILL</p>',3,NULL,NULL),(599,156,'0','<p>1<br></p>',0,NULL,NULL),(600,156,'1','<p>25<br></p>',1,NULL,NULL),(601,156,'2','<p>-3<br></p>',2,NULL,NULL),(602,156,'3','<p>30</p>',3,NULL,NULL),(603,157,'0','<p>5</p>',0,NULL,NULL),(604,157,'1','<p>6<br></p>',1,NULL,NULL),(605,157,'2','<p>7<br></p>',2,NULL,NULL),(606,157,'3','<p>8<br></p>',3,NULL,NULL),(607,158,'0','<p>Chuyển vai trò đứng đầu của NewNode cho SLList</p>',0,NULL,NULL),(608,158,'1','<p>Nối NewNode vào sau SLList</p>',1,NULL,NULL),(609,158,'2','<p>Chuyển vai trò đứng đầu của SLList cho NewNode</p>',2,NULL,NULL),(610,158,'3','<p>Nối SLList vào sau NewNode</p>',3,NULL,NULL),(611,159,'0','<p>IFOF</p>',0,NULL,NULL),(612,159,'1','<p>FILO</p>',1,NULL,NULL),(613,159,'2','<p>LIFO</p>',2,NULL,NULL),(614,159,'3','<p>ILFO</p>',3,NULL,NULL),(615,160,'0','<p>Hàng đợi (queue)</p>',0,NULL,NULL),(616,160,'1','<p>Hàng đợi ưu tiên (priority queue)</p>',1,NULL,NULL),(617,160,'2','<p>Cây nhị phân tìm kiếm</p>',2,NULL,NULL),(618,160,'3','<p>Ngăn xếp (stack)</p>',3,NULL,NULL),(619,161,'0','<p>Ngăn xếp là cấu trúc dữ liệu vào trước ra trước</p>',0,NULL,NULL),(620,161,'1','<p>Ngăn xếp là cấu trúc dữ liệu vào sau ra trước</p>',1,NULL,NULL),(621,161,'2','<p>Ngăn xếp là cấu trúc dữ liệu truy xuất ngẫu nhiên</p>',2,NULL,NULL),(622,161,'3','<p>Ngăn xếp là cấu trúc dữ liệu vào sau ra sau</p>',3,NULL,NULL),(623,162,'0','<p>pop()</p>',0,NULL,NULL),(624,162,'1','<p>push()</p>',1,NULL,NULL),(625,162,'2','<p>isEmpty()</p>',2,NULL,NULL),(626,162,'3','<p>isFull()</p>',3,NULL,NULL),(627,163,'0','<p>Enqueue và Dequeue</p>',0,NULL,NULL),(628,163,'1','<p>Pop và Push</p>',1,NULL,NULL),(629,163,'2','<p>Push và Get</p>',2,NULL,NULL),(630,163,'3','<p>Pop và Get</p>',3,NULL,NULL),(631,164,'0','<p>add</p>',0,NULL,NULL),(632,164,'1','<p>insert</p>',1,NULL,NULL),(633,164,'2','<p>push</p>',2,NULL,NULL),(634,164,'3','<p>append</p>',3,NULL,NULL),(635,165,'0','<p>Thêm phần tử vào vị trí bất kỳ</p>',0,NULL,NULL),(636,165,'1','<p>Loại bỏ phần tử tại vị trí bất kỳ</p>',1,NULL,NULL),(637,165,'2','<p>Thêm vào loại bỏ phần tử luôn thực hiện ở vị trí đỉnh (top)</p>',2,NULL,NULL),(638,165,'3','<p>Thêm vào loại bỏ phần tử có thể thực hiện tại vị trí bất kỳ</p>',3,NULL,NULL),(639,166,'0','<p>Queue</p>',0,NULL,NULL),(640,166,'1','<p>Linked List</p>',1,NULL,NULL),(641,166,'2','<p>Tree</p>',2,NULL,NULL),(642,166,'3','<p>Stack</p>',3,NULL,NULL),(643,167,'0','<p>Remove p</p>',0,NULL,NULL),(644,167,'1','<p>Return p;</p>',1,NULL,NULL),(645,167,'2','<p>Delete p;</p>',2,NULL,NULL),(646,167,'3','<p>Pop(p,x)</p>',3,NULL,NULL),(647,168,'0','<p>s.pTop=NULL;</p>',0,NULL,NULL),(648,168,'1','<p>s.pTop=0;</p>',1,NULL,NULL),(649,168,'2','<p>s.pNext=NULL;</p>',2,NULL,NULL),(650,168,'3','<p>s.pTop-&gt;pNext=NULL</p>',3,NULL,NULL),(651,169,'0','<p>Data *pTop</p>',0,NULL,NULL),(652,169,'1','<p>Node *pTop;</p>',1,NULL,NULL),(653,169,'2','<p>struct Node *pTop;S</p>',2,NULL,NULL),(654,169,'3','<p>struct Node&nbsp; pTop;</p>',3,NULL,NULL),(655,170,'0','<p>p-&gt;pTop = x</p>',0,NULL,NULL),(656,170,'1','<p>p-&gt;pNext = x</p>',1,NULL,NULL),(657,170,'2','<p>p-&gt;pNext = s.pTop;</p>',2,NULL,NULL),(658,170,'3','<p>s.pTop=pàpNext;</p>',3,NULL,NULL),(659,171,'0','<p>2<br></p>',0,NULL,NULL),(660,171,'1','<p>1<br></p>',1,NULL,NULL),(661,171,'2','<p>3</p>',2,NULL,NULL),(662,171,'3','<p>Lỗi do Stack rỗng</p>',3,NULL,NULL),(663,172,'0','<p>Hủy phần tử đầu của Stack</p>',0,NULL,NULL),(664,172,'1','<p>Hủy phần tử cuối của Stack</p>',1,NULL,NULL),(665,172,'2','<p>Hủy phần tử cuối của Stack và lấy giá trị đó in ra màn hình</p>',2,NULL,NULL),(666,172,'3','<p>Hủy toàn bộ Stack</p>',3,NULL,NULL),(667,173,'0','<p>IFOF</p>',0,NULL,NULL),(668,173,'1','<p>FILO</p>',1,NULL,NULL),(669,173,'2','<p>FIFO</p>',2,NULL,NULL),(670,173,'3','<p>LIFO</p>',3,NULL,NULL),(671,174,'0','<p>Hàng đợi là cấu trúc dữ liệu vào trước ra trước</p>',0,NULL,NULL),(672,174,'1','<p>Hàng đợi là cấu trúc dữ liệu vào sau ra trước</p>',1,NULL,NULL),(673,174,'2','<p>Hàng đợi là cấu trúc dữ liệu truy xuất ngẫu nhiên</p>',2,NULL,NULL),(674,174,'3','<p>Hàng đợi là cấu trúc dữ liệu vào sau ra sau</p>',3,NULL,NULL),(675,175,'0','<p>giữa</p>',0,NULL,NULL),(676,175,'1','<p>cuối</p>',1,NULL,NULL),(677,175,'2','<p>đầu</p>',2,NULL,NULL),(678,175,'3','<p>đầu và cuối</p>',3,NULL,NULL),(679,176,'0','<p>Cây nhị phân tìm kiếm</p>',0,NULL,NULL),(680,176,'1','<p>Danh sách liên kết</p>',1,NULL,NULL),(681,176,'2','<p>Ngăn xếp</p>',2,NULL,NULL),(682,176,'3','<p>Hàng đợi</p>',3,NULL,NULL),(683,177,'0','<p>ABCD</p>',0,NULL,NULL),(684,177,'1','<p>DCAB</p>',1,NULL,NULL),(685,177,'2','<p>DCBA</p>',2,NULL,NULL),(686,177,'3','<p>ABDC</p>',3,NULL,NULL),(687,178,'0','<p>insertqueue</p>',0,NULL,NULL),(688,178,'1','<p>dequeue</p>',1,NULL,NULL),(689,178,'2','<p>enqueue</p>',2,NULL,NULL),(690,178,'3','<p>Màn hình</p>',3,NULL,NULL),(691,179,'0','<p>Thêm phần tử vào cuối</p>',0,NULL,NULL),(692,179,'1','<p>Loại bỏ phần tử ở cuối</p>',1,NULL,NULL),(693,179,'2','<p>Thêm phần tử ở đầu</p>',2,NULL,NULL),(694,179,'3','<p>Thêm và loại bỏ phần tử tại vị trí bất kỳ</p>',3,NULL,NULL),(695,180,'0','<p>Lối trước nhận giá trị = 0</p>',0,NULL,NULL),(696,180,'1','<p>Lối trước có giá trị &gt; giá trị của lối sau </p>',1,NULL,NULL),(697,180,'2','<p>Lối trước có giá trị &lt; giá trị của lối sau&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>',2,NULL,NULL),(698,180,'3','<p>Lối sau nhận giá trị = 0 </p>',3,NULL,NULL),(699,181,'0','<p>Không làm gì cả</p>',0,NULL,NULL),(700,181,'1','<p>Xóa bình thường</p>',1,NULL,NULL),(701,181,'2','<p>Chương trình báo lỗi</p>',2,NULL,NULL),(702,181,'3','<p>Không có trường hợp này xảy ra</p>',3,NULL,NULL),(703,182,'0','<p>Hàng đợi còn được gọi là danh sách FILO và cấu trúc dữ liệu này còn được gọi cấu trúc FILO (First In Last Out)</p>',0,NULL,NULL),(704,182,'1','<p>Hàng đợi là một danh sách mà trong đó thao tác thêm 1 phần tử vào trong danh sách được thực hiện 1 đầu này và lấy 1 phần tử trong danh sách lại thực hiện bởi đầu kia.</p>',1,NULL,NULL),(705,182,'2','<p>Hàng đợi là một danh sách mà trong đó thao tác thêm 1 phần tử hay hủy một phần tử trong danh sách được thực hiện 1 đầu.</p>',2,NULL,NULL),(706,182,'3','<p>Hàng đợi phải là một danh sách liên kết đơn.</p>',3,NULL,NULL),(707,183,'0','<p>Queue</p>',0,NULL,NULL),(708,183,'1','<p>Stack</p>',1,NULL,NULL),(709,183,'2','<p>Danh sách liên kết</p>',2,NULL,NULL),(710,183,'3','<p>Cây nhị phân</p>',3,NULL,NULL),(711,184,'0','<p>q.pFront=NULL;</p>',0,NULL,NULL),(712,184,'1','<p>q.pRear=NULLl;</p>',1,NULL,NULL),(713,184,'2','<p>Node *p=TaoNut(X)</p>',2,NULL,NULL),(714,184,'3','<p>p-&gt;Info=X;</p>',3,NULL,NULL),(715,185,'0','<p>Nút con bên phải nhất</p>',0,NULL,NULL),(716,185,'1','<p>Nút con bên trái nhất</p>',1,NULL,NULL),(717,185,'2','<p>Nút gốc</p>',2,NULL,NULL),(718,185,'3','<p>Nút lá</p>',3,NULL,NULL),(719,186,'0','<p>Thứ 1</p>',0,NULL,NULL),(720,186,'1','<p>Thứ 2</p>',1,NULL,NULL),(721,186,'2','<p>Thứ 23</p>',2,NULL,NULL),(722,186,'3','<p>Thứ 24</p>',3,NULL,NULL),(723,187,'0','<p>Nút gốc </p>',0,NULL,NULL),(724,187,'1','<p>Nút lá</p>',1,NULL,NULL),(725,187,'2','<p>Nút con bên phải nhất</p>',2,NULL,NULL),(726,187,'3','<p>Nút con bên trái nhất</p>',3,NULL,NULL),(727,188,'0','<p>Mỗi nút (trừ nút lá) đều có 2 nút con</p>',0,NULL,NULL),(728,188,'1','<p>Nút nào cũng có nút con</p>',1,NULL,NULL),(729,188,'2','<p>Mỗi nút có không quá 2 nút con</p>',2,NULL,NULL),(730,188,'3','<p>Nút nào cũng có nút cha</p>',3,NULL,NULL),(731,189,'0','<p>Có cấu trúc phân cấp, không tồn tại chu trình</p>',0,NULL,NULL),(732,189,'1','<p>Bậc của 1 nút là số cây con của nút đó</p>',1,NULL,NULL),(733,189,'2','<p>Nút lá là nút có bậc 1</p>',2,NULL,NULL),(734,189,'3','<p>Độ dài đường đi từ gốc đến nút là số nhánh cần đi qua kể từ gốc</p>',3,NULL,NULL),(735,190,'0','<p>Thứ 1 </p>',0,NULL,NULL),(736,190,'1','<p>Thứ 2</p>',1,NULL,NULL),(737,190,'2','<p>Thứ 3</p>',2,NULL,NULL),(738,190,'3','<p>Thứ 4</p>',3,NULL,NULL),(739,191,'0','<p>Về bên trái nút xét</p>',0,NULL,NULL),(740,191,'1','<p>Về bên phải nút xét</p>',1,NULL,NULL),(741,191,'2','<p>Thêm vào nút gốc</p>',2,NULL,NULL),(742,191,'3','<p>Không thêm được</p>',3,NULL,NULL),(743,192,'0','<p>Về bên trái nút xét</p>',0,NULL,NULL),(744,192,'1','<p>Về bên phải nút xét</p>',1,NULL,NULL),(745,192,'2','<p>Thêm vào nút gốc</p>',2,NULL,NULL),(746,192,'3','<p>Không thêm được</p>',3,NULL,NULL),(747,193,'0','<p>là nút có bậc bằng 0 và&nbsp; là nút gốc. </p>',0,NULL,NULL),(748,193,'1','<p>là nút có bậc bằng 0 và không phải là gốc.</p>',1,NULL,NULL),(749,193,'2','<p>là nút có bậc khác 0 và không phải là gốc.</p>',2,NULL,NULL),(750,193,'3','<p>là nút có bậc khác 0 và là nút gốc.</p>',3,NULL,NULL),(751,194,'0','<p>Duyệt theo thứ tự trước</p>',0,NULL,NULL),(752,194,'1','<p>Duyệt theo thứ tự sau</p>',1,NULL,NULL),(753,194,'2','<p>Duyệt theo thứ tự giữa</p>',2,NULL,NULL),(754,194,'3','<p>Duyệt không có thứ tự</p>',3,NULL,NULL),(755,195,'0','<p>PreOrder</p>',0,NULL,NULL),(756,195,'1','<p>InOrder</p>',1,NULL,NULL),(757,195,'2','<p>LastOrder</p>',2,NULL,NULL),(758,195,'3','<p>PostOrder</p>',3,NULL,NULL),(759,196,'0','<p>LRN</p>',0,NULL,NULL),(760,196,'1','<p>NLR</p>',1,NULL,NULL),(761,196,'2','<p>RLN</p>',2,NULL,NULL),(762,196,'3','<p>LNR</p>',3,NULL,NULL),(763,197,'0','<p>struct Node *pNext;</p>',0,NULL,NULL),(764,197,'1','<p>struct List *pNext;</p>',1,NULL,NULL),(765,197,'2','<p>struct int *pLeft;</p>',2,NULL,NULL),(766,197,'3','<p>struct Node *pLeft;</p>',3,NULL,NULL),(767,198,'0','<p>2</p>',0,NULL,NULL),(768,198,'1','<p>0</p>',1,NULL,NULL),(769,198,'2','<p>1</p>',2,NULL,NULL),(770,198,'3','<p>3<br></p>',3,NULL,NULL),(771,199,'0','<p>Gốc</p>',0,NULL,NULL),(772,199,'1','<p>Chính</p>',1,NULL,NULL),(773,199,'2','<p>Thân</p>',2,NULL,NULL),(774,199,'3','<p>Nhánh</p>',3,NULL,NULL),(775,200,'0','<p>Số lượng nút của cây</p>',0,NULL,NULL),(776,200,'1','<p>Mức lớn nhất của cây</p>',1,NULL,NULL),(777,200,'2','<p>Cấp lớn nhất của cây</p>',2,NULL,NULL),(778,200,'3','<p>Số cây con của cây</p>',3,NULL,NULL),(779,201,'0','<p>Giá trị của một node bất kỳ luôn lớn hơn giá trị của tất cả các node bên trái và nhỏ hơn giá trị tất cả các node bên phải</p>',0,NULL,NULL),(780,201,'1','<p>Cây có m nhánh, một nút có k khóa sẽ có&nbsp; k+1 cây con, các cây con có thể rỗng1</p>',1,NULL,NULL),(781,201,'2','<p>Mỗi Node thỏa, độ cao của cây con bên trái và độ cao của cây con bên phải chênh lệch nhau không quá 1</p>',2,NULL,NULL),(782,201,'3','<p>Là cây nhị phân</p>',3,NULL,NULL),(787,202,'0','<p>(2 * (4 + (5 + 3)))</p>',0,NULL,NULL),(788,202,'1','<p>(4 * (2+ (5 + 3)))</p>',1,NULL,NULL),(789,202,'2','<p>(2 * (3 + (5 +4)))</p>',2,NULL,NULL),(790,202,'3','<p>(2 * (5 + (4+ 3)))</p>',3,NULL,NULL),(791,203,'0','<p>2</p>',0,NULL,NULL),(792,203,'1','<p>3<br></p>',1,NULL,NULL),(793,203,'2','<p>4<br></p>',2,NULL,NULL),(794,203,'3','<p>5<br></p>',3,NULL,NULL),(795,204,'0','<p>1<br></p>',0,NULL,NULL),(796,204,'1','<p>2<br></p>',1,NULL,NULL),(797,204,'2','<p>3<br></p>',2,NULL,NULL),(798,204,'3','<p>4<br></p>',3,NULL,NULL),(811,205,'0','<p>Thêm nút</p>',0,NULL,NULL),(812,205,'1','<p>Xóa nút</p>',1,NULL,NULL),(813,205,'2','<p>Duyệt cây</p>',2,NULL,NULL),(814,205,'3','<p>Tìm kiếm 1 nút </p>',3,NULL,NULL),(827,206,'0','<p>32</p>',0,NULL,NULL),(828,206,'1','<p>65</p>',1,NULL,NULL),(829,206,'2','<p>24</p>',2,NULL,NULL),(830,206,'3','<p>75</p>',3,NULL,NULL),(835,207,'0','<p>Bên trái 25</p>',0,NULL,NULL),(836,207,'1','<p>Bên phải 25</p>',1,NULL,NULL),(837,207,'2','<p>Bên trái 50</p>',2,NULL,NULL),(838,207,'3','<p>Bên phải 50</p>',3,NULL,NULL),(843,208,'0','<p>ADBCEFG</p>',0,NULL,NULL),(844,208,'1','<p>AEDBCFG</p>',1,NULL,NULL),(845,208,'2','<p>ABDECFG</p>',2,NULL,NULL),(846,208,'3','<p>AEBDCGF</p>',3,NULL,NULL),(851,209,'0','<p>DBEAFCG</p>',0,NULL,NULL),(852,209,'1','<p>BEDACFG</p>',1,NULL,NULL),(853,209,'2','<p>DEBAGFC</p>',2,NULL,NULL),(854,209,'3','<p>DBEACFG</p>',3,NULL,NULL),(859,210,'0','<p>DEBFGCA</p>',0,NULL,NULL),(860,210,'1','<p>EBFCGAD</p>',1,NULL,NULL),(861,210,'2','<p>DBEFAGC</p>',2,NULL,NULL),(862,210,'3','<p>DEBGCFA</p>',3,NULL,NULL),(863,211,'0','<p>BDHE</p>',0,NULL,NULL),(864,211,'1','<p>FIHE</p>',1,NULL,NULL),(865,211,'2','<p>DHEG</p>',2,NULL,NULL),(866,211,'3','<p>DEH</p>',3,NULL,NULL),(867,212,'0','<p>FICGJ</p>',0,NULL,NULL),(868,212,'1','<p>FBHE</p>',1,NULL,NULL),(869,212,'2','<p>ICGH</p>',2,NULL,NULL),(870,212,'3','<p>HEFI</p>',3,NULL,NULL),(871,213,'0','<p>8 và 9</p>',0,NULL,NULL),(872,213,'1','<p>14 và 15</p>',1,NULL,NULL),(873,213,'2','<p>30 và 31</p>',2,NULL,NULL),(874,213,'3','<p>13 và 14</p>',3,NULL,NULL),(875,214,'0','<p>17</p>',0,NULL,NULL),(876,214,'1','<p>8<br></p>',1,NULL,NULL),(877,214,'2','<p>9<br></p>',2,NULL,NULL),(878,214,'3','<p>18<br></p>',3,NULL,NULL),(887,215,'0','<p>C<br></p>',0,NULL,NULL),(888,215,'1','<p>E<br></p>',1,NULL,NULL),(889,215,'2','<p>H<br></p>',2,NULL,NULL),(890,215,'3','<p>B<br></p>',3,NULL,NULL),(891,216,'0','<p>Node-&gt;Right</p>',0,NULL,NULL),(892,216,'1','<p>Node-&gt;Data</p>',1,NULL,NULL),(893,216,'2','<p>Node-&gt;Left</p>',2,NULL,NULL),(894,216,'3','<p>K</p>',3,NULL,NULL),(899,217,'0','<p>5<br></p>',0,NULL,NULL),(900,217,'1','<p>7<br></p>',1,NULL,NULL),(901,217,'2','<p>4<br></p>',2,NULL,NULL),(902,217,'3','<p>3<br></p>',3,NULL,NULL),(903,218,'0','<p>top</p>',0,NULL,NULL),(904,218,'1','<p>NULL</p>',1,NULL,NULL),(905,218,'2','<p>top-&gt;Left</p>',2,NULL,NULL),(906,218,'3','<p>top-&gt;Right</p>',3,NULL,NULL),(911,219,'0','<p>25</p>',0,NULL,NULL),(912,219,'1','<p>20<br></p>',1,NULL,NULL),(913,219,'2','<p>28<br></p>',2,NULL,NULL),(914,219,'3','<p>27<br></p>',3,NULL,NULL),(915,220,'0','<p>2<br></p>',0,NULL,NULL),(916,220,'1','<p>1<br></p>',1,NULL,NULL),(917,220,'2','<p>0<br></p>',2,NULL,NULL),(918,220,'3','<p>0, 1 hoặc 2</p>',3,NULL,NULL),(919,221,'0','<p>DBEAC</p>',0,NULL,NULL),(920,221,'1','<p>ABCDE</p>',1,NULL,NULL),(921,221,'2','<p>ABDEC</p>',2,NULL,NULL),(922,221,'3','<p>DEBAC</p>',3,NULL,NULL),(923,222,'0','<p>typedef struct *node</p><p>&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int key;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; node Left;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; node Right;</p><p>&nbsp;&nbsp;&nbsp;&nbsp; };</p>',0,NULL,NULL),(924,222,'1','<p>typedef struct node</p><p>&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; node Left;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; node Right;</p><p>&nbsp;&nbsp;&nbsp;&nbsp; };</p>',1,NULL,NULL),(925,222,'2','<p>typedef struct node</p><p>&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int key;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; node *Left;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; node *Right;</p><p>&nbsp;&nbsp;&nbsp;&nbsp; };</p>',2,NULL,NULL),(926,222,'3','<p>typedef struct node</p><p>&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int key;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; node Left;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; node Right;</p><p>&nbsp;&nbsp;&nbsp;&nbsp; };</p>',3,NULL,NULL),(931,223,'0','<p>15 10 20 4 12 30 1 6 11</p>',0,NULL,NULL),(932,223,'1','<p>15 10 4 1 6 12 11 20 30</p>',1,NULL,NULL),(933,223,'2','<p>30 20 15 10 12 11 4 6 1</p>',2,NULL,NULL),(934,223,'3','<p>1 4 6 10 11 12 15 20 30</p>',3,NULL,NULL),(939,224,'0','<p>2<br></p>',0,NULL,NULL),(940,224,'1','<p>5<br></p>',1,NULL,NULL),(941,224,'2','<p>3<br></p>',2,NULL,NULL),(942,224,'3','<p>4<br></p>',3,NULL,NULL),(943,225,'0','<p>Tính độ cao của cây</p>',0,NULL,NULL),(944,225,'1','<p>Đếm các nút lá của cây</p>',1,NULL,NULL),(945,225,'2','<p>Đếm các nút con của cây</p>',2,NULL,NULL),(946,225,'3','<p>Đếm tất các nút của cây</p>',3,NULL,NULL),(947,226,'0','<p>3<br></p>',0,NULL,NULL),(948,226,'1','<p>1<br></p>',1,NULL,NULL),(949,226,'2','<p>4<br></p>',2,NULL,NULL),(950,226,'3','<p>2<br></p>',3,NULL,NULL),(951,227,'0','<p>7<br></p>',0,NULL,NULL),(952,227,'1','<p>5<br></p>',1,NULL,NULL),(953,227,'2','<p>2<br></p>',2,NULL,NULL),(954,227,'3','<p>3<br></p>',3,NULL,NULL),(955,228,'0','<p>10<br></p>',0,NULL,NULL),(956,228,'1','<p>6<br></p>',1,NULL,NULL),(957,228,'2','<p>8<br></p>',2,NULL,NULL),(958,228,'3','<p>4<br></p>',3,NULL,NULL),(959,229,'0','<p>T-&gt;Data, T-&gt;Right</p>',0,NULL,NULL),(960,229,'1','<p>T-&gt;Right, T-&gt;Left</p>',1,NULL,NULL),(961,229,'2','<p>T-&gt;Left, T-&gt;Right</p>',2,NULL,NULL),(962,229,'3','<p>T-&gt;Left, T-&gt;Data</p>',3,NULL,NULL),(963,230,'0','<p>13 5 6 14 17</p>',0,NULL,NULL),(964,230,'1','<p>14 5 6 17 13</p>',1,NULL,NULL),(965,230,'2','<p>14 6 5 13 17</p>',2,NULL,NULL),(966,230,'3','<p>17 14 13 6 5</p>',3,NULL,NULL),(971,231,'0','<p>1<br></p>',0,NULL,NULL),(972,231,'1','<p>12<br></p>',1,NULL,NULL),(973,231,'2','<p>40<br></p>',2,NULL,NULL),(974,231,'3','<p>15<br></p>',3,NULL,NULL),(979,232,'0','<p>19<br></p>',0,NULL,NULL),(980,232,'1','<p>NULL</p>',1,NULL,NULL),(981,232,'2','<p>21<br></p>',2,NULL,NULL),(982,232,'3','<p>25<br></p>',3,NULL,NULL),(987,233,'0','<p>2<br></p>',0,NULL,NULL),(988,233,'1','<p>3<br></p>',1,NULL,NULL),(989,233,'2','<p>1<br></p>',2,NULL,NULL),(990,233,'3','<p>4<br></p>',3,NULL,NULL),(1003,234,'0','<p>13&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 55&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 40&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 169&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 11&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 20&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 34&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 50&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 90&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 22</p>',0,NULL,NULL),(1004,234,'1','<p>13&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 169&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 20&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 11&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 40&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 55&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 22&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 90&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 50&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 34</p>',1,NULL,NULL),(1005,234,'2','<p>34&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 55&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 13&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 40&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 11&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 169&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 20&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 50&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 90&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 22</p>',2,NULL,NULL),(1006,234,'3','<p>55&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 34&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 13&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 40&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 11&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 169&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 20&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 50&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 90&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 22</p>',3,NULL,NULL),(1007,236,'0','<p>Cây cân bằng tương đối là một cây nhị phân thỏa mãn điều kiện là đối với mọi nút của cây thì số nút của cây con trái và số nút của cây con phải của nút đó hơn kém nhau không quá 1. Cây cân bằng tương đối còn được gọi là cây AVL (AVL tree).</p>',0,NULL,NULL),(1008,236,'1','<p>Cây cân bằng tương đối là một cây N phân thỏa mãn điều kiện là đối với mọi nút của cây thì chiều cao của cây con trái và chiều cao của cây con phải của nút đó hơn kém nhau không quá 2. Cây cân bằng tương đối còn được gọi là cây AVL (AVL tree).</p>',1,NULL,NULL),(1009,236,'2','<p>Cây cân bằng tương đối là một cây nhị phân thỏa mãn điều kiện là đối với mọi nút của cây thì chiều cao của cây con trái và chiều cao của cây con phải của nút đó hơn kém nhau không quá 1. Cây cân bằng tương đối còn được gọi là cây AVL (AVL tree).</p>',2,NULL,NULL),(1010,236,'3','<p>Cây cân bằng tương đối cũng là cây cân bằng hoàn toàn.</p>',3,NULL,NULL),(1011,237,'0','<p>1 -2 -5 3 5 10</p>',0,NULL,NULL),(1012,237,'1','<p>10 -4 -5 11 5 10</p>',1,NULL,NULL),(1013,237,'2','<p>12 -2 -5 13 15 10</p>',2,NULL,NULL),(1014,237,'3','<p>2 -12 -15 3 10 5</p>',3,NULL,NULL),(1015,238,'0','<p>12 -5 -2 2 10 13</p>',0,NULL,NULL),(1016,238,'1','<p>2 -5 -12 -2 10 15</p>',1,NULL,NULL),(1017,238,'2','<p>12 -2 -5 13 15 10</p>',2,NULL,NULL),(1018,238,'3','<p>10 -4 -5 11 5 10</p>',3,NULL,NULL),(1019,239,'0','<p>10 -4 -5 11 5 10</p>',0,NULL,NULL),(1020,239,'1','<p>12 -2 -5 13 15 10</p>',1,NULL,NULL),(1021,239,'2','<p>1 -2 -5 3 5 10</p>',2,NULL,NULL),(1022,239,'3','<p>2 -5 -12 -2 10 15</p>',3,NULL,NULL),(1023,240,'0','<p>Bàn phím</p>',0,NULL,NULL),(1024,240,'1','<p>RAM</p>',1,NULL,NULL),(1025,240,'2','<p>Đĩa cứng</p>',2,NULL,NULL),(1026,240,'3','<p>Màn hình</p>',3,NULL,NULL),(1027,241,'0','<p>Màn hình</p>',0,NULL,NULL),(1028,241,'0','<p>Bàn phím</p>',1,NULL,NULL),(1029,241,'0','<p>Đĩa cứng</p>',2,NULL,NULL),(1030,241,'0','<p>RAM</p>',3,NULL,NULL),(1031,241,'1','<p>Bộ nhớ để xử lý</p>',0,NULL,NULL),(1032,241,'1','<p>Lưu trữ thông tin</p>',1,NULL,NULL),(1033,241,'1','<p>Hiển thị</p>',2,NULL,NULL),(1034,241,'1','<p>Nhập dữ liệu</p>',3,NULL,NULL),(1035,242,'1','<p>Thuật toán<br></p>',0,NULL,NULL),(1036,243,'1','<p>Thuật toán<br></p>',0,NULL,NULL),(1037,244,'0','<p>Bàn phím</p>',0,NULL,NULL),(1038,244,'1','<p>RAM</p>',1,NULL,NULL),(1039,244,'2','<p>Đĩa cứng</p>',2,NULL,NULL),(1040,244,'3','<p>Màn hình</p>',3,NULL,NULL),(1041,245,'1','<p>Thuật toán<br></p>',0,NULL,NULL),(1042,246,'1','<p>Số lần<br></p>',0,NULL,NULL),(1043,247,'1','<p>Độ phức tạp</p>',0,NULL,NULL),(1044,248,'0','<p>for(int i=0; i&lt;=15; i++) printf(\"%d\",i);</p>',0,NULL,NULL),(1045,248,'1','<p>for(int i=0, i&lt;=15, i++) printf(\"%d\",i);</p>',1,NULL,NULL),(1046,248,'2','<p>for(int i=0; i&lt;15; i++) printf(\"%d\",i);</p>',2,NULL,NULL),(1047,248,'3','<p>for(int i=0, i&lt;15, i++) printf(\"%d\",i);</p>',3,NULL,NULL),(1048,249,'0','<p>Bàn phím</p>',0,NULL,NULL),(1049,249,'1','<p>RAM</p>',1,NULL,NULL),(1050,249,'2','<p>Đĩa cứng</p>',2,NULL,NULL),(1051,249,'3','<p>Màn hình</p>',3,NULL,NULL),(1052,250,'1','<p>Thuật toán<br></p>',0,NULL,NULL),(1053,251,'0','<p>O(1)</p>',0,NULL,NULL),(1054,251,'1','<p>O(n)</p>',1,NULL,NULL),(1055,251,'2','<p>O(n<sup>2</sup>)</p>',2,NULL,NULL),(1056,251,'3','<p>O(2<sup>n</sup>)</p>',3,NULL,NULL),(1057,252,'1','<p>Số lần<br></p>',0,NULL,NULL),(1058,253,'1','<p>Độ phức tạp</p>',0,NULL,NULL),(1059,254,'0','<p>for(int i=0; i&lt;=15; i++) printf(\"%d\",i);</p>',0,NULL,NULL),(1060,254,'1','<p>for(int i=0, i&lt;=15, i++) printf(\"%d\",i);</p>',1,NULL,NULL),(1061,254,'2','<p>for(int i=0; i&lt;15; i++) printf(\"%d\",i);</p>',2,NULL,NULL),(1062,254,'3','<p>for(int i=0, i&lt;15, i++) printf(\"%d\",i);</p>',3,NULL,NULL),(1063,255,'0','<p>Bàn phím</p>',0,NULL,NULL),(1064,255,'1','<p>RAM</p>',1,NULL,NULL),(1065,255,'2','<p>Đĩa cứng</p>',2,NULL,NULL),(1066,255,'3','<p>Màn hình</p>',3,NULL,NULL),(1067,256,'0','<p>Màn hình</p>',0,NULL,NULL),(1068,256,'0','<p>Bàn phím</p>',1,NULL,NULL),(1069,256,'0','<p>Đĩa cứng</p>',2,NULL,NULL),(1070,256,'0','<p>RAM</p>',3,NULL,NULL),(1071,256,'1','<p>Bộ nhớ để xử lý</p>',0,NULL,NULL),(1072,256,'1','<p>Lưu trữ thông tin</p>',1,NULL,NULL),(1073,256,'1','<p>Hiển thị</p>',2,NULL,NULL),(1074,256,'1','<p>Nhập dữ liệu</p>',3,NULL,NULL),(1075,257,'0','<p>Bàn phím</p>',0,NULL,NULL),(1076,257,'1','<p>RAM</p>',1,NULL,NULL),(1077,257,'2','<p>Đĩa cứng</p>',2,NULL,NULL),(1078,257,'3','<p>Màn hình</p>',3,NULL,NULL),(1079,258,'0','<p>p = Head</p>',0,NULL,NULL),(1080,258,'1','<p>Head = Head-&gt;pNext</p>',1,NULL,NULL),(1081,258,'2','<p>delete(p)</p>',2,NULL,NULL),(1082,258,'3','<p>Nếu Head=NULL thì Tail=NULL</p>',3,NULL,NULL),(1083,259,'1','<p>Thuật toán<br></p>',0,NULL,NULL),(1084,260,'0','<p>Màn hình</p>',0,NULL,NULL),(1085,260,'0','<p>Bàn phím</p>',1,NULL,NULL),(1086,260,'0','<p>Đĩa cứng</p>',2,NULL,NULL),(1087,260,'0','<p>RAM</p>',3,NULL,NULL),(1088,260,'1','<p>Bộ nhớ để xử lý</p>',0,NULL,NULL),(1089,260,'1','<p>Lưu trữ thông tin</p>',1,NULL,NULL),(1090,260,'1','<p>Hiển thị</p>',2,NULL,NULL),(1091,260,'1','<p>Nhập dữ liệu</p>',3,NULL,NULL),(1092,261,'1','<p>Con số<br></p>',0,NULL,NULL),(1093,262,'1','<p>Độ phức tạp</p>',0,NULL,NULL),(1094,263,'1','<p>Tên</p>',0,NULL,NULL),(1095,263,'2','<p><br data-mce-bogus=\"1\"></p>',1,NULL,NULL),(1096,264,'0','<p>100<br></p>',0,NULL,NULL),(1097,264,'1','<p>5<br></p>',1,NULL,NULL),(1098,264,'2','<p>125<br></p>',2,NULL,NULL),(1099,264,'3','<p>25<br></p>',3,NULL,NULL),(1100,265,'0','<p>O(0)</p>',0,NULL,NULL),(1101,265,'1','<p>O(n^2)</p>',1,NULL,NULL),(1102,265,'2','<p>O(n)</p>',2,NULL,NULL),(1103,265,'3','<p>O(1)</p>',3,NULL,NULL),(1104,266,'0','<p>c<br></p>',0,NULL,NULL),(1105,266,'1','<p>ll4</p>',1,NULL,NULL),(1106,266,'2','<p>inc<br></p>',2,NULL,NULL),(1107,266,'3','<p>oll4<br></p>',3,NULL,NULL),(1108,267,'1','<p>giá trị số<br></p>',0,NULL,NULL),(1109,268,'0','<p>28</p>',0,NULL,NULL),(1110,268,'1','<p>30</p>',1,NULL,NULL),(1111,268,'2','<p>18</p>',2,NULL,NULL),(1112,268,'3','<p>10</p>',3,NULL,NULL),(1113,269,'0','<p>n^2, 2^n, n*logn, logn, n, 1</p>',0,NULL,NULL),(1114,269,'1','<p>2^n, n^2, n*logn, n, logn, 1</p>',1,NULL,NULL),(1115,269,'2','<p>n*logn, 2^n, n^2, n, logn, 1</p>',2,NULL,NULL),(1116,269,'3','<p>2^n, n*logn, n^2, n, logn, 1</p>',3,NULL,NULL),(1117,270,'0','<p>Sắp xếp dữ liệu trước</p>',0,NULL,NULL),(1118,270,'1','<p>Tìm kiếm xong sau đó mới sắp xếp</p>',1,NULL,NULL),(1119,270,'2','<p>Không cần sắp xếp dữ liệu</p>',2,NULL,NULL),(1120,270,'3','<p>Phải tìm phần tử lớn nhất và bé nhất</p>',3,NULL,NULL),(1121,271,'0','<p>Mảng được sắp xếp giảm dần</p>',0,NULL,NULL),(1122,271,'1','<p>Mảng được sắp xếp tăng dần</p>',1,NULL,NULL),(1123,271,'2','<p>Mảng không cần sắp xếp </p>',2,NULL,NULL),(1124,271,'3','<p>Mảng các số nguyên dương</p>',3,NULL,NULL),(1125,272,'0','<p>Tìm kiếm nhị phân x</p>',0,NULL,NULL),(1126,272,'1','<p>Tìm kiếm tuần tự x</p>',1,NULL,NULL),(1127,272,'2','<p>Thêm x vào mảng a</p>',2,NULL,NULL),(1128,272,'3','<p>Thêm n vào mảng a</p>',3,NULL,NULL),(1129,273,'0','<p>Tìm kiếm nhị phân x</p>',0,NULL,NULL),(1130,273,'1','<p>Tìm kiếm tuần tự x</p>',1,NULL,NULL),(1131,273,'2','<p>Thêm x vào mảng a</p>',2,NULL,NULL),(1132,273,'3','<p>Thêm n vào mảng a</p>',3,NULL,NULL),(1133,274,'0','<p>857<br></p>',0,NULL,NULL),(1134,274,'1','<p>7580<br></p>',1,NULL,NULL),(1135,274,'2','<p>758<br></p>',2,NULL,NULL),(1136,274,'3','<p>8570<br></p>',3,NULL,NULL),(1137,275,'0','<p>3 11</p>',0,NULL,NULL),(1138,275,'1','<p>3 5</p>',1,NULL,NULL),(1139,275,'2','<p>5 11</p>',2,NULL,NULL),(1140,275,'3','<p>11 33</p>',3,NULL,NULL),(1141,276,'0','<p>Bàn phím</p>',0,NULL,NULL),(1142,276,'1','<p>RAM</p>',1,NULL,NULL),(1143,276,'2','<p>Đĩa cứng</p>',2,NULL,NULL),(1144,276,'3','<p>Màn hình</p>',3,NULL,NULL),(1145,277,'0','<p>Sắp xếp xen (Insertion Sort)</p>',0,NULL,NULL),(1146,277,'1','<p>Sắp xếp nổi bọt (Bubble Sort)</p>',1,NULL,NULL),(1147,277,'2','<p>Sắp xếp chọn (Selection Sort)</p>',2,NULL,NULL),(1148,277,'3','<p>Sắp xếp trộn (Merge Sort)</p>',3,NULL,NULL),(1149,278,'0','<p>Tìm kiếm nhị phân x</p>',0,NULL,NULL),(1150,278,'1','<p>Tìm kiếm tuần tự x</p>',1,NULL,NULL),(1151,278,'2','<p>Thêm x vào mảng a</p>',2,NULL,NULL),(1152,278,'3','<p>Thêm n vào mảng a</p>',3,NULL,NULL),(1153,279,'0','<p>Sắp xếp dữ liệu trước</p>',0,NULL,NULL),(1154,279,'1','<p>Tìm kiếm xong sau đó mới sắp xếp</p>',1,NULL,NULL),(1155,279,'2','<p>Không cần sắp xếp dữ liệu</p>',2,NULL,NULL),(1156,279,'3','<p>Phải tìm phần tử lớn nhất và bé nhất</p>',3,NULL,NULL),(1157,280,'0','<p>Bubble sort</p>',0,NULL,NULL),(1158,280,'1','<p>Selection sort</p>',1,NULL,NULL),(1159,280,'2','<p>Insertion sort</p>',2,NULL,NULL),(1160,280,'3','<p>Quick sort</p>',3,NULL,NULL),(1161,281,'0','<p>Mảng được sắp xếp giảm dần</p>',0,NULL,NULL),(1162,281,'1','<p>Mảng được sắp xếp tăng dần</p>',1,NULL,NULL),(1163,281,'2','<p>Mảng không cần sắp xếp </p>',2,NULL,NULL),(1164,281,'3','<p>Mảng các số nguyên dương</p>',3,NULL,NULL),(1165,282,'0','<p>Tìm nhị phân phần tử có giá trị X</p>',0,NULL,NULL),(1166,282,'1','<p>Tìm phần tử nhỏ nhất trong mảng M bao gồm N phần tử</p>',1,NULL,NULL),(1167,282,'2','<p>Tìm tuyến tính phần tử có giá trị X</p>',2,NULL,NULL),(1168,282,'3','<p>Tìm phần tử lớn nhất trong mảng N bao gồm M phần tử</p>',3,NULL,NULL),(1169,283,'0','<p>Sự sắp xếp dữ liệu được tổ chức trong bộ nhớ trong của máy tính</p>',0,NULL,NULL),(1170,283,'1','<p>Là sự sắp xếp được sử dụng khi số lượng đối tượng cần sắp xếp lớn không thể lưu trữ trong bộ nhớ trong mà phải lưu trữ trên bộ nhớ ngoài</p>',1,NULL,NULL),(1171,283,'2','<p>Là sự sắp xếp dữ liệu được tổ chức sắp xếp dữ liệu được lưu trữ trong các tập tin</p>',2,NULL,NULL),(1172,283,'3','<p>Là sự sắp xếp được tổ chức sao cho truy cập ngẫu nhiên một cách nhanh chóng</p>',3,NULL,NULL),(1173,284,'1','<p>Thuật toán<br></p>',0,NULL,NULL),(1174,285,'0','<p>Bàn phím</p>',0,NULL,NULL),(1175,285,'1','<p>RAM</p>',1,NULL,NULL),(1176,285,'2','<p>Đĩa cứng</p>',2,NULL,NULL),(1177,285,'3','<p>Màn hình</p>',3,NULL,NULL),(1178,286,'0','<p>100<br></p>',0,NULL,NULL),(1179,286,'1','<p>5<br></p>',1,NULL,NULL),(1180,286,'2','<p>125<br></p>',2,NULL,NULL),(1181,286,'3','<p>25<br></p>',3,NULL,NULL),(1182,287,'1','<p>Độ phức tạp</p>',0,NULL,NULL),(1183,288,'0','<p>Màn hình</p>',0,NULL,NULL),(1184,288,'0','<p>Bàn phím</p>',1,NULL,NULL),(1185,288,'0','<p>Đĩa cứng</p>',2,NULL,NULL),(1186,288,'0','<p>RAM</p>',3,NULL,NULL),(1187,288,'1','<p>Bộ nhớ để xử lý</p>',0,NULL,NULL),(1188,288,'1','<p>Lưu trữ thông tin</p>',1,NULL,NULL),(1189,288,'1','<p>Hiển thị</p>',2,NULL,NULL),(1190,288,'1','<p>Nhập dữ liệu</p>',3,NULL,NULL),(1191,289,'0','<p>Bàn phím</p>',0,NULL,NULL),(1192,289,'1','<p>RAM</p>',1,NULL,NULL),(1193,289,'2','<p>Đĩa cứng</p>',2,NULL,NULL),(1194,289,'3','<p>Màn hình</p>',3,NULL,NULL),(1195,290,'1','<p>Độ phức tạp</p>',0,NULL,NULL),(1196,291,'0','<p>O(0)</p>',0,NULL,NULL),(1197,291,'1','<p>O(n^2)</p>',1,NULL,NULL),(1198,291,'2','<p>O(n)</p>',2,NULL,NULL),(1199,291,'3','<p>O(1)</p>',3,NULL,NULL),(1200,292,'0','<p>O(1)</p>',0,NULL,NULL),(1201,292,'1','<p>O(n)</p>',1,NULL,NULL),(1202,292,'2','<p>O(n<sup>2</sup>)</p>',2,NULL,NULL),(1203,292,'3','<p>O(2<sup>n</sup>)</p>',3,NULL,NULL),(1204,293,'0','<p>for(int i=0; i&lt;=15; i++) printf(\"%d\",i);</p>',0,NULL,NULL),(1205,293,'1','<p>for(int i=0, i&lt;=15, i++) printf(\"%d\",i);</p>',1,NULL,NULL),(1206,293,'2','<p>for(int i=0; i&lt;15; i++) printf(\"%d\",i);</p>',2,NULL,NULL),(1207,293,'3','<p>for(int i=0, i&lt;15, i++) printf(\"%d\",i);</p>',3,NULL,NULL),(1208,294,'0','<p>c<br></p>',0,NULL,NULL),(1209,294,'1','<p>ll4</p>',1,NULL,NULL),(1210,294,'2','<p>inc<br></p>',2,NULL,NULL),(1211,294,'3','<p>oll4<br></p>',3,NULL,NULL),(1212,295,'0','<p>Bàn phím</p>',0,NULL,NULL),(1213,295,'1','<p>RAM</p>',1,NULL,NULL),(1214,295,'2','<p>Đĩa cứng</p>',2,NULL,NULL),(1215,295,'3','<p>Màn hình</p>',3,NULL,NULL),(1216,296,'0','<p>Màn hình</p>',0,NULL,NULL),(1217,296,'0','<p>Bàn phím</p>',1,NULL,NULL),(1218,296,'0','<p>Đĩa cứng</p>',2,NULL,NULL),(1219,296,'0','<p>RAM</p>',3,NULL,NULL),(1220,296,'1','<p>Bộ nhớ để xử lý</p>',0,NULL,NULL),(1221,296,'1','<p>Lưu trữ thông tin</p>',1,NULL,NULL),(1222,296,'1','<p>Hiển thị</p>',2,NULL,NULL),(1223,296,'1','<p>Nhập dữ liệu</p>',3,NULL,NULL),(1224,297,'0','<p>O(1)</p>',0,NULL,NULL),(1225,297,'1','<p>O(n)</p>',1,NULL,NULL),(1226,297,'2','<p>O(n<sup>2</sup>)</p>',2,NULL,NULL),(1227,297,'3','<p>O(2<sup>n</sup>)</p>',3,NULL,NULL),(1228,298,'1','<p>Số lần<br></p>',0,NULL,NULL),(1229,299,'0','<p>Bàn phím</p>',0,NULL,NULL),(1230,299,'1','<p>RAM</p>',1,NULL,NULL),(1231,299,'2','<p>Đĩa cứng</p>',2,NULL,NULL),(1232,299,'3','<p>Màn hình</p>',3,NULL,NULL),(1233,300,'1','<p>Thuật toán<br></p>',0,NULL,NULL),(1234,301,'0','<p>Bàn phím</p>',0,NULL,NULL),(1235,301,'1','<p>RAM</p>',1,NULL,NULL),(1236,301,'2','<p>Đĩa cứng</p>',2,NULL,NULL),(1237,301,'3','<p>Màn hình</p>',3,NULL,NULL),(1238,302,'0','<p>Bàn phím</p>',0,NULL,NULL),(1239,302,'1','<p>RAM</p>',1,NULL,NULL),(1240,302,'2','<p>Đĩa cứng</p>',2,NULL,NULL),(1241,302,'3','<p>Màn hình</p>',3,NULL,NULL),(1242,303,'0','<p>Bàn phím</p>',0,NULL,NULL),(1243,303,'1','<p>RAM</p>',1,NULL,NULL),(1244,303,'2','<p>Đĩa cứng</p>',2,NULL,NULL),(1245,303,'3','<p>Màn hình</p>',3,NULL,NULL),(1246,304,'0','<p>Màn hình</p>',0,NULL,NULL),(1247,304,'0','<p>Bàn phím</p>',1,NULL,NULL),(1248,304,'0','<p>Đĩa cứng</p>',2,NULL,NULL),(1249,304,'0','<p>RAM</p>',3,NULL,NULL),(1250,304,'1','<p>Bộ nhớ để xử lý</p>',0,NULL,NULL),(1251,304,'1','<p>Lưu trữ thông tin</p>',1,NULL,NULL),(1252,304,'1','<p>Hiển thị</p>',2,NULL,NULL),(1253,304,'1','<p>Nhập dữ liệu</p>',3,NULL,NULL),(1254,305,'1','<p>Thuật toán<br></p>',0,NULL,NULL),(1255,306,'1','<p>Số lần<br></p>',0,NULL,NULL),(1256,307,'1','<p>Độ phức tạp</p>',0,NULL,NULL),(1257,308,'0','<p>100<br></p>',0,NULL,NULL),(1258,308,'1','<p>5<br></p>',1,NULL,NULL),(1259,308,'2','<p>125<br></p>',2,NULL,NULL),(1260,308,'3','<p>25<br></p>',3,NULL,NULL),(1261,309,'0','<p>Bàn phím</p>',0,NULL,NULL),(1262,309,'1','<p>RAM</p>',1,NULL,NULL),(1263,309,'2','<p>Đĩa cứng</p>',2,NULL,NULL),(1264,309,'3','<p>Màn hình</p>',3,NULL,NULL),(1265,310,'0','<p>c<br></p>',0,NULL,NULL),(1266,310,'1','<p>ll4</p>',1,NULL,NULL),(1267,310,'2','<p>inc<br></p>',2,NULL,NULL),(1268,310,'3','<p>oll4<br></p>',3,NULL,NULL),(1269,311,'0','<p>a=9, b=10, p=7</p>',0,NULL,NULL),(1270,311,'1','<p>a=10, b=10, p=7</p>',1,NULL,NULL),(1271,311,'2','<p>a=10, b=10, p=10</p>',2,NULL,NULL),(1272,311,'3','<p>a=9, b=10, p=9</p>',3,NULL,NULL),(1273,311,'4','<p>a=8, b=9, p=10</p>',4,NULL,NULL),(1274,312,'1','<p>giá trị số<br></p>',0,NULL,NULL),(1275,313,'0','<p>for(int i=0; i&lt;=15; i++) printf(\"%d\",i);</p>',0,NULL,NULL),(1276,313,'1','<p>for(int i=0, i&lt;=15, i++) printf(\"%d\",i);</p>',1,NULL,NULL),(1277,313,'2','<p>for(int i=0; i&lt;15; i++) printf(\"%d\",i);</p>',2,NULL,NULL),(1278,313,'3','<p>for(int i=0, i&lt;15, i++) printf(\"%d\",i);</p>',3,NULL,NULL),(1279,314,'0','<p>857<br></p>',0,NULL,NULL),(1280,314,'1','<p>7580<br></p>',1,NULL,NULL),(1281,314,'2','<p>758<br></p>',2,NULL,NULL),(1282,314,'3','<p>8570<br></p>',3,NULL,NULL),(1283,315,'0','<p>Bàn phím</p>',0,NULL,NULL),(1284,315,'1','<p>RAM</p>',1,NULL,NULL),(1285,315,'2','<p>Đĩa cứng</p>',2,NULL,NULL),(1286,315,'3','<p>Màn hình</p>',3,NULL,NULL),(1287,316,'1','<p>Thuật toán<br></p>',0,NULL,NULL),(1288,317,'1','<p>Con số<br></p>',0,NULL,NULL),(1289,318,'1','<p>Độ phức tạp</p>',0,NULL,NULL),(1290,319,'0','<p>Màn hình</p>',0,NULL,NULL),(1291,319,'0','<p>Bàn phím</p>',1,NULL,NULL),(1292,319,'0','<p>Đĩa cứng</p>',2,NULL,NULL),(1293,319,'0','<p>RAM</p>',3,NULL,NULL),(1294,319,'1','<p>Bộ nhớ để xử lý</p>',0,NULL,NULL),(1295,319,'1','<p>Lưu trữ thông tin</p>',1,NULL,NULL),(1296,319,'1','<p>Hiển thị</p>',2,NULL,NULL),(1297,319,'1','<p>Nhập dữ liệu</p>',3,NULL,NULL),(1298,320,'0','<p>Bàn phím</p>',0,NULL,NULL),(1299,320,'1','<p>RAM</p>',1,NULL,NULL),(1300,320,'2','<p>Đĩa cứng</p>',2,NULL,NULL),(1301,320,'3','<p>Màn hình</p>',3,NULL,NULL),(1302,321,'0','<p>Cần C chỉ thị thực thi.</p>',0,NULL,NULL),(1303,321,'1','<p class=\"TableContents\"><span style=\"color: black;\" data-mce-style=\"color: black;\">Cần T(n) chỉ thị thực thi.</span></p>',1,NULL,NULL),(1304,321,'2','<p>Cần n chỉ thị thực thi.</p>',2,NULL,NULL),(1305,321,'3','<p>Cần Cn chỉ thị thực thi </p>',3,NULL,NULL),(1306,322,'0','<p>Selection sort</p>',0,NULL,NULL),(1307,322,'1','<p>Quick sort</p>',1,NULL,NULL),(1308,322,'2','<p>Insertion sort</p>',2,NULL,NULL),(1309,322,'3','<p>Bubble sort</p>',3,NULL,NULL),(1310,323,'0','<p>1 trường</p>',0,NULL,NULL),(1311,323,'1','<p>2 trường</p>',1,NULL,NULL),(1312,323,'2','<p>3 trường</p>',2,NULL,NULL),(1313,323,'3','<p>1 hoặc nhiều trường</p>',3,NULL,NULL),(1314,324,'0','<p>Static</p>',0,NULL,NULL),(1315,324,'1','<p>Private</p>',1,NULL,NULL),(1316,324,'2','<p>Default</p>',2,NULL,NULL),(1317,324,'3','<p>Cả a,b,c đều đúng</p>',3,NULL,NULL),(1318,325,'0','<p>Đúng</p>',0,NULL,NULL),(1319,325,'1','<p>Sai</p>',1,NULL,NULL),(1320,325,'2','<p><br></p>',2,NULL,NULL),(1321,325,'3','<p><br></p>',3,NULL,NULL),(1322,326,'0','<p>Compilation error</p>',0,NULL,NULL),(1323,326,'1','<p>Runtime error</p>',1,NULL,NULL),(1324,326,'2','<p>Runtime exception</p>',2,NULL,NULL),(1325,326,'3','<p>b =1</p>',3,NULL,NULL),(1326,327,'0','<p>Compile error</p>',0,NULL,NULL),(1327,327,'1','<p>Runtime exception</p>',1,NULL,NULL),(1328,327,'2','<p>No error</p>',2,NULL,NULL),(1329,327,'3','<p>Đáp án khác</p>',3,NULL,NULL),(1330,328,'0','<p>Compile error</p>',0,NULL,NULL),(1331,328,'1','<p>Runtime exception</p>',1,NULL,NULL),(1332,328,'2','<p>No error</p>',2,NULL,NULL),(1333,328,'3','<p>Đáp án khác</p>',3,NULL,NULL),(1334,329,'0','<p>Đúng</p>',0,NULL,NULL),(1335,329,'1','<p>Sai<br></p>',1,NULL,NULL),(1336,329,'2','<p><br></p>',2,NULL,NULL),(1337,329,'3','<p><br></p>',3,NULL,NULL),(1338,330,'0','<p>Đúng</p>',0,NULL,NULL),(1339,330,'1','<p>Sai<br></p>',1,NULL,NULL),(1340,330,'2','<p><br></p>',2,NULL,NULL),(1341,330,'3','<p><br></p>',3,NULL,NULL),(1342,331,'0','<p>Là những cấu trúc, cú pháp lệnh trong 1 đối tượng</p>',0,NULL,NULL),(1343,331,'1','<p>Là cấu trúc toán tử và từ khóa</p>',1,NULL,NULL),(1344,331,'2','<p><br></p>',2,NULL,NULL),(1345,331,'3','<p><br></p>',3,NULL,NULL),(1346,332,'0','<p>Đúng</p>',0,NULL,NULL),(1347,332,'1','<p>Sai<br></p>',1,NULL,NULL),(1348,332,'2','<p><br></p>',2,NULL,NULL),(1349,332,'3','<p><br></p>',3,NULL,NULL),(1350,333,'0','<p>Đúng</p>',0,NULL,NULL),(1351,333,'1','<p>Sai<br></p>',1,NULL,NULL),(1352,333,'2','<p><br></p>',2,NULL,NULL),(1353,333,'3','<p><br></p>',3,NULL,NULL),(1354,334,'0','<p>Đúng, luôn luôn như vậy</p>',0,NULL,NULL),(1355,334,'1','<p>Không, trừ khi class A đó là abstract</p>',1,NULL,NULL),(1356,334,'2','<p><br></p>',2,NULL,NULL),(1357,334,'3','<p><br></p>',3,NULL,NULL),(1358,335,'0','<p>Compiler error</p>',0,NULL,NULL),(1359,335,'1','<p>Runtime exception</p>',1,NULL,NULL),(1360,335,'2','<p>Đúng</p>',2,NULL,NULL),(1361,335,'3','<p>Sai</p>',3,NULL,NULL),(1362,336,'0','<p>Đúng</p>',0,NULL,NULL),(1363,336,'1','<p>Sai<br></p>',1,NULL,NULL),(1364,336,'2','<p><br></p>',2,NULL,NULL),(1365,336,'3','<p><br></p>',3,NULL,NULL),(1366,337,'0','<p>Đúng</p>',0,NULL,NULL),(1367,337,'1','<p>Sai<br></p>',1,NULL,NULL),(1368,337,'2','<p><br></p>',2,NULL,NULL),(1369,337,'3','<p><br></p>',3,NULL,NULL),(1370,338,'0','<p>Đúng</p>',0,NULL,NULL),(1371,338,'1','<p>Sai<br></p>',1,NULL,NULL),(1372,338,'2','<p><br></p>',2,NULL,NULL),(1373,338,'3','<p><br></p>',3,NULL,NULL),(1374,339,'0','<p>Đúng</p>',0,NULL,NULL),(1375,339,'1','<p>Sai<br></p>',1,NULL,NULL),(1376,339,'2','<p><br></p>',2,NULL,NULL),(1377,339,'3','<p><br></p>',3,NULL,NULL),(1378,340,'0','<p>Đánh dấu là private</p>',0,NULL,NULL),(1379,340,'1','<p>Đánh dấu là volatile</p>',1,NULL,NULL),(1380,340,'2','<p>Đánh dấu là transient</p>',2,NULL,NULL),(1381,340,'3','<p>Không thể làm được</p>',3,NULL,NULL),(1382,341,'0','<p>Một lớp trừu tượng không thể chứa phương thức final</p>',0,NULL,NULL),(1383,341,'1','<p>Một lớp final không thể chứa các phương thức trừu tượng</p>',1,NULL,NULL),(1384,341,'2','<p>A,b đúng</p>',2,NULL,NULL),(1385,341,'3','<p>A,b sai</p>',3,NULL,NULL),(1386,342,'0','<p>lớp Class là lớp cha của lớp Object</p>',0,NULL,NULL),(1387,342,'1','<p>Lớp Object là một lớp final</p>',1,NULL,NULL),(1388,342,'2','<p>Mọi lớp đều kế thừa trực tiếp hoặc gián tiếp từ lớp Object</p>',2,NULL,NULL),(1389,342,'3','<p>Tất cả các câu trên đều sai</p>',3,NULL,NULL),(1390,343,'0','<p>Interger</p>',0,NULL,NULL),(1391,343,'1','<p>String</p>',1,NULL,NULL),(1392,343,'2','<p>Boolean</p>',2,NULL,NULL),(1393,343,'3','<p>Character</p>',3,NULL,NULL),(1394,344,'0','<p>Một lớp sẽ kế thừa các hàm khởi tạo từ lớp cha</p>',0,NULL,NULL),(1395,344,'1','<p>Trình biên dịch sẽ tự động tạo hàm khởi tạo mặc định nếu lớp không định nghĩa hàm khởi tạo</p>',1,NULL,NULL),(1396,344,'2','<p>Tất cả các hàm khởi tạo có kiểu trả về là void</p>',2,NULL,NULL),(1397,344,'3','<p>Tất cả đều sai</p>',3,NULL,NULL),(1398,345,'0','<p>Public static void main()</p>',0,NULL,NULL),(1399,345,'1','<p>Public void main(String[] arg)</p>',1,NULL,NULL),(1400,345,'2','<p>Public static void main(String[] args)</p>',2,NULL,NULL),(1401,345,'3','<p>Public static int main(String[] arg)</p>',3,NULL,NULL),(1402,346,'0','<p>Câu lệnh import, khai báo package,khai báo lớp</p>',0,NULL,NULL),(1403,346,'1','<p>Khai báo package đầu tiên, thứ tự của import và khai báo lớp là tùy ý</p>',1,NULL,NULL),(1404,346,'2','<p>Khai báo package,import,khai báo lớp</p>',2,NULL,NULL),(1405,346,'3','<p>Câu lệnh import trước tiên, thứ tự của khai báo package và khai báo lớp là tùy ý</p>',3,NULL,NULL),(1406,347,'0','<p>Nếu sau <strong>if(ĐK)</strong> muốn thực hiện nhiều lệnh thì phải đặt các lệnh đó giữa { và }</p>',0,NULL,NULL),(1407,347,'1','<p>Nếu sau <strong>if(ĐK)</strong> muốn thực hiện nhiều lệnh thì phải đặt các lệnh đó giữa ( và ).</p>',1,NULL,NULL),(1408,347,'2','<p>Nếu sau <strong>if(ĐK)</strong> muốn thực hiện nhiều lệnh thì phải đặt câu lệnh rẽ nhánh <strong>else</strong> giữa { và }</p>',2,NULL,NULL),(1409,347,'3','<p>Nếu sau <strong>if(ĐK)</strong> muốn thực hiện nhiều lệnh thì phải thêm <strong>else</strong></p>',3,NULL,NULL),(1410,348,'0','<p>if (a &gt; b) then Write(’So thu nhat lon hon’); else Write(’So thu hai lon hon’);</p>',0,NULL,NULL),(1411,348,'1','<p>if (a &gt; b) thì số thứ nhất lớn hơn else số thứ hai lớn hơn;.</p>',1,NULL,NULL),(1412,348,'2','<p>if( a &gt; b) printf(“So thu hai lon hon”) else printf(“So thu hai lon&nbsp; hon”);</p>',2,NULL,NULL),(1413,348,'3','<p>if a &gt; b printf(“So thu hai lon hon”) else printf(“So thu hai lon&nbsp; hon”);</p>',3,NULL,NULL),(1414,349,'0','<p>Sau mỗi câu lệnh đều có chấm phẩy</p>',0,NULL,NULL),(1415,349,'1','<p>Sau lệnh else không có chấm phẩy</p>',1,NULL,NULL),(1416,349,'2','<p>Các lệnh không phân biệt chữ hoa và chữ thường</p>',2,NULL,NULL),(1417,349,'3','<p>Sau if bắt buộc phải có chấm phẩy</p>',3,NULL,NULL),(1418,350,'0','<p>Một khả năng</p>',0,NULL,NULL),(1419,350,'1','<p>Một trong hai khả năng</p>',1,NULL,NULL),(1420,350,'2','<p>Một trong nhiều khả năng</p>',2,NULL,NULL),(1421,350,'3','<p>Không khả năng nào </p>',3,NULL,NULL),(1422,351,'0','<p>Chuyển từ biến này sang biến khác trong chương trình</p>',0,NULL,NULL),(1423,351,'1','<p>Chuyển giữa các hàm trong một chương trình</p>',1,NULL,NULL),(1424,351,'2','<p>Sử dụng biến chuyển</p>',2,NULL,NULL),(1425,351,'3','<p>Chọn một trong nhiều giá trị dựa trên các giá trị khác nhau của một biến đơn</p>',3,NULL,NULL),(1426,352,'0','<p>Thực hiện câu lệnh 1 khi biểu thức điều kiện đúng</p>',0,NULL,NULL),(1427,352,'1','<p>Thực hiện câu lệnh 1 khi biểu thức điều kiện sai</p>',1,NULL,NULL),(1428,352,'2','<p>Thực hiện câu lệnh 2 khi biểu thức điều kiện đúng</p>',2,NULL,NULL),(1429,352,'3','<p>Cấu trúc trên bị sai</p>',3,NULL,NULL),(1430,353,'0','<p>Khi biểu thức điều kiện 1 đúng, biểu thức điều kiện 2 sai</p>',0,NULL,NULL),(1431,353,'1','<p>Khi biểu thức điều kiện 1 sai, biểu thức điều kiện 2 đúng</p>',1,NULL,NULL),(1432,353,'2','<p>Khi biểu thức điều kiện 2 sai, biểu thức điều kiện 1 sai<br> </p>',2,NULL,NULL),(1433,353,'3','<p>Khi biểu thức điều kiện 1 đúng, biểu thức điều kiện 2 đúng</p>',3,NULL,NULL),(1434,354,'0','<p>a=3 </p>',0,NULL,NULL),(1435,354,'1','<p>a=4</p>',1,NULL,NULL),(1436,354,'2','<p>b=5 </p>',2,NULL,NULL),(1437,354,'3','<p>b=1</p>',3,NULL,NULL),(1438,355,'0','<p>not equal 0</p>',0,NULL,NULL),(1439,355,'1','<p>equal 0</p>',1,NULL,NULL),(1440,355,'2','<p>Không cho kết quả gì</p>',2,NULL,NULL),(1441,355,'3','<p>Chương trình báo lỗi</p>',3,NULL,NULL),(1442,356,'0','<p>Tính giá trị a</p>',0,NULL,NULL),(1443,356,'1','<p>Tính giá trị b</p>',1,NULL,NULL),(1444,356,'2','<p>Tìm giá trị lớn nhất trong 2 số a</p>',2,NULL,NULL),(1445,356,'3','<p>Tìm giá trị max</p>',3,NULL,NULL),(1446,357,'0','<p>Một khả năng</p>',0,NULL,NULL),(1447,357,'1','<p>Một trong hai khả năng</p>',1,NULL,NULL),(1448,357,'2','<p>Một trong nhiều khả năng</p>',2,NULL,NULL),(1449,357,'3','<p>Nhiều khả năng </p>',3,NULL,NULL),(1450,358,'0','<p>0 </p>',0,NULL,NULL),(1451,358,'1','<p>1<br></p>',1,NULL,NULL),(1452,358,'2','<p>2<br></p>',2,NULL,NULL),(1453,358,'3','<p>3<br></p>',3,NULL,NULL),(1454,359,'0','<p>Đồng thời viết cả giá trị Đỗ, trượt</p>',0,NULL,NULL),(1455,359,'1','<p>Chưa biết giá trị của ĐTB</p>',1,NULL,NULL),(1456,359,'2','<p>Có hai dấu chấm phẩy trong một câu lệnh</p>',2,NULL,NULL),(1457,359,'3','<p>Thừa dấu chấm phẩy trước từ khóa Else</p>',3,NULL,NULL),(1458,360,'0','<p>Sai điều kiện age&gt;=65</p>',0,NULL,NULL),(1459,360,'1','<p>Sau dòng if (age&gt;=65) phải có <strong>;</strong></p>',1,NULL,NULL),(1460,360,'2','<p>Sai dấu <strong>\"</strong> ở lệnh printf </p>',2,NULL,NULL),(1461,360,'3','<p>Sai dấu <strong>\'</strong> ở lệnh printf</p>',3,NULL,NULL),(1462,361,'0','<p>Không có tác dụng gì.</p>',0,NULL,NULL),(1463,361,'1','<p>Cũng là 1 trường hợp case</p>',1,NULL,NULL),(1464,361,'2','<p>Thực hiện được khi các case thực hiện</p>',2,NULL,NULL),(1465,361,'3','<p>Thực hiện khi các case không thực hiện</p>',3,NULL,NULL),(1466,362,'0','<p>0<br></p>',0,NULL,NULL),(1467,362,'1','<p>1</p>',1,NULL,NULL),(1468,362,'2','<p>5</p>',2,NULL,NULL),(1469,362,'3','<p>6</p>',3,NULL,NULL),(1470,363,'0','<p>0<br></p>',0,NULL,NULL),(1471,363,'1','<p>1</p>',1,NULL,NULL),(1472,363,'2','<p>2</p>',2,NULL,NULL),(1473,363,'3','<p>3</p>',3,NULL,NULL),(1474,364,'0','<p>7<br></p>',0,NULL,NULL),(1475,364,'1','<p>11<br></p>',1,NULL,NULL),(1476,364,'2','<p>13<br></p>',2,NULL,NULL),(1477,364,'3','<p>14<br></p>',3,NULL,NULL),(1478,365,'0','<p>8<br></p>',0,NULL,NULL),(1479,365,'1','<p>17<br></p>',1,NULL,NULL),(1480,365,'2','<p>21<br></p>',2,NULL,NULL),(1481,365,'3','<p>32<br></p>',3,NULL,NULL),(1482,366,'0','<p>3<br></p>',0,NULL,NULL),(1483,366,'1','<p>4<br></p>',1,NULL,NULL),(1484,366,'2','<p>9<br></p>',2,NULL,NULL),(1485,366,'3','<p>14<br></p>',3,NULL,NULL),(1486,367,'0','<p>3<br></p>',0,NULL,NULL),(1487,367,'1','<p>6<br></p>',1,NULL,NULL),(1488,367,'2','<p>7<br></p>',2,NULL,NULL),(1489,367,'3','<p>12<br></p>',3,NULL,NULL),(1490,368,'0','<p>5<br></p>',0,NULL,NULL),(1491,368,'1','<p>10<br></p>',1,NULL,NULL),(1492,368,'2','<p>20<br></p>',2,NULL,NULL),(1493,368,'3','<p>30<br></p>',3,NULL,NULL),(1494,369,'0','<p>1<br></p>',0,NULL,NULL),(1495,369,'1','<p>2<br></p>',1,NULL,NULL),(1496,369,'2','<p>3<br></p>',2,NULL,NULL),(1497,369,'3','<p>4<br></p>',3,NULL,NULL),(1498,370,'0','<p>mot<br></p>',0,NULL,NULL),(1499,370,'1','<p>hai<br></p>',1,NULL,NULL),(1500,370,'2','<p>ba<br></p>',2,NULL,NULL),(1501,370,'3','<p>Không in gì cả<br></p>',3,NULL,NULL),(1502,371,'0','<p>Red Green Blue</p>',0,NULL,NULL),(1503,371,'1','<p>Blue</p>',1,NULL,NULL),(1504,371,'2','<p>Green</p>',2,NULL,NULL),(1505,371,'3','<p>Red</p>',3,NULL,NULL),(1506,372,'0','<p>1<br></p>',0,NULL,NULL),(1507,372,'1','<p>2<br></p>',1,NULL,NULL),(1508,372,'2','<p>4<br></p>',2,NULL,NULL),(1509,372,'3','<p>5<br></p>',3,NULL,NULL),(1510,373,'0','<p>4<br></p>',0,NULL,NULL),(1511,373,'1','<p>5<br></p>',1,NULL,NULL),(1512,373,'2','<p>6<br></p>',2,NULL,NULL),(1513,373,'3','<p>7<br></p>',3,NULL,NULL),(1514,374,'0','<p>1<br></p>',0,NULL,NULL),(1515,374,'1','<p>3</p>',1,NULL,NULL),(1516,374,'2','<p>4<br></p>',2,NULL,NULL),(1517,374,'3','<p>Chương trình có lỗi</p>',3,NULL,NULL),(1518,375,'0','<p>0<br></p>',0,NULL,NULL),(1519,375,'1','<p>50<br></p>',1,NULL,NULL),(1520,375,'2','<p>100<br></p>',2,NULL,NULL),(1521,375,'3','<p>150<br></p>',3,NULL,NULL),(1522,376,'0','<p>Có thể dùng cấu trúc lặp để thay cho cấu trúc rẽ nhánh trong mô tả thuật toán.</p>',0,NULL,NULL),(1523,376,'1','<p>Câu lệnh lặp không được xuất hiện trong &lt;câu lệnh&gt; đứng sau từ else của cấu trúc rẽ nhánh.</p>',1,NULL,NULL),(1524,376,'2','<p>Câu lệnh rẽ nhánh không được xuất hiện trong &lt;câu lệnh&gt; của một cấu trúc lặp.</p>',2,NULL,NULL),(1525,376,'3','<p>Một cấu trúc lặp có thể xuất hiện trong &lt;câu lệnh&gt; của một cấu trúc lặp khác.</p>',3,NULL,NULL),(1526,377,'0','<p>For </p>',0,NULL,NULL),(1527,377,'1','<p>While </p>',1,NULL,NULL),(1528,377,'2','<p>If...else</p>',2,NULL,NULL),(1529,377,'3','<p>For.. do</p>',3,NULL,NULL),(1530,378,'0','<p>For.. do</p>',0,NULL,NULL),(1531,378,'1','<p>While </p>',1,NULL,NULL),(1532,378,'2','<p>do...While</p>',2,NULL,NULL),(1533,378,'3','<p>For</p>',3,NULL,NULL),(1534,379,'0','<p>break</p>',0,NULL,NULL),(1535,379,'1','<p>goto</p>',1,NULL,NULL),(1536,379,'2','<p>continue</p>',2,NULL,NULL),(1537,379,'3','<p>return</p>',3,NULL,NULL),(1538,380,'0','<p>Đoạn mã này là bất hợp pháp</p>',0,NULL,NULL),(1539,380,'1','<p>Lặp lại vòng mãi mãi ( It loops forever)</p>',1,NULL,NULL),(1540,380,'2','<p>Nó bị bỏ qua bởi trình duyệt, nhưng nó không phải là bất hợp pháp</p>',2,NULL,NULL),(1541,380,'3','<p>Đoạn mã là hợp pháp</p>',3,NULL,NULL),(1542,381,'0','<p>10<br></p>',0,NULL,NULL),(1543,381,'1','<p>0<br></p>',1,NULL,NULL),(1544,381,'2','<p>2<br></p>',2,NULL,NULL),(1545,381,'3','<p>Chương trình có lỗi</p>',3,NULL,NULL),(1546,382,'0','<p>0<br></p>',0,NULL,NULL),(1547,382,'1','<p>20<br></p>',1,NULL,NULL),(1548,382,'2','<p>21<br></p>',2,NULL,NULL),(1549,382,'3','<p>Lệnh FOR sai cú pháp</p>',3,NULL,NULL),(1550,383,'0','<p>0 1 2 3 4 5</p>',0,NULL,NULL),(1551,383,'1','<p>00 11 22 33 44</p>',1,NULL,NULL),(1552,383,'2','<p>01 2 3 4</p>',2,NULL,NULL),(1553,383,'3','<p>0011223344</p>',3,NULL,NULL),(1554,384,'0','<p>0 và 15</p>',0,NULL,NULL),(1555,384,'1','<p>1 và 14</p>',1,NULL,NULL),(1556,384,'2','<p>0 và 14</p>',2,NULL,NULL),(1557,384,'3','<p>1 và 15</p>',3,NULL,NULL),(1558,385,'0','<p>“&nbsp; 1 2 3 4”</p>',0,NULL,NULL),(1559,385,'1','<p>“&nbsp; 2 3 4”</p>',1,NULL,NULL),(1560,385,'2','<p>“&nbsp; 2&nbsp; 4”</p>',2,NULL,NULL),(1561,385,'3','<p>Chương trình không chạy được</p>',3,NULL,NULL),(1562,386,'0','<p>“&nbsp; 1&nbsp; 2&nbsp; 3&nbsp; 4”</p>',0,NULL,NULL),(1563,386,'1','<p>“&nbsp; 4”</p>',1,NULL,NULL),(1564,386,'2','<p>“&nbsp; 3”</p>',2,NULL,NULL),(1565,386,'3','<p>“&nbsp; 1&nbsp; 2&nbsp; 3”</p>',3,NULL,NULL),(1566,387,'0','<p>7<br></p>',0,NULL,NULL),(1567,387,'1','<p>8<br></p>',1,NULL,NULL),(1568,387,'2','<p>9<br></p>',2,NULL,NULL),(1569,387,'3','<p>10<br></p>',3,NULL,NULL),(1570,388,'0','<p>8<br></p>',0,NULL,NULL),(1571,388,'1','<p>16<br></p>',1,NULL,NULL),(1572,388,'2','<p>26<br></p>',2,NULL,NULL),(1573,388,'3','<p>36<br></p>',3,NULL,NULL),(1574,389,'0','<p>2<br></p>',0,NULL,NULL),(1575,389,'1','<p>16<br></p>',1,NULL,NULL),(1576,389,'2','<p>4</p>',2,NULL,NULL),(1577,389,'3','<p>36<br></p>',3,NULL,NULL),(1578,390,'0','<p>16<br></p>',0,NULL,NULL),(1579,390,'1','<p>17<br></p>',1,NULL,NULL),(1580,390,'2','<p>18<br></p>',2,NULL,NULL),(1581,390,'3','<p>19<br></p>',3,NULL,NULL),(1582,391,'0','<p>45<br></p>',0,NULL,NULL),(1583,391,'1','<p>47<br></p>',1,NULL,NULL),(1584,391,'2','<p>49<br></p>',2,NULL,NULL),(1585,391,'3','<p>51<br></p>',3,NULL,NULL),(1586,392,'0','<p>99<br></p>',0,NULL,NULL),(1587,392,'1','<p>100<br></p>',1,NULL,NULL),(1588,392,'2','<p>101<br></p>',2,NULL,NULL),(1589,392,'3','<p>102<br></p>',3,NULL,NULL),(1590,393,'0','<p>76<br></p>',0,NULL,NULL),(1591,393,'1','<p>86<br></p>',1,NULL,NULL),(1592,393,'2','<p>96<br></p>',2,NULL,NULL),(1593,393,'3','<p>106<br></p>',3,NULL,NULL),(1594,394,'0','<p>11<br></p>',0,NULL,NULL),(1595,394,'1','<p>21<br></p>',1,NULL,NULL),(1596,394,'2','<p>31<br></p>',2,NULL,NULL),(1597,394,'3','<p>41<br></p>',3,NULL,NULL),(1598,395,'0','<p>10<br></p>',0,NULL,NULL),(1599,395,'1','<p>1<br></p>',1,NULL,NULL),(1600,395,'2','<p>0<br></p>',2,NULL,NULL),(1601,395,'3','<p>2<br></p>',3,NULL,NULL),(1602,396,'0','<p>12<br></p>',0,NULL,NULL),(1603,396,'1','<p>14<br></p>',1,NULL,NULL),(1604,396,'2','<p>16<br></p>',2,NULL,NULL),(1605,396,'3','<p>20<br></p>',3,NULL,NULL),(1606,397,'0','<p>Phải có dấu chấm phẩy giữa j=0 và I&lt;10</p>',0,NULL,NULL),(1607,397,'1','<p>Nó phải có hơn một câu lệnh trong khối lệnh</p>',1,NULL,NULL),(1608,397,'2','<p>Nó sử dụng nhiều hơn một chỉ số lặp</p>',2,NULL,NULL),(1609,397,'3','<p>Phải có dấu phẩy giữa i=0 và j=0</p>',3,NULL,NULL),(1610,398,'0','<p>Hàm có 4 thành phần: Kiểu kết qủa, tên hàm, tham số và thân hàm</p>',0,NULL,NULL),(1611,398,'1','<p>Hàm có 3 thành phần: Tên hàm, tham số và thân hàm.</p>',1,NULL,NULL),(1612,398,'2','<p>Chúng ta có thể nhóm một số phát biểu thành một hàm.</p>',2,NULL,NULL),(1613,398,'3','<p>Chương trình có hàm sẽ làm cho chương trình dễ bảo trì vì việc hiệu chỉnh một hàm khi cần thiết sẽ không gây xáo trộn cho chương trình.</p>',3,NULL,NULL),(1614,399,'0','<p>Có thể hiện thực một hàm C trong hiện thực của một hàm khác.</p>',0,NULL,NULL),(1615,399,'1','<p>Không thể hiện thực một hàm C trong hiện thực của một hàm khác.</p>',1,NULL,NULL),(1616,399,'2','<p>Các hàm trong một chương trình C khác mức nhau.</p>',2,NULL,NULL),(1617,399,'3','<p>Các hàm trong một chương trình C cùng một mức nhất định</p>',3,NULL,NULL),(1618,400,'0','<p>Có thể đưa hàm này vào làm tham số của hàm printf</p>',0,NULL,NULL),(1619,400,'1','<p>Không thể đưa hàm này vào làm tham số của hàm printf</p>',1,NULL,NULL),(1620,400,'2','<p>Phải gọi hàm bằng một phát biểu đơn</p>',2,NULL,NULL),(1621,400,'3','<p>Không trả về giá trị nào</p>',3,NULL,NULL),(1622,401,'0','<p>Có thể đưa hàm này vào làm tham số của hàm printf</p>',0,NULL,NULL),(1623,401,'1','<p>Không thể đưa hàm này vào làm tham số của hàm printf mà phải gọi hàm bằng một phát biểu đơn.</p>',1,NULL,NULL),(1624,401,'2','<p>Phải có giá trị trả về </p>',2,NULL,NULL),(1625,401,'3','<p>Là một hàm tính toán</p>',3,NULL,NULL),(1626,402,'0','<p>int HoanVi(double &amp; a,double b);</p>',0,NULL,NULL),(1627,402,'1','<p>void HoanVi(double &amp; a,double b);</p>',1,NULL,NULL),(1628,402,'2','<p>void HoanVi(double &amp; a,double &amp;b);</p>',2,NULL,NULL),(1629,402,'3','<p>int HoanVi(double &amp; a,double &amp;b);</p>',3,NULL,NULL),(1630,403,'0','<p>Truyền bằng giá trị địa chỉ của tham số.</p>',0,NULL,NULL),(1631,403,'1','<p>Truyền bằng trị.</p>',1,NULL,NULL),(1632,403,'2','<p>Truyền tham chiếu.</p>',2,NULL,NULL),(1633,403,'3','<p>Truyền tham biến</p>',3,NULL,NULL),(1634,404,'0','<p>void KiemTra(int n);</p>',0,NULL,NULL),(1635,404,'1','<p>void KiemTra(long n);</p>',1,NULL,NULL),(1636,404,'2','<p>long KiemTra(int n);</p>',2,NULL,NULL),(1637,404,'3','<p>int KiemTra (long n);</p>',3,NULL,NULL),(1638,405,'0','<p>return()</p>',0,NULL,NULL),(1639,405,'1','<p>main()</p>',1,NULL,NULL),(1640,405,'2','<p>start()</p>',2,NULL,NULL),(1641,405,'3','<p>init()</p>',3,NULL,NULL),(1642,406,'0','<p>Trước khi gọi hàm nó phải được khai báo</p>',0,NULL,NULL),(1643,406,'1','<p>Kiểu trả về của hàm phải là kiểu void</p>',1,NULL,NULL),(1644,406,'2','<p>Kiểu đầu vào của hàm phải là kiểu void</p>',2,NULL,NULL),(1645,406,'3','<p>Hàm chỉ có thể trả về kiểu dữ liệu boolean</p>',3,NULL,NULL),(1646,407,'0','<p>1 1 1 1 1</p>',0,NULL,NULL),(1647,407,'1','<p>1 4 9 16 25</p>',1,NULL,NULL),(1648,407,'2','<p>2 4 8 16 32</p>',2,NULL,NULL),(1649,407,'3','<p>2 4 9 16 25</p>',3,NULL,NULL),(1650,408,'0','<p>0 1 2 0</p>',0,NULL,NULL),(1651,408,'1','<p>0 1 2 1</p>',1,NULL,NULL),(1652,408,'2','<p>1 2 0 1</p>',2,NULL,NULL),(1653,408,'3','<p>0 2 1 1</p>',3,NULL,NULL),(1654,409,'0','<p>0<br></p>',0,NULL,NULL),(1655,409,'1','<p>1<br></p>',1,NULL,NULL),(1656,409,'2','<p>2<br></p>',2,NULL,NULL),(1657,409,'3','<p>3<br></p>',3,NULL,NULL),(1658,410,'0','<p>Kích thước mảng</p>',0,NULL,NULL),(1659,410,'1','<p>Kiểu của nó</p>',1,NULL,NULL),(1660,410,'2','<p>Tên của nó</p>',2,NULL,NULL),(1661,410,'3','<p>Chỉ số của nó</p>',3,NULL,NULL),(1662,411,'0','<p>Khi cần sử dụng các phần tử khác nhau nhưng có cùng kiểu.</p>',0,NULL,NULL),(1663,411,'1','<p>Khi cần sử dụng các phần tử khác nhau nhưng&nbsp; khác kiểu.</p>',1,NULL,NULL),(1664,411,'2','<p>Khi cần sử dụng một phần tử rời rạc.</p>',2,NULL,NULL),(1665,411,'3','<p>Khi cần sử dụng để lưu trữ cho tương lai.</p>',3,NULL,NULL),(1666,412,'0','<p>Các phần tử của mảng một chiều được sắp xếp thứ tự theo chỉ số</p>',0,NULL,NULL),(1667,412,'1','<p>Các phần tử của mảng một chiều được sắp xếp thứ tự theo giá trị giảm dần</p>',1,NULL,NULL),(1668,412,'2','<p>Các phần tử của mảng một chiều được sắp xếp thứ tự theo giá trị tăng dần</p>',2,NULL,NULL),(1669,412,'3','<p>Các phần tử của mảng một chiều không sắp thứ tự</p>',3,NULL,NULL),(1670,413,'0','<p>Do người lập trình khai báo </p>',0,NULL,NULL),(1671,413,'1','<p>Không có chỉ số </p>',1,NULL,NULL),(1672,413,'2','<p>0<br></p>',2,NULL,NULL),(1673,413,'3','<p>1<br></p>',3,NULL,NULL),(1674,414,'0','<p>printf (“%d”,A[6]);&nbsp;&nbsp;&nbsp;&nbsp; </p>',0,NULL,NULL),(1675,414,'1','<p>printf (“%d”,A[7]);&nbsp;&nbsp;&nbsp;&nbsp; </p>',1,NULL,NULL),(1676,414,'2','<p>printf (“%d”,A,6);</p>',2,NULL,NULL),(1677,414,'3','<p>printf (“%d”,A,7);</p>',3,NULL,NULL),(1678,415,'0','<p>Viết ra tổng của mảng a </p>',0,NULL,NULL),(1679,415,'1','<p>Viết ra các số lẻ của mảng a </p>',1,NULL,NULL),(1680,415,'2','<p>Viết ra tất cả các số của mảng a </p>',2,NULL,NULL),(1681,415,'3','<p>Viết ra các số chẳn của mảng a</p>',3,NULL,NULL),(1682,416,'0','<p>7<br></p>',0,NULL,NULL),(1683,416,'1','<p>2<br></p>',1,NULL,NULL),(1684,416,'2','<p>0<br></p>',2,NULL,NULL),(1685,416,'3','<p>3<br></p>',3,NULL,NULL),(1686,417,'0','<p>Tìm phần tử lớn nhất trong mảng</p>',0,NULL,NULL),(1687,417,'1','<p>Tính giá trị trung bình của mảng</p>',1,NULL,NULL),(1688,417,'2','<p>Tính tổng các phần tử của mảng</p>',2,NULL,NULL),(1689,417,'3','<p>Tính tổng các số chẵn</p>',3,NULL,NULL),(1690,418,'0','<p>0<br></p>',0,NULL,NULL),(1691,418,'1','<p>12<br></p>',1,NULL,NULL),(1692,418,'2','<p>240<br></p>',2,NULL,NULL),(1693,418,'3','<p>80<br></p>',3,NULL,NULL),(1694,419,'0','<p>Mảng các kí tự </p>',0,NULL,NULL),(1695,419,'1','<p>Dãy các kí tự trong bảng mã ASCII</p>',1,NULL,NULL),(1696,419,'2','<p>Tập hợp các chữ cái trong bảng chữ cái tiếng Anh</p>',2,NULL,NULL),(1697,419,'3','<p>Tập hợp các chữ cái và các chữ số trong bảng chữ cái tiếng Anh</p>',3,NULL,NULL),(1698,420,'0','<p>Là mảng một chiều trong đó mỗi phần tử&nbsp; của mảng là một mảng một chiều, và được truy xuất bởi hai chỉ số dòng và cột.</p>',0,NULL,NULL),(1699,420,'1','<p>Là mảng hai chiều trong đó mỗi phần tử&nbsp; của mảng là một mảng một chiều, và được truy xuất bởi hai chỉ số dòng và cột. </p>',1,NULL,NULL),(1700,420,'2','<p>Là mảng một chiều trong đó mỗi phần tử&nbsp; của mảng là một mảng hai chiều, và được truy xuất bởi hai chỉ số dòng và cột.</p>',2,NULL,NULL),(1701,420,'3','<p>Là mảng một chiều trong đó mỗi phần tử&nbsp; của mảng là một mảng hai chiều</p>',3,NULL,NULL),(1702,421,'0','<p>scanf (“%d”, &amp;a[i][j]).</p>',0,NULL,NULL),(1703,421,'1','<p>printf (“%d”, &amp;a[i][j]).</p>',1,NULL,NULL),(1704,421,'2','<p>scanf (“%d”, a[i][j]).</p>',2,NULL,NULL),(1705,421,'3','<p>printf (“%d”, a[i][j]).</p>',3,NULL,NULL),(1706,422,'0','<p>printf (“ \\t %d ”, &amp;a[i][j] ).</p>',0,NULL,NULL),(1707,422,'1','<p>printf (“ \\t %d ”, a). </p>',1,NULL,NULL),(1708,422,'2','<p>printf (“ \\t %d ”, a[i][j] ).</p>',2,NULL,NULL),(1709,422,'3','<p>scanf (“ \\t %d ”, a[i][j] ).</p>',3,NULL,NULL),(1710,423,'0','<p>Đếm các số chẵn .</p>',0,NULL,NULL),(1711,423,'1','<p>Đếm các số lẻ. </p>',1,NULL,NULL),(1712,423,'2','<p>Đếm các số nguyên tố.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>',2,NULL,NULL),(1713,423,'3','<p>Đếm các số 2.</p>',3,NULL,NULL),(1714,424,'0','<p>1<br></p>',0,NULL,NULL),(1715,424,'1','<p>2<br></p>',1,NULL,NULL),(1716,424,'2','<p>4<br></p>',2,NULL,NULL),(1717,424,'3','<p>5<br></p>',3,NULL,NULL),(1718,425,'0','<p>45<br></p>',0,NULL,NULL),(1719,425,'1','<p>50<br></p>',1,NULL,NULL),(1720,425,'2','<p>30<br></p>',2,NULL,NULL),(1721,425,'3','<p>25<br></p>',3,NULL,NULL),(1722,426,'0','<p>Đặt ở địa chỉ xác định trong vùng nhớ.</p>',0,NULL,NULL),(1723,426,'1','<p>Có giá trị khởi tạo.</p>',1,NULL,NULL),(1724,426,'2','<p>Chứa địa chỉ của biến khác.</p>',2,NULL,NULL),(1725,426,'3','<p>Đặt ở địa chỉ nào đó, giá trị không xác định.</p>',3,NULL,NULL),(1726,427,'0','<p>Dữ liệu kiểu nguyên.</p>',0,NULL,NULL),(1727,427,'1','<p>Dữ liệu kiểu thực.</p>',1,NULL,NULL),(1728,427,'2','<p>Địa chỉ của biến khác.</p>',2,NULL,NULL),(1729,427,'3','<p>Dữ liệu chuỗi.</p>',3,NULL,NULL),(1734,429,'0','<p>Tập các quy tắc quy định cách thức trao đổi dữ liệu giữa các thực thể tham gia mạng</p>',0,NULL,NULL),(1735,429,'1','<p>Là một tập hợp các lệnh nào đó cho phép điều khiển từ xa một máy tính</p>',1,NULL,NULL),(1736,429,'2','<p>Là cách thức hai máy tính nói chuyện với nhau</p>',2,NULL,NULL),(1737,429,'3','<p>Là cách thức để con người nói chuyện được với máy tính</p>',3,NULL,NULL),(1738,428,'0','<p>Truyền đi các electron trên đường dây cáp mạng</p>',0,NULL,NULL),(1739,428,'1','<p>Truyền đi các tín hiệu điện từ từ máy tính này sang máy tính khác</p>',1,NULL,NULL),(1740,428,'2','<p>Truyền dữ liệu từ máy tính này sang máy tính khác</p>',2,NULL,NULL),(1741,428,'3','<p>Truyền dữ liệu từ thiết bị này sang thiết bị khác.</p>',3,NULL,NULL),(1742,430,'0','<p>Truyền đi các electron trên đường dây cáp mạng</p>',0,NULL,NULL),(1743,430,'1','<p>Truyền đi các tín hiệu điện từ từ máy tính này sang máy tính khác</p>',1,NULL,NULL),(1744,430,'2','<p>Truyền dữ liệu từ máy tính này sang máy tính khác</p>',2,NULL,NULL),(1745,430,'3','<p>Truyền dữ liệu từ thiết bị này sang thiết bị khác.</p>',3,NULL,NULL),(1746,431,'0','<p>Mạng vẫn hoạt động bình thường</p>',0,NULL,NULL),(1747,431,'1','<p>Mạng không thể tiếp tục hoạt động</p>',1,NULL,NULL),(1748,431,'2','<p>Mạng vẫn hoạt động bình thường ở các nhánh nhỏ</p>',2,NULL,NULL),(1749,431,'3','<p>Không sao cả, Hub xử lý trung tâm không có ý nghĩa trong mô hình sao</p>',3,NULL,NULL),(1750,432,'0','<p>pa = &amp;a.</p>',0,NULL,NULL),(1751,432,'1','<p>*pa = &amp;a.</p>',1,NULL,NULL),(1752,432,'2','<p>*pa = a.</p>',2,NULL,NULL),(1753,432,'3','<p>pa = a.</p>',3,NULL,NULL),(1754,433,'0','<p>Mạng vẫn có thể làm việc được, tuy nhiên mọi truy cập đến máy hỏng bị ngừng lại</p>',0,NULL,NULL),(1755,433,'1','<p>Mạng không hoạt động nữa</p>',1,NULL,NULL),(1756,433,'2','<p>Mạng bình thường, không sao cả</p>',2,NULL,NULL),(1757,433,'3','<p>Mạng vẫn có thể làm việc được, tuy nhiên mọi máy tính không truy cập được với nhau</p>',3,NULL,NULL),(1758,434,'0','<p>int y = pa.</p>',0,NULL,NULL),(1759,434,'1','<p>int y = &amp;pa.</p>',1,NULL,NULL),(1760,434,'2','<p>int y = *pa.</p>',2,NULL,NULL),(1761,434,'3','<p>int y =&amp;(*pa).</p>',3,NULL,NULL),(1762,435,'0','<p>Điểm - Điểm (point - to - point)</p>',0,NULL,NULL),(1763,435,'1','<p>Điểm - Nhiều Điểm (broadcast)</p>',1,NULL,NULL),(1764,435,'2','<p>Nhiều Điểm - Nhiều Điểm</p>',2,NULL,NULL),(1765,435,'3','<p>Nhiều Điểm - Điểm</p>',3,NULL,NULL),(1766,436,'0','<p>p = &amp;a ; q = p.</p>',0,NULL,NULL),(1767,436,'1','<p>f = &amp;a ; q = f.</p>',1,NULL,NULL),(1768,436,'2','<p>q = a ; &nbsp;q = p.</p>',2,NULL,NULL),(1769,436,'3','<p>f = p ; &nbsp;p = q.</p>',3,NULL,NULL),(1770,437,'0','<p>Chuỗi ký tự&nbsp; là một mảng các ký tự .</p>',0,NULL,NULL),(1771,437,'1','<p>Chuỗi là một mảng các số được định nghĩa.</p>',1,NULL,NULL),(1772,437,'2','<p>Chuỗi ký tự&nbsp; là một loại con trỏ.</p>',2,NULL,NULL),(1773,437,'3','<p>Chuỗi ký tự là một cấu trúc được định nghĩa.</p>',3,NULL,NULL),(1774,438,'0','<p>Nhập một chuỗi</p>',0,NULL,NULL),(1775,438,'1','<p>Loại bỏ khoảng trắng trong 1 chuỗi</p>',1,NULL,NULL),(1776,438,'2','<p>Xuất chuỗi ra màn hình</p>',2,NULL,NULL),(1777,438,'3','<p>Trả về độ dài của 1 chuỗi</p>',3,NULL,NULL),(1778,439,'0','<p>Nhận&nbsp; một chuỗi nhập từ bàn phím</p>',0,NULL,NULL),(1779,439,'1','<p>Loại bỏ khoảng trắng trong 1 chuỗi</p>',1,NULL,NULL),(1780,439,'2','<p>Xuất chuỗi ra màn hình</p>',2,NULL,NULL),(1781,439,'3','<p>Nhận các ký tự nhập từ bàn phím cho đến khi nhấn phím enter</p>',3,NULL,NULL),(1782,440,'0','<p>Bus</p>',0,NULL,NULL),(1783,440,'1','<p>Star</p>',1,NULL,NULL),(1784,440,'2','<p>Ring</p>',2,NULL,NULL),(1785,440,'3','<p>Hybrid</p>',3,NULL,NULL),(1786,441,'0','<p>#include&lt;stdio.h&gt; </p>',0,NULL,NULL),(1787,441,'1','<p>#include&lt;string.h&gt; </p>',1,NULL,NULL),(1788,441,'2','<p>#include&lt;conio.h&gt;</p>',2,NULL,NULL),(1789,441,'3','<p>#include&lt;iostream.h&gt;</p>',3,NULL,NULL),(1790,442,'0','<p>7, 9, 11, 13, 15.</p>',0,NULL,NULL),(1791,442,'1','<p>2, 15, 6, 8, 10.</p>',1,NULL,NULL),(1792,442,'2','<p>2 4 6 8 10.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>',2,NULL,NULL),(1793,442,'3','<p>3, 1, -1, -3, -5.</p>',3,NULL,NULL),(1794,443,'0','<p>Client/Server</p>',0,NULL,NULL),(1795,443,'1','<p>Ethernet</p>',1,NULL,NULL),(1796,443,'2','<p>Peer to Peer</p>',2,NULL,NULL),(1797,443,'3','<p>LAN</p>',3,NULL,NULL),(1798,444,'0','<p>2<br></p>',0,NULL,NULL),(1799,444,'1','<p>1<br></p>',1,NULL,NULL),(1800,444,'2','<p>3<br></p>',2,NULL,NULL),(1801,444,'3','<p>C1D1 (địa chỉ bộ nhớ).</p>',3,NULL,NULL),(1802,445,'0','<p>Lan</p>',0,NULL,NULL),(1803,445,'1','<p>Man</p>',1,NULL,NULL),(1804,445,'2','<p>Wan</p>',2,NULL,NULL),(1805,445,'3','<p>Gan</p>',3,NULL,NULL),(1806,446,'0','<p>a=9, b=10, p=7.</p>',0,NULL,NULL),(1807,446,'1','<p>a=10, b=10, p=7.</p>',1,NULL,NULL),(1808,446,'2','<p>a=10, b=10, p=10.</p>',2,NULL,NULL),(1809,446,'3','<p>a=9, b=10, p=9.</p>',3,NULL,NULL),(1810,447,'0','<p>Tìm phần tử lớn nhất trong mảng</p>',0,NULL,NULL),(1811,447,'1','<p>Tính giá trị trung bình của mảng</p>',1,NULL,NULL),(1812,447,'2','<p>Tính tổng các phần tử của mảng</p>',2,NULL,NULL),(1813,447,'3','<p>Tính tổng các số chẵn</p>',3,NULL,NULL),(1814,448,'0','<p>Switch</p>',0,NULL,NULL),(1815,448,'1','<p>Hub</p>',1,NULL,NULL),(1816,448,'2','<p>Đĩa cứng</p>',2,NULL,NULL),(1817,448,'3','<p>Router</p>',3,NULL,NULL),(1818,449,'0','<p>int *t</p>',0,NULL,NULL),(1819,449,'1','<p>int *y</p>',1,NULL,NULL),(1820,449,'2','<p>int y</p>',2,NULL,NULL),(1821,449,'3','<p>int &amp;y</p>',3,NULL,NULL),(1822,450,'0','<p>Biến j và k chứa địa chỉ của a.</p>',0,NULL,NULL),(1823,450,'1','<p>Biến j và k chứa địa chỉ kế tiếp sau a.</p>',1,NULL,NULL),(1824,450,'2','<p>Biến j và k chứa giá trị của a.</p>',2,NULL,NULL),(1825,450,'3','<p>Biến j và k chứa giá trị của a tăng lên 1.</p>',3,NULL,NULL),(1826,451,'0','<p>Chuoi temp: Truong cao dang CNTT.</p>',0,NULL,NULL),(1827,451,'1','<p>TruongcaodangCNTT.</p>',1,NULL,NULL),(1828,451,'2','<p>Chuoi temp: Truong cao dang CNTT&nbsp; Chuoi input: Truong cao dang CNTT.</p>',2,NULL,NULL),(1829,451,'3','<p>Bị lỗi.</p>',3,NULL,NULL),(1830,452,'0','<p>Kagpur, Kanpur.</p>',0,NULL,NULL),(1831,452,'1','<p>Nagpur, Kanpur.</p>',1,NULL,NULL),(1832,452,'2','<p>Kagpur, anpur.</p>',2,NULL,NULL),(1833,452,'3','<p>Bị lỗi.</p>',3,NULL,NULL),(1834,453,'0','<p>llo.</p>',0,NULL,NULL),(1835,453,'1','<p>hello.</p>',1,NULL,NULL),(1836,453,'2','<p>ello.</p>',2,NULL,NULL),(1837,453,'3','<p>h.</p>',3,NULL,NULL),(1838,454,'0','<p>The string is empty.</p>',0,NULL,NULL),(1839,454,'1','<p>The string is not empty.</p>',1,NULL,NULL),(1840,454,'2','<p>Không có gì</p>',2,NULL,NULL),(1841,454,'3','<p>0.</p>',3,NULL,NULL),(1842,455,'0','<p>Hello.</p>',0,NULL,NULL),(1843,455,'1','<p>HelloHello.</p>',1,NULL,NULL),(1844,455,'2','<p>Không có gì</p>',2,NULL,NULL),(1845,455,'3','<p>ello.</p>',3,NULL,NULL),(1846,456,'1','<p>Tên Loại<br></p>',0,NULL,NULL),(1847,457,'0','<p>IndiaBIXHello.</p>',0,NULL,NULL),(1848,457,'1','<p>Địa chỉ của \"Hello\" và \"IndiaBIX\".</p>',1,NULL,NULL),(1849,457,'2','<p>HelloIndiaBIX.</p>',2,NULL,NULL),(1850,457,'3','<p>IelloHndiaBIX.</p>',3,NULL,NULL),(1851,458,'0','<p>Không xuất ra gì.</p>',0,NULL,NULL),(1852,458,'1','<p>30<br></p>',1,NULL,NULL),(1853,458,'2','<p>3</p>',2,NULL,NULL),(1854,458,'3','<p>300<br></p>',3,NULL,NULL),(1858,461,'0','<p>O(1)</p>',0,NULL,NULL),(1859,461,'1','<p>O(n)</p>',1,NULL,NULL),(1860,461,'2','<p>O(n<sup>2</sup>)</p>',2,NULL,NULL),(1861,461,'3','<p>O(2<sup>n</sup>)</p>',3,NULL,NULL),(1862,462,'0','<p>Màn hình</p>',0,NULL,NULL),(1863,462,'0','<p>Bàn phím</p>',1,NULL,NULL),(1864,462,'0','<p>Đĩa cứng</p>',2,NULL,NULL),(1865,462,'0','<p>RAM</p>',3,NULL,NULL),(1866,462,'1','<p>Bộ nhớ để xử lý</p>',0,NULL,NULL),(1867,462,'1','<p>Lưu trữ thông tin</p>',1,NULL,NULL),(1868,462,'1','<p>Hiển thị</p>',2,NULL,NULL),(1869,462,'1','<p>Nhập dữ liệu</p>',3,NULL,NULL),(1902,470,'0','<p>103 DotNet.</p>',0,NULL,NULL),(1903,470,'1','<p>102 Java.</p>',1,NULL,NULL),(1904,470,'2','<p>103 PHP.</p>',2,NULL,NULL),(1905,470,'3','<p>104 DotNet.</p>',3,NULL,NULL),(1906,471,'0','<p>e[i].name.</p>',0,NULL,NULL),(1907,471,'1','<p>struct emp e[10].</p>',1,NULL,NULL),(1908,471,'2','<p>&amp;e[i].sal.</p>',2,NULL,NULL),(1909,471,'3','<p>struct emp.</p>',3,NULL,NULL),(1910,472,'0','<p>Ngôn ngữ B.</p>',0,NULL,NULL),(1911,472,'1','<p>Ngôn ngữ BCPL.</p>',1,NULL,NULL),(1912,472,'2','<p>Ngôn ngữ DEC PDP. </p>',2,NULL,NULL),(1913,472,'3','<p>Ngôn ngữ B và BCPL.</p>',3,NULL,NULL),(1926,476,'0','<p>Đại lượng không đổi trong quá trình thực hiện chương trình </p>',0,NULL,NULL),(1927,476,'1','<p>Đại lượng có thể thay đổi </p>',1,NULL,NULL),(1928,476,'2','<p>Khai báo bằng từ khóa </p>',2,NULL,NULL),(1929,476,'3','<p>Không cần khai báo khi dùng</p>',3,NULL,NULL),(1930,477,'0','<p>8.5A&nbsp;&nbsp;&nbsp; </p>',0,NULL,NULL),(1931,477,'1','<p>9,5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>',1,NULL,NULL),(1932,477,'2','<p>&nbsp;\'False</p>',2,NULL,NULL),(1933,477,'3','<p>11.1</p>',3,NULL,NULL),(1934,478,'0','<p>Giá trị cũ còn tồn tại</p>',0,NULL,NULL),(1935,478,'1','<p>Giá trị cũ tạm thời mất đi</p>',1,NULL,NULL),(1936,478,'2','<p>Trị cũ bị mất đi</p>',2,NULL,NULL),(1937,478,'3','<p>Tùy thuộc vào người sử dụng có sao lưu hay không</p>',3,NULL,NULL),(1938,479,'0','<p>Const &lt;TenHang&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>',0,NULL,NULL),(1939,479,'1','<p>Const giá trị ;</p>',1,NULL,NULL),(1940,479,'2','<p>Const &lt;Kieu&gt;&lt;TenHang&gt;: = giatri;</p>',2,NULL,NULL),(1941,479,'3','<p>Const &lt;Kieu&gt;&lt;TenHang&gt; = giatri;</p>',3,NULL,NULL),(1942,480,'0','<p>const float a;</p>',0,NULL,NULL),(1943,480,'1','<p>const float pi=3.14;</p>',1,NULL,NULL),(1944,480,'2','<p>const float 3.14;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>',2,NULL,NULL),(1945,480,'3','<p>const hoten:=’Nguyen Van An’;</p>',3,NULL,NULL),(1950,482,'0','<p>Vùng bộ nhớ nào đó sẽ được định vị</p>',0,NULL,NULL),(1951,482,'1','<p>Vùng bộ nhớ nào đó sẽ được định vị và một cái tên tượng trưng sẽ được dùng để tham chiếu tới vị trí bộ nhớ đó.</p>',1,NULL,NULL),(1952,482,'2','<p>Hạn chế sự thay đổi hay thêm vào chương trình.</p>',2,NULL,NULL),(1953,482,'3','<p>Một cái tên tượng trưng sẽ được dùng để tham chiếu tới một vị trí bộ nhớ.</p>',3,NULL,NULL),(1954,483,'0','<p>hoten</p>',0,NULL,NULL),(1955,483,'1','<p>ho ten</p>',1,NULL,NULL),(1956,483,'2','<p>hoten1</p>',2,NULL,NULL),(1957,483,'3','<p>ho_ten</p>',3,NULL,NULL),(1958,484,'0','<p>12345 </p>',0,NULL,NULL),(1959,484,'1','<p>12,345 </p>',1,NULL,NULL),(1960,484,'2','<p>1.2E-3 </p>',2,NULL,NULL),(1961,484,'3','<p>-12.34</p>',3,NULL,NULL),(1962,485,'0','<p>Biểu thức&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>',0,NULL,NULL),(1963,485,'1','<p>Biến&nbsp;&nbsp;&nbsp;&nbsp; </p>',1,NULL,NULL),(1964,485,'2','<p>Hằng&nbsp;&nbsp; </p>',2,NULL,NULL),(1965,485,'3','<p>Hàm</p>',3,NULL,NULL),(1966,486,'0','<p>Nó được khai báo tất cả các hàm, ngoại trừ hàm main().</p>',0,NULL,NULL),(1967,486,'1','<p>Nó được khai báo ngoài tất cả các hàm kể cả hàm main().</p>',1,NULL,NULL),(1968,486,'2','<p>Nó được khai báo bên ngoài hàm main().</p>',2,NULL,NULL),(1969,486,'3','<p>Nó được khai báo bên trong hàm main().</p>',3,NULL,NULL),(1970,487,'0','<p>Có ý nghĩa trong một hiện thực hàm</p>',0,NULL,NULL),(1971,487,'1','<p>Chỉ có ý nghĩa trong hàm main</p>',1,NULL,NULL),(1972,487,'2','<p>Có ý nghĩa trong toàn chương trình</p>',2,NULL,NULL),(1973,487,'3','<p>Không có ý nghĩa trong toàn chương trình</p>',3,NULL,NULL),(1974,488,'0','<p>Nó được khai báo bên trong các hàm hoặc thủ tục, kể cả hàm main().</p>',0,NULL,NULL),(1975,488,'1','<p>Nó đươc khai báo bên trong các hàm ngoại trừ hàm main().</p>',1,NULL,NULL),(1976,488,'2','<p>Nó được khai báo bên trong hàm main().</p>',2,NULL,NULL),(1977,488,'3','<p>Nó được khai báo bên ngoài các hàm kể cả hàm main().</p>',3,NULL,NULL),(1978,489,'0','<p>Miền nhớ dành cho x có thể thay đổi trong quá trình thực hiện chương trình.</p>',0,NULL,NULL),(1979,489,'1','<p>Miền nhớ dành cho x chỉ có thay đổi bởi những thao tác với x bên trong hàm main().</p>',1,NULL,NULL),(1980,489,'2','<p>Miền nhớ dành cho x sẽ thay đổi bởi những thao tác với x trong tất cả các hàm, kể cả hàm main().</p>',2,NULL,NULL),(1981,489,'3','<p>Miền nhớ giành cho x không bị thay đổi trong quá trình thực hiện chương trình.</p>',3,NULL,NULL),(1982,490,'0','<p>int<br></p>',0,NULL,NULL),(1983,490,'1','<p>long</p>',1,NULL,NULL),(1984,490,'2','<p>float</p>',2,NULL,NULL),(1985,490,'3','<p>double</p>',3,NULL,NULL),(1986,491,'0','<p>1<br></p>',0,NULL,NULL),(1987,491,'1','<p>2<br></p>',1,NULL,NULL),(1988,491,'2','<p>3<br></p>',2,NULL,NULL),(1989,491,'3','<p>4<br></p>',3,NULL,NULL),(1990,492,'0','<p>32<br></p>',0,NULL,NULL),(1991,492,'1','<p>16<br></p>',1,NULL,NULL),(1992,492,'2','<p>64<br></p>',2,NULL,NULL),(1993,492,'3','<p>8<br></p>',3,NULL,NULL),(1994,493,'0','<p>2<br></p>',0,NULL,NULL),(1995,493,'1','<p>4<br></p>',1,NULL,NULL),(1996,493,'2','<p>8<br></p>',2,NULL,NULL),(1997,493,'3','<p>16<br></p>',3,NULL,NULL),(1998,494,'0','<p>Không thể xác định được</p>',0,NULL,NULL),(1999,494,'1','<p>Có lỗi</p>',1,NULL,NULL),(2000,494,'2','<p>Không có lỗi gì</p>',2,NULL,NULL),(2001,494,'3','<p>Không ra kết quả gì</p>',3,NULL,NULL),(2002,495,'0','<p>X= 275%2</p>',0,NULL,NULL),(2003,495,'1','<p>X= 210/4</p>',1,NULL,NULL),(2004,495,'2','<p>X= sqrt(49)X= abs(-453)</p>',2,NULL,NULL),(2005,495,'3','<p>X= abs(-453)</p>',3,NULL,NULL),(2006,496,'0','<p>int m=7, t=6 ; double x= 2*m;</p>',0,NULL,NULL),(2007,496,'1','<p>int m=7, t=6 double x= 2*m;</p>',1,NULL,NULL),(2008,496,'2','<p>int m=7, long t=6, double x= 2*m;</p>',2,NULL,NULL),(2009,496,'3','<p>int m=7, double x= 2*m;</p>',3,NULL,NULL),(2010,497,'0','<p>Trị của n là 0</p>',0,NULL,NULL),(2011,497,'1','<p>Trị của n là 4</p>',1,NULL,NULL),(2012,497,'2','<p>Trị của n không xác định được</p>',2,NULL,NULL),(2013,497,'3','<p>Code trên gây lỗi</p>',3,NULL,NULL),(2014,498,'0','<p>0<br></p>',0,NULL,NULL),(2015,498,'1','<p>1<br></p>',1,NULL,NULL),(2016,498,'2','<p>20<br></p>',2,NULL,NULL),(2017,498,'3','<p>Bị lỗi</p>',3,NULL,NULL),(2018,499,'0','<p>1<br></p>',0,NULL,NULL),(2019,499,'1','<p>8<br></p>',1,NULL,NULL),(2020,499,'2','<p>9<br></p>',2,NULL,NULL),(2021,499,'3','<p>10<br></p>',3,NULL,NULL),(2022,500,'0','<p>S=R*R*p</p>',0,NULL,NULL),(2023,500,'1','<p>S=R2*pi</p>',1,NULL,NULL),(2024,500,'2','<p>S=sqr(R)*pi</p>',2,NULL,NULL),(2025,500,'3','<p>S:= sqr(R)*pi</p>',3,NULL,NULL),(2026,501,'0','<p>\"\\n\" là chỉ thị dời con nháy về cuối dòng</p>',0,NULL,NULL),(2027,501,'1','<p>\"\\r\" là chỉ thị dời con nháy về dòng sau</p>',1,NULL,NULL),(2028,501,'2','<p>\"\\r\" là chỉ thị dời con nháy về cuối dòng</p>',2,NULL,NULL),(2029,501,'3','<p>\"\\r\" là chỉ thị dời con nháy về dòng giữa</p>',3,NULL,NULL),(2030,502,'0','<p>109<br></p>',0,NULL,NULL),(2031,502,'1','<p>111<br></p>',1,NULL,NULL),(2032,502,'2','<p>113<br></p>',2,NULL,NULL),(2033,502,'3','<p>110<br></p>',3,NULL,NULL),(2034,503,'0','<p>12<br></p>',0,NULL,NULL),(2035,503,'1','<p>0<br></p>',1,NULL,NULL),(2036,503,'2','<p>1<br></p>',2,NULL,NULL),(2037,503,'3','<p>13<br></p>',3,NULL,NULL),(2038,504,'0','<p>Số học, luận lý, so sánh .</p>',0,NULL,NULL),(2039,504,'1','<p>Luận lý, số học, so sánh.</p>',1,NULL,NULL),(2040,504,'2','<p>Số học, so sánh, luận lý.</p>',2,NULL,NULL),(2041,504,'3','<p>Luận lý, so sánh, số học.</p>',3,NULL,NULL),(2042,505,'0','<p>#include &lt;stdio.h.&gt;;</p>',0,NULL,NULL),(2043,505,'1','<p>#include &lt;tên thư viện&gt;;</p>',1,NULL,NULL),(2044,505,'2','<p>#include;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>',2,NULL,NULL),(2045,505,'3','<p>program &lt;tên thư viện&gt;;</p>',3,NULL,NULL),(2046,506,'0','<p>trong một chương trình phần khai báo có thể có hoặc không</p>',0,NULL,NULL),(2047,506,'1','<p>trong một&nbsp; chương trình phần thân chương trình có thể có hoặc không</p>',1,NULL,NULL),(2048,506,'2','<p>trong một chương trình phần thân chương trình bắt buộc phải có</p>',2,NULL,NULL),(2049,506,'3','<p>trong một chương trình ít nhất phải có một phần là phần thân chương trình</p>',3,NULL,NULL),(2050,507,'0','<p>Định nghĩa một tên gọi cho một dữ liệu số nguyên</p>',0,NULL,NULL),(2051,507,'1','<p>Định nghĩa một tên gọi cho một dữ liệu chuỗi ký tự</p>',1,NULL,NULL),(2052,507,'2','<p>Định nghĩa một tên gọi cho một dữ liệu</p>',2,NULL,NULL),(2053,507,'3','<p>Định nghĩa hằng và kiểu trong C</p>',3,NULL,NULL),(2054,508,'0','<p>Hiệu ứng dây chuyền</p>',0,NULL,NULL),(2055,508,'1','<p>Hiệu ứng lề</p>',1,NULL,NULL),(2056,508,'2','<p>Hiệu ứng nhà kính</p>',2,NULL,NULL),(2057,508,'3','<p>Tất cả đều đúng</p>',3,NULL,NULL),(2058,509,'0','<p>Kiểu dữ liệu chuẩn là kiểu dữ liệu do người sử dụng tạo ra</p>',0,NULL,NULL),(2059,509,'1','<p>Kiểu dữ liệu chuẩn là kiểu dữ liệu tuân theo một cú pháp chuẩn</p>',1,NULL,NULL),(2060,509,'2','<p>Kiểu dữ liệu chuẩn là kiểu dữ liệu được xây dựng sẵn</p>',2,NULL,NULL),(2061,509,'3','<p>Kiểu dữ liệu chuẩn là kiểu do máy tự&nbsp; phát sinh</p>',3,NULL,NULL),(2062,510,'0','<p>char là kiểu ký tự, còn int là kiểu số nguyên</p>',0,NULL,NULL),(2063,510,'1','<p>int có miền giá trị âm, char mặc định là không âm</p>',1,NULL,NULL),(2064,510,'2','<p>char chiếm 1 byte trong bộ nhớ, int chiếm 2 byte</p>',2,NULL,NULL),(2065,510,'3','<p>Không tính toán được trên kiểu char</p>',3,NULL,NULL),(2066,511,'0','<p>128</p>',0,NULL,NULL),(2067,511,'1','<p>255</p>',1,NULL,NULL),(2068,511,'2','<p>512</p>',2,NULL,NULL),(2069,511,'3','<p>65535</p>',3,NULL,NULL),(2070,512,'0','<p>128</p>',0,NULL,NULL),(2071,512,'1','<p>255<br></p>',1,NULL,NULL),(2072,512,'2','<p>512<br></p>',2,NULL,NULL),(2073,512,'3','<p>65535</p>',3,NULL,NULL),(2074,513,'0','<p>%d</p>',0,NULL,NULL),(2075,513,'1','<p>%f</p>',1,NULL,NULL),(2076,513,'2','<p>%lf</p>',2,NULL,NULL),(2077,513,'3','<p>%s</p>',3,NULL,NULL),(2078,514,'0','<p>(a+=b).</p>',0,NULL,NULL),(2079,514,'1','<p>(a*=b).</p>',1,NULL,NULL),(2080,514,'2','<p>(a=b).</p>',2,NULL,NULL),(2081,514,'3','<p>(a&amp;=b).</p>',3,NULL,NULL),(2082,515,'0','<p>Dãy các mã định dạng dữ liệu hiển thị.</p>',0,NULL,NULL),(2083,515,'1','<p>Con trỏ của xâu kí tự.</p>',1,NULL,NULL),(2084,515,'2','<p>Các xâu kí tự mang tính chất thông báo.</p>',2,NULL,NULL),(2085,515,'3','<p>Một chuỗi.</p>',3,NULL,NULL),(2086,516,'0','<p>\"%f\"</p>',0,NULL,NULL),(2087,516,'1','<p>\"%x\"</p>',1,NULL,NULL),(2088,516,'2','<p>\"%s\"</p>',2,NULL,NULL),(2089,516,'3','<p>\"%c\"</p>',3,NULL,NULL),(2090,517,'0','<p>\"%f\"</p>',0,NULL,NULL),(2091,517,'1','<p>\"%x\"</p>',1,NULL,NULL),(2092,517,'2','<p>\"%s\"</p>',2,NULL,NULL),(2093,517,'3','<p>\"%c\"</p>',3,NULL,NULL),(2094,518,'0','<p>scanf()</p>',0,NULL,NULL),(2095,518,'1','<p>printf()</p>',1,NULL,NULL),(2096,518,'2','<p>puts()</p>',2,NULL,NULL),(2097,518,'3','<p>gets()</p>',3,NULL,NULL),(2098,519,'0','<p>3.4*10<sup>-38</sup>đến 3.4*10<sup>38</sup>.</p>',0,NULL,NULL),(2099,519,'1','<p>-32768 đến 32767.</p>',1,NULL,NULL),(2100,519,'2','<p>-128 đến 127.</p>',2,NULL,NULL),(2101,519,'3','<p>0…65535.</p>',3,NULL,NULL),(2102,520,'0','<p>65535</p>',0,NULL,NULL),(2103,520,'1','<p>-65535</p>',1,NULL,NULL),(2104,520,'2','<p>20.4</p>',2,NULL,NULL),(2105,520,'3','<p>20000</p>',3,NULL,NULL),(2106,521,'0','<p>từ 1 đến 127&nbsp;&nbsp;&nbsp; </p>',0,NULL,NULL),(2107,521,'1','<p>từ -128 đến 127</p>',1,NULL,NULL),(2108,521,'2','<p>từ 128 đến 127&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>',2,NULL,NULL),(2109,521,'3','<p>từ 0 đến 256</p>',3,NULL,NULL),(2110,522,'0','<p>Float<br></p>',0,NULL,NULL),(2111,522,'1','<p>Long&nbsp;&nbsp;&nbsp; </p>',1,NULL,NULL),(2112,522,'2','<p>Int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>',2,NULL,NULL),(2113,522,'3','<p>Char</p>',3,NULL,NULL),(2114,523,'0','<p>0.60</p>',0,NULL,NULL),(2115,523,'1','<p>0.75</p>',1,NULL,NULL),(2116,523,'2','<p>0.00</p>',2,NULL,NULL),(2117,523,'3','<p>0.33</p>',3,NULL,NULL),(2118,524,'0','<p>char A,B ; float E; long C,D;</p>',0,NULL,NULL),(2119,524,'1','<p>char A,B ; int E; float C,D;</p>',1,NULL,NULL),(2120,524,'2','<p>char A,B ; float E; int C,D;</p>',2,NULL,NULL),(2121,524,'3','<p>int A,B ; char E; float C,D;</p>',3,NULL,NULL),(2122,525,'0','<p>Kiểu mảng</p>',0,NULL,NULL),(2123,525,'1','<p>Kiểu enum</p>',1,NULL,NULL),(2124,525,'2','<p>Kiểu short int</p>',2,NULL,NULL),(2125,525,'3','<p>Kiểu unsigned</p>',3,NULL,NULL),(2126,526,'0','<p>(%),(++),(--)</p>',0,NULL,NULL),(2127,526,'1','<p>(+), (-),(*),(/)</p>',1,NULL,NULL),(2128,526,'2','<p>(+), (-),(*),(/),(%),(++),(--)</p>',2,NULL,NULL),(2129,526,'3','<p>(+), (-),(*),(/),(%)</p>',3,NULL,NULL),(2130,527,'0','<p>&gt;=, &lt;=, &lt;&gt;, ==, &lt;, &gt;&nbsp;&nbsp;&nbsp; </p>',0,NULL,NULL),(2131,527,'1','<p>&gt;=, &lt;=, !=, =, &lt;, &gt;</p>',1,NULL,NULL),(2132,527,'2','<p>&gt;=, &lt;=, !=, ==, &lt;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>',2,NULL,NULL),(2133,527,'3','<p>&gt;=, &lt;=, !=, ==, &lt;, &gt;</p>',3,NULL,NULL),(2134,528,'0','<p>and, or, not&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>',0,NULL,NULL),(2135,528,'1','<p>&amp;, || , !</p>',1,NULL,NULL),(2136,528,'2','<p>&amp;&amp;, || , !</p>',2,NULL,NULL),(2137,528,'3','<p>&amp;&amp;, or, not</p>',3,NULL,NULL),(2138,529,'0','<p>Biểu thức, hằng số</p>',0,NULL,NULL),(2139,529,'1','<p>Biểu thức, biến</p>',1,NULL,NULL),(2140,529,'2','<p>Biến, hằng số</p>',2,NULL,NULL),(2141,529,'3','<p>Hằng số</p>',3,NULL,NULL),(2146,531,'0','<p>abs(x)&nbsp;&nbsp; </p>',0,NULL,NULL),(2147,531,'1','<p>sqr(x)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>',1,NULL,NULL),(2148,531,'2','<p>sqrt(x)</p>',2,NULL,NULL),(2149,531,'3','<p>exp(x)</p>',3,NULL,NULL),(2150,532,'0','<p>Hàm do người dùng định nghĩa</p>',0,NULL,NULL),(2151,532,'1','<p>Hàm thứ cấp</p>',1,NULL,NULL),(2152,532,'2','<p>Hàm thư viện</p>',2,NULL,NULL),(2153,532,'3','<p>Hàm sơ cấp</p>',3,NULL,NULL),(2154,533,'0','<p>Dư một biến trong hàm printf</p>',0,NULL,NULL),(2155,533,'1','<p>Dư dấu &amp; trước n</p>',1,NULL,NULL),(2156,533,'2','<p>Chưa chèn thư viện “conio.h”</p>',2,NULL,NULL),(2157,533,'3','<p>Thiếu dấu nháy kép “</p>',3,NULL,NULL),(2162,535,'0','<p>True</p>',0,NULL,NULL),(2163,535,'1','<p>False</p>',1,NULL,NULL),(2164,535,'2','<p>0<br></p>',2,NULL,NULL),(2165,535,'3','<p>1<br></p>',3,NULL,NULL),(2166,536,'0','<p>Dòng printf(\"Nhap b \":);</p>',0,NULL,NULL),(2167,536,'1','<p>Dòng&nbsp; b=\'N\';</p>',1,NULL,NULL),(2168,536,'2','<p>Dòng&nbsp; printf(\"Nhap b \":);</p>',2,NULL,NULL),(2169,536,'3','<p>Dòng&nbsp; scanf(\"%d\",&amp;a);</p>',3,NULL,NULL),(2170,537,'0','<p>56</p>',0,NULL,NULL),(2171,537,'1','<p>100</p>',1,NULL,NULL),(2172,537,'2','<p>Báo lỗi khi thực hiện xây dựng chương trình</p>',2,NULL,NULL),(2173,537,'3','<p>Kết quả khác</p>',3,NULL,NULL),(2174,538,'0','<p>A<br></p>',0,NULL,NULL),(2175,538,'1','<p>a<br></p>',1,NULL,NULL),(2176,538,'2','<p>65<br></p>',2,NULL,NULL),(2177,538,'3','<p>Chương trình bị lỗi</p>',3,NULL,NULL),(2178,539,'0','<p>x bằng 12, y bằng 11, z bằng 11</p>',0,NULL,NULL),(2179,539,'1','<p>x bằng 11, y bằng 10, z bằng 11</p>',1,NULL,NULL),(2180,539,'2','<p>x bằng 12, y bằng 11, z bằng 10</p>',2,NULL,NULL),(2181,539,'3','<p>x bằng 10, y bằng 11, z bằng 12</p>',3,NULL,NULL),(2182,540,'0','<p>3.8E+01</p>',0,NULL,NULL),(2183,540,'1','<p>3.75E+01</p>',1,NULL,NULL),(2184,540,'2','<p>3.75000</p>',2,NULL,NULL),(2185,540,'3','<p>&nbsp;3.750</p>',3,NULL,NULL),(2186,541,'0','<p>98<br></p>',0,NULL,NULL),(2187,541,'1','<p>b<br></p>',1,NULL,NULL),(2188,541,'2','<p>B<br></p>',2,NULL,NULL),(2189,541,'3','<p>Bị lỗi</p>',3,NULL,NULL),(2190,542,'0','<p>16<br></p>',0,NULL,NULL),(2191,542,'1','<p>16.00<br></p>',1,NULL,NULL),(2192,542,'2','<p>16.67<br></p>',2,NULL,NULL),(2193,542,'3','<p>Báo lỗi khi thực hiện xây dựng chương trình</p>',3,NULL,NULL),(2194,543,'0','<p>1<br></p>',0,NULL,NULL),(2195,543,'1','<p>Bị lỗi lúc biên dịch</p>',1,NULL,NULL),(2196,543,'2','<p>Không in ra gì</p>',2,NULL,NULL),(2197,543,'3','<p>0<br></p>',3,NULL,NULL),(2198,544,'0','<p>#include &lt;stdio.h&gt;</p>',0,NULL,NULL),(2199,544,'1','<p>printf(\"Hello\");</p>',1,NULL,NULL),(2200,544,'2','<p>getch();</p>',2,NULL,NULL),(2201,544,'3','<p>return 0;</p>',3,NULL,NULL),(2202,545,'0','<p>5 9.8</p>',0,NULL,NULL),(2203,545,'1','<p>5.9.8</p>',1,NULL,NULL),(2204,545,'2','<p>5 9 8</p>',2,NULL,NULL),(2205,545,'3','<p>Chương trình trên gây lỗi</p>',3,NULL,NULL),(2206,546,'0','<p>1<br></p>',0,NULL,NULL),(2207,546,'1','<p>1.2<br></p>',1,NULL,NULL),(2208,546,'2','<p>0<br></p>',2,NULL,NULL),(2209,546,'3','<p>Chương trình có lỗi</p>',3,NULL,NULL),(2210,547,'0','<p>Bàn phím</p>',0,NULL,NULL),(2211,547,'1','<p>3<br></p>',1,NULL,NULL),(2212,547,'2','<p>4<br></p>',2,NULL,NULL),(2213,547,'3','<p>t<br></p>',3,NULL,NULL),(2214,548,'0','<p>printf(\" Hai so la : a, b\") ;</p>',0,NULL,NULL),(2215,548,'1','<p>printf(\"Hai so la : %d\", a + b);</p>',1,NULL,NULL),(2216,548,'2','<p>printf(\" Hai so la : %d\" ,a,b);</p>',2,NULL,NULL),(2217,548,'3','<p>printf(\"Hai so la : %d %d\",a,b);</p>',3,NULL,NULL),(2218,549,'0','<p>Trong C, kiểu int chiếm 4 byte và kiểu long chiếm 8 byte.</p>',0,NULL,NULL),(2219,549,'1','<p>Trong C, kiểu double chiếm 8 byte và kiểu float chiếm 4 byte.</p>',1,NULL,NULL),(2220,549,'2','<p>Trong C, kiểu char chiếm 2 byte và kiểu int chiếm 2 byte.</p>',2,NULL,NULL),(2221,549,'3','<p>Trong C, kiểu int chiếm 2 byte và kiểu long chiếm 8 byte.</p>',3,NULL,NULL),(2222,550,'0','<p>Hub, Switch</p>',0,NULL,NULL),(2223,550,'1','<p>Bridge, Router</p>',1,NULL,NULL),(2224,550,'2','<p>Router</p>',2,NULL,NULL),(2225,550,'3','<p>Repeater</p>',3,NULL,NULL),(2226,551,'0','<p>Điểm - điểm</p>',0,NULL,NULL),(2227,551,'1','<p>Điểm - đa điểm</p>',1,NULL,NULL),(2228,551,'2','<p>Đa điểm - đa điểm</p>',2,NULL,NULL),(2229,551,'3','<p>Đa điểm - điểm</p>',3,NULL,NULL),(2230,552,'0','<p>T-connector</p>',0,NULL,NULL),(2231,552,'1','<p>Transceiver</p>',1,NULL,NULL),(2232,552,'2','<p>Terminator</p>',2,NULL,NULL),(2233,552,'3','<p>Hub</p>',3,NULL,NULL),(2234,553,'0','<p>T-connector</p>',0,NULL,NULL),(2235,553,'1','<p>Transceiver</p>',1,NULL,NULL),(2236,553,'2','<p>Terminator</p>',2,NULL,NULL),(2237,553,'3','<p>T-connector, Transceiver</p>',3,NULL,NULL),(2238,554,'0','<p>Điểm - điểm</p>',0,NULL,NULL),(2239,554,'1','<p>Điểm - đa điểm</p>',1,NULL,NULL),(2240,554,'2','<p>Đa điểm - đa điểm</p>',2,NULL,NULL),(2241,554,'3','<p>Đa điểm - điểm</p>',3,NULL,NULL),(2246,556,'0','<p>Application, Network, Presentation, Session, Transport, Data Link, Physical </p>',0,NULL,NULL),(2247,556,'1','<p>Application, Presentation, Session, Network, Transport, Data Link, Physical </p>',1,NULL,NULL),(2248,556,'2','<p>Application, Presentation, Session, Transport, Network, Data Link, Physical </p>',2,NULL,NULL),(2249,556,'3','<p>Application, Session, Presentation, Transport, Network, Data Link, Physical </p>',3,NULL,NULL),(2250,557,'0','<p>Data, segment, frame, packet, bit </p>',0,NULL,NULL),(2251,557,'1','<p>Data, packet, segment, frame, bit </p>',1,NULL,NULL),(2252,557,'2','<p>Data, frame, packet, segment, bit </p>',2,NULL,NULL),(2253,557,'3','<p>Data, segment, packet, frame, bit </p>',3,NULL,NULL),(2254,558,'0','<p>Transport </p>',0,NULL,NULL),(2255,558,'1','<p>Network </p>',1,NULL,NULL),(2256,558,'2','<p>Data Link </p>',2,NULL,NULL),(2257,558,'3','<p>Physical </p>',3,NULL,NULL),(2258,559,'0','<p>Application. </p>',0,NULL,NULL),(2259,559,'1','<p>Session </p>',1,NULL,NULL),(2260,559,'2','<p>Network </p>',2,NULL,NULL),(2261,559,'3','<p>Presentation. </p>',3,NULL,NULL),(2262,560,'0','<p>Data Link </p>',0,NULL,NULL),(2263,560,'1','<p>Network </p>',1,NULL,NULL),(2264,560,'2','<p>Physical </p>',2,NULL,NULL),(2265,560,'3','<p>Session</p>',3,NULL,NULL),(2266,561,'0','<p>Frame </p>',0,NULL,NULL),(2267,561,'1','<p>Packet </p>',1,NULL,NULL),(2268,561,'2','<p>Segment </p>',2,NULL,NULL),(2269,561,'3','<p>Bit </p>',3,NULL,NULL),(2270,562,'0','<p>Còn gọi là địa chỉ vật lý (MAC) </p>',0,NULL,NULL),(2271,562,'1','<p>Còn gọi là địa chỉ mạng </p>',1,NULL,NULL),(2272,562,'2','<p>Còn gọi là địa chỉ ảo </p>',2,NULL,NULL),(2273,562,'3','<p>Còn gọi là địa chỉ loopback </p>',3,NULL,NULL),(2274,563,'0','<p>Điều khiển và định tuyến việc truyền tin tin cậy </p>',0,NULL,NULL),(2275,563,'1','<p>Thêm địa chỉ MAC vào gói tin</p>',1,NULL,NULL),(2276,563,'2','<p>Chuyển gói tin thành dạng Segment </p>',2,NULL,NULL),(2277,563,'3','<p>Thêm địa chỉ mạng vào gói tin </p>',3,NULL,NULL),(2278,564,'0','<p>Nén dữ liệu </p>',0,NULL,NULL),(2279,564,'1','<p>Định dạng thông điệp thành các segment</p>',1,NULL,NULL),(2280,564,'2','<p>Đánh số các packet </p>',2,NULL,NULL),(2281,564,'3','<p>Chia nhỏ dữ liệu từ tầng trên xuống để tạo thành các segment </p>',3,NULL,NULL),(2282,565,'0','<p>Mã hóa dữ liệu </p>',0,NULL,NULL),(2283,565,'1','<p>Điều khiển các phiên làm việc </p>',1,NULL,NULL),(2284,565,'2','<p>Thêm địa chỉ mạng vào dữ liệu</p>',2,NULL,NULL),(2285,565,'3','<p>Giải mã dữ liệu </p>',3,NULL,NULL),(2286,566,'0','<p>Mã hoá, giải mã dữ liệu </p>',0,NULL,NULL),(2287,566,'1','<p>Phân rã dữ liệu </p>',1,NULL,NULL),(2288,566,'2','<p>Phân đoạn dữ liệu </p>',2,NULL,NULL),(2289,566,'3','<p>Đánh địa chỉ logic mạng</p>',3,NULL,NULL),(2290,567,'0','<p>Mã hoá dữ liệu </p>',0,NULL,NULL),(2291,567,'1','<p>Cung cấp những dịch vụ mạng cho những ứng dụng của người dùng </p>',1,NULL,NULL),(2292,567,'2','<p>Nén dữ liệu</p>',2,NULL,NULL),(2293,567,'3','<p>Chuyển dữ liệu thành dạng bit</p>',3,NULL,NULL),(2294,568,'0','<p>Open Systems International</p>',0,NULL,NULL),(2295,568,'1','<p>Open Standards Institute </p>',1,NULL,NULL),(2296,568,'2','<p>Open Systems Interconnection</p>',2,NULL,NULL),(2297,568,'3','<p>Open Sources Initiative</p>',3,NULL,NULL),(2298,569,'0','<p>Frame </p>',0,NULL,NULL),(2299,569,'1','<p>Packet </p>',1,NULL,NULL),(2300,569,'2','<p>Segment </p>',2,NULL,NULL),(2301,569,'3','<p>Bit </p>',3,NULL,NULL),(2302,570,'0','<p>Frame </p>',0,NULL,NULL),(2303,570,'1','<p>Packet </p>',1,NULL,NULL),(2304,570,'2','<p>Segment </p>',2,NULL,NULL),(2305,570,'3','<p>Bit </p>',3,NULL,NULL),(2306,571,'0','<p>Frame</p>',0,NULL,NULL),(2307,571,'1','<p>Packet </p>',1,NULL,NULL),(2308,571,'2','<p>Segment </p>',2,NULL,NULL),(2309,571,'3','<p>Bit </p>',3,NULL,NULL),(2310,572,'0','<p>Medium Access Collision</p>',0,NULL,NULL),(2311,572,'1','<p>Medium Access Control </p>',1,NULL,NULL),(2312,572,'2','<p>Medium Avoidance Control</p>',2,NULL,NULL),(2313,572,'3','<p>Medium Avoidance Community</p>',3,NULL,NULL),(2314,573,'0','<p>File Transfer Protocol</p>',0,NULL,NULL),(2315,573,'1','<p>File Trivial Post </p>',1,NULL,NULL),(2316,573,'2','<p>File Transfer Package</p>',2,NULL,NULL),(2317,573,'3','<p>File Transformation Protocol</p>',3,NULL,NULL),(2318,574,'0','<p>Simple Networking Model Protocol</p>',0,NULL,NULL),(2319,574,'1','<p>Simple Network Management Protocol</p>',1,NULL,NULL),(2320,574,'2','<p>Sophisticated Network Management Protocol</p>',2,NULL,NULL),(2321,574,'3','<p>Small Network Management Protocol</p>',3,NULL,NULL),(2322,575,'0','<p>5<br></p>',0,NULL,NULL),(2323,575,'1','<p>6<br></p>',1,NULL,NULL),(2324,575,'2','<p>7<br></p>',2,NULL,NULL),(2325,575,'3','<p>8<br></p>',3,NULL,NULL),(2326,576,'0','<p>Physical</p>',0,NULL,NULL),(2327,576,'1','<p>Application</p>',1,NULL,NULL),(2328,576,'2','<p>Transport</p>',2,NULL,NULL),(2329,576,'3','<p>Data-Link</p>',3,NULL,NULL),(2330,577,'0','<p>Presentation</p>',0,NULL,NULL),(2331,577,'1','<p>Application</p>',1,NULL,NULL),(2332,577,'2','<p>SessionĐĩa cứng</p>',2,NULL,NULL),(2333,577,'3','<p>Data-Link</p>',3,NULL,NULL),(2334,578,'0','<p>4<br></p>',0,NULL,NULL),(2335,578,'1','<p>5<br></p>',1,NULL,NULL),(2336,578,'2','<p>6<br></p>',2,NULL,NULL),(2337,578,'3','<p>7<br></p>',3,NULL,NULL),(2338,579,'0','<p>Application, Internet, Transport, Network Access </p>',0,NULL,NULL),(2339,579,'1','<p>Application, Transport, Network Access, Internet </p>',1,NULL,NULL),(2340,579,'2','<p>Application, Transport, Internet, Network Access </p>',2,NULL,NULL),(2341,579,'3','<p>Application, Network Access, Internet, Transport</p>',3,NULL,NULL),(2342,580,'0','<p>Application</p>',0,NULL,NULL),(2343,580,'1','<p>Transport</p>',1,NULL,NULL),(2344,580,'2','<p>Data</p>',2,NULL,NULL),(2345,580,'3','<p>Presentation </p>',3,NULL,NULL),(2346,581,'0','<p>Session</p>',0,NULL,NULL),(2347,581,'1','<p>Network</p>',1,NULL,NULL),(2348,581,'2','<p>Transport</p>',2,NULL,NULL),(2349,581,'3','<p>Data link</p>',3,NULL,NULL),(2350,582,'0','<p>Physical</p>',0,NULL,NULL),(2351,582,'1','<p>Data Link</p>',1,NULL,NULL),(2352,582,'2','<p>Network</p>',2,NULL,NULL),(2353,582,'3','<p>Transport</p>',3,NULL,NULL),(2354,583,'0','<p>Frame</p>',0,NULL,NULL),(2355,583,'1','<p>Segment</p>',1,NULL,NULL),(2356,583,'2','<p>Packet</p>',2,NULL,NULL),(2357,583,'3','<p>PSU</p>',3,NULL,NULL),(2358,584,'0','<p>48 bits</p>',0,NULL,NULL),(2359,584,'1','<p>16 bits</p>',1,NULL,NULL),(2360,584,'2','<p>24 bits</p>',2,NULL,NULL),(2361,584,'3','<p>32 bits</p>',3,NULL,NULL),(2362,585,'0','<p>Tầng 4</p>',0,NULL,NULL),(2363,585,'1','<p>Tầng 5</p>',1,NULL,NULL),(2364,585,'2','<p>Tầng 6</p>',2,NULL,NULL),(2365,585,'3','<p>Tầng 7</p>',3,NULL,NULL),(2366,586,'0','<p>RARP</p>',0,NULL,NULL),(2367,586,'1','<p>DHCP</p>',1,NULL,NULL),(2368,586,'2','<p>TCP/IP</p>',2,NULL,NULL),(2369,586,'3','<p>ARP</p>',3,NULL,NULL),(2370,587,'0','<p>ISOBàn phím</p>',0,NULL,NULL),(2371,587,'1','<p>OSI</p>',1,NULL,NULL),(2372,587,'2','<p>DECNET</p>',2,NULL,NULL),(2373,587,'3','<p>ARPANET</p>',3,NULL,NULL),(2374,588,'0','<p>Tầng 1</p>',0,NULL,NULL),(2375,588,'1','<p>Tầng i</p>',1,NULL,NULL),(2376,588,'2','<p>Tầng n</p>',2,NULL,NULL),(2377,588,'3','<p>Tầng&nbsp;i &lt;&gt;1</p>',3,NULL,NULL),(2378,589,'0','<p>Application</p>',0,NULL,NULL),(2379,589,'1','<p>Presentation</p>',1,NULL,NULL),(2380,589,'2','<p>Session</p>',2,NULL,NULL),(2381,589,'3','<p>Transport</p>',3,NULL,NULL),(2382,590,'0','<p>Physical</p>',0,NULL,NULL),(2383,590,'1','<p>Data link</p>',1,NULL,NULL),(2384,590,'2','<p>Network</p>',2,NULL,NULL),(2385,590,'3','<p>Transport</p>',3,NULL,NULL),(2386,591,'0','<p>Physical, Datalink, Network</p>',0,NULL,NULL),(2387,591,'1','<p>Physical, Datalink, Network, Transport</p>',1,NULL,NULL),(2388,591,'2','<p>Physical, Datalink</p>',2,NULL,NULL),(2389,591,'3','<p>Physical</p>',3,NULL,NULL),(2390,592,'0','<p>Tầng 1</p>',0,NULL,NULL),(2391,592,'1','<p>Tầng 2</p>',1,NULL,NULL),(2392,592,'2','<p>Tầng 3</p>',2,NULL,NULL),(2393,592,'3','<p>Tầng 4</p>',3,NULL,NULL),(2394,593,'0','<p>Tầng 1</p>',0,NULL,NULL),(2395,593,'1','<p>Tầng 2</p>',1,NULL,NULL),(2396,593,'2','<p>Tầng 3</p>',2,NULL,NULL),(2397,593,'3','<p>Tầng 4</p>',3,NULL,NULL),(2398,594,'0','<p>IP segment</p>',0,NULL,NULL),(2399,594,'1','<p>IP package</p>',1,NULL,NULL),(2400,594,'2','<p>IP datagram</p>',2,NULL,NULL),(2401,594,'3','<p>IP frame</p>',3,NULL,NULL),(2402,595,'0','<p>20<br></p>',0,NULL,NULL),(2403,595,'1','<p>21<br></p>',1,NULL,NULL),(2404,595,'2','<p>25<br></p>',2,NULL,NULL),(2405,595,'3','<p>53<br></p>',3,NULL,NULL),(2406,596,'0','<p>110<br></p>',0,NULL,NULL),(2407,596,'1','<p>23<br></p>',1,NULL,NULL),(2408,596,'2','<p>25<br></p>',2,NULL,NULL),(2409,596,'3','<p>53<br></p>',3,NULL,NULL),(2410,597,'0','<p>110<br></p>',0,NULL,NULL),(2411,597,'1','<p>23<br></p>',1,NULL,NULL),(2412,597,'2','<p>25<br></p>',2,NULL,NULL),(2413,597,'3','<p>53<br></p>',3,NULL,NULL),(2414,598,'0','<p>192.201.63.251 </p>',0,NULL,NULL),(2415,598,'1','<p>19-22-01-63-25</p>',1,NULL,NULL),(2416,598,'2','<p>0000.1234.FEG </p>',2,NULL,NULL),(2417,598,'3','<p>00-00-12-34-FE-AA </p>',3,NULL,NULL),(2418,599,'0','<p>21<br></p>',0,NULL,NULL),(2419,599,'1','<p>25<br></p>',1,NULL,NULL),(2420,599,'2','<p>53<br></p>',2,NULL,NULL),(2421,599,'3','<p>110<br></p>',3,NULL,NULL),(2422,600,'0','<p>Tên nhà sản xuất card mạng (NIC) </p>',0,NULL,NULL),(2423,600,'1','<p>Vùng địa lý của card mạng</p>',1,NULL,NULL),(2424,600,'2','<p>Số hiệu phiên bản của card mạng</p>',2,NULL,NULL),(2425,600,'3','<p>Địa chỉ IP của card mạng </p>',3,NULL,NULL),(2426,601,'0','<p>Hướng liên kết</p>',0,NULL,NULL),(2427,601,'1','<p>Không liên kết</p>',1,NULL,NULL),(2428,601,'2','<p>Đảm bảo độ tin cậy</p>',2,NULL,NULL),(2429,601,'3','<p>Trao đổi dữ liệu giữa các thành phần của mạng</p>',3,NULL,NULL),(2430,602,'0','<p>Đòi hỏi độ tin cậy cao</p>',0,NULL,NULL),(2431,602,'1','<p>Yêu cầu kiểm soát luồng và kiểm soát lỗi</p>',1,NULL,NULL),(2432,602,'2','<p>Không yêu cầu độ tin cậy cao</p>',2,NULL,NULL),(2433,602,'3','<p>Không yêu cầu liên kết </p>',3,NULL,NULL),(2434,603,'0','<p>Không liên kết</p>',0,NULL,NULL),(2435,603,'1','<p>Hướng liên kết</p>',1,NULL,NULL),(2436,603,'2','<p>Đòi hỏi độ tin cậy cao trong quá trình trao đổi thông tin</p>',2,NULL,NULL),(2437,603,'3','<p>Yêu cầu kiểm soát luồng và kiểm soát lỗi</p>',3,NULL,NULL),(2438,604,'0','<p>11111000</p>',0,NULL,NULL),(2439,604,'1','<p>10101100</p>',1,NULL,NULL),(2440,604,'2','<p>11000000</p>',2,NULL,NULL),(2441,604,'3','<p>10111111</p>',3,NULL,NULL),(2442,605,'0','<p>&nbsp;10101000</p>',0,NULL,NULL),(2443,605,'1','<p>10101010</p>',1,NULL,NULL),(2444,605,'2','<p>10000000</p>',2,NULL,NULL),(2445,605,'3','<p>10111111</p>',3,NULL,NULL),(2446,606,'0','<p>192</p>',0,NULL,NULL),(2447,606,'1','<p>194</p>',1,NULL,NULL),(2448,606,'2','<p>200</p>',2,NULL,NULL),(2449,606,'3','<p>202</p>',3,NULL,NULL),(2450,607,'0','<p>2<br></p>',0,NULL,NULL),(2451,607,'1','<p>3<br></p>',1,NULL,NULL),(2452,607,'2','<p>4<br></p>',2,NULL,NULL),(2453,607,'3','<p>5</p>',3,NULL,NULL),(2454,608,'0','<p>Lớp D</p>',0,NULL,NULL),(2455,608,'1','<p>Lớp E</p>',1,NULL,NULL),(2456,608,'2','<p>Lớp C</p>',2,NULL,NULL),(2457,608,'3','<p>Lớp A</p>',3,NULL,NULL),(2458,609,'0','<p>Lớp B</p>',0,NULL,NULL),(2459,609,'1','<p>Lớp C</p>',1,NULL,NULL),(2460,609,'2','<p>Lớp D</p>',2,NULL,NULL),(2461,609,'3','<p>Lớp E</p>',3,NULL,NULL),(2462,610,'0','<p>Lớp A</p>',0,NULL,NULL),(2463,610,'1','<p>Lớp&nbsp;B</p>',1,NULL,NULL),(2464,610,'2','<p>Lớp&nbsp;C</p>',2,NULL,NULL),(2465,610,'3','<p>Lớp AMàn hình</p>',3,NULL,NULL),(2466,611,'0','<p>Lớp A</p>',0,NULL,NULL),(2467,611,'1','<p>Lớp B</p>',1,NULL,NULL),(2468,611,'2','<p>Lớp C</p>',2,NULL,NULL),(2469,611,'3','<p>Lớp D</p>',3,NULL,NULL),(2470,612,'0','<p>8<br></p>',0,NULL,NULL),(2471,612,'1','<p>16<br></p>',1,NULL,NULL),(2472,612,'2','<p>24<br></p>',2,NULL,NULL),(2473,612,'3','<p>32<br></p>',3,NULL,NULL),(2474,613,'0','<p>8<br></p>',0,NULL,NULL),(2475,613,'1','<p>16<br></p>',1,NULL,NULL),(2476,613,'2','<p>24<br></p>',2,NULL,NULL),(2477,613,'3','<p>32<br></p>',3,NULL,NULL),(2478,614,'0','<p>8<br></p>',0,NULL,NULL),(2479,614,'1','<p>16<br></p>',1,NULL,NULL),(2480,614,'2','<p>24<br></p>',2,NULL,NULL),(2481,614,'3','<p>32<br></p>',3,NULL,NULL),(2482,615,'0','<p>8<br></p>',0,NULL,NULL),(2483,615,'1','<p>16<br></p>',1,NULL,NULL),(2484,615,'2','<p>24<br></p>',2,NULL,NULL),(2485,615,'3','<p>32<br></p>',3,NULL,NULL),(2486,616,'0','<p>8<br></p>',0,NULL,NULL),(2487,616,'1','<p>16<br></p>',1,NULL,NULL),(2488,616,'2','<p>24<br></p>',2,NULL,NULL),(2489,616,'3','<p>32</p>',3,NULL,NULL),(2490,617,'0','<p>8<br></p>',0,NULL,NULL),(2491,617,'1','<p>16<br></p>',1,NULL,NULL),(2492,617,'2','<p>24<br></p>',2,NULL,NULL),(2493,617,'3','<p>32<br></p>',3,NULL,NULL),(2494,618,'0','<p>Lớp A</p>',0,NULL,NULL),(2495,618,'1','<p>Lớp B</p>',1,NULL,NULL),(2496,618,'2','<p>Lớp C</p>',2,NULL,NULL),(2497,618,'3','<p>Lớp D</p>',3,NULL,NULL),(2498,619,'0','<p>Lớp A</p>',0,NULL,NULL),(2499,619,'1','<p>Lớp B</p>',1,NULL,NULL),(2500,619,'2','<p>Lớp&nbsp;C</p>',2,NULL,NULL),(2501,619,'3','<p>Lớp&nbsp;D</p>',3,NULL,NULL),(2502,620,'0','<p>Lớp A</p>',0,NULL,NULL),(2503,620,'1','<p>Lớp B</p>',1,NULL,NULL),(2504,620,'2','<p>Lớp C</p>',2,NULL,NULL),(2505,620,'3','<p>Lớp D</p>',3,NULL,NULL),(2506,621,'0','<p>5<br></p>',0,NULL,NULL),(2507,621,'1','<p>19<br></p>',1,NULL,NULL),(2508,621,'2','<p>34<br></p>',2,NULL,NULL),(2509,621,'3','<p>21<br></p>',3,NULL,NULL),(2510,622,'0','<p>192</p>',0,NULL,NULL),(2511,622,'1','<p>8<br></p>',1,NULL,NULL),(2512,622,'2','<p>56<br></p>',2,NULL,NULL),(2513,622,'3','<p>2<br></p>',3,NULL,NULL),(2514,623,'0','<p>67.9</p>',0,NULL,NULL),(2515,623,'1','<p>12.67</p>',1,NULL,NULL),(2516,623,'2','<p>190.12</p>',2,NULL,NULL),(2517,623,'3','<p>190.12.67</p>',3,NULL,NULL),(2518,624,'0','<p>205</p>',0,NULL,NULL),(2519,624,'1','<p>23<br></p>',1,NULL,NULL),(2520,624,'2','<p>67<br></p>',2,NULL,NULL),(2521,624,'3','<p>8<br></p>',3,NULL,NULL),(2522,625,'0','<p>128.1.1.1</p>',0,NULL,NULL),(2523,625,'1','<p>128.11.1.1</p>',1,NULL,NULL),(2524,625,'2','<p>128.11.3.31</p>',2,NULL,NULL),(2525,625,'3','<p>145.1.3.31</p>',3,NULL,NULL),(2526,626,'0','<p>11111111.11111111.0.0</p>',0,NULL,NULL),(2527,626,'1','<p>11111111.11111111.11111111.11111111</p>',1,NULL,NULL),(2528,626,'2','<p>11111111.00000000.00000000.11111111</p>',2,NULL,NULL),(2529,626,'3','<p>11111111.11111111.11111111.00000000</p>',3,NULL,NULL),(2530,627,'0','<p>4.5.6.8</p>',0,NULL,NULL),(2531,627,'1','<p>4.5.6.7</p>',1,NULL,NULL),(2532,627,'2','<p>1.2.3.4</p>',2,NULL,NULL),(2533,627,'3','<p>4.5.1.2</p>',3,NULL,NULL),(2534,628,'0','<p>241.1.2.4</p>',0,NULL,NULL),(2535,628,'1','<p>241.1.2.2</p>',1,NULL,NULL),(2536,628,'2','<p>1.2.3.241</p>',2,NULL,NULL),(2537,628,'3','<p>241.1.2.3</p>',3,NULL,NULL),(2538,629,'0','<p>255.0.0.0</p>',0,NULL,NULL),(2539,629,'1','<p>255.255.0.0</p>',1,NULL,NULL),(2540,629,'2','<p>255.255.255.0</p>',2,NULL,NULL),(2541,629,'3','<p>255.255.255.255</p>',3,NULL,NULL),(2542,630,'0','<p>255.0.0.0</p>',0,NULL,NULL),(2543,630,'1','<p>255.255.0.0</p>',1,NULL,NULL),(2544,630,'2','<p>255.255.255.0</p>',2,NULL,NULL),(2545,630,'3','<p>255.255.255.255</p>',3,NULL,NULL),(2546,631,'0','<p>255.0.0.0</p>',0,NULL,NULL),(2547,631,'1','<p>255.255.0.0</p>',1,NULL,NULL),(2548,631,'2','<p>255.255.255.0</p>',2,NULL,NULL),(2549,631,'3','<p>255.255.255.255</p>',3,NULL,NULL),(2550,632,'0','<p>/20</p>',0,NULL,NULL),(2551,632,'1','<p>/22</p>',1,NULL,NULL),(2552,632,'2','<p>/24</p>',2,NULL,NULL),(2553,632,'3','<p>/26</p>',3,NULL,NULL),(2554,633,'0','<p>255.255.255.0</p>',0,NULL,NULL),(2555,633,'1','<p>255.255.224.0</p>',1,NULL,NULL),(2556,633,'2','<p>255.255.255.224</p>',2,NULL,NULL),(2557,633,'3','<p>255.255.0.0</p>',3,NULL,NULL),(2558,634,'0','<p>8<br></p>',0,NULL,NULL),(2559,634,'1','<p>6<br></p>',1,NULL,NULL),(2560,634,'2','<p>14<br></p>',2,NULL,NULL),(2561,634,'3','<p>2<br></p>',3,NULL,NULL),(2562,635,'0','<p>20<br></p>',0,NULL,NULL),(2563,635,'1','<p>21<br></p>',1,NULL,NULL),(2564,635,'2','<p>22<br></p>',2,NULL,NULL),(2565,635,'3','<p>23<br></p>',3,NULL,NULL),(2566,636,'0','<p>8<br></p>',0,NULL,NULL),(2567,636,'1','<p>6<br></p>',1,NULL,NULL),(2568,636,'2','<p>14<br></p>',2,NULL,NULL),(2569,636,'3','<p>2<br></p>',3,NULL,NULL),(2570,637,'0','<p>255.248.0.0</p>',0,NULL,NULL),(2571,637,'1','<p>255.255.255.1</p>',1,NULL,NULL),(2572,637,'2','<p>255.255.255.248Đĩa cứng</p>',2,NULL,NULL),(2573,637,'3','<p>255.255.255.128</p>',3,NULL,NULL),(2574,638,'0','<p>255.255.254.192</p>',0,NULL,NULL),(2575,638,'1','<p>255.254.0.0</p>',1,NULL,NULL),(2576,638,'2','<p>255.248.0.0</p>',2,NULL,NULL),(2577,638,'3','<p>255.255.255.254</p>',3,NULL,NULL),(2578,639,'0','<p>255.255.254.0</p>',0,NULL,NULL),(2579,639,'1','<p>255.0.0.255</p>',1,NULL,NULL),(2580,639,'2','<p>255.255.255.240</p>',2,NULL,NULL),(2581,639,'3','<p>255.255.255.192</p>',3,NULL,NULL),(2582,640,'0','<p>255.255.128.0</p>',0,NULL,NULL),(2583,640,'1','<p>255.128.0.0</p>',1,NULL,NULL),(2584,640,'2','<p>255.255.255.240</p>',2,NULL,NULL),(2585,640,'3','<p>255.255.128.0</p>',3,NULL,NULL),(2586,641,'0','<p>255.255.248.0</p>',0,NULL,NULL),(2587,641,'1','<p>255.255.255.1</p>',1,NULL,NULL),(2588,641,'2','<p>255.255.255.248</p>',2,NULL,NULL),(2589,641,'3','<p>255.255.255.128</p>',3,NULL,NULL),(2590,642,'0','<p>255.255.254.0</p>',0,NULL,NULL),(2591,642,'1','<p>255.255.254.192</p>',1,NULL,NULL),(2592,642,'2','<p>255.255.255.240</p>',2,NULL,NULL),(2593,642,'3','<p>255.255.255.254</p>',3,NULL,NULL),(2594,643,'0','<p>255.255.224.0</p>',0,NULL,NULL),(2595,643,'1','<p>255.0.0.255RAM</p>',1,NULL,NULL),(2596,643,'2','<p>255.255.192.0</p>',2,NULL,NULL),(2597,643,'3','<p>255.255.255.224</p>',3,NULL,NULL),(2598,644,'0','<p>255.255.240.0</p>',0,NULL,NULL),(2599,644,'1','<p>255.0.0.255</p>',1,NULL,NULL),(2600,644,'2','<p>255.224.255.0</p>',2,NULL,NULL),(2601,644,'3','<p>255.255.255.224</p>',3,NULL,NULL),(2602,645,'0','<p>255.255.224.0</p>',0,NULL,NULL),(2603,645,'1','<p>255.0.0.255</p>',1,NULL,NULL),(2604,645,'2','<p>255.255.240.0</p>',2,NULL,NULL),(2605,645,'3','<p>255.255.255.224</p>',3,NULL,NULL),(2606,646,'0','<p>255.255.224.0</p>',0,NULL,NULL),(2607,646,'1','<p>255.0.0.255</p>',1,NULL,NULL),(2608,646,'2','<p>255.224.255.0</p>',2,NULL,NULL),(2609,646,'3','<p>255.255.255.224</p>',3,NULL,NULL),(2610,647,'0','<p>255.255.224.0</p>',0,NULL,NULL),(2611,647,'1','<p>255.0.0.255</p>',1,NULL,NULL),(2612,647,'2','<p>255.255.255.192</p>',2,NULL,NULL),(2613,647,'3','<p>255.255.255.224</p>',3,NULL,NULL),(2614,648,'0','<p>Broadcast lớp B</p>',0,NULL,NULL),(2615,648,'1','<p>Broadcast lớp A</p>',1,NULL,NULL),(2616,648,'2','<p>Host lớp A</p>',2,NULL,NULL),(2617,648,'3','<p>Host lớp B</p>',3,NULL,NULL),(2618,649,'0','<p>190.12.253.255</p>',0,NULL,NULL),(2619,649,'1','<p>190.44.255.255</p>',1,NULL,NULL),(2620,649,'2','<p>221.218.253.255</p>',2,NULL,NULL),(2621,649,'3','<p>129.219.145.255</p>',3,NULL,NULL),(2622,650,'0','<p>2<br></p>',0,NULL,NULL),(2623,650,'1','<p>6<br></p>',1,NULL,NULL),(2624,650,'2','<p>16<br></p>',2,NULL,NULL),(2625,650,'3','<p>30<br></p>',3,NULL,NULL),(2626,651,'0','<p>2<br></p>',0,NULL,NULL),(2627,651,'1','<p>4<br></p>',1,NULL,NULL),(2628,651,'2','<p>6<br></p>',2,NULL,NULL),(2629,651,'3','<p>16<br></p>',3,NULL,NULL),(2630,652,'0','<p>2<br></p>',0,NULL,NULL),(2631,652,'1','<p>16<br></p>',1,NULL,NULL),(2632,652,'2','<p>8<br></p>',2,NULL,NULL),(2633,652,'3','<p>20<br></p>',3,NULL,NULL),(2634,653,'0','<p>2<br></p>',0,NULL,NULL),(2635,653,'1','<p>6<br></p>',1,NULL,NULL),(2636,653,'2','<p>16<br></p>',2,NULL,NULL),(2637,653,'3','<p>30<br></p>',3,NULL,NULL),(2638,654,'0','<p>16<br></p>',0,NULL,NULL),(2639,654,'1','<p>30<br></p>',1,NULL,NULL),(2640,654,'2','<p>32<br></p>',2,NULL,NULL),(2641,654,'3','<p>40<br></p>',3,NULL,NULL),(2642,655,'0','<p>60<br></p>',0,NULL,NULL),(2643,655,'1','<p>64<br></p>',1,NULL,NULL),(2644,655,'2','<p>66<br></p>',2,NULL,NULL),(2645,655,'3','<p>70<br></p>',3,NULL,NULL),(2646,656,'0','<p>128<br></p>',0,NULL,NULL),(2647,656,'1','<p>130<br></p>',1,NULL,NULL),(2648,656,'2','<p>138<br></p>',2,NULL,NULL),(2649,656,'3','<p>127<br></p>',3,NULL,NULL),(2650,657,'0','<p>2<br></p>',0,NULL,NULL),(2651,657,'1','<p>6<br></p>',1,NULL,NULL),(2652,657,'2','<p>16<br></p>',2,NULL,NULL),(2653,657,'3','<p>30<br></p>',3,NULL,NULL),(2654,658,'0','<p>2<br></p>',0,NULL,NULL),(2655,658,'1','<p>4<br></p>',1,NULL,NULL),(2656,658,'2','<p>6<br></p>',2,NULL,NULL),(2657,658,'3','<p>16<br></p>',3,NULL,NULL),(2658,659,'0','<p>2<br></p>',0,NULL,NULL),(2659,659,'1','<p>16</p>',1,NULL,NULL),(2660,659,'2','<p>8<br></p>',2,NULL,NULL),(2661,659,'3','<p>20<br></p>',3,NULL,NULL),(2662,660,'0','<p>2<br></p>',0,NULL,NULL),(2663,660,'1','<p>16<br></p>',1,NULL,NULL),(2664,660,'2','<p>8<br></p>',2,NULL,NULL),(2665,660,'3','<p>20<br></p>',3,NULL,NULL),(2666,661,'0','<p>16<br></p>',0,NULL,NULL),(2667,661,'1','<p>30<br></p>',1,NULL,NULL),(2668,661,'2','<p>32<br></p>',2,NULL,NULL),(2669,661,'3','<p>40<br></p>',3,NULL,NULL),(2670,662,'0','<p>60<br></p>',0,NULL,NULL),(2671,662,'1','<p>64</p>',1,NULL,NULL),(2672,662,'2','<p>66<br></p>',2,NULL,NULL),(2673,662,'3','<p>70<br></p>',3,NULL,NULL),(2674,663,'0','<p>1.0.0.0 tới 127.255.255.255</p>',0,NULL,NULL),(2675,663,'1','<p>128.0.0.0 tới 191.255.255.255</p>',1,NULL,NULL),(2676,663,'2','<p>192.0.0.0 tới 223.255.255.255</p>',2,NULL,NULL),(2677,663,'3','<p>224.0.0.0 tới 239.255.255.255</p>',3,NULL,NULL),(2678,664,'0','<p>192.0.0.0 tới 223.255.255.255</p>',0,NULL,NULL),(2679,664,'1','<p>240.0.0.0 tới 255.255.255.255</p>',1,NULL,NULL),(2680,664,'2','<p>128.0.0.0 tới 191.255.255.255</p>',2,NULL,NULL),(2681,664,'3','<p>224.0.0.0 tới 239.255.255.255</p>',3,NULL,NULL),(2682,665,'0','<p>224.0.0.0 tới 239.255.255.255</p>',0,NULL,NULL),(2683,665,'1','<p>192.0.0.0 tới 223.255.255.255</p>',1,NULL,NULL),(2684,665,'2','<p>128.0.0.0 tới 191.255.255.255</p>',2,NULL,NULL),(2685,665,'3','<p>240.0.0.0 tới 255.255.255.255</p>',3,NULL,NULL),(2686,666,'0','<p>240.0.0.0 tới 255.255.255.255Bàn phím</p>',0,NULL,NULL),(2687,666,'1','<p>1.0.0.0 tới 127.255.255.255</p>',1,NULL,NULL),(2688,666,'2','<p>128.0.0.0 tới 191.255.255.255</p>',2,NULL,NULL),(2689,666,'3','<p>224.0.0.0 tới 239.255.255.255</p>',3,NULL,NULL),(2690,667,'0','<p>128.0.0.0 tới 191.255.255.255</p>',0,NULL,NULL),(2691,667,'1','<p>240.0.0.0 tới 255.255.255.255</p>',1,NULL,NULL),(2692,667,'2','<p>191.0.0.0 tới 223.255.255.255</p>',2,NULL,NULL),(2693,667,'3','<p>224.0.0.0 tới 239.255.255.255</p>',3,NULL,NULL),(2694,668,'0','<p>Lớp A</p>',0,NULL,NULL),(2695,668,'1','<p>Lớp B</p>',1,NULL,NULL),(2696,668,'2','<p>Lớp C</p>',2,NULL,NULL),(2697,668,'3','<p>Lớp D</p>',3,NULL,NULL),(2698,669,'0','<p>Lớp A</p>',0,NULL,NULL),(2699,669,'1','<p>Lớp B</p>',1,NULL,NULL),(2700,669,'2','<p>Lớp C</p>',2,NULL,NULL),(2701,669,'3','<p>Lớp D</p>',3,NULL,NULL),(2702,670,'0','<p>255.248.0.0</p>',0,NULL,NULL),(2703,670,'1','<p>255.255.240.0</p>',1,NULL,NULL),(2704,670,'2','<p>255.255.224.0</p>',2,NULL,NULL),(2705,670,'3','<p>255.255.252.0</p>',3,NULL,NULL),(2706,671,'0','<p>255.248.0.0</p>',0,NULL,NULL),(2707,671,'1','<p>255.255.248.0RAM</p>',1,NULL,NULL),(2708,671,'2','<p>255.255.224.0</p>',2,NULL,NULL),(2709,671,'3','<p>255.255.252.0</p>',3,NULL,NULL),(2710,672,'0','<p>8 bit</p>',0,NULL,NULL),(2711,672,'1','<p>16&nbsp;bit</p>',1,NULL,NULL),(2712,672,'2','<p>32 bit</p>',2,NULL,NULL),(2713,672,'3','<p>48 bit</p>',3,NULL,NULL),(2714,673,'0','<p>200.200.200.196</p>',0,NULL,NULL),(2715,673,'1','<p>200.200.200.191</p>',1,NULL,NULL),(2716,673,'2','<p>200.200.200.177</p>',2,NULL,NULL),(2717,673,'3','<p>200.200.200.223</p>',3,NULL,NULL),(2718,674,'0','<p>200.200.200.196</p>',0,NULL,NULL),(2719,674,'1','<p>200.200.200.191</p>',1,NULL,NULL),(2720,674,'2','<p>200.200.200.177</p>',2,NULL,NULL),(2721,674,'3','<p>200.200.200.223</p>',3,NULL,NULL),(2722,675,'0','<p>200.200.200.193</p>',0,NULL,NULL),(2723,675,'1','<p>200.200.200.192</p>',1,NULL,NULL),(2724,675,'2','<p>200.200.200.191</p>',2,NULL,NULL),(2725,675,'3','<p>200.200.200.190</p>',3,NULL,NULL),(2726,676,'0','<p>200.200.200.192</p>',0,NULL,NULL),(2727,676,'1','<p>200.200.200.191</p>',1,NULL,NULL),(2728,676,'2','<p>200.200.200.177</p>',2,NULL,NULL),(2729,676,'3','<p>200.200.200.223</p>',3,NULL,NULL),(2730,677,'0','<p>202.101.10.0</p>',0,NULL,NULL),(2731,677,'1','<p>202.101.10.16</p>',1,NULL,NULL),(2732,677,'2','<p>202.101.10.8</p>',2,NULL,NULL),(2733,677,'3','<p>202.101.10.24</p>',3,NULL,NULL),(2734,678,'0','<p>202.101.10.0</p>',0,NULL,NULL),(2735,678,'1','<p>202.101.10.16</p>',1,NULL,NULL),(2736,678,'2','<p>202.101.10.8</p>',2,NULL,NULL),(2737,678,'3','<p>202.101.10.24</p>',3,NULL,NULL),(2738,679,'0','<p>202.101.10.0</p>',0,NULL,NULL),(2739,679,'1','<p>202.101.10.16</p>',1,NULL,NULL),(2740,679,'2','<p>202.101.10.8</p>',2,NULL,NULL),(2741,679,'3','<p>202.101.10.24</p>',3,NULL,NULL),(2742,680,'0','<p>172.16.25.4&nbsp; </p>',0,NULL,NULL),(2743,680,'1','<p>172.16.25.12 </p>',1,NULL,NULL),(2744,680,'2','<p>172.16.25.8</p>',2,NULL,NULL),(2745,680,'3','<p>172.16.25.16</p>',3,NULL,NULL),(2746,681,'0','<p>172.16.55.0&nbsp; </p>',0,NULL,NULL),(2747,681,'1','<p>172.16.55.128 </p>',1,NULL,NULL),(2748,681,'2','<p>172.16.32.0 </p>',2,NULL,NULL),(2749,681,'3','<p>172.16.48.0</p>',3,NULL,NULL),(2750,682,'0','<p>192.168.25.255&nbsp; </p>',0,NULL,NULL),(2751,682,'1','<p>192.168.25.128</p>',1,NULL,NULL),(2752,682,'2','<p>192.168.25.159 </p>',2,NULL,NULL),(2753,682,'3','<p>192.168.25.100</p>',3,NULL,NULL),(2754,683,'0','<p>192.168.25.255&nbsp; </p>',0,NULL,NULL),(2755,683,'1','<p>192.168.25.141 </p>',1,NULL,NULL),(2756,683,'2','<p>192.168.25.180 </p>',2,NULL,NULL),(2757,683,'3','<p>192.168.25.143</p>',3,NULL,NULL),(2758,684,'0','<p>192.168.25.0</p>',0,NULL,NULL),(2759,684,'1','<p>192.168.25.32</p>',1,NULL,NULL),(2760,684,'2','<p>192.168.25.64</p>',2,NULL,NULL),(2761,684,'3','<p>192.168.25.128</p>',3,NULL,NULL),(2762,685,'0','<p>Mặt nạ mạng (subnet mask)</p>',0,NULL,NULL),(2763,685,'1','<p>Số dấu chấm trong địa chỉ</p>',1,NULL,NULL),(2764,685,'2','<p>Giá trị của octet (byte) đầu</p>',2,NULL,NULL),(2765,685,'3','<p>Địa chỉ của DHCP</p>',3,NULL,NULL),(2766,686,'0','<p>160.16.18.255 </p>',0,NULL,NULL),(2767,686,'1','<p>160.16.19.255 </p>',1,NULL,NULL),(2768,686,'2','<p>160.16.17.255 </p>',2,NULL,NULL),(2769,686,'3','<p>160.16.18.254 </p>',3,NULL,NULL),(2770,687,'0','<p>160.16.16.1 - 160.16.18.254</p>',0,NULL,NULL),(2771,687,'1','<p>160.16.17.1 - 160.16.18.254</p>',1,NULL,NULL),(2772,687,'2','<p>160.16.16.1 - 160.16.19.254</p>',2,NULL,NULL),(2773,687,'3','<p>160.16.18.1 - 160.16.19.254</p>',3,NULL,NULL),(2774,688,'0','<p>160.16.15.0</p>',0,NULL,NULL),(2775,688,'1','<p>160.16.17.0</p>',1,NULL,NULL),(2776,688,'2','<p>160.16.16.0</p>',2,NULL,NULL),(2777,688,'3','<p>160.16.18.0</p>',3,NULL,NULL),(2778,689,'0','<p>192.168.14.96</p>',0,NULL,NULL),(2779,689,'1','<p>192.168.14.97</p>',1,NULL,NULL),(2780,689,'2','<p>192.168.14.95</p>',2,NULL,NULL),(2781,689,'3','<p>192.168.14.98</p>',3,NULL,NULL),(2782,690,'0','<p>192.168.14.89 - 192.168.14.111</p>',0,NULL,NULL),(2783,690,'1','<p>192.168.14.97 - 192.168.14.127</p>',1,NULL,NULL),(2784,690,'2','<p>192.168.14.97 - 192.168.14.126</p>',2,NULL,NULL),(2785,690,'3','<p>192.168.14.96 - 192.168.14.128</p>',3,NULL,NULL),(2786,691,'0','<p>192.168.14.125</p>',0,NULL,NULL),(2787,691,'1','<p>192.168.14.159</p>',1,NULL,NULL),(2788,691,'2','<p>192.168.14.127</p>',2,NULL,NULL),(2789,691,'3','<p>192.168.14.111</p>',3,NULL,NULL),(2834,703,'0','<p>Tầng 2</p>',0,NULL,NULL),(2835,703,'1','<p>Tầng 3</p>',1,NULL,NULL),(2836,703,'2','<p>Tầng 1</p>',2,NULL,NULL),(2837,703,'3','<p>Tầng 4</p>',3,NULL,NULL),(2838,704,'0','<p>Repeater</p>',0,NULL,NULL),(2839,704,'1','<p>Hub</p>',1,NULL,NULL),(2840,704,'2','<p>Router</p>',2,NULL,NULL),(2841,704,'3','<p>Switch</p>',3,NULL,NULL),(2842,705,'0','<p>Kéo dài một nhánh LAN thông qua việc khuyếch đại tín hiệu truyền đến nó</p>',0,NULL,NULL),(2843,705,'1','<p>Ngăn không cho các packets thuộc loại broadcast đi qua nó</p>',1,NULL,NULL),(2844,705,'2','<p>Giúp định tuyến cho các packets</p>',2,NULL,NULL),(2845,705,'3','<p>Kết nối nhiều máy tính lại với nhau để tạo thành một nhánh LAN (segment)</p>',3,NULL,NULL),(2846,706,'0','<p>Kết nối mạng LAN khác nhau có cùng phương thức truy cập .</p>',0,NULL,NULL),(2847,706,'1','<p>Kết nối mạng LAN khác nhau hay các đoạn mạng LAN khác nhau có thể cùng/khác phương thức truy cập .</p>',1,NULL,NULL),(2848,706,'2','<p>Kết nối các mạng LAN khác nhau hay các đoạn LAN khác nhau có cùng phương thức truy cập</p>',2,NULL,NULL),(2849,706,'3','<p>Kết nối mạng LAN/WAN khác nhau có cùng/khác phương thức truy cập</p>',3,NULL,NULL),(2850,707,'0','<p>Hybird</p>',0,NULL,NULL),(2851,707,'1','<p>Bus</p>',1,NULL,NULL),(2852,707,'2','<p>Star</p>',2,NULL,NULL),(2853,707,'3','<p>Ring</p>',3,NULL,NULL),(2854,708,'0','<p>185m</p>',0,NULL,NULL),(2855,708,'1','<p>200m<br></p>',1,NULL,NULL),(2856,708,'2','<p>250m<br></p>',2,NULL,NULL),(2857,708,'3','<p>500m<br></p>',3,NULL,NULL),(2858,709,'0','<p>185m</p>',0,NULL,NULL),(2859,709,'1','<p>200m<br></p>',1,NULL,NULL),(2860,709,'2','<p>250m<br></p>',2,NULL,NULL),(2861,709,'3','<p>500m<br></p>',3,NULL,NULL),(2862,710,'0','<p>RJ45</p>',0,NULL,NULL),(2863,710,'1','<p>BNC</p>',1,NULL,NULL),(2864,710,'2','<p>RJ15</p>',2,NULL,NULL),(2865,710,'3','<p>BNC5</p>',3,NULL,NULL),(2866,711,'0','<p>Cáp đồng trục</p>',0,NULL,NULL),(2867,711,'1','<p>Cáp xoắn đôi UTP</p>',1,NULL,NULL),(2868,711,'2','<p>Cáp quang</p>',2,NULL,NULL),(2869,711,'3','<p>Truyền dẫn không dây (Wireless)</p>',3,NULL,NULL),(2870,712,'0','<p>Cáp đồng trục</p>',0,NULL,NULL),(2871,712,'1','<p>Cáp xoắn đôi UTP</p>',1,NULL,NULL),(2872,712,'2','<p>Cáp quang đa mode (Multi-Mode)</p>',2,NULL,NULL),(2873,712,'3','<p>Cáp quang đơn mode (Single-Mode)</p>',3,NULL,NULL),(2874,713,'0','<p>Network</p>',0,NULL,NULL),(2875,713,'1','<p>Physical</p>',1,NULL,NULL),(2876,713,'2','<p>Data Link</p>',2,NULL,NULL),(2877,713,'3','<p>Transport</p>',3,NULL,NULL),(2878,714,'0','<p>Tầng 1</p>',0,NULL,NULL),(2879,714,'1','<p>Tầng 3</p>',1,NULL,NULL),(2880,714,'2','<p>Tầng 2</p>',2,NULL,NULL),(2881,714,'3','<p>Tầng 4</p>',3,NULL,NULL),(2882,715,'0','<p>FDDI</p>',0,NULL,NULL),(2883,715,'1','<p>Network address </p>',1,NULL,NULL),(2884,715,'2','<p>Router address</p>',2,NULL,NULL),(2885,715,'3','<p>Host address</p>',3,NULL,NULL),(2886,716,'0','<p>2<br></p>',0,NULL,NULL),(2887,716,'1','<p>4</p>',1,NULL,NULL),(2888,716,'2','<p>6<br></p>',2,NULL,NULL),(2889,716,'3','<p>8<br></p>',3,NULL,NULL),(2890,717,'0','<p>Coax </p>',0,NULL,NULL),(2891,717,'1','<p>Fiber-optic </p>',1,NULL,NULL),(2892,717,'2','<p>1000Base-LX</p>',2,NULL,NULL),(2893,717,'3','<p>10BASE-T </p>',3,NULL,NULL),(2894,718,'0','<p>Repeater</p>',0,NULL,NULL),(2895,718,'1','<p>Hub</p>',1,NULL,NULL),(2896,718,'2','<p>Bridge hoặc Switch</p>',2,NULL,NULL),(2897,718,'3','<p>Router</p>',3,NULL,NULL),(2898,719,'0','<p>Máy tính đầu cuối</p>',0,NULL,NULL),(2899,719,'1','<p>Router</p>',1,NULL,NULL),(2900,719,'2','<p>Hub</p>',2,NULL,NULL),(2901,719,'3','<p>Switch </p>',3,NULL,NULL),(2902,692,'0','<p>Switch/Hub</p>',0,NULL,NULL),(2903,692,'1','<p>Router</p>',1,NULL,NULL),(2904,692,'2','<p>Repeater</p>',2,NULL,NULL),(2905,692,'3','<p>NIC</p>',3,NULL,NULL),(2906,693,'0','<p>Cáp chéo (Cross- Cable)</p>',0,NULL,NULL),(2907,693,'1','<p>Cáp thẳng (Straight Cable)</p>',1,NULL,NULL),(2908,693,'2','<p>Rollover Cable</p>',2,NULL,NULL),(2909,693,'3','<p>Không có loại nào</p>',3,NULL,NULL),(2910,694,'0','<p>Hub </p>',0,NULL,NULL),(2911,694,'1','<p>NIC </p>',1,NULL,NULL),(2912,694,'2','<p>Switch</p>',2,NULL,NULL),(2913,694,'3','<p>Transceiver </p>',3,NULL,NULL),(2914,695,'0','<p>Switch </p>',0,NULL,NULL),(2915,695,'1','<p>Hub </p>',1,NULL,NULL),(2916,695,'2','<p>NIC </p>',2,NULL,NULL),(2917,695,'3','<p>Router </p>',3,NULL,NULL),(2918,696,'0','<p>Repeater </p>',0,NULL,NULL),(2919,696,'1','<p>Modem </p>',1,NULL,NULL),(2920,696,'2','<p>Router </p>',2,NULL,NULL),(2921,696,'3','<p>NIC</p>',3,NULL,NULL),(2922,697,'0','<p>Tầng Vật lý </p>',0,NULL,NULL),(2923,697,'1','<p>Tầng Data Link </p>',1,NULL,NULL),(2924,697,'2','<p>Tầng Transport</p>',2,NULL,NULL),(2925,697,'3','<p>Tầng Network </p>',3,NULL,NULL),(2926,698,'0','<p>Hub</p>',0,NULL,NULL),(2927,698,'1','<p>Switch</p>',1,NULL,NULL),(2928,698,'2','<p>Repeater</p>',2,NULL,NULL),(2929,698,'3','<p>Bridge</p>',3,NULL,NULL),(2930,699,'0','<p>100</p>',0,NULL,NULL),(2931,699,'1','<p>185<br></p>',1,NULL,NULL),(2932,699,'2','<p>200<br></p>',2,NULL,NULL),(2933,699,'3','<p>500<br></p>',3,NULL,NULL),(2934,700,'0','<p>Bàn phím</p>',0,NULL,NULL),(2935,700,'1','<p>10<br></p>',1,NULL,NULL),(2936,700,'2','<p>12<br></p>',2,NULL,NULL),(2937,700,'3','<p>100<br></p>',3,NULL,NULL),(2938,701,'0','<p>HUB/SWITCH sẽ gởi lại dữ liệu</p>',0,NULL,NULL),(2939,701,'1','<p>Dữ liệu bị phá hỏng từng bit một</p>',1,NULL,NULL),(2940,701,'2','<p>Dữ liệu sẽ được xây dựng lại tại máy nhận</p>',2,NULL,NULL),(2941,701,'3','<p>Dữ liệu tiếp tục đi tới máy nhận</p>',3,NULL,NULL),(2942,702,'0','<p>1<br></p>',0,NULL,NULL),(2943,702,'1','<p>2<br></p>',1,NULL,NULL),(2944,702,'2','<p>4<br></p>',2,NULL,NULL),(2945,702,'3','<p>5<br></p>',3,NULL,NULL),(2946,555,'0','<p>2<br></p>',0,NULL,NULL),(2947,555,'1','<p>3<br></p>',1,NULL,NULL),(2948,555,'2','<p>4<br></p>',2,NULL,NULL),(2949,555,'3','<p>5<br></p>',3,NULL,NULL),(2950,464,'0','<p>Màn hình</p>',0,NULL,NULL),(2951,464,'0','<p>Bàn phím</p>',1,NULL,NULL),(2952,464,'0','<p>Đĩa cứng</p>',2,NULL,NULL),(2953,464,'0','<p>RAM</p>',3,NULL,NULL),(2954,464,'1','<p>Bộ nhớ để xử lý</p>',0,NULL,NULL),(2955,464,'1','<p>Lưu trữ thông tin</p>',1,NULL,NULL),(2956,464,'1','<p>Hiển thị</p>',2,NULL,NULL),(2957,464,'1','<p>Nhập dữ liệu</p>',3,NULL,NULL),(2962,721,'0','<p>Hub, Switch</p>',0,NULL,NULL),(2963,721,'1','<p>Bridge, Router</p>',1,NULL,NULL),(2964,721,'2','<p>Router</p>',2,NULL,NULL),(2965,721,'3','<p>Repeater</p>',3,NULL,NULL),(2970,722,'0','<p>Điểm - điểm</p>',0,NULL,NULL),(2971,722,'1','<p>Điểm - đa điểm</p>',1,NULL,NULL),(2972,722,'2','<p>Đa điểm - đa điểm</p>',2,NULL,NULL),(2973,722,'3','<p>Đa điểm - điểm</p>',3,NULL,NULL),(2978,723,'0','<p>Điểm - điểm</p>',0,NULL,NULL),(2979,723,'1','<p>Điểm - đa điểm</p>',1,NULL,NULL),(2980,723,'2','<p>Đa điểm - đa điểm</p>',2,NULL,NULL),(2981,723,'3','<p>Đa điểm - điểm</p>',3,NULL,NULL),(2986,724,'0','<p>Điểm - điểm</p>',0,NULL,NULL),(2987,724,'1','<p>Điểm - đa điểm</p>',1,NULL,NULL),(2988,724,'2','<p>Đa điểm - đa điểm</p>',2,NULL,NULL),(2989,724,'3','<p>Đa điểm - điểm</p>',3,NULL,NULL),(2990,725,'0','<p>Điểm - điểm</p>',0,NULL,NULL),(2991,725,'1','<p>Điểm - đa điểm</p>',1,NULL,NULL),(2992,725,'2','<p>Đa điểm - đa điểm</p>',2,NULL,NULL),(2993,725,'3','<p>Đa điểm - điểm</p>',3,NULL,NULL),(2998,726,'0','<p>Compilation eror</p>',0,NULL,NULL),(2999,726,'1','<p>Runtime Exception </p>',1,NULL,NULL),(3000,726,'2','<p>x is 1</p>',2,NULL,NULL),(3001,726,'3','<p>Runtime error</p>',3,NULL,NULL),(3002,727,'0','<p>Compilation eror</p>',0,NULL,NULL),(3003,727,'1','<p>Runtime Exception </p>',1,NULL,NULL),(3004,727,'2','<p>x is 1</p>',2,NULL,NULL),(3005,727,'3','<p>Runtime error</p>',3,NULL,NULL),(3006,728,'0','<p>class Circle derived Cylinder</p>',0,NULL,NULL),(3007,728,'1','<p>class Circle extends Cylinder</p>',1,NULL,NULL),(3008,728,'2','<p>class Cylinder extends Circle</p>',2,NULL,NULL),(3009,728,'3','<p>class Cylinder derived Circle</p>',3,NULL,NULL),(3010,729,'0','<p>Tạo thể hiện của lớp</p>',0,NULL,NULL),(3011,729,'1','<p>Tạo tên của các phương thức</p>',1,NULL,NULL),(3012,729,'2','<p>Thay đổi trạng thái của đối tượng</p>',2,NULL,NULL),(3013,729,'3','<p>Tạo thuộc tính của lớp</p>',3,NULL,NULL),(3014,730,'0','<p>1+3</p>',0,NULL,NULL),(3015,730,'1','<p>2 +4</p>',1,NULL,NULL),(3016,730,'2','<p>4</p>',2,NULL,NULL),(3017,730,'3','<p>6<br></p>',3,NULL,NULL),(3022,731,'0','<p>B truy xuất được các thành phần private của A</p>',0,NULL,NULL),(3023,731,'1','<p>B là lớp con của AB truy xuất được các thành phần protected của A</p>',1,NULL,NULL),(3024,731,'2','<p>B truy xuất được các thành phần protected của A</p>',2,NULL,NULL),(3025,731,'3','<p>A là lớp cha của B</p>',3,NULL,NULL),(3026,732,'0','<p>B truy xuất được các thành phần private của A</p>',0,NULL,NULL),(3027,732,'1','<p>B là lớp con của A</p>',1,NULL,NULL),(3028,732,'2','<p>B truy xuất được các thành phần protected của A</p>',2,NULL,NULL),(3029,732,'3','<p>A là lớp cha của B</p>',3,NULL,NULL),(3030,733,'0','<p>No Output</p>',0,NULL,NULL),(3031,733,'1','<p>No error</p>',1,NULL,NULL),(3032,733,'2','<p>Compile error</p>',2,NULL,NULL),(3033,733,'3','<p>Runtime Exception</p>',3,NULL,NULL),(3034,734,'0','<p>Public dùng cho lớp, private dùng cho phương thức</p>',0,NULL,NULL),(3035,734,'1','<p>Phương thức public dùng cho lớp thường, private dùng cho lớp trừu tượng </p>',1,NULL,NULL),(3036,734,'2','<p>Phương thức public có thể được mọi đối tượng sử dụng, private chỉ sử dụng bên trong lớp hiện tại</p>',2,NULL,NULL),(3037,734,'3','<p>Phương thức public được dùng cho lớp hiện tại, private được dùng ở lớp kế thừa</p>',3,NULL,NULL),(3038,735,'0','<p>Compiler error</p>',0,NULL,NULL),(3039,735,'1','<p>Runtime Exception</p>',1,NULL,NULL),(3040,735,'2','<p>True</p>',2,NULL,NULL),(3041,735,'3','<p>False</p>',3,NULL,NULL),(3046,736,'0','<p>public void main(String[] args)</p>',0,NULL,NULL),(3047,736,'1','<p>public static main(string[] args)</p>',1,NULL,NULL),(3048,736,'2','<p>public static void main()</p>',2,NULL,NULL),(3049,736,'3','<p>public static void main(String[] args)</p>',3,NULL,NULL),(3050,737,'0','<p>System.out.print(\"The number is : \" + nums[0]); </p>',0,NULL,NULL),(3051,737,'1','<p>System.out.print(\"The number is : \" + nums[1]);</p>',1,NULL,NULL),(3052,737,'2','<p>System.out.print(\"The number is : \" + nums[8]);</p>',2,NULL,NULL),(3053,737,'3','<p>System.out.print(\"The number is : \" + nums);</p>',3,NULL,NULL),(3054,738,'0','<p>Compiler error</p>',0,NULL,NULL),(3055,738,'1','<p>Runtime Exception</p>',1,NULL,NULL),(3056,738,'2','<p>No errors </p>',2,NULL,NULL),(3057,738,'3','<p>B</p>',3,NULL,NULL),(3058,739,'0','<p>Các giá trị cùng kiểu dữ liệu</p>',0,NULL,NULL),(3059,739,'1','<p>Các giá trị khác kiểu dữ liệu</p>',1,NULL,NULL),(3060,739,'2','<p>Cùng giá trị của các kiểu dữ liệu khác nhau</p>',2,NULL,NULL),(3061,739,'3','<p>Khác giá trị của các kiểu dữ liệu khác nhau</p>',3,NULL,NULL),(3062,740,'0','<p>ab</p>',0,NULL,NULL),(3063,740,'1','<p>ac</p>',1,NULL,NULL),(3064,740,'2','<p>ace</p>',2,NULL,NULL),(3065,740,'3','<p>bd</p>',3,NULL,NULL),(3066,741,'0','<p>được truy xuất chung cho class</p>',0,NULL,NULL),(3067,741,'1','<p>chỉ được truy xuất bởi các lớp cùng một gói</p>',1,NULL,NULL),(3068,741,'2','<p>chỉ truy xuất bên trong lớp</p>',2,NULL,NULL),(3069,741,'3','<p>chỉ truy xuất bởi lớp và các lớp con của nó</p>',3,NULL,NULL),(3070,742,'0','<p>for (int i =0; i &lt; 3; i++) System.out.println( nums[i]);</p>',0,NULL,NULL),(3071,742,'1','<p>for (i = 1; i &lt;= 3; i++) System.out.println(nums[i]);</p>',1,NULL,NULL),(3072,742,'2','<p>for (i = 0; i &lt;= 3; i++) System.out.println(nums[i]);</p>',2,NULL,NULL),(3073,742,'3','<p>for (i = 1; i &lt; 3; i++) System.out.println(nums[i]);</p>',3,NULL,NULL),(3074,743,'0','<p>Faculty[] faculties={new Person(), new Staff(), new Student()};</p>',0,NULL,NULL),(3075,743,'1','<p>Staff[] staff={new Person(), new Faculty(), new Student()};</p>',1,NULL,NULL),(3076,743,'2','<p>Person[] persons={new Faculty(), new Staff(), new Student()};</p>',2,NULL,NULL),(3077,743,'3','<p>Student[] students={new Person(), new Staff(), new Faculty()};</p>',3,NULL,NULL),(3078,744,'0','<p>thành phần public và private của lớp cha</p>',0,NULL,NULL),(3079,744,'1','<p>thành phần private của lớp cha</p>',1,NULL,NULL),(3080,744,'2','<p>thành phần public của lớp cha</p>',2,NULL,NULL),(3081,744,'3','<p>thành phần public, protected và private của lớp cha</p>',3,NULL,NULL),(3082,745,'0','<p>Compiler biên dịch source code thành file .class</p>',0,NULL,NULL),(3083,745,'1','<p>Compiler biên dịch source code thành mã máy</p>',1,NULL,NULL),(3084,745,'2','<p>Interpreter thông dịch source code thành file .class</p>',2,NULL,NULL),(3085,745,'3','<p>Interpreter thông dịch source code thành mã máy</p>',3,NULL,NULL),(3086,746,'0','<p>source code, byte code</p>',0,NULL,NULL),(3087,746,'1','<p>byte code, native code</p>',1,NULL,NULL),(3088,746,'2','<p>source code, native code</p>',2,NULL,NULL),(3089,746,'3','<p>native code, source code</p>',3,NULL,NULL),(3094,747,'0','<p>321<br></p>',0,NULL,NULL),(3095,747,'1','<p>1<br></p>',1,NULL,NULL),(3096,747,'2','<p>123<br></p>',2,NULL,NULL),(3097,747,'3','<p>3<br></p>',3,NULL,NULL),(3098,748,'0','<p>Điểm - điểm</p>',0,NULL,NULL),(3099,748,'1','<p>Điểm - đa điểm</p>',1,NULL,NULL),(3100,748,'2','<p>Đa điểm - đa điểm</p>',2,NULL,NULL),(3101,748,'3','<p>Đa điểm - điểm</p>',3,NULL,NULL),(3102,749,'0','<p>321<br></p>',0,NULL,NULL),(3103,749,'1','<p>1<br></p>',1,NULL,NULL),(3104,749,'2','<p>123<br></p>',2,NULL,NULL),(3105,749,'3','<p>3<br></p>',3,NULL,NULL),(3106,750,'0','<p>10<br></p>',0,NULL,NULL),(3107,750,'1','<p>11<br></p>',1,NULL,NULL),(3108,750,'2','<p>12<br></p>',2,NULL,NULL),(3109,750,'3','<p>13<br></p>',3,NULL,NULL),(3110,751,'0','<p>28<br></p>',0,NULL,NULL),(3111,751,'1','<p>30</p>',1,NULL,NULL),(3112,751,'2','<p>32<br></p>',2,NULL,NULL),(3113,751,'3','<p>34<br></p>',3,NULL,NULL),(3114,752,'0','<p>Màn hình</p>',0,NULL,NULL),(3115,752,'0','<p>Bàn phím</p>',1,NULL,NULL),(3116,752,'0','<p>Đĩa cứng</p>',2,NULL,NULL),(3117,752,'0','<p>RAM</p>',3,NULL,NULL),(3118,752,'1','<p>Bộ nhớ để xử lý</p>',0,NULL,NULL),(3119,752,'1','<p>Lưu trữ thông tin</p>',1,NULL,NULL),(3120,752,'1','<p>Hiển thị</p>',2,NULL,NULL),(3121,752,'1','<p>Nhập dữ liệu</p>',3,NULL,NULL),(3122,753,'0','<p>Message 1</p>',0,NULL,NULL),(3123,753,'1','<p>Message 2</p>',1,NULL,NULL),(3124,753,'2','<p>Message 3</p>',2,NULL,NULL),(3125,753,'3','<p>Message 4</p>',3,NULL,NULL),(3126,754,'0','<p>1<br></p>',0,NULL,NULL),(3127,754,'1','<p>2<br></p>',1,NULL,NULL),(3128,754,'2','<p>3<br></p>',2,NULL,NULL),(3129,754,'3','<p>Không có lỗi</p>',3,NULL,NULL),(3130,755,'0','<p>b contains 10</p>',0,NULL,NULL),(3131,755,'1','<p>b contains 5</p>',1,NULL,NULL),(3132,755,'2','<p>b contains 250</p>',2,NULL,NULL),(3133,755,'3','<p>b contains 245</p>',3,NULL,NULL),(3134,756,'0','<p>int[] arr = new arr[5];</p>',0,NULL,NULL),(3135,756,'1','<p>int arr[] = new arr[5];</p>',1,NULL,NULL),(3136,756,'2','<p>int arr[] = {1, 2, 3, 4, 5};</p>',2,NULL,NULL),(3137,756,'3','<p>String ss[] = {1, 2, 3, 4, 5};</p>',3,NULL,NULL),(3138,757,'0','<p>String x = \"Hello\"; int y = 9; x+= y;</p>',0,NULL,NULL),(3139,757,'1','<p>String x = \"Hello\"; int y = 9; x=x+y;</p>',1,NULL,NULL),(3140,757,'2','<p>String x = \"Hello\"; int y = 9; y=y+x;</p>',2,NULL,NULL),(3141,757,'3','<p>String x = null; int y = (x != null) &amp;&amp; (x.length() &gt; 0) ? x.length():0;</p>',3,NULL,NULL),(3142,758,'0','<p>public: có thể truy cập dữ liệu hay phương thức từ bên ngoài lớp định nghĩa</p>',0,NULL,NULL),(3143,758,'1','<p>protected: chỉ được truy cập dữ liệu hay phương thức trong bản thân lớp định nghĩa và những lớp dẫn xuất của lớp đó</p>',1,NULL,NULL),(3144,758,'2','<p>static: dữ liệu hay phương thức chung cho mọi thực thể</p>',2,NULL,NULL),(3145,758,'3','<p>private: chỉ được truy cập dữ liệu trong phương thức mà nó định nghĩa</p>',3,NULL,NULL),(3146,759,'0','<p>Math.random()*6</p>',0,NULL,NULL),(3147,759,'1','<p>(int)(Math.random()*6)+1</p>',1,NULL,NULL),(3148,759,'2','<p>(int)(Math.random()+6)</p>',2,NULL,NULL),(3149,759,'3','<p>(int)(Math.random()*6)</p>',3,NULL,NULL),(3150,760,'0','<p>final constant double PI = 3.14159;</p>',0,NULL,NULL),(3151,760,'1','<p>constant double PI = 3.14159;</p>',1,NULL,NULL),(3152,760,'2','<p>final double PI = 3.14159;</p>',2,NULL,NULL),(3153,760,'3','<p>final PI = 3.14159;</p>',3,NULL,NULL),(3154,761,'0','<p>I am in the do block</p>',0,NULL,NULL),(3155,761,'1','<p>Lỗi lúc thực thi (runtime)</p>',1,NULL,NULL),(3156,761,'2','<p>Lỗi biên dịch ở dòng //4</p>',2,NULL,NULL),(3157,761,'3','<p>Không in ra gì cả</p>',3,NULL,NULL),(3158,762,'0','<p>1<br></p>',0,NULL,NULL),(3159,762,'1','<p>7<br></p>',1,NULL,NULL),(3160,762,'2','<p>8<br></p>',2,NULL,NULL),(3161,762,'3','<p>X.length()</p>',3,NULL,NULL),(3162,763,'0','<p>Một lớp có chứa phương thức <em>final</em> sẽ không cho phép thừa kế</p>',0,NULL,NULL),(3163,763,'1','<p>Một phương thức <em>final</em> thì không thể override</p>',1,NULL,NULL),(3164,763,'2','<p>Một biến <em>final</em> chỉ có thể khai báo trong một lớp final</p>',2,NULL,NULL),(3165,763,'3','<p>Một biến <em>final</em> tương &nbsp;tự như một biến static</p>',3,NULL,NULL),(3166,764,'0','<p>message one</p>',0,NULL,NULL),(3167,764,'1','<p>message two</p>',1,NULL,NULL),(3168,764,'2','<p>message three</p>',2,NULL,NULL),(3169,764,'3','<p>message four</p>',3,NULL,NULL),(3170,765,'0','<p>byte, short, int, long, float, double</p>',0,NULL,NULL),(3171,765,'1','<p>boolean, byte, short, char, int, long, float, double</p>',1,NULL,NULL),(3172,765,'2','<p>byte, short, char, int, long, float, double</p>',2,NULL,NULL),(3173,765,'3','<p>int, long, float, double</p>',3,NULL,NULL),(3174,766,'0','<p>Câu lệnh import, khai báo package, khai báo lớp.</p>',0,NULL,NULL),(3175,766,'1','<p>Khai báo package đầu tiên; thứ tự của câu lệnh import và khai báo lớp là tùy ý.</p>',1,NULL,NULL),(3176,766,'2','<p>Khai báo package, câu lệnh import, khai báo lớp chứa hàm main trước tiên, rồi khai báo các lớp khac tùy ý.</p>',2,NULL,NULL),(3177,766,'3','<p>Câu lệnh import trước tiên; thứ tự của khai báo package và khai báo lớp là tùy ý.</p>',3,NULL,NULL),(3178,767,'0','<p>Welcome to Java</p>',0,NULL,NULL),(3179,767,'1','<p>The finally clause is executed</p>',1,NULL,NULL),(3180,767,'2','<p>Welcome to Java. The finally clause is executed.</p>',2,NULL,NULL),(3181,767,'3','<p>Lỗi Compile-time</p>',3,NULL,NULL),(3182,768,'0','<p>Welcome to Java Welcome to HTML</p>',0,NULL,NULL),(3183,768,'1','<p>Welcome to Java The finally clause is executed</p>',1,NULL,NULL),(3184,768,'2','<p>Welcome to HTML The finally clause is executed</p>',2,NULL,NULL),(3185,768,'3','<p>Welcome to Java Welcome to HTML The finally clause is executed</p>',3,NULL,NULL),(3186,769,'0','<p>124</p>',0,NULL,NULL),(3187,769,'1','<p>145</p>',1,NULL,NULL),(3188,769,'2','<p>125</p>',2,NULL,NULL),(3189,769,'3','<p>134</p>',3,NULL,NULL),(3190,770,'0','<p>B,SuperB,A,SuperA</p>',0,NULL,NULL),(3191,770,'1','<p>B,SuperB,B,SuperB</p>',1,NULL,NULL),(3192,770,'2','<p>A,SuperB,A,SuperA</p>',2,NULL,NULL),(3193,770,'3','<p>A,SuperA,B,SuperB</p>',3,NULL,NULL),(3194,771,'0','<p>*$ABC </p>',0,NULL,NULL),(3195,771,'1','<p>78ABC*$</p>',1,NULL,NULL),(3196,771,'2','<p>*$ABC*$</p>',2,NULL,NULL),(3197,771,'3','<p>Lỗi compile-time</p>',3,NULL,NULL),(3198,772,'0','<p>Lỗi tại dòng (*)</p>',0,NULL,NULL),(3199,772,'1','<p>x = 15</p>',1,NULL,NULL),(3200,772,'2','<p>x = 5</p>',2,NULL,NULL),(3201,772,'3','<p>x = 3</p>',3,NULL,NULL),(3202,773,'0','<p>the Price is: 5000</p>',0,NULL,NULL),(3203,773,'1','<p>the Price is: 1000</p>',1,NULL,NULL),(3204,773,'2','<p>the Price is: 100</p>',2,NULL,NULL),(3205,773,'3','<p>the Price is: 0</p>',3,NULL,NULL),(3206,774,'0','<p>icy</p>',0,NULL,NULL),(3207,774,'1','<p>ic</p>',1,NULL,NULL),(3208,774,'2','<p>Bic</p>',2,NULL,NULL),(3209,774,'3','<p>Bi</p>',3,NULL,NULL),(3210,775,'0','<p>false,true,false</p>',0,NULL,NULL),(3211,775,'1','<p>false, false, true</p>',1,NULL,NULL),(3212,775,'2','<p>true,false,true</p>',2,NULL,NULL),(3213,775,'3','<p>true, true,false</p>',3,NULL,NULL),(3214,776,'0','<p>&nbsp;null</p>',0,NULL,NULL),(3215,776,'1','<p>Object</p>',1,NULL,NULL),(3216,776,'2','<p>String</p>',2,NULL,NULL),(3217,776,'3','<p>Không in ra kết quả</p>',3,NULL,NULL),(3218,777,'0','<p>boolean b2=TRUE;</p>',0,NULL,NULL),(3219,777,'1','<p>boolean b5 = 0;</p>',1,NULL,NULL),(3220,777,'2','<p>boolean b1 = true;</p>',2,NULL,NULL),(3221,777,'3','<p>boolean b3 = Fasle;</p>',3,NULL,NULL),(3222,778,'0','<p>false,true,true</p>',0,NULL,NULL),(3223,778,'1','<p>false,false,false</p>',1,NULL,NULL),(3224,778,'2','<p>true,false,false</p>',2,NULL,NULL),(3225,778,'3','<p>true,fasle,true</p>',3,NULL,NULL),(3226,779,'0','<p>127 128 255 256</p>',0,NULL,NULL),(3227,779,'1','<p>127 -128 255 0</p>',1,NULL,NULL),(3228,779,'2','<p>127 -128 0 -1</p>',2,NULL,NULL),(3229,779,'3','<p>127 127 -1 0 </p>',3,NULL,NULL),(3230,780,'0','<p>Dòng 4</p>',0,NULL,NULL),(3231,780,'1','<p>Dòng 5</p>',1,NULL,NULL),(3232,780,'2','<p>Dòng 6</p>',2,NULL,NULL),(3233,780,'3','<p>Dòng 7</p>',3,NULL,NULL),(3234,781,'0','<p>four arguments</p>',0,NULL,NULL),(3235,781,'1','<p>no arguments</p>',1,NULL,NULL),(3236,781,'2','<p>one two three four arguments</p>',2,NULL,NULL),(3237,781,'3','<p>4 arguments</p>',3,NULL,NULL),(3238,782,'0','<p>a=0 b=0 bArr[0]=1</p>',0,NULL,NULL),(3239,782,'1','<p>a=0 b=1 bArr[0]=1</p>',1,NULL,NULL),(3240,782,'2','<p>a=0 b=0 bArr[0]=0</p>',2,NULL,NULL),(3241,782,'3','<p>a=1 b=1 bArr[0]=1</p>',3,NULL,NULL),(3242,783,'0','<p>101</p>',0,NULL,NULL),(3243,783,'1','<p>102</p>',1,NULL,NULL),(3244,783,'2','<p>200<br></p>',2,NULL,NULL),(3245,783,'3','<p>201<br></p>',3,NULL,NULL),(3246,784,'0','<p>Lỗi biên dịch tại dòng 4</p>',0,NULL,NULL),(3247,784,'1','<p>value is Hello </p>',1,NULL,NULL),(3248,784,'2','<p>value is False </p>',2,NULL,NULL),(3249,784,'3','<p>Không có giá trị nào được in ra</p>',3,NULL,NULL),(3250,785,'0','<p>static</p>',0,NULL,NULL),(3251,785,'1','<p>final</p>',1,NULL,NULL),(3252,785,'2','<p>public</p>',2,NULL,NULL),(3253,785,'3','<p>protected</p>',3,NULL,NULL),(3254,786,'0','<p>0 false 0 null</p>',0,NULL,NULL),(3255,786,'1','<p>null 0 false null</p>',1,NULL,NULL),(3256,786,'2','<p>null 0 0 null</p>',2,NULL,NULL),(3257,786,'3','<p>null false 0 null</p>',3,NULL,NULL),(3258,787,'0','<p>Cùng tên khác kiểu trả về</p>',0,NULL,NULL),(3259,787,'1','<p>Thuộc hai lớp có quan hệ kế thừa</p>',1,NULL,NULL),(3260,787,'2','<p>Thuộc cùng một lớp</p>',2,NULL,NULL),(3261,787,'3','<p>Cùng tên khác danh sách đối số</p>',3,NULL,NULL),(3262,788,'0','<p>public</p>',0,NULL,NULL),(3263,788,'1','<p>final</p>',1,NULL,NULL),(3264,788,'2','<p>abstract</p>',2,NULL,NULL),(3265,788,'3','<p>private</p>',3,NULL,NULL),(3266,789,'0','<p>char your_char = \'int\';</p>',0,NULL,NULL),(3267,789,'1','<p>char what = \'Hello\';</p>',1,NULL,NULL),(3268,789,'2','<p>char what_char = \"L\";</p>',2,NULL,NULL),(3269,789,'3','<p>char what_false = \'\\u3456\';</p>',3,NULL,NULL),(3270,790,'0','<p>45</p>',0,NULL,NULL),(3271,790,'1','<p>44</p>',1,NULL,NULL),(3272,790,'2','<p>45.0<br></p>',2,NULL,NULL),(3273,790,'3','<p>44.00<br></p>',3,NULL,NULL),(3274,791,'0','<p>110</p>',0,NULL,NULL),(3275,791,'1','<p>21<br></p>',1,NULL,NULL),(3276,791,'2','<p>100<br></p>',2,NULL,NULL),(3277,791,'3','<p>20<br></p>',3,NULL,NULL),(3278,792,'0','<p>Dòng code sẽ được thực thi nhưng không xuất hiện kết quả</p>',0,NULL,NULL),(3279,792,'1','<p>Dòng code sẽ được thực thi và xuất hiện từ “true”</p>',1,NULL,NULL),(3280,792,'2','<p>Dòng code sẽ báo lỗi tại điều kiện if</p>',2,NULL,NULL),(3281,792,'3','<p>Không có phép toán &amp; trong java</p>',3,NULL,NULL),(3282,793,'0','<p>0<br></p>',0,NULL,NULL),(3283,793,'1','<p>69<br></p>',1,NULL,NULL),(3284,793,'2','<p>128<br></p>',2,NULL,NULL),(3285,793,'3','<p>Lỗi Compile-time</p>',3,NULL,NULL),(3286,794,'0','<p>int a[][] = new int [][4];</p>',0,NULL,NULL),(3287,794,'1','<p>int []a[] = new int [4][];</p>',1,NULL,NULL),(3288,794,'2','<p>int a[][] = new int [4][4];</p>',2,NULL,NULL),(3289,794,'3','<p>int [][] a = new int [4][4];</p>',3,NULL,NULL),(3290,795,'0','<p>String a[]=new String[5];&nbsp; for(int i=0;i&lt;5;a[i++]=\"\")</p>',0,NULL,NULL),(3291,795,'1','<p>String a[]=new String[5];&nbsp; for(int i=0;i&lt;5;a[i++]=null)</p>',1,NULL,NULL),(3292,795,'2','<p>String[] a =new String[5];</p>',2,NULL,NULL),(3293,795,'3','<p>String[] a =new String[5]; a[] = null;</p>',3,NULL,NULL),(3294,796,'0','<p>s1.concat(s2);</p>',0,NULL,NULL),(3295,796,'1','<p>s1.equals(s2);s1.substring(s2);</p>',1,NULL,NULL),(3296,796,'2','<p>s1.substring(s2);</p>',2,NULL,NULL),(3297,796,'3','<p>s1.charArt(s2);</p>',3,NULL,NULL),(3298,797,'0','<p>Một lớp có thể thừa kế từ nhiều lớp khác bằng cách dùng từ khóa extends</p>',0,NULL,NULL),(3299,797,'1','<p>Một lớp có thể thừa kế từ nhiều interface khác bằng cách dùng từ khóa extends</p>',1,NULL,NULL),(3300,797,'2','<p>Một interface có thể thừa kế từ nhiều inteface bằng cách dùng từ khóa extends</p>',2,NULL,NULL),(3301,797,'3','<p>Một interface có thể thừa kế từ nhiều lớp bằng cách dùng từ khóa extends</p>',3,NULL,NULL),(3302,798,'0','<p>ClassCastException</p>',0,NULL,NULL),(3303,798,'1','<p>IllegalStateException</p>',1,NULL,NULL),(3304,798,'2','<p>NumberFormatException</p>',2,NULL,NULL),(3305,798,'3','<p>ArrayIndexOutOfBoundsException</p>',3,NULL,NULL),(3306,799,'0','<p>Try</p>',0,NULL,NULL),(3307,799,'1','<p>Finally</p>',1,NULL,NULL),(3308,799,'2','<p>Throw</p>',2,NULL,NULL),(3309,799,'3','<p>Exception</p>',3,NULL,NULL),(3310,800,'0','<p>Lỗi dòng (1)</p>',0,NULL,NULL),(3311,800,'1','<p>Lỗi dòng (2)</p>',1,NULL,NULL),(3312,800,'2','<p>Value of pricePrPizza: 15</p>',2,NULL,NULL),(3313,800,'3','<p>Value of pricePrPizza: 7.5</p>',3,NULL,NULL),(3314,801,'0','<p>Dòng 10 không thể biên dịch</p>',0,NULL,NULL),(3315,801,'1','<p>Dòng 11 không thể biên dịch</p>',1,NULL,NULL),(3316,801,'2','<p>Đoạn mã biên dịch thành công nhưng sẽ phát sinh Exception tại dòng 12</p>',2,NULL,NULL),(3317,801,'3','<p>Đoạn mã biên dịch thành công và có thể thi hành</p>',3,NULL,NULL),(3318,802,'0','<p>Nếu a là true và b là true thì in ra màn hình: A &amp;&amp; B</p>',0,NULL,NULL),(3319,802,'1','<p>Nếu a là false và b là true thì in ra màn hình: ELSE</p>',1,NULL,NULL),(3320,802,'2','<p>Nếu a là true và b là false thì in ra màn hình: notB</p>',2,NULL,NULL),(3321,802,'3','<p>Nếu a là false và b là false thì in ra màn hình: ELSE</p>',3,NULL,NULL),(3322,803,'0','<p>I is 0</p>',0,NULL,NULL),(3323,803,'1','<p>I is 0 I is 1</p>',1,NULL,NULL),(3324,803,'2','<p>&nbsp;</p><p>&nbsp;</p><p>Lỗi biên dịch</p>',2,NULL,NULL),(3325,803,'3','<p>Lặp 2 lần và in ra dòng: I is 2</p>',3,NULL,NULL),(3326,804,'0','<p>abcd</p>',0,NULL,NULL),(3327,804,'1','<p>ABCD</p>',1,NULL,NULL),(3328,804,'2','<p>dccd</p>',2,NULL,NULL),(3329,804,'3','<p>dcba</p>',3,NULL,NULL),(3330,805,'0','<p>i = 6 and j = 5</p>',0,NULL,NULL),(3331,805,'1','<p>i = 5 and j = 5</p>',1,NULL,NULL),(3332,805,'2','<p>i= 6 and j = 4</p>',2,NULL,NULL),(3333,805,'3','<p>i= 5 and j = 6</p>',3,NULL,NULL),(3334,465,'0','<p>Một kiểu của C.</p>',0,NULL,NULL),(3335,465,'1','<p>Một kiểu do người dùng định nghĩa.</p>',1,NULL,NULL),(3336,465,'2','<p>Một kiểu số nguyên hoặc số thực.</p>',2,NULL,NULL),(3337,465,'3','<p>Một kiểu chuỗi.</p>',3,NULL,NULL),(3338,467,'0','<p>typedef struct&nbsp; &lt; tên cấu trúc &gt; &lt; tên mới &gt;;</p>',0,NULL,NULL),(3339,467,'1','<p>struct&nbsp; &lt; tên mới &gt;;</p>',1,NULL,NULL),(3340,467,'2','<p>typedef&nbsp; &lt; tên cấu trúc &gt; &lt; tên mới &gt;;</p>',2,NULL,NULL),(3341,467,'3','<p>typedef &nbsp;&lt; tên mới &gt;;</p>',3,NULL,NULL),(3342,468,'0','<p>Kiểu dữ liệu có cấu trúc không được lồng nhau.</p>',0,NULL,NULL),(3343,468,'1','<p>Cấu trúc có thể lưu thông tin như 1 mảng có nhiều kiểu dữ liệu.</p>',1,NULL,NULL),(3344,468,'2','<p>Cấu trúc là một kiểu dữ liệu chứa tất cả các dữ liệu cơ bản trong C</p>',2,NULL,NULL),(3345,468,'3','<p>Sau khi định nghĩa cấu trúc, ta có thể sử dụng tùy ý mà không cần khai báo</p>',3,NULL,NULL),(3346,469,'0','<p>kq.tu=ps2.tu*ps2.mau-ps1.mau*ps2.tu;</p>',0,NULL,NULL),(3347,469,'1','<p>kq.tu=ps1.tu*ps2.mau-ps1.mau*ps1.tu;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>',1,NULL,NULL),(3348,469,'2','<p>kq.tu=ps1.mau*ps2.mau-ps1.mau*ps2.tu;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>',2,NULL,NULL),(3349,469,'3','<p>kq.tu=ps1.tu*ps2.mau-ps1.mau*ps2.tu; </p>',3,NULL,NULL),(3350,473,'0','<p>1967.</p>',0,NULL,NULL),(3351,473,'1','<p>1972.</p>',1,NULL,NULL),(3352,473,'2','<p>1970.</p>',2,NULL,NULL),(3353,473,'3','<p>1976.</p>',3,NULL,NULL),(3354,474,'0','<p>Hằng không cần khai báo còn biến phải khai báo </p>',0,NULL,NULL),(3355,474,'1','<p>Hằng và biến bắt buộc phải khai báo </p>',1,NULL,NULL),(3356,474,'2','<p>Hằng là đại lượng mà giá trị không thay đổi trong quá trình thực hiện chương trình, biến là đại lượng mà giá trị của chúng có thể thay đổi trong chương trình </p>',2,NULL,NULL),(3357,474,'3','<p>Hằng và biến là 2 đại lượng mà giá trị đều có thể thay đổi được trong quá trình thực hiện chương trình</p>',3,NULL,NULL),(3358,475,'0','<p>Sử dụng giải thuật để giải các bài toán</p>',0,NULL,NULL),(3359,475,'1','<p>Dùng máy tính để giải các bài toán</p>',1,NULL,NULL),(3360,475,'2','<p>Sử dụng cấu trúc dữ liệu và các câu lệnh của ngôn ngữ lập trình cụ thể để giải các bài toán trên máy tính</p>',2,NULL,NULL),(3361,475,'3','<p>Sử dụng ngôn ngữ C</p>',3,NULL,NULL),(3362,481,'0','<p>Là đại lượng không đổi </p>',0,NULL,NULL),(3363,481,'1','<p>Giá trị có thể thay đổi </p>',1,NULL,NULL),(3364,481,'2','<p>Tên không cần theo nguyên tắc đặt tên </p>',2,NULL,NULL),(3365,481,'3','<p>Không cần khai báo trước khi sử dụng</p>',3,NULL,NULL),(3366,534,'0','<p>Break.</p>',0,NULL,NULL),(3367,534,'1','<p>Goto.</p>',1,NULL,NULL),(3368,534,'2','<p>Continue.</p>',2,NULL,NULL),(3369,534,'3','<p>Exit.</p>',3,NULL,NULL),(3370,530,'0','<p>Lấy phần dưBàn phím</p>',0,NULL,NULL),(3371,530,'1','<p>Lấy phần nguyên</p>',1,NULL,NULL),(3372,530,'2','<p>Phép chia hết</p>',2,NULL,NULL),(3373,530,'3','<p>Lấy địa chỉ</p>',3,NULL,NULL),(3374,806,'1','<p>Thuật toán<br></p>',0,NULL,NULL),(3375,807,'0','<p>Bàn phím</p>',0,NULL,NULL),(3376,807,'1','<p>RAM</p>',1,NULL,NULL),(3377,807,'2','<p>Đĩa cứng</p>',2,NULL,NULL),(3378,807,'3','<p>Màn hình</p>',3,NULL,NULL),(3379,808,'1','<p>Độ phức tạp</p>',0,NULL,NULL),(3380,809,'1','<p>Số lượng<br></p>',0,NULL,NULL),(3381,810,'0','<p>Bàn phím</p>',0,NULL,NULL),(3382,810,'1','<p>RAM</p>',1,NULL,NULL),(3383,810,'2','<p>Đĩa cứng</p>',2,NULL,NULL),(3384,810,'3','<p>Màn hình</p>',3,NULL,NULL),(3385,811,'0','<p>Màn hình</p>',0,NULL,NULL),(3386,811,'0','<p>Bàn phím</p>',1,NULL,NULL),(3387,811,'0','<p>Đĩa cứng</p>',2,NULL,NULL),(3388,811,'0','<p>RAM</p>',3,NULL,NULL),(3389,811,'1','<p>Bộ nhớ để xử lý</p>',0,NULL,NULL),(3390,811,'1','<p>Lưu trữ thông tin</p>',1,NULL,NULL),(3391,811,'1','<p>Hiển thị</p>',2,NULL,NULL),(3392,811,'1','<p>Nhập dữ liệu</p>',3,NULL,NULL),(3393,812,'1','<p>Thuật toán<br></p>',0,NULL,NULL),(3401,818,'0','<p>Hàm do người dùng định nghĩa</p>',0,NULL,NULL),(3402,818,'1','<p>Hàm thứ cấp</p>',1,NULL,NULL),(3403,818,'2','<p>Hàm thư viện</p>',2,NULL,NULL),(3404,818,'3','<p>Hàm sơ cấp</p>',3,NULL,NULL),(3405,819,'0','<p>Biểu thức&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>',0,NULL,NULL),(3406,819,'1','<p>Biến&nbsp;&nbsp;&nbsp;&nbsp; </p>',1,NULL,NULL),(3407,819,'2','<p>Hằng&nbsp;&nbsp; </p>',2,NULL,NULL),(3408,819,'3','<p>Hàm</p>',3,NULL,NULL),(3409,820,'0','<p>(a+=b).</p>',0,NULL,NULL),(3410,820,'1','<p>(a*=b).</p>',1,NULL,NULL),(3411,820,'2','<p>(a=b).</p>',2,NULL,NULL),(3412,820,'3','<p>(a&amp;=b).</p>',3,NULL,NULL),(3413,821,'0','<p>Tính giá trị a</p>',0,NULL,NULL),(3414,821,'1','<p>Tính giá trị b</p>',1,NULL,NULL),(3415,821,'2','<p>Tìm giá trị lớn nhất trong 2 số a</p>',2,NULL,NULL),(3416,821,'3','<p>Tìm giá trị max</p>',3,NULL,NULL),(3417,822,'0','<p>Chuyển từ biến này sang biến khác trong chương trình</p>',0,NULL,NULL),(3418,822,'1','<p>Chuyển giữa các hàm trong một chương trình</p>',1,NULL,NULL),(3419,822,'2','<p>Sử dụng biến chuyển</p>',2,NULL,NULL),(3420,822,'3','<p>Chọn một trong nhiều giá trị dựa trên các giá trị khác nhau của một biến đơn</p>',3,NULL,NULL),(3421,823,'0','<p>10<br></p>',0,NULL,NULL),(3422,823,'1','<p>0<br></p>',1,NULL,NULL),(3423,823,'2','<p>2<br></p>',2,NULL,NULL),(3424,823,'3','<p>Chương trình có lỗi</p>',3,NULL,NULL),(3425,824,'0','<p>45<br></p>',0,NULL,NULL),(3426,824,'1','<p>47<br></p>',1,NULL,NULL),(3427,824,'2','<p>49<br></p>',2,NULL,NULL),(3428,824,'3','<p>51<br></p>',3,NULL,NULL),(3429,825,'0','<p>Có thể hiện thực một hàm C trong hiện thực của một hàm khác.</p>',0,NULL,NULL),(3430,825,'1','<p>Không thể hiện thực một hàm C trong hiện thực của một hàm khác.</p>',1,NULL,NULL),(3431,825,'2','<p>Các hàm trong một chương trình C khác mức nhau.</p>',2,NULL,NULL),(3432,825,'3','<p>Các hàm trong một chương trình C cùng một mức nhất định</p>',3,NULL,NULL),(3433,826,'0','<p>Đúng</p>',0,NULL,NULL),(3434,826,'1','<p>Sai<br></p>',1,NULL,NULL),(3435,826,'2','<p><br></p>',2,NULL,NULL),(3436,826,'3','<p><br></p>',3,NULL,NULL),(3437,829,'0','<p>Compilation error</p>',0,NULL,NULL),(3438,829,'1','<p>Runtime error</p>',1,NULL,NULL),(3439,829,'2','<p>Runtime exception</p>',2,NULL,NULL),(3440,829,'3','<p>b =1</p>',3,NULL,NULL),(3441,830,'0','<p>Đúng</p>',0,NULL,NULL),(3442,830,'1','<p>Sai<br></p>',1,NULL,NULL),(3443,830,'2','<p><br></p>',2,NULL,NULL),(3444,830,'3','<p><br></p>',3,NULL,NULL),(3445,831,'0','<p>Có thể đưa hàm này vào làm tham số của hàm printf</p>',0,NULL,NULL),(3446,831,'1','<p>Không thể đưa hàm này vào làm tham số của hàm printf mà phải gọi hàm bằng một phát biểu đơn.</p>',1,NULL,NULL),(3447,831,'2','<p>Phải có giá trị trả về </p>',2,NULL,NULL),(3448,831,'3','<p>Là một hàm tính toán</p>',3,NULL,NULL),(3449,832,'0','<p>Đoạn mã này là bất hợp pháp</p>',0,NULL,NULL),(3450,832,'1','<p>Lặp lại vòng mãi mãi ( It loops forever)</p>',1,NULL,NULL),(3451,832,'2','<p>Nó bị bỏ qua bởi trình duyệt, nhưng nó không phải là bất hợp pháp</p>',2,NULL,NULL),(3452,832,'3','<p>Đoạn mã là hợp pháp</p>',3,NULL,NULL),(3453,833,'0','<p>Một khả năng</p>',0,NULL,NULL),(3454,833,'1','<p>Một trong hai khả năng</p>',1,NULL,NULL),(3455,833,'2','<p>Một trong nhiều khả năng</p>',2,NULL,NULL),(3456,833,'3','<p>Không khả năng nào </p>',3,NULL,NULL),(3457,834,'0','<p>Khi biểu thức điều kiện 1 đúng, biểu thức điều kiện 2 sai</p>',0,NULL,NULL),(3458,834,'1','<p>Khi biểu thức điều kiện 1 sai, biểu thức điều kiện 2 đúng</p>',1,NULL,NULL),(3459,834,'2','<p>Khi biểu thức điều kiện 2 sai, biểu thức điều kiện 1 sai<br> </p>',2,NULL,NULL),(3460,834,'3','<p>Khi biểu thức điều kiện 1 đúng, biểu thức điều kiện 2 đúng</p>',3,NULL,NULL),(3461,835,'0','<p>12<br></p>',0,NULL,NULL),(3462,835,'1','<p>0<br></p>',1,NULL,NULL),(3463,835,'2','<p>1<br></p>',2,NULL,NULL),(3464,835,'3','<p>13<br></p>',3,NULL,NULL),(3465,836,'0','<p>hoten</p>',0,NULL,NULL),(3466,836,'1','<p>ho ten</p>',1,NULL,NULL),(3467,836,'2','<p>hoten1</p>',2,NULL,NULL),(3468,836,'3','<p>ho_ten</p>',3,NULL,NULL),(3469,837,'0','<p>8.5A&nbsp;&nbsp;&nbsp; </p>',0,NULL,NULL),(3470,837,'1','<p>9,5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>',1,NULL,NULL),(3471,837,'2','<p>&nbsp;\'False</p>',2,NULL,NULL),(3472,837,'3','<p>11.1</p>',3,NULL,NULL),(3578,903,'1','<p>Thuật toán<br></p>',0,NULL,NULL),(3579,904,'1','<p>Độ phức tạp</p>',0,NULL,NULL),(3580,905,'0','<p>a=9, b=10, p=7</p>',0,NULL,NULL),(3581,905,'1','<p>a=10, b=10, p=7</p>',1,NULL,NULL),(3582,905,'2','<p>a=10, b=10, p=10</p>',2,NULL,NULL),(3583,905,'3','<p>a=9, b=10, p=9</p>',3,NULL,NULL),(3584,905,'4','<p>a=8, b=9, p=10</p>',4,NULL,NULL),(3585,906,'0','<p>Tập các quy tắc quy định cách thức trao đổi dữ liệu giữa các thực thể tham gia mạng</p>',0,NULL,NULL),(3586,906,'1','<p>Là một tập hợp các lệnh nào đó cho phép điều khiển từ xa một máy tính</p>',1,NULL,NULL),(3587,906,'2','<p>Là cách thức hai máy tính nói chuyện với nhau</p>',2,NULL,NULL),(3588,906,'3','<p>Là cách thức để con người nói chuyện được với máy tính</p>',3,NULL,NULL),(3589,907,'0','<p>192</p>',0,NULL,NULL),(3590,907,'1','<p>194</p>',1,NULL,NULL),(3591,907,'2','<p>200</p>',2,NULL,NULL),(3592,907,'3','<p>202</p>',3,NULL,NULL),(3593,908,'0','<p>Lớp A</p>',0,NULL,NULL),(3594,908,'1','<p>Lớp&nbsp;B</p>',1,NULL,NULL),(3595,908,'2','<p>Lớp&nbsp;C</p>',2,NULL,NULL),(3596,908,'3','<p>Lớp AMàn hình</p>',3,NULL,NULL),(3597,909,'0','<p>67.9</p>',0,NULL,NULL),(3598,909,'1','<p>12.67</p>',1,NULL,NULL),(3599,909,'2','<p>190.12</p>',2,NULL,NULL),(3600,909,'3','<p>190.12.67</p>',3,NULL,NULL),(3601,910,'0','<p>Kéo dài một nhánh LAN thông qua việc khuyếch đại tín hiệu truyền đến nó</p>',0,NULL,NULL),(3602,910,'1','<p>Ngăn không cho các packets thuộc loại broadcast đi qua nó</p>',1,NULL,NULL),(3603,910,'2','<p>Giúp định tuyến cho các packets</p>',2,NULL,NULL),(3604,910,'3','<p>Kết nối nhiều máy tính lại với nhau để tạo thành một nhánh LAN (segment)</p>',3,NULL,NULL),(3605,911,'0','<p>Coax </p>',0,NULL,NULL),(3606,911,'1','<p>Fiber-optic </p>',1,NULL,NULL),(3607,911,'2','<p>1000Base-LX</p>',2,NULL,NULL),(3608,911,'3','<p>10BASE-T </p>',3,NULL,NULL),(3609,912,'0','<p>Tầng 2</p>',0,NULL,NULL),(3610,912,'1','<p>Tầng 3</p>',1,NULL,NULL),(3611,912,'2','<p>Tầng 1</p>',2,NULL,NULL),(3612,912,'3','<p>Tầng 4</p>',3,NULL,NULL),(3613,913,'0','<p>Mạng vẫn có thể làm việc được, tuy nhiên mọi truy cập đến máy hỏng bị ngừng lại</p>',0,NULL,NULL),(3614,913,'1','<p>Mạng không hoạt động nữa</p>',1,NULL,NULL),(3615,913,'2','<p>Mạng bình thường, không sao cả</p>',2,NULL,NULL),(3616,913,'3','<p>Mạng vẫn có thể làm việc được, tuy nhiên mọi máy tính không truy cập được với nhau</p>',3,NULL,NULL),(3617,914,'0','<p>T-connector</p>',0,NULL,NULL),(3618,914,'1','<p>Transceiver</p>',1,NULL,NULL),(3619,914,'2','<p>Terminator</p>',2,NULL,NULL),(3620,914,'3','<p>T-connector, Transceiver</p>',3,NULL,NULL),(3621,915,'0','<p>Transport </p>',0,NULL,NULL),(3622,915,'1','<p>Network </p>',1,NULL,NULL),(3623,915,'2','<p>Data Link </p>',2,NULL,NULL),(3624,915,'3','<p>Physical </p>',3,NULL,NULL),(3625,916,'0','<p>Điều khiển và định tuyến việc truyền tin tin cậy </p>',0,NULL,NULL),(3626,916,'1','<p>Thêm địa chỉ MAC vào gói tin</p>',1,NULL,NULL),(3627,916,'2','<p>Chuyển gói tin thành dạng Segment </p>',2,NULL,NULL),(3628,916,'3','<p>Thêm địa chỉ mạng vào gói tin </p>',3,NULL,NULL),(3629,917,'0','<p>Repeater</p>',0,NULL,NULL),(3630,917,'1','<p>Hub</p>',1,NULL,NULL),(3631,917,'2','<p>Router</p>',2,NULL,NULL),(3632,917,'3','<p>Switch</p>',3,NULL,NULL),(3633,918,'0','<p>185m</p>',0,NULL,NULL),(3634,918,'1','<p>200m<br></p>',1,NULL,NULL),(3635,918,'2','<p>250m<br></p>',2,NULL,NULL),(3636,918,'3','<p>500m<br></p>',3,NULL,NULL),(3637,919,'0','<p>192</p>',0,NULL,NULL),(3638,919,'1','<p>194</p>',1,NULL,NULL),(3639,919,'2','<p>200</p>',2,NULL,NULL),(3640,919,'3','<p>202</p>',3,NULL,NULL),(3641,920,'0','<p>5<br></p>',0,NULL,NULL),(3642,920,'1','<p>19<br></p>',1,NULL,NULL),(3643,920,'2','<p>34<br></p>',2,NULL,NULL),(3644,920,'3','<p>21<br></p>',3,NULL,NULL),(3645,921,'0','<p>Mạng vẫn hoạt động bình thường</p>',0,NULL,NULL),(3646,921,'1','<p>Mạng không thể tiếp tục hoạt động</p>',1,NULL,NULL),(3647,921,'2','<p>Mạng vẫn hoạt động bình thường ở các nhánh nhỏ</p>',2,NULL,NULL),(3648,921,'3','<p>Không sao cả, Hub xử lý trung tâm không có ý nghĩa trong mô hình sao</p>',3,NULL,NULL),(3649,922,'0','<p>Còn gọi là địa chỉ vật lý (MAC) </p>',0,NULL,NULL),(3650,922,'1','<p>Còn gọi là địa chỉ mạng </p>',1,NULL,NULL),(3651,922,'2','<p>Còn gọi là địa chỉ ảo </p>',2,NULL,NULL),(3652,922,'3','<p>Còn gọi là địa chỉ loopback </p>',3,NULL,NULL),(3653,923,'0','<p>Compilation eror</p>',0,NULL,NULL),(3654,923,'1','<p>Runtime Exception </p>',1,NULL,NULL),(3655,923,'2','<p>x is 1</p>',2,NULL,NULL),(3656,923,'3','<p>Runtime error</p>',3,NULL,NULL),(3657,924,'0','<p>class Circle derived Cylinder</p>',0,NULL,NULL),(3658,924,'1','<p>class Circle extends Cylinder</p>',1,NULL,NULL),(3659,924,'2','<p>class Cylinder extends Circle</p>',2,NULL,NULL),(3660,924,'3','<p>class Cylinder derived Circle</p>',3,NULL,NULL),(3661,925,'0','<p>B truy xuất được các thành phần private của A</p>',0,NULL,NULL),(3662,925,'1','<p>B là lớp con của A</p>',1,NULL,NULL),(3663,925,'2','<p>B truy xuất được các thành phần protected của A</p>',2,NULL,NULL),(3664,925,'3','<p>A là lớp cha của B</p>',3,NULL,NULL),(3665,926,'0','<p>Màn hình</p>',0,NULL,NULL),(3666,926,'0','<p>Bàn phím</p>',1,NULL,NULL),(3667,926,'0','<p>Đĩa cứng</p>',2,NULL,NULL),(3668,926,'0','<p>RAM</p>',3,NULL,NULL),(3669,926,'1','<p>Bộ nhớ để xử lý</p>',0,NULL,NULL),(3670,926,'1','<p>Lưu trữ thông tin</p>',1,NULL,NULL),(3671,926,'1','<p>Hiển thị</p>',2,NULL,NULL),(3672,926,'1','<p>Nhập dữ liệu</p>',3,NULL,NULL),(3673,927,'0','<p>public: có thể truy cập dữ liệu hay phương thức từ bên ngoài lớp định nghĩa</p>',0,NULL,NULL),(3674,927,'1','<p>protected: chỉ được truy cập dữ liệu hay phương thức trong bản thân lớp định nghĩa và những lớp dẫn xuất của lớp đó</p>',1,NULL,NULL),(3675,927,'2','<p>static: dữ liệu hay phương thức chung cho mọi thực thể</p>',2,NULL,NULL),(3676,927,'3','<p>private: chỉ được truy cập dữ liệu trong phương thức mà nó định nghĩa</p>',3,NULL,NULL),(3677,928,'0','<p>String x = \"Hello\"; int y = 9; x+= y;</p>',0,NULL,NULL),(3678,928,'1','<p>String x = \"Hello\"; int y = 9; x=x+y;</p>',1,NULL,NULL),(3679,928,'2','<p>String x = \"Hello\"; int y = 9; y=y+x;</p>',2,NULL,NULL),(3680,928,'3','<p>String x = null; int y = (x != null) &amp;&amp; (x.length() &gt; 0) ? x.length():0;</p>',3,NULL,NULL),(3681,929,'0','<p>false,true,false</p>',0,NULL,NULL),(3682,929,'1','<p>false, false, true</p>',1,NULL,NULL),(3683,929,'2','<p>true,false,true</p>',2,NULL,NULL),(3684,929,'3','<p>true, true,false</p>',3,NULL,NULL),(3685,930,'0','<p>&nbsp;null</p>',0,NULL,NULL),(3686,930,'1','<p>Object</p>',1,NULL,NULL),(3687,930,'2','<p>String</p>',2,NULL,NULL),(3688,930,'3','<p>Không in ra kết quả</p>',3,NULL,NULL),(3689,931,'0','<p>Cùng tên khác kiểu trả về</p>',0,NULL,NULL),(3690,931,'1','<p>Thuộc hai lớp có quan hệ kế thừa</p>',1,NULL,NULL),(3691,931,'2','<p>Thuộc cùng một lớp</p>',2,NULL,NULL),(3692,931,'3','<p>Cùng tên khác danh sách đối số</p>',3,NULL,NULL),(3693,932,'0','<p>public</p>',0,NULL,NULL),(3694,932,'1','<p>final</p>',1,NULL,NULL),(3695,932,'2','<p>abstract</p>',2,NULL,NULL),(3696,932,'3','<p>private</p>',3,NULL,NULL),(3697,933,'0','<p>45</p>',0,NULL,NULL),(3698,933,'1','<p>44</p>',1,NULL,NULL),(3699,933,'2','<p>45.0<br></p>',2,NULL,NULL),(3700,933,'3','<p>44.00<br></p>',3,NULL,NULL),(3701,934,'0','<p>0<br></p>',0,NULL,NULL),(3702,934,'1','<p>69<br></p>',1,NULL,NULL),(3703,934,'2','<p>128<br></p>',2,NULL,NULL),(3704,934,'3','<p>Lỗi Compile-time</p>',3,NULL,NULL),(3705,935,'0','<p>public</p>',0,NULL,NULL),(3706,935,'1','<p>final</p>',1,NULL,NULL),(3707,935,'2','<p>abstract</p>',2,NULL,NULL),(3708,935,'3','<p>private</p>',3,NULL,NULL),(3709,936,'0','<p>I am in the do block</p>',0,NULL,NULL),(3710,936,'1','<p>Lỗi lúc thực thi (runtime)</p>',1,NULL,NULL),(3711,936,'2','<p>Lỗi biên dịch ở dòng //4</p>',2,NULL,NULL),(3712,936,'3','<p>Không in ra gì cả</p>',3,NULL,NULL),(3713,937,'0','<p>public: có thể truy cập dữ liệu hay phương thức từ bên ngoài lớp định nghĩa</p>',0,NULL,NULL),(3714,937,'1','<p>protected: chỉ được truy cập dữ liệu hay phương thức trong bản thân lớp định nghĩa và những lớp dẫn xuất của lớp đó</p>',1,NULL,NULL),(3715,937,'2','<p>static: dữ liệu hay phương thức chung cho mọi thực thể</p>',2,NULL,NULL),(3716,937,'3','<p>private: chỉ được truy cập dữ liệu trong phương thức mà nó định nghĩa</p>',3,NULL,NULL),(3717,938,'0','<p>Một lớp có chứa phương thức <em>final</em> sẽ không cho phép thừa kế</p>',0,NULL,NULL),(3718,938,'1','<p>Một phương thức <em>final</em> thì không thể override</p>',1,NULL,NULL),(3719,938,'2','<p>Một biến <em>final</em> chỉ có thể khai báo trong một lớp final</p>',2,NULL,NULL),(3720,938,'3','<p>Một biến <em>final</em> tương &nbsp;tự như một biến static</p>',3,NULL,NULL),(3721,939,'0','<p>Lỗi biên dịch tại dòng 4</p>',0,NULL,NULL),(3722,939,'1','<p>value is Hello </p>',1,NULL,NULL),(3723,939,'2','<p>value is False </p>',2,NULL,NULL),(3724,939,'3','<p>Không có giá trị nào được in ra</p>',3,NULL,NULL),(3725,940,'0','<p>false,true,false</p>',0,NULL,NULL),(3726,940,'1','<p>false, false, true</p>',1,NULL,NULL),(3727,940,'2','<p>true,false,true</p>',2,NULL,NULL),(3728,940,'3','<p>true, true,false</p>',3,NULL,NULL),(3729,941,'0','<p>i = 6 and j = 5</p>',0,NULL,NULL),(3730,941,'1','<p>i = 5 and j = 5</p>',1,NULL,NULL),(3731,941,'2','<p>i= 6 and j = 4</p>',2,NULL,NULL),(3732,941,'3','<p>i= 5 and j = 6</p>',3,NULL,NULL),(3733,942,'0','<p>public</p>',0,NULL,NULL),(3734,942,'1','<p>final</p>',1,NULL,NULL),(3735,942,'2','<p>abstract</p>',2,NULL,NULL),(3736,942,'3','<p>private</p>',3,NULL,NULL),(3737,943,'0','<p>45</p>',0,NULL,NULL),(3738,943,'1','<p>44</p>',1,NULL,NULL),(3739,943,'2','<p>45.0<br></p>',2,NULL,NULL),(3740,943,'3','<p>44.00<br></p>',3,NULL,NULL),(3741,944,'0','<p>public</p>',0,NULL,NULL),(3742,944,'1','<p>final</p>',1,NULL,NULL),(3743,944,'2','<p>abstract</p>',2,NULL,NULL),(3744,944,'3','<p>private</p>',3,NULL,NULL),(3745,945,'0','<p>Dòng code sẽ được thực thi nhưng không xuất hiện kết quả</p>',0,NULL,NULL),(3746,945,'1','<p>Dòng code sẽ được thực thi và xuất hiện từ “true”</p>',1,NULL,NULL),(3747,945,'2','<p>Dòng code sẽ báo lỗi tại điều kiện if</p>',2,NULL,NULL),(3748,945,'3','<p>Không có phép toán &amp; trong java</p>',3,NULL,NULL),(3749,946,'0','<p>I am in the do block</p>',0,NULL,NULL),(3750,946,'1','<p>Lỗi lúc thực thi (runtime)</p>',1,NULL,NULL),(3751,946,'2','<p>Lỗi biên dịch ở dòng //4</p>',2,NULL,NULL),(3752,946,'3','<p>Không in ra gì cả</p>',3,NULL,NULL),(3753,947,'0','<p>B,SuperB,A,SuperA</p>',0,NULL,NULL),(3754,947,'1','<p>B,SuperB,B,SuperB</p>',1,NULL,NULL),(3755,947,'2','<p>A,SuperB,A,SuperA</p>',2,NULL,NULL),(3756,947,'3','<p>A,SuperA,B,SuperB</p>',3,NULL,NULL),(3757,948,'0','<p>String x = \"Hello\"; int y = 9; x+= y;</p>',0,NULL,NULL),(3758,948,'1','<p>String x = \"Hello\"; int y = 9; x=x+y;</p>',1,NULL,NULL),(3759,948,'2','<p>String x = \"Hello\"; int y = 9; y=y+x;</p>',2,NULL,NULL),(3760,948,'3','<p>String x = null; int y = (x != null) &amp;&amp; (x.length() &gt; 0) ? x.length():0;</p>',3,NULL,NULL),(3761,949,'0','<p>a=0 b=0 bArr[0]=1</p>',0,NULL,NULL),(3762,949,'1','<p>a=0 b=1 bArr[0]=1</p>',1,NULL,NULL),(3763,949,'2','<p>a=0 b=0 bArr[0]=0</p>',2,NULL,NULL),(3764,949,'3','<p>a=1 b=1 bArr[0]=1</p>',3,NULL,NULL),(3765,950,'0','<p>Dòng 4</p>',0,NULL,NULL),(3766,950,'1','<p>Dòng 5</p>',1,NULL,NULL),(3767,950,'2','<p>Dòng 6</p>',2,NULL,NULL),(3768,950,'3','<p>Dòng 7</p>',3,NULL,NULL),(3769,951,'0','<p>được truy xuất chung cho class</p>',0,NULL,NULL),(3770,951,'1','<p>chỉ được truy xuất bởi các lớp cùng một gói</p>',1,NULL,NULL),(3771,951,'2','<p>chỉ truy xuất bên trong lớp</p>',2,NULL,NULL),(3772,951,'3','<p>chỉ truy xuất bởi lớp và các lớp con của nó</p>',3,NULL,NULL),(3773,952,'0','<p>1+3</p>',0,NULL,NULL),(3774,952,'1','<p>2 +4</p>',1,NULL,NULL),(3775,952,'2','<p>4</p>',2,NULL,NULL),(3776,952,'3','<p>6<br></p>',3,NULL,NULL),(3777,953,'0','<p>45</p>',0,NULL,NULL),(3778,953,'1','<p>44</p>',1,NULL,NULL),(3779,953,'2','<p>45.0<br></p>',2,NULL,NULL),(3780,953,'3','<p>44.00<br></p>',3,NULL,NULL),(3781,954,'0','<p>45</p>',0,NULL,NULL),(3782,954,'1','<p>44</p>',1,NULL,NULL),(3783,954,'2','<p>45.0<br></p>',2,NULL,NULL),(3784,954,'3','<p>44.00<br></p>',3,NULL,NULL),(3785,955,'0','<p>public</p>',0,NULL,NULL),(3786,955,'1','<p>final</p>',1,NULL,NULL),(3787,955,'2','<p>abstract</p>',2,NULL,NULL),(3788,955,'3','<p>private</p>',3,NULL,NULL),(3789,956,'0','<p>Dòng 10 không thể biên dịch</p>',0,NULL,NULL),(3790,956,'1','<p>Dòng 11 không thể biên dịch</p>',1,NULL,NULL),(3791,956,'2','<p>Đoạn mã biên dịch thành công nhưng sẽ phát sinh Exception tại dòng 12</p>',2,NULL,NULL),(3792,956,'3','<p>Đoạn mã biên dịch thành công và có thể thi hành</p>',3,NULL,NULL),(3793,957,'0','<p>thành phần public và private của lớp cha</p>',0,NULL,NULL),(3794,957,'1','<p>thành phần private của lớp cha</p>',1,NULL,NULL),(3795,957,'2','<p>thành phần public của lớp cha</p>',2,NULL,NULL),(3796,957,'3','<p>thành phần public, protected và private của lớp cha</p>',3,NULL,NULL),(3797,958,'0','<p>ab</p>',0,NULL,NULL),(3798,958,'1','<p>ac</p>',1,NULL,NULL),(3799,958,'2','<p>ace</p>',2,NULL,NULL),(3800,958,'3','<p>bd</p>',3,NULL,NULL),(3801,959,'0','<p>ab</p>',0,NULL,NULL),(3802,959,'1','<p>ac</p>',1,NULL,NULL),(3803,959,'2','<p>ace</p>',2,NULL,NULL),(3804,959,'3','<p>bd</p>',3,NULL,NULL),(3805,960,'0','<p>được truy xuất chung cho class</p>',0,NULL,NULL),(3806,960,'1','<p>chỉ được truy xuất bởi các lớp cùng một gói</p>',1,NULL,NULL),(3807,960,'2','<p>chỉ truy xuất bên trong lớp</p>',2,NULL,NULL),(3808,960,'3','<p>chỉ truy xuất bởi lớp và các lớp con của nó</p>',3,NULL,NULL),(3809,961,'0','<p>I am in the do block</p>',0,NULL,NULL),(3810,961,'1','<p>Lỗi lúc thực thi (runtime)</p>',1,NULL,NULL),(3811,961,'2','<p>Lỗi biên dịch ở dòng //4</p>',2,NULL,NULL),(3812,961,'3','<p>Không in ra gì cả</p>',3,NULL,NULL),(3813,962,'0','<p>String x = \"Hello\"; int y = 9; x+= y;</p>',0,NULL,NULL),(3814,962,'1','<p>String x = \"Hello\"; int y = 9; x=x+y;</p>',1,NULL,NULL),(3815,962,'2','<p>String x = \"Hello\"; int y = 9; y=y+x;</p>',2,NULL,NULL),(3816,962,'3','<p>String x = null; int y = (x != null) &amp;&amp; (x.length() &gt; 0) ? x.length():0;</p>',3,NULL,NULL),(3817,963,'0','<p>Lỗi biên dịch tại dòng 4</p>',0,NULL,NULL),(3818,963,'1','<p>value is Hello </p>',1,NULL,NULL),(3819,963,'2','<p>value is False </p>',2,NULL,NULL),(3820,963,'3','<p>Không có giá trị nào được in ra</p>',3,NULL,NULL),(3821,964,'0','<p>false,true,false</p>',0,NULL,NULL),(3822,964,'1','<p>false, false, true</p>',1,NULL,NULL),(3823,964,'2','<p>true,false,true</p>',2,NULL,NULL),(3824,964,'3','<p>true, true,false</p>',3,NULL,NULL),(3825,965,'0','<p>Một kiểu của C.</p>',0,NULL,NULL),(3826,965,'1','<p>Một kiểu do người dùng định nghĩa.</p>',1,NULL,NULL),(3827,965,'2','<p>Một kiểu số nguyên hoặc số thực.</p>',2,NULL,NULL),(3828,965,'3','<p>Một kiểu chuỗi.</p>',3,NULL,NULL),(3829,966,'0','<p>Kiểu dữ liệu có cấu trúc không được lồng nhau.</p>',0,NULL,NULL),(3830,966,'1','<p>Cấu trúc có thể lưu thông tin như 1 mảng có nhiều kiểu dữ liệu.</p>',1,NULL,NULL),(3831,966,'2','<p>Cấu trúc là một kiểu dữ liệu chứa tất cả các dữ liệu cơ bản trong C</p>',2,NULL,NULL),(3832,966,'3','<p>Sau khi định nghĩa cấu trúc, ta có thể sử dụng tùy ý mà không cần khai báo</p>',3,NULL,NULL),(3833,967,'0','<p>103 DotNet.</p>',0,NULL,NULL),(3834,967,'1','<p>102 Java.</p>',1,NULL,NULL),(3835,967,'2','<p>103 PHP.</p>',2,NULL,NULL),(3836,967,'3','<p>104 DotNet.</p>',3,NULL,NULL),(3837,968,'0','<p>Ngôn ngữ B.</p>',0,NULL,NULL),(3838,968,'1','<p>Ngôn ngữ BCPL.</p>',1,NULL,NULL),(3839,968,'2','<p>Ngôn ngữ DEC PDP. </p>',2,NULL,NULL),(3840,968,'3','<p>Ngôn ngữ B và BCPL.</p>',3,NULL,NULL),(3841,969,'0','<p>Nếu sau <strong>if(ĐK)</strong> muốn thực hiện nhiều lệnh thì phải đặt các lệnh đó giữa { và }</p>',0,NULL,NULL),(3842,969,'1','<p>Nếu sau <strong>if(ĐK)</strong> muốn thực hiện nhiều lệnh thì phải đặt các lệnh đó giữa ( và ).</p>',1,NULL,NULL),(3843,969,'2','<p>Nếu sau <strong>if(ĐK)</strong> muốn thực hiện nhiều lệnh thì phải đặt câu lệnh rẽ nhánh <strong>else</strong> giữa { và }</p>',2,NULL,NULL),(3844,969,'3','<p>Nếu sau <strong>if(ĐK)</strong> muốn thực hiện nhiều lệnh thì phải thêm <strong>else</strong></p>',3,NULL,NULL),(3845,970,'0','<p>Có thể dùng cấu trúc lặp để thay cho cấu trúc rẽ nhánh trong mô tả thuật toán.</p>',0,NULL,NULL),(3846,970,'1','<p>Câu lệnh lặp không được xuất hiện trong &lt;câu lệnh&gt; đứng sau từ else của cấu trúc rẽ nhánh.</p>',1,NULL,NULL),(3847,970,'2','<p>Câu lệnh rẽ nhánh không được xuất hiện trong &lt;câu lệnh&gt; của một cấu trúc lặp.</p>',2,NULL,NULL),(3848,970,'3','<p>Một cấu trúc lặp có thể xuất hiện trong &lt;câu lệnh&gt; của một cấu trúc lặp khác.</p>',3,NULL,NULL),(3849,971,'0','<p>int HoanVi(double &amp; a,double b);</p>',0,NULL,NULL),(3850,971,'1','<p>void HoanVi(double &amp; a,double b);</p>',1,NULL,NULL),(3851,971,'2','<p>void HoanVi(double &amp; a,double &amp;b);</p>',2,NULL,NULL),(3852,971,'3','<p>int HoanVi(double &amp; a,double &amp;b);</p>',3,NULL,NULL),(3853,972,'0','<p>0 1 2 0</p>',0,NULL,NULL),(3854,972,'1','<p>0 1 2 1</p>',1,NULL,NULL),(3855,972,'2','<p>1 2 0 1</p>',2,NULL,NULL),(3856,972,'3','<p>0 2 1 1</p>',3,NULL,NULL),(3857,973,'0','<p>Static</p>',0,NULL,NULL),(3858,973,'1','<p>Private</p>',1,NULL,NULL),(3859,973,'2','<p>Default</p>',2,NULL,NULL),(3860,973,'3','<p>Cả a,b,c đều đúng</p>',3,NULL,NULL),(3861,974,'0','<p>kq.tu=ps2.tu*ps2.mau-ps1.mau*ps2.tu;</p>',0,NULL,NULL),(3862,974,'1','<p>kq.tu=ps1.tu*ps2.mau-ps1.mau*ps1.tu;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>',1,NULL,NULL),(3863,974,'2','<p>kq.tu=ps1.mau*ps2.mau-ps1.mau*ps2.tu;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>',2,NULL,NULL),(3864,974,'3','<p>kq.tu=ps1.tu*ps2.mau-ps1.mau*ps2.tu; </p>',3,NULL,NULL),(3865,975,'0','<p>hoten</p>',0,NULL,NULL),(3866,975,'1','<p>ho ten</p>',1,NULL,NULL),(3867,975,'2','<p>hoten1</p>',2,NULL,NULL),(3868,975,'3','<p>ho_ten</p>',3,NULL,NULL),(3869,976,'0','<p>0<br></p>',0,NULL,NULL),(3870,976,'1','<p>1<br></p>',1,NULL,NULL),(3871,976,'2','<p>20<br></p>',2,NULL,NULL),(3872,976,'3','<p>Bị lỗi</p>',3,NULL,NULL),(3873,977,'0','<p>\"%f\"</p>',0,NULL,NULL),(3874,977,'1','<p>\"%x\"</p>',1,NULL,NULL),(3875,977,'2','<p>\"%s\"</p>',2,NULL,NULL),(3876,977,'3','<p>\"%c\"</p>',3,NULL,NULL),(3877,978,'0','<p>Số học, luận lý, so sánh .</p>',0,NULL,NULL),(3878,978,'1','<p>Luận lý, số học, so sánh.</p>',1,NULL,NULL),(3879,978,'2','<p>Số học, so sánh, luận lý.</p>',2,NULL,NULL),(3880,978,'3','<p>Luận lý, so sánh, số học.</p>',3,NULL,NULL),(3881,979,'0','<p>0 </p>',0,NULL,NULL),(3882,979,'1','<p>1<br></p>',1,NULL,NULL),(3883,979,'2','<p>2<br></p>',2,NULL,NULL),(3884,979,'3','<p>3<br></p>',3,NULL,NULL),(3885,980,'0','<p>“&nbsp; 1&nbsp; 2&nbsp; 3&nbsp; 4”</p>',0,NULL,NULL),(3886,980,'1','<p>“&nbsp; 4”</p>',1,NULL,NULL),(3887,980,'2','<p>“&nbsp; 3”</p>',2,NULL,NULL),(3888,980,'3','<p>“&nbsp; 1&nbsp; 2&nbsp; 3”</p>',3,NULL,NULL),(3889,981,'0','<p>Nhập một chuỗi</p>',0,NULL,NULL),(3890,981,'1','<p>Loại bỏ khoảng trắng trong 1 chuỗi</p>',1,NULL,NULL),(3891,981,'2','<p>Xuất chuỗi ra màn hình</p>',2,NULL,NULL),(3892,981,'3','<p>Trả về độ dài của 1 chuỗi</p>',3,NULL,NULL),(3893,982,'0','<p>Đúng</p>',0,NULL,NULL),(3894,982,'1','<p>Sai</p>',1,NULL,NULL),(3895,982,'2','<p><br></p>',2,NULL,NULL),(3896,982,'3','<p><br></p>',3,NULL,NULL),(3897,983,'0','<p>Bàn phím</p>',0,NULL,NULL),(3898,983,'1','<p>RAM</p>',1,NULL,NULL),(3899,983,'2','<p>Đĩa cứng</p>',2,NULL,NULL),(3900,983,'3','<p>Màn hình</p>',3,NULL,NULL),(3901,984,'0','<p>O(1)</p>',0,NULL,NULL),(3902,984,'1','<p>O(n)</p>',1,NULL,NULL),(3903,984,'2','<p>O(n<sup>2</sup>)</p>',2,NULL,NULL),(3904,984,'3','<p>O(2<sup>n</sup>)</p>',3,NULL,NULL),(3905,985,'0','<p>Có thể đưa hàm này vào làm tham số của hàm printf</p>',0,NULL,NULL),(3906,985,'1','<p>Không thể đưa hàm này vào làm tham số của hàm printf mà phải gọi hàm bằng một phát biểu đơn.</p>',1,NULL,NULL),(3907,985,'2','<p>Phải có giá trị trả về </p>',2,NULL,NULL),(3908,985,'3','<p>Là một hàm tính toán</p>',3,NULL,NULL),(3909,986,'1','<p>Thuật toán<br></p>',0,NULL,NULL),(3910,987,'0','<p>int *t</p>',0,NULL,NULL),(3911,987,'1','<p>int *y</p>',1,NULL,NULL),(3912,987,'2','<p>int y</p>',2,NULL,NULL),(3913,987,'3','<p>int &amp;y</p>',3,NULL,NULL),(3914,988,'0','<p>Quick sort</p>',0,NULL,NULL),(3915,988,'1','<p>Insertion sort</p>',1,NULL,NULL),(3916,988,'2','<p>Bubble sort</p>',2,NULL,NULL),(3917,988,'3','<p>Selection sort</p>',3,NULL,NULL);

/*Table structure for table `question_item_info` */

DROP TABLE IF EXISTS `question_item_info`;

CREATE TABLE `question_item_info` (
  `question_item_info_id` int(11) NOT NULL AUTO_INCREMENT,
  `item_id` int(11) DEFAULT NULL,
  `question_item_info_prop` char(20) COLLATE utf8_unicode_ci NOT NULL,
  `question_item_info_value` text COLLATE utf8_unicode_ci NOT NULL,
  `question_item_info_desc` text COLLATE utf8_unicode_ci,
  PRIMARY KEY (`question_item_info_id`),
  KEY `fk_information_of_items` (`item_id`),
  CONSTRAINT `fk_information_of_items` FOREIGN KEY (`item_id`) REFERENCES `question_item` (`item_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `question_item_info` */

/*Table structure for table `question_taker_comment` */

DROP TABLE IF EXISTS `question_taker_comment`;

CREATE TABLE `question_taker_comment` (
  `question_taker_comment_id` int(11) NOT NULL AUTO_INCREMENT,
  `test_taker_comment_id` int(11) DEFAULT NULL,
  `question_id` int(11) DEFAULT NULL,
  `question_taker_comment_date` date DEFAULT NULL,
  `question_taker_comment_time` time DEFAULT NULL,
  `question_taker_comment_desc` text COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`question_taker_comment_id`),
  KEY `fk_question_in_the_mapping_with_taker_comment` (`question_id`),
  KEY `fk_taker_comment_in_the_mapping_with_question` (`test_taker_comment_id`),
  CONSTRAINT `fk_question_in_the_mapping_with_taker_comment` FOREIGN KEY (`question_id`) REFERENCES `question` (`question_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_taker_comment_in_the_mapping_with_question` FOREIGN KEY (`test_taker_comment_id`) REFERENCES `test_taker_comment` (`test_taker_comment_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `question_taker_comment` */

/*Table structure for table `question_taker_comment_relationship` */

DROP TABLE IF EXISTS `question_taker_comment_relationship`;

CREATE TABLE `question_taker_comment_relationship` (
  `question_taker_comment_relationship_id` int(11) NOT NULL AUTO_INCREMENT,
  `parent_question_taker_comment_id` int(11) DEFAULT NULL,
  `child_question_taker_comment_id` int(11) DEFAULT NULL,
  `question_taker_comment_relationship_desc` text COLLATE utf8_unicode_ci,
  PRIMARY KEY (`question_taker_comment_relationship_id`),
  KEY `fk_child_of_question_taker_comment_relationship` (`child_question_taker_comment_id`),
  KEY `fk_parent_of_question_taker_comment_relationship` (`parent_question_taker_comment_id`),
  CONSTRAINT `fk_child_of_question_taker_comment_relationship` FOREIGN KEY (`child_question_taker_comment_id`) REFERENCES `question_taker_comment` (`question_taker_comment_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_parent_of_question_taker_comment_relationship` FOREIGN KEY (`parent_question_taker_comment_id`) REFERENCES `question_taker_comment` (`question_taker_comment_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `question_taker_comment_relationship` */

/*Table structure for table `question_topic_map` */

DROP TABLE IF EXISTS `question_topic_map`;

CREATE TABLE `question_topic_map` (
  `question_topic_map_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `question_id` int(11) NOT NULL,
  `topic_id` int(11) NOT NULL,
  PRIMARY KEY (`question_topic_map_id`),
  KEY `question_id` (`question_id`),
  KEY `topic_id` (`topic_id`),
  CONSTRAINT `question_topic_map_ibfk_1` FOREIGN KEY (`question_id`) REFERENCES `question` (`question_id`),
  CONSTRAINT `question_topic_map_ibfk_2` FOREIGN KEY (`topic_id`) REFERENCES `topic` (`topic_id`)
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `question_topic_map` */

insert  into `question_topic_map`(`question_topic_map_id`,`question_id`,`topic_id`) values (1,55,1),(2,54,1),(3,62,1),(4,64,1),(10,53,2),(11,54,2),(12,56,2),(13,57,2),(14,58,2);

/*Table structure for table `question_type_dict` */

DROP TABLE IF EXISTS `question_type_dict`;

CREATE TABLE `question_type_dict` (
  `question_type_id` int(11) NOT NULL AUTO_INCREMENT,
  `question_type_code` char(20) COLLATE utf8_unicode_ci NOT NULL,
  `question_type_desc` text COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`question_type_id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='dictionary of question types\n';

/*Data for the table `question_type_dict` */

insert  into `question_type_dict`(`question_type_id`,`question_type_code`,`question_type_desc`) values (1,'Choice',''),(2,'Fill',''),(3,'Order',''),(4,'Match','');

/*Table structure for table `role` */

DROP TABLE IF EXISTS `role`;

CREATE TABLE `role` (
  `role_id` int(11) NOT NULL AUTO_INCREMENT,
  `role_code` char(100) COLLATE utf8_unicode_ci NOT NULL,
  `role_desc` text COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`role_id`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `role` */

insert  into `role`(`role_id`,`role_code`,`role_desc`) values (1,'Student','Sinh viên'),(2,'Lecturer','Giảng viên'),(3,'Department','Trưởng bộ môn'),(4,'Faculty','Trưởng khoa'),(5,'Administrator','Quản trị hệ thống');

/*Table structure for table `role_previlege_map` */

DROP TABLE IF EXISTS `role_previlege_map`;

CREATE TABLE `role_previlege_map` (
  `role_previlege_map_id` int(11) NOT NULL AUTO_INCREMENT,
  `role_id` int(11) DEFAULT NULL,
  `previlege_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`role_previlege_map_id`),
  KEY `fk_previlege_of_roles` (`previlege_id`),
  KEY `fk_role_of_previlege` (`role_id`),
  CONSTRAINT `fk_previlege_of_roles` FOREIGN KEY (`previlege_id`) REFERENCES `previlege` (`previlege_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_role_of_previlege` FOREIGN KEY (`role_id`) REFERENCES `role` (`role_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=534 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `role_previlege_map` */

insert  into `role_previlege_map`(`role_previlege_map_id`,`role_id`,`previlege_id`) values (1,3,1),(2,4,1),(3,3,10),(4,4,10),(5,2,100),(6,2,101),(7,2,102),(8,2,103),(9,2,104),(10,2,105),(11,2,106),(12,2,107),(13,2,108),(14,2,109),(15,3,11),(16,4,11),(17,2,110),(18,2,111),(19,2,112),(20,2,113),(21,2,114),(22,2,115),(23,2,116),(24,3,117),(25,4,117),(26,3,118),(27,4,118),(28,1,119),(29,2,119),(30,3,119),(31,4,119),(32,3,12),(33,4,12),(34,3,120),(35,4,120),(36,3,121),(37,4,121),(38,3,122),(39,4,122),(40,1,123),(41,2,123),(42,3,123),(43,4,123),(44,3,124),(45,4,124),(46,3,125),(47,4,125),(48,3,126),(49,4,126),(50,3,127),(51,4,127),(52,2,128),(53,2,129),(54,2,13),(55,2,130),(56,2,131),(57,3,131),(58,4,131),(59,1,132),(60,2,132),(61,3,132),(62,4,132),(63,2,133),(64,2,134),(65,2,135),(66,2,136),(67,2,137),(68,2,138),(69,2,139),(70,3,139),(71,4,139),(72,2,14),(73,2,140),(74,3,140),(75,4,140),(76,1,141),(77,2,141),(78,3,141),(79,4,141),(80,2,142),(81,3,142),(82,4,142),(83,2,143),(84,3,143),(85,4,143),(86,2,144),(87,3,144),(88,4,144),(89,2,145),(90,3,145),(91,4,145),(92,2,146),(93,3,146),(94,4,146),(95,3,147),(96,4,147),(97,3,148),(98,4,148),(99,2,149),(100,3,149),(101,4,149),(102,2,15),(103,3,15),(104,4,15),(105,2,150),(106,2,151),(107,3,151),(108,4,151),(109,2,152),(110,3,152),(111,4,152),(112,3,153),(113,4,153),(114,2,154),(115,3,154),(116,4,154),(117,1,155),(118,1,156),(119,3,157),(120,4,157),(121,2,158),(122,3,158),(123,4,158),(124,2,159),(125,2,16),(126,3,16),(127,4,16),(128,2,160),(129,1,161),(130,2,161),(131,2,162),(132,2,163),(133,2,164),(134,2,165),(135,2,166),(136,3,167),(137,4,167),(138,3,168),(139,4,168),(140,3,169),(141,4,169),(142,3,17),(143,4,17),(144,3,170),(145,4,170),(146,3,171),(147,4,171),(148,1,172),(149,2,172),(150,3,172),(151,4,172),(152,3,173),(153,4,173),(154,3,174),(155,4,174),(156,3,175),(157,4,175),(158,1,176),(159,2,176),(160,3,176),(161,4,176),(162,3,177),(163,4,177),(164,3,178),(165,4,178),(166,3,179),(167,4,179),(168,3,18),(169,4,18),(170,3,180),(171,4,180),(172,2,181),(173,3,181),(174,4,181),(175,3,182),(176,4,182),(177,3,183),(178,4,183),(179,2,19),(180,3,19),(181,4,19),(182,3,2),(183,4,2),(184,3,20),(185,4,20),(186,3,21),(187,4,21),(188,3,22),(189,4,22),(190,3,23),(191,4,23),(192,3,24),(193,4,24),(194,3,25),(195,4,25),(196,2,26),(197,3,26),(198,4,26),(199,3,27),(200,4,27),(201,2,28),(202,3,28),(203,4,28),(204,2,29),(205,3,3),(206,4,3),(207,2,30),(208,2,31),(209,2,32),(210,2,33),(211,3,33),(212,4,33),(213,2,34),(214,3,34),(215,4,34),(216,2,35),(217,3,35),(218,4,35),(219,2,36),(220,3,36),(221,4,36),(222,2,37),(223,3,37),(224,4,37),(225,1,38),(226,2,38),(227,3,38),(228,4,38),(229,2,39),(230,3,39),(231,4,39),(232,3,4),(233,4,4),(234,2,40),(235,3,40),(236,4,40),(237,3,41),(238,4,41),(239,3,42),(240,4,42),(241,3,43),(242,4,43),(243,3,44),(244,4,44),(245,1,45),(246,2,45),(247,3,45),(248,4,45),(249,2,46),(250,3,46),(251,4,46),(252,2,47),(253,3,47),(254,4,47),(255,2,48),(256,3,48),(257,4,48),(258,2,49),(259,3,49),(260,4,49),(261,3,5),(262,4,5),(263,4,50),(264,4,51),(265,1,52),(266,2,52),(267,3,52),(268,4,52),(269,4,53),(270,3,54),(271,4,54),(272,2,55),(273,3,55),(274,4,55),(275,3,56),(276,4,56),(277,3,57),(278,4,57),(279,3,58),(280,4,58),(281,2,59),(282,3,59),(283,4,59),(284,3,6),(285,4,6),(286,2,60),(287,3,60),(288,4,60),(289,2,61),(290,3,61),(291,4,61),(292,2,62),(293,3,62),(294,4,62),(295,3,63),(296,4,63),(297,2,64),(298,3,64),(299,4,64),(300,2,65),(301,3,65),(302,4,65),(303,3,66),(304,4,66),(305,2,67),(306,1,68),(307,1,69),(308,3,7),(309,4,7),(310,1,70),(311,1,71),(312,4,72),(313,4,73),(314,1,74),(315,2,74),(316,3,74),(317,4,74),(318,4,75),(319,2,76),(320,3,76),(321,4,76),(322,2,77),(323,3,77),(324,4,77),(325,2,78),(326,2,79),(327,3,8),(328,4,8),(329,2,80),(330,2,81),(331,2,82),(332,2,83),(333,2,84),(334,2,85),(335,2,86),(336,2,87),(337,2,88),(338,2,89),(339,3,9),(340,4,9),(341,2,90),(342,2,91),(343,2,92),(344,2,93),(345,2,94),(346,2,95),(347,2,96),(348,2,97),(349,2,98),(350,2,99),(351,5,1),(352,5,2),(353,5,3),(354,5,4),(355,5,5),(356,5,6),(357,5,7),(358,5,8),(359,5,9),(360,5,10),(361,5,11),(362,5,12),(363,5,13),(364,5,14),(365,5,15),(366,5,16),(367,5,17),(368,5,18),(369,5,19),(370,5,20),(371,5,21),(372,5,22),(373,5,23),(374,5,24),(375,5,25),(376,5,26),(377,5,27),(378,5,28),(379,5,29),(380,5,30),(381,5,31),(382,5,32),(383,5,33),(384,5,34),(385,5,35),(386,5,36),(387,5,37),(388,5,38),(389,5,39),(390,5,40),(391,5,41),(392,5,42),(393,5,43),(394,5,44),(395,5,45),(396,5,46),(397,5,47),(398,5,48),(399,5,49),(400,5,50),(401,5,51),(402,5,52),(403,5,53),(404,5,54),(405,5,55),(406,5,56),(407,5,57),(408,5,58),(409,5,59),(410,5,60),(411,5,61),(412,5,62),(413,5,63),(414,5,64),(415,5,65),(416,5,66),(417,5,67),(418,5,68),(419,5,69),(420,5,70),(421,5,71),(422,5,72),(423,5,73),(424,5,74),(425,5,75),(426,5,76),(427,5,77),(428,5,78),(429,5,79),(430,5,80),(431,5,81),(432,5,82),(433,5,83),(434,5,84),(435,5,85),(436,5,86),(437,5,87),(438,5,88),(439,5,89),(440,5,90),(441,5,91),(442,5,92),(443,5,93),(444,5,94),(445,5,95),(446,5,96),(447,5,97),(448,5,98),(449,5,99),(450,5,100),(451,5,101),(452,5,102),(453,5,103),(454,5,104),(455,5,105),(456,5,106),(457,5,107),(458,5,108),(459,5,109),(460,5,110),(461,5,111),(462,5,112),(463,5,113),(464,5,114),(465,5,115),(466,5,116),(467,5,117),(468,5,118),(469,5,119),(470,5,120),(471,5,121),(472,5,122),(473,5,123),(474,5,124),(475,5,125),(476,5,126),(477,5,127),(478,5,128),(479,5,129),(480,5,130),(481,5,131),(482,5,132),(483,5,133),(484,5,134),(485,5,135),(486,5,136),(487,5,137),(488,5,138),(489,5,139),(490,5,140),(491,5,141),(492,5,142),(493,5,143),(494,5,144),(495,5,145),(496,5,146),(497,5,147),(498,5,148),(499,5,149),(500,5,150),(501,5,151),(502,5,152),(503,5,153),(504,5,154),(505,5,155),(506,5,156),(507,5,157),(508,5,158),(509,5,159),(510,5,160),(511,5,161),(512,5,162),(513,5,163),(514,5,164),(515,5,165),(516,5,166),(517,5,167),(518,5,168),(519,5,169),(520,5,170),(521,5,171),(522,5,172),(523,5,173),(524,5,174),(525,5,175),(526,5,176),(527,5,177),(528,5,178),(529,5,179),(530,5,180),(531,5,181),(532,5,182),(533,5,183);

/*Table structure for table `so_comment` */

DROP TABLE IF EXISTS `so_comment`;

CREATE TABLE `so_comment` (
  `so_comment_id` int(11) NOT NULL AUTO_INCREMENT,
  `program_comment_id` int(11) DEFAULT NULL,
  `so_id` int(11) DEFAULT NULL,
  `program_decision_id` int(11) DEFAULT NULL,
  `so_comment_date` date NOT NULL,
  `so_comment_time` time DEFAULT NULL,
  `so_comment_desc` text COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`so_comment_id`),
  KEY `fk_relation_between_program_decision_and_so_comment` (`program_decision_id`),
  KEY `fk_relation_between_student_outcome_and_so_comment` (`so_id`),
  KEY `fk_so_comment_inside_of_program_comment` (`program_comment_id`),
  CONSTRAINT `fk_relation_between_program_decision_and_so_comment` FOREIGN KEY (`program_decision_id`) REFERENCES `program_decision` (`program_decision_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_relation_between_student_outcome_and_so_comment` FOREIGN KEY (`so_id`) REFERENCES `student_outcome_item` (`soi_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_so_comment_inside_of_program_comment` FOREIGN KEY (`program_comment_id`) REFERENCES `program_comment` (`program_comment_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `so_comment` */

/*Table structure for table `so_comment_relationship` */

DROP TABLE IF EXISTS `so_comment_relationship`;

CREATE TABLE `so_comment_relationship` (
  `so_comment_relationship_id` int(11) NOT NULL AUTO_INCREMENT,
  `parent_so_comment_id` int(11) DEFAULT NULL,
  `child_so_comment_id` int(11) DEFAULT NULL,
  `so_comment_relationship_desc` text COLLATE utf8_unicode_ci,
  PRIMARY KEY (`so_comment_relationship_id`),
  KEY `fk_child_of_so_comment_relationship` (`child_so_comment_id`),
  KEY `fk_parent_of_so_comment_relationship` (`parent_so_comment_id`),
  CONSTRAINT `fk_child_of_so_comment_relationship` FOREIGN KEY (`child_so_comment_id`) REFERENCES `so_comment` (`so_comment_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_parent_of_so_comment_relationship` FOREIGN KEY (`parent_so_comment_id`) REFERENCES `so_comment` (`so_comment_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `so_comment_relationship` */

/*Table structure for table `student_outcome` */

DROP TABLE IF EXISTS `student_outcome`;

CREATE TABLE `student_outcome` (
  `so_id` int(11) NOT NULL AUTO_INCREMENT,
  `edu_program_id` int(11) DEFAULT NULL,
  `so_code` char(10) COLLATE utf8_unicode_ci NOT NULL,
  `so_date` date NOT NULL,
  `so_isused` tinyint(1) NOT NULL,
  PRIMARY KEY (`so_id`),
  KEY `fk_student_outcome_version_of_program` (`edu_program_id`),
  CONSTRAINT `fk_student_outcome_version_of_program` FOREIGN KEY (`edu_program_id`) REFERENCES `educational_program` (`edu_program_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `student_outcome` */

insert  into `student_outcome`(`so_id`,`edu_program_id`,`so_code`,`so_date`,`so_isused`) values (1,2,'SO2016','2016-01-10',1),(2,1,'a01','2016-01-11',1),(3,1,'a02','2016-01-11',0),(4,3,'01','2016-01-16',1);

/*Table structure for table `student_outcome_item` */

DROP TABLE IF EXISTS `student_outcome_item`;

CREATE TABLE `student_outcome_item` (
  `soi_id` int(11) NOT NULL AUTO_INCREMENT,
  `so_id` int(11) DEFAULT NULL,
  `soi_code` char(2) COLLATE utf8_unicode_ci NOT NULL COMMENT 'examples: a-k in abet''s recommendation\n            ',
  `soi_desc_vn` text COLLATE utf8_unicode_ci NOT NULL,
  `soi_desc_en` text COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`soi_id`),
  KEY `fk_student_outcomes_of_versions` (`so_id`),
  CONSTRAINT `fk_student_outcomes_of_versions` FOREIGN KEY (`so_id`) REFERENCES `student_outcome` (`so_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `student_outcome_item` */

insert  into `student_outcome_item`(`soi_id`,`so_id`,`soi_code`,`soi_desc_vn`,`soi_desc_en`) values (1,1,'a','<p>Luat so 1</p>','<p>Rule #1</p>'),(3,4,'a','<p>Một khả năng áp dụng kiến ​​thức về tin học và toán học phù hợp với môn học; m</p>','<p>An ability to apply knowledge of computing and mathematics appropriate to the discipline;</p>'),(4,4,'b','<p>Có khả năng để phân tích một vấn đề, và xác định và định nghĩa các yêu cầu tính toán&nbsp;thích hợp cho giải pháp của mình;</p>','<p>An ability to analyze a problem, and identify and define the computing requirements&nbsp;appropriate to its solution;</p>'),(5,4,'c','<p>Có khả năng thiết kế, thực hiện và đánh giá một hệ thống dựa trên máy tính, quá trình,&nbsp;thành phần, hoặc chương trình để đáp ứng nhu cầu mong muốn;</p>','<p>An ability to design, implement and evaluate a computer-based system, process,&nbsp;component, or program to meet desired needs;</p>'),(6,4,'d','<p>Có khả năng phối họp nhóm để hoàn thành một mục tiêu chung;</p>','<p>&nbsp;An ability to function effectively on teams to accomplish a common goal;﻿</p>'),(7,4,'e','<p>Sự hiểu biết về chuyên môn, đạo đức, pháp luật, an ninh, và các vấn đề xã hội và trách nhiệm;</p>','<p>&nbsp;An understanding of professional, ethical, legal, security, and social issues and responsibilities;</p>'),(8,4,'f','<p>Có khả năng giao tiếp hiệu quả với một loạt các đối tượng;</p>','<p>An ability to communicate effectively with a range of audiences;</p>'),(9,4,'g','<p>Có khả năng phân tích ảnh hưởng tính toán cục bộ đến cá nhân, tổ chức và xã hội;</p>','<p>An ability to analyze the local and global impact of computing on individuals,&nbsp;organizations and society;</p>'),(10,4,'h','<p>Xác định nhu cầu, và khả năng hội nhập môi trường phát triển chuyên nghiệp</p>','<p>Recognition of the need for, and an ability to engage in, continuing professional&nbsp;development;</p>'),(11,4,'i','<p>Một khả năng sử dụng các kỹ thuật hiện nay, kỹ năng và công cụ cần thiết thực hành máy tính.</p>','<p>An ability to use current techniques, skills, and tools necessary for computing practices</p>'),(12,4,'j','<p>Một khả năng áp dụng cơ sở toán học, nguyên tắc thuật toán, và lý thuyết khoa học trong việc mô hình hóa và thiết kế các hệ thống &nbsp;trên máy tính&nbsp;</p>','<p>An ability to apply mathematical foundations, algorithmic principles, and computer science theory in the modeling and design of computer-based systems in a way that demonstrates comprehension of the tradeoffs involved in design choices;</p>'),(13,4,'k','<p>Một khả năng áp dụng thiết kế và phát triển các nguyên tắc trong việc xây dựng các phần mềm&nbsp;các hệ thống phức tạp khác nhau.</p>','<p>An ability to apply design and development principles in the construction of software&nbsp;systems of varying complexity.</p>');

/*Table structure for table `taker_solution` */

DROP TABLE IF EXISTS `taker_solution`;

CREATE TABLE `taker_solution` (
  `taker_solution_id` int(11) NOT NULL AUTO_INCREMENT,
  `taker_test_map_id` int(11) DEFAULT NULL,
  `question_id` int(11) DEFAULT NULL,
  `mark_max` int(11) DEFAULT NULL,
  `mark_cur` int(11) DEFAULT NULL,
  PRIMARY KEY (`taker_solution_id`),
  KEY `fk_question_of_a_solution` (`question_id`),
  KEY `fk_solution_of_taker_for_his_her_questions` (`taker_test_map_id`),
  CONSTRAINT `fk_question_of_a_solution` FOREIGN KEY (`question_id`) REFERENCES `question` (`question_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_solution_of_taker_for_his_her_questions` FOREIGN KEY (`taker_test_map_id`) REFERENCES `taker_test_map` (`taker_test_map_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=7193 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `taker_solution` */

insert  into `taker_solution`(`taker_solution_id`,`taker_test_map_id`,`question_id`,`mark_max`,`mark_cur`) values (19,2,267,1,NULL),(20,2,268,1,NULL),(21,2,269,1,NULL),(22,2,270,1,NULL),(23,2,272,1,NULL),(24,2,273,1,NULL),(25,2,271,1,NULL),(26,2,275,1,NULL),(27,2,274,1,NULL),(63,13,304,1,NULL),(64,13,305,1,NULL),(65,13,306,1,NULL),(66,13,307,1,NULL),(83,11,304,1,NULL),(84,11,305,1,NULL),(85,11,306,1,NULL),(86,11,307,1,NULL),(87,10,300,1,NULL),(88,10,299,1,NULL),(89,10,301,1,NULL),(90,10,302,1,NULL),(91,16,308,1,NULL),(92,16,309,1,NULL),(93,16,310,1,NULL),(94,16,311,1,NULL),(95,16,312,1,NULL),(96,16,313,1,NULL),(97,16,314,1,NULL),(98,17,308,1,NULL),(99,17,309,1,NULL),(100,17,310,1,NULL),(101,17,311,1,NULL),(102,17,312,1,NULL),(103,17,313,1,NULL),(104,17,314,1,NULL),(131,18,316,1,NULL),(132,18,317,1,NULL),(133,18,318,1,NULL),(139,1,249,1,1),(140,1,250,1,1),(141,1,252,1,1),(142,1,253,1,1),(143,1,254,1,0),(144,1,255,1,0),(145,1,256,1,0),(146,1,257,1,0),(147,1,258,1,1),(148,1,259,1,1),(149,1,260,1,0),(150,1,261,1,1),(151,1,262,1,1),(152,1,263,1,1),(153,1,264,1,0),(154,1,265,1,0),(155,1,266,1,0),(160,3,240,1,0),(161,3,241,1,0),(162,3,242,1,1),(163,3,243,1,1),(250,21,240,1,0),(251,21,241,1,0),(252,21,242,1,1),(253,21,243,1,0),(254,22,240,1,1),(255,22,241,1,1),(256,22,242,1,1),(257,22,243,1,1),(258,23,240,1,0),(259,23,241,1,1),(260,23,242,1,1),(261,23,243,1,1),(262,24,240,1,0),(263,24,241,1,1),(264,24,242,1,1),(265,24,243,1,0),(266,25,240,1,1),(267,25,241,1,0),(268,25,242,1,1),(269,25,243,1,1),(270,26,240,1,0),(271,26,241,1,1),(272,26,242,1,1),(273,26,243,1,0),(274,27,240,1,0),(275,27,241,1,1),(276,27,242,1,1),(277,27,243,1,1),(278,28,240,1,1),(279,28,241,1,0),(280,28,242,1,0),(281,28,243,1,1),(282,29,240,1,0),(283,29,241,1,0),(284,29,242,1,0),(285,29,243,1,1),(286,30,240,1,0),(287,30,241,1,1),(288,30,242,1,1),(289,30,243,1,0),(290,31,240,1,0),(291,31,241,1,1),(292,31,242,1,1),(293,31,243,1,0),(294,32,240,1,1),(295,32,241,1,1),(296,32,242,1,0),(297,32,243,1,1),(298,33,240,1,0),(299,33,241,1,1),(300,33,242,1,0),(301,33,243,1,1),(302,34,240,1,1),(303,34,241,1,0),(304,34,242,1,1),(305,34,243,1,1),(306,35,240,1,1),(307,35,241,1,0),(308,35,242,1,1),(309,35,243,1,1),(310,36,240,1,0),(311,36,241,1,0),(312,36,242,1,0),(313,36,243,1,0),(314,37,240,1,1),(315,37,241,1,0),(316,37,242,1,1),(317,37,243,1,0),(318,38,240,1,0),(319,38,241,1,0),(320,38,242,1,0),(321,38,243,1,1),(322,39,240,1,0),(323,39,241,1,0),(324,39,242,1,1),(325,39,243,1,0),(326,40,240,1,1),(327,40,241,1,1),(328,40,242,1,0),(329,40,243,1,0),(330,41,240,1,1),(331,41,241,1,1),(332,41,242,1,1),(333,41,243,1,1),(334,42,240,1,0),(335,42,241,1,0),(336,42,242,1,0),(337,42,243,1,0),(338,43,240,1,0),(339,43,241,1,1),(340,43,242,1,0),(341,43,243,1,1),(342,44,240,1,0),(343,44,241,1,1),(344,44,242,1,1),(345,44,243,1,1),(346,45,240,1,1),(347,45,241,1,1),(348,45,242,1,0),(349,45,243,1,1),(350,46,240,1,0),(351,46,241,1,0),(352,46,242,1,0),(353,46,243,1,0),(354,47,244,1,0),(355,47,245,1,1),(356,47,246,1,0),(357,47,247,1,1),(358,47,248,1,0),(359,48,244,1,0),(360,48,245,1,1),(361,48,246,1,0),(362,48,247,1,0),(363,48,248,1,1),(364,49,244,1,0),(365,49,245,1,0),(366,49,246,1,1),(367,49,247,1,1),(368,49,248,1,0),(369,50,244,1,1),(370,50,245,1,0),(371,50,246,1,0),(372,50,247,1,0),(373,50,248,1,0),(374,51,244,1,1),(375,51,245,1,0),(376,51,246,1,0),(377,51,247,1,0),(378,51,248,1,0),(379,52,244,1,1),(380,52,245,1,0),(381,52,246,1,0),(382,52,247,1,0),(383,52,248,1,0),(384,53,244,1,1),(385,53,245,1,1),(386,53,246,1,1),(387,53,247,1,0),(388,53,248,1,1),(389,54,244,1,1),(390,54,245,1,0),(391,54,246,1,1),(392,54,247,1,0),(393,54,248,1,1),(394,55,244,1,1),(395,55,245,1,0),(396,55,246,1,0),(397,55,247,1,0),(398,55,248,1,0),(399,56,244,1,1),(400,56,245,1,1),(401,56,246,1,1),(402,56,247,1,0),(403,56,248,1,0),(404,57,244,1,1),(405,57,245,1,0),(406,57,246,1,1),(407,57,247,1,0),(408,57,248,1,1),(409,58,244,1,1),(410,58,245,1,0),(411,58,246,1,1),(412,58,247,1,0),(413,58,248,1,1),(414,59,244,1,1),(415,59,245,1,1),(416,59,246,1,0),(417,59,247,1,0),(418,59,248,1,0),(419,60,244,1,1),(420,60,245,1,1),(421,60,246,1,1),(422,60,247,1,0),(423,60,248,1,1),(424,61,244,1,1),(425,61,245,1,1),(426,61,246,1,0),(427,61,247,1,0),(428,61,248,1,0),(429,62,244,1,0),(430,62,245,1,0),(431,62,246,1,0),(432,62,247,1,1),(433,62,248,1,0),(434,63,244,1,0),(435,63,245,1,0),(436,63,246,1,0),(437,63,247,1,1),(438,63,248,1,1),(439,64,244,1,0),(440,64,245,1,0),(441,64,246,1,1),(442,64,247,1,1),(443,64,248,1,1),(444,65,244,1,0),(445,65,245,1,1),(446,65,246,1,1),(447,65,247,1,1),(448,65,248,1,0),(449,66,244,1,1),(450,66,245,1,1),(451,66,246,1,1),(452,66,247,1,1),(453,66,248,1,0),(454,67,244,1,0),(455,67,245,1,1),(456,67,246,1,0),(457,67,247,1,1),(458,67,248,1,0),(459,68,244,1,1),(460,68,245,1,0),(461,68,246,1,0),(462,68,247,1,1),(463,68,248,1,1),(464,69,244,1,0),(465,69,245,1,0),(466,69,246,1,0),(467,69,247,1,0),(468,69,248,1,1),(469,70,244,1,0),(470,70,245,1,0),(471,70,246,1,1),(472,70,247,1,0),(473,70,248,1,0),(474,71,244,1,1),(475,71,245,1,1),(476,71,246,1,0),(477,71,247,1,1),(478,71,248,1,0),(479,72,284,1,0),(480,72,285,1,0),(481,72,286,2,2),(482,72,287,1,1),(483,72,288,1,0),(484,73,284,1,0),(485,73,285,1,0),(486,73,286,2,2),(487,73,287,1,1),(488,73,288,1,0),(489,74,284,1,1),(490,74,285,1,0),(491,74,286,2,1),(492,74,287,1,1),(493,74,288,1,0),(494,75,284,1,0),(495,75,285,1,1),(496,75,286,2,0),(497,75,287,1,0),(498,75,288,1,1),(499,76,284,1,0),(500,76,285,1,1),(501,76,286,2,1),(502,76,287,1,0),(503,76,288,1,0),(504,77,284,1,0),(505,77,285,1,1),(506,77,286,2,2),(507,77,287,1,1),(508,77,288,1,1),(509,78,284,1,1),(510,78,285,1,1),(511,78,286,2,2),(512,78,287,1,1),(513,78,288,1,0),(514,79,284,1,0),(515,79,285,1,1),(516,79,286,2,1),(517,79,287,1,0),(518,79,288,1,1),(519,80,284,1,0),(520,80,285,1,0),(521,80,286,2,1),(522,80,287,1,1),(523,80,288,1,0),(524,81,284,1,1),(525,81,285,1,0),(526,81,286,2,1),(527,81,287,1,0),(528,81,288,1,0),(529,82,284,1,1),(530,82,285,1,0),(531,82,286,2,1),(532,82,287,1,1),(533,82,288,1,1),(534,83,284,1,0),(535,83,285,1,1),(536,83,286,2,1),(537,83,287,1,0),(538,83,288,1,0),(539,84,284,1,1),(540,84,285,1,0),(541,84,286,2,1),(542,84,287,1,1),(543,84,288,1,1),(544,85,284,1,0),(545,85,285,1,1),(546,85,286,2,0),(547,85,287,1,1),(548,85,288,1,0),(549,86,284,1,0),(550,86,285,1,0),(551,86,286,2,0),(552,86,287,1,0),(553,86,288,1,1),(554,87,284,1,1),(555,87,285,1,1),(556,87,286,2,0),(557,87,287,1,0),(558,87,288,1,0),(559,88,284,1,1),(560,88,285,1,0),(561,88,286,2,2),(562,88,287,1,1),(563,88,288,1,0),(564,89,284,1,1),(565,89,285,1,1),(566,89,286,2,1),(567,89,287,1,0),(568,89,288,1,0),(569,90,284,1,1),(570,90,285,1,0),(571,90,286,2,2),(572,90,287,1,1),(573,90,288,1,0),(574,91,284,1,1),(575,91,285,1,0),(576,91,286,2,0),(577,91,287,1,1),(578,91,288,1,1),(579,92,284,1,0),(580,92,285,1,0),(581,92,286,2,0),(582,92,287,1,0),(583,92,288,1,0),(584,93,284,1,1),(585,93,285,1,0),(586,93,286,2,0),(587,93,287,1,1),(588,93,288,1,0),(589,94,284,1,0),(590,94,285,1,1),(591,94,286,2,2),(592,94,287,1,1),(593,94,288,1,0),(594,95,284,1,0),(595,95,285,1,0),(596,95,286,2,2),(597,95,287,1,1),(598,95,288,1,0),(599,96,284,1,0),(600,96,285,1,1),(601,96,286,2,1),(602,96,287,1,0),(603,96,288,1,0),(604,97,249,1,0),(605,97,250,1,1),(606,97,251,1,0),(607,97,252,1,1),(608,97,253,1,1),(609,97,254,1,0),(610,97,255,1,1),(611,97,256,1,0),(612,97,257,1,0),(613,97,258,1,0),(614,97,259,1,1),(615,97,260,1,0),(616,97,262,1,1),(617,97,261,1,1),(618,97,263,1,1),(619,97,264,1,1),(620,97,265,1,1),(621,97,266,1,1),(622,98,249,1,0),(623,98,250,1,0),(624,98,251,1,0),(625,98,252,1,1),(626,98,253,1,0),(627,98,254,1,1),(628,98,255,1,0),(629,98,256,1,1),(630,98,257,1,1),(631,98,258,1,0),(632,98,259,1,1),(633,98,260,1,1),(634,98,262,1,0),(635,98,261,1,0),(636,98,263,1,0),(637,98,264,1,0),(638,98,265,1,1),(639,98,266,1,0),(640,99,249,1,1),(641,99,250,1,0),(642,99,251,1,0),(643,99,252,1,0),(644,99,253,1,1),(645,99,254,1,0),(646,99,255,1,1),(647,99,256,1,0),(648,99,257,1,0),(649,99,258,1,0),(650,99,259,1,0),(651,99,260,1,0),(652,99,262,1,1),(653,99,261,1,1),(654,99,263,1,0),(655,99,264,1,0),(656,99,265,1,1),(657,99,266,1,1),(658,100,249,1,1),(659,100,250,1,1),(660,100,251,1,0),(661,100,252,1,1),(662,100,253,1,0),(663,100,254,1,0),(664,100,255,1,0),(665,100,256,1,0),(666,100,257,1,0),(667,100,258,1,1),(668,100,259,1,0),(669,100,260,1,1),(670,100,262,1,1),(671,100,261,1,1),(672,100,263,1,1),(673,100,264,1,0),(674,100,265,1,1),(675,100,266,1,0),(676,101,249,1,0),(677,101,250,1,0),(678,101,251,1,1),(679,101,252,1,1),(680,101,253,1,0),(681,101,254,1,1),(682,101,255,1,0),(683,101,256,1,0),(684,101,257,1,1),(685,101,258,1,1),(686,101,259,1,1),(687,101,260,1,0),(688,101,262,1,0),(689,101,261,1,0),(690,101,263,1,0),(691,101,264,1,0),(692,101,265,1,1),(693,101,266,1,1),(694,102,249,1,1),(695,102,250,1,0),(696,102,251,1,0),(697,102,252,1,0),(698,102,253,1,1),(699,102,254,1,0),(700,102,255,1,0),(701,102,256,1,1),(702,102,257,1,0),(703,102,258,1,1),(704,102,259,1,0),(705,102,260,1,0),(706,102,262,1,0),(707,102,261,1,0),(708,102,263,1,1),(709,102,264,1,1),(710,102,265,1,1),(711,102,266,1,0),(712,103,249,1,1),(713,103,250,1,0),(714,103,251,1,0),(715,103,252,1,1),(716,103,253,1,1),(717,103,254,1,1),(718,103,255,1,1),(719,103,256,1,0),(720,103,257,1,1),(721,103,258,1,0),(722,103,259,1,0),(723,103,260,1,1),(724,103,262,1,1),(725,103,261,1,1),(726,103,263,1,0),(727,103,264,1,1),(728,103,265,1,1),(729,103,266,1,1),(730,104,249,1,0),(731,104,250,1,0),(732,104,251,1,0),(733,104,252,1,1),(734,104,253,1,1),(735,104,254,1,1),(736,104,255,1,0),(737,104,256,1,0),(738,104,257,1,1),(739,104,258,1,0),(740,104,259,1,0),(741,104,260,1,1),(742,104,262,1,0),(743,104,261,1,0),(744,104,263,1,1),(745,104,264,1,1),(746,104,265,1,0),(747,104,266,1,0),(748,105,249,1,0),(749,105,250,1,1),(750,105,251,1,1),(751,105,252,1,0),(752,105,253,1,1),(753,105,254,1,0),(754,105,255,1,1),(755,105,256,1,1),(756,105,257,1,0),(757,105,258,1,1),(758,105,259,1,0),(759,105,260,1,1),(760,105,262,1,1),(761,105,261,1,1),(762,105,263,1,1),(763,105,264,1,1),(764,105,265,1,1),(765,105,266,1,1),(766,106,249,1,0),(767,106,250,1,1),(768,106,251,1,0),(769,106,252,1,0),(770,106,253,1,1),(771,106,254,1,0),(772,106,255,1,0),(773,106,256,1,0),(774,106,257,1,0),(775,106,258,1,1),(776,106,259,1,1),(777,106,260,1,1),(778,106,262,1,0),(779,106,261,1,0),(780,106,263,1,0),(781,106,264,1,1),(782,106,265,1,1),(783,106,266,1,0),(784,107,249,1,1),(785,107,250,1,1),(786,107,251,1,1),(787,107,252,1,0),(788,107,253,1,0),(789,107,254,1,0),(790,107,255,1,0),(791,107,256,1,1),(792,107,257,1,1),(793,107,258,1,1),(794,107,259,1,0),(795,107,260,1,0),(796,107,262,1,0),(797,107,261,1,0),(798,107,263,1,1),(799,107,264,1,1),(800,107,265,1,0),(801,107,266,1,0),(802,108,249,1,1),(803,108,250,1,0),(804,108,251,1,0),(805,108,252,1,1),(806,108,253,1,1),(807,108,254,1,1),(808,108,255,1,1),(809,108,256,1,1),(810,108,257,1,0),(811,108,258,1,1),(812,108,259,1,1),(813,108,260,1,1),(814,108,262,1,0),(815,108,261,1,0),(816,108,263,1,1),(817,108,264,1,1),(818,108,265,1,0),(819,108,266,1,0),(820,109,249,1,0),(821,109,250,1,1),(822,109,251,1,0),(823,109,252,1,0),(824,109,253,1,0),(825,109,254,1,0),(826,109,255,1,0),(827,109,256,1,0),(828,109,257,1,1),(829,109,258,1,0),(830,109,259,1,1),(831,109,260,1,0),(832,109,262,1,0),(833,109,261,1,0),(834,109,263,1,1),(835,109,264,1,1),(836,109,265,1,0),(837,109,266,1,1),(838,110,249,1,1),(839,110,250,1,0),(840,110,251,1,1),(841,110,252,1,1),(842,110,253,1,1),(843,110,254,1,1),(844,110,255,1,1),(845,110,256,1,1),(846,110,257,1,1),(847,110,258,1,0),(848,110,259,1,0),(849,110,260,1,1),(850,110,262,1,0),(851,110,261,1,0),(852,110,263,1,0),(853,110,264,1,0),(854,110,265,1,0),(855,110,266,1,0),(856,111,249,1,0),(857,111,250,1,0),(858,111,251,1,0),(859,111,252,1,1),(860,111,253,1,0),(861,111,254,1,1),(862,111,255,1,1),(863,111,256,1,1),(864,111,257,1,1),(865,111,258,1,1),(866,111,259,1,0),(867,111,260,1,1),(868,111,262,1,1),(869,111,261,1,0),(870,111,263,1,0),(871,111,264,1,1),(872,111,265,1,0),(873,111,266,1,1),(874,112,249,1,0),(875,112,250,1,1),(876,112,251,1,0),(877,112,252,1,0),(878,112,253,1,0),(879,112,254,1,1),(880,112,255,1,1),(881,112,256,1,1),(882,112,257,1,1),(883,112,258,1,1),(884,112,259,1,1),(885,112,260,1,1),(886,112,262,1,1),(887,112,261,1,1),(888,112,263,1,1),(889,112,264,1,0),(890,112,265,1,0),(891,112,266,1,1),(892,113,249,1,0),(893,113,250,1,0),(894,113,251,1,1),(895,113,252,1,0),(896,113,253,1,0),(897,113,254,1,1),(898,113,255,1,1),(899,113,256,1,1),(900,113,257,1,1),(901,113,258,1,1),(902,113,259,1,0),(903,113,260,1,1),(904,113,262,1,1),(905,113,261,1,0),(906,113,263,1,1),(907,113,264,1,0),(908,113,265,1,0),(909,113,266,1,0),(910,114,249,1,1),(911,114,250,1,1),(912,114,251,1,0),(913,114,252,1,1),(914,114,253,1,1),(915,114,254,1,1),(916,114,255,1,0),(917,114,256,1,1),(918,114,257,1,0),(919,114,258,1,0),(920,114,259,1,0),(921,114,260,1,1),(922,114,262,1,0),(923,114,261,1,0),(924,114,263,1,0),(925,114,264,1,0),(926,114,265,1,0),(927,114,266,1,1),(928,115,249,1,1),(929,115,250,1,1),(930,115,251,1,0),(931,115,252,1,0),(932,115,253,1,0),(933,115,254,1,0),(934,115,255,1,0),(935,115,256,1,0),(936,115,257,1,0),(937,115,258,1,1),(938,115,259,1,1),(939,115,260,1,0),(940,115,262,1,0),(941,115,261,1,0),(942,115,263,1,1),(943,115,264,1,1),(944,115,265,1,1),(945,115,266,1,0),(946,116,249,1,1),(947,116,250,1,1),(948,116,251,1,1),(949,116,252,1,0),(950,116,253,1,1),(951,116,254,1,0),(952,116,255,1,1),(953,116,256,1,1),(954,116,257,1,1),(955,116,258,1,1),(956,116,259,1,0),(957,116,260,1,1),(958,116,262,1,0),(959,116,261,1,1),(960,116,263,1,0),(961,116,264,1,0),(962,116,265,1,1),(963,116,266,1,0),(964,117,249,1,1),(965,117,250,1,1),(966,117,251,1,0),(967,117,252,1,1),(968,117,253,1,0),(969,117,254,1,0),(970,117,255,1,1),(971,117,256,1,1),(972,117,257,1,0),(973,117,258,1,0),(974,117,259,1,0),(975,117,260,1,0),(976,117,262,1,0),(977,117,261,1,1),(978,117,263,1,0),(979,117,264,1,1),(980,117,265,1,0),(981,117,266,1,1),(982,118,249,1,0),(983,118,250,1,1),(984,118,251,1,1),(985,118,252,1,0),(986,118,253,1,0),(987,118,254,1,1),(988,118,255,1,0),(989,118,256,1,1),(990,118,257,1,1),(991,118,258,1,1),(992,118,259,1,0),(993,118,260,1,0),(994,118,262,1,0),(995,118,261,1,1),(996,118,263,1,1),(997,118,264,1,1),(998,118,265,1,1),(999,118,266,1,0),(1000,119,249,1,1),(1001,119,250,1,1),(1002,119,251,1,1),(1003,119,252,1,0),(1004,119,253,1,0),(1005,119,254,1,1),(1006,119,255,1,1),(1007,119,256,1,0),(1008,119,257,1,0),(1009,119,258,1,0),(1010,119,259,1,0),(1011,119,260,1,1),(1012,119,262,1,0),(1013,119,261,1,1),(1014,119,263,1,0),(1015,119,264,1,1),(1016,119,265,1,1),(1017,119,266,1,0),(1018,120,249,1,1),(1019,120,250,1,0),(1020,120,251,1,1),(1021,120,252,1,1),(1022,120,253,1,0),(1023,120,254,1,0),(1024,120,255,1,0),(1025,120,256,1,1),(1026,120,257,1,0),(1027,120,258,1,0),(1028,120,259,1,1),(1029,120,260,1,1),(1030,120,262,1,1),(1031,120,261,1,1),(1032,120,263,1,1),(1033,120,264,1,1),(1034,120,265,1,1),(1035,120,266,1,0),(1036,121,249,1,1),(1037,121,250,1,0),(1038,121,251,1,1),(1039,121,252,1,1),(1040,121,253,1,0),(1041,121,254,1,1),(1042,121,255,1,1),(1043,121,256,1,0),(1044,121,257,1,1),(1045,121,258,1,0),(1046,121,259,1,0),(1047,121,260,1,1),(1048,121,262,1,1),(1049,121,261,1,0),(1050,121,263,1,1),(1051,121,264,1,1),(1052,121,265,1,0),(1053,121,266,1,0),(1054,122,267,1,0),(1055,122,268,1,1),(1056,122,269,1,0),(1057,122,274,1,0),(1058,122,275,1,0),(1059,122,270,1,1),(1060,122,271,1,0),(1061,122,272,1,0),(1062,122,273,1,0),(1063,123,267,1,1),(1064,123,268,1,0),(1065,123,269,1,1),(1066,123,274,1,0),(1067,123,275,1,1),(1068,123,270,1,0),(1069,123,271,1,0),(1070,123,272,1,1),(1071,123,273,1,1),(1072,124,267,1,1),(1073,124,268,1,0),(1074,124,269,1,0),(1075,124,274,1,1),(1076,124,275,1,1),(1077,124,270,1,0),(1078,124,271,1,0),(1079,124,272,1,0),(1080,124,273,1,1),(1081,125,267,1,1),(1082,125,268,1,0),(1083,125,269,1,1),(1084,125,274,1,1),(1085,125,275,1,0),(1086,125,270,1,0),(1087,125,271,1,1),(1088,125,272,1,0),(1089,125,273,1,1),(1090,126,267,1,0),(1091,126,268,1,1),(1092,126,269,1,1),(1093,126,274,1,0),(1094,126,275,1,0),(1095,126,270,1,1),(1096,126,271,1,0),(1097,126,272,1,1),(1098,126,273,1,0),(1099,127,267,1,1),(1100,127,268,1,1),(1101,127,269,1,0),(1102,127,274,1,0),(1103,127,275,1,1),(1104,127,270,1,1),(1105,127,271,1,1),(1106,127,272,1,0),(1107,127,273,1,1),(1108,128,267,1,0),(1109,128,268,1,0),(1110,128,269,1,0),(1111,128,274,1,0),(1112,128,275,1,0),(1113,128,270,1,1),(1114,128,271,1,0),(1115,128,272,1,0),(1116,128,273,1,0),(1117,129,267,1,1),(1118,129,268,1,1),(1119,129,269,1,1),(1120,129,274,1,1),(1121,129,275,1,0),(1122,129,270,1,1),(1123,129,271,1,1),(1124,129,272,1,1),(1125,129,273,1,1),(1126,130,267,1,1),(1127,130,268,1,0),(1128,130,269,1,1),(1129,130,274,1,1),(1130,130,275,1,1),(1131,130,270,1,1),(1132,130,271,1,1),(1133,130,272,1,1),(1134,130,273,1,1),(1135,131,267,1,0),(1136,131,268,1,0),(1137,131,269,1,0),(1138,131,274,1,1),(1139,131,275,1,1),(1140,131,270,1,0),(1141,131,271,1,1),(1142,131,272,1,1),(1143,131,273,1,1),(1144,132,267,1,1),(1145,132,268,1,1),(1146,132,269,1,0),(1147,132,274,1,0),(1148,132,275,1,0),(1149,132,270,1,0),(1150,132,271,1,0),(1151,132,272,1,1),(1152,132,273,1,0),(1153,133,267,1,1),(1154,133,268,1,1),(1155,133,269,1,0),(1156,133,274,1,0),(1157,133,275,1,1),(1158,133,270,1,1),(1159,133,271,1,0),(1160,133,272,1,0),(1161,133,273,1,0),(1162,134,267,1,1),(1163,134,268,1,0),(1164,134,269,1,1),(1165,134,274,1,1),(1166,134,275,1,1),(1167,134,270,1,0),(1168,134,271,1,1),(1169,134,272,1,0),(1170,134,273,1,1),(1171,135,267,1,0),(1172,135,268,1,1),(1173,135,269,1,1),(1174,135,274,1,0),(1175,135,275,1,0),(1176,135,270,1,0),(1177,135,271,1,1),(1178,135,272,1,1),(1179,135,273,1,1),(1180,136,267,1,0),(1181,136,268,1,0),(1182,136,269,1,0),(1183,136,274,1,0),(1184,136,275,1,1),(1185,136,270,1,0),(1186,136,271,1,0),(1187,136,272,1,1),(1188,136,273,1,1),(1189,137,267,1,1),(1190,137,268,1,1),(1191,137,269,1,1),(1192,137,274,1,1),(1193,137,275,1,0),(1194,137,270,1,0),(1195,137,271,1,0),(1196,137,272,1,1),(1197,137,273,1,1),(1198,138,267,1,0),(1199,138,268,1,0),(1200,138,269,1,0),(1201,138,274,1,1),(1202,138,275,1,1),(1203,138,270,1,1),(1204,138,271,1,0),(1205,138,272,1,0),(1206,138,273,1,1),(1207,139,267,1,1),(1208,139,268,1,1),(1209,139,269,1,1),(1210,139,274,1,1),(1211,139,275,1,0),(1212,139,270,1,0),(1213,139,271,1,1),(1214,139,272,1,1),(1215,139,273,1,0),(1216,140,267,1,0),(1217,140,268,1,1),(1218,140,269,1,0),(1219,140,274,1,1),(1220,140,275,1,0),(1221,140,270,1,0),(1222,140,271,1,1),(1223,140,272,1,1),(1224,140,273,1,0),(1225,141,267,1,0),(1226,141,268,1,0),(1227,141,269,1,1),(1228,141,274,1,1),(1229,141,275,1,0),(1230,141,270,1,0),(1231,141,271,1,1),(1232,141,272,1,0),(1233,141,273,1,1),(1234,142,267,1,1),(1235,142,268,1,0),(1236,142,269,1,1),(1237,142,274,1,1),(1238,142,275,1,0),(1239,142,270,1,0),(1240,142,271,1,1),(1241,142,272,1,1),(1242,142,273,1,0),(1243,143,267,1,0),(1244,143,268,1,0),(1245,143,269,1,1),(1246,143,274,1,0),(1247,143,275,1,1),(1248,143,270,1,0),(1249,143,271,1,1),(1250,143,272,1,1),(1251,143,273,1,1),(1252,144,267,1,1),(1253,144,268,1,0),(1254,144,269,1,0),(1255,144,274,1,1),(1256,144,275,1,0),(1257,144,270,1,1),(1258,144,271,1,0),(1259,144,272,1,0),(1260,144,273,1,1),(1261,145,267,1,0),(1262,145,268,1,0),(1263,145,269,1,1),(1264,145,274,1,1),(1265,145,275,1,1),(1266,145,270,1,0),(1267,145,271,1,0),(1268,145,272,1,1),(1269,145,273,1,0),(1270,146,267,1,0),(1271,146,268,1,1),(1272,146,269,1,0),(1273,146,274,1,1),(1274,146,275,1,1),(1275,146,270,1,1),(1276,146,271,1,1),(1277,146,272,1,1),(1278,146,273,1,1),(1279,147,276,1,0),(1280,147,277,1,0),(1281,147,278,1,0),(1282,147,279,1,1),(1283,147,280,1,1),(1284,147,281,1,1),(1285,147,282,1,1),(1286,147,283,1,0),(1287,148,276,1,0),(1288,148,277,1,0),(1289,148,278,1,1),(1290,148,279,1,0),(1291,148,280,1,1),(1292,148,281,1,0),(1293,148,282,1,1),(1294,148,283,1,0),(1295,149,276,1,0),(1296,149,277,1,1),(1297,149,278,1,0),(1298,149,279,1,1),(1299,149,280,1,1),(1300,149,281,1,1),(1301,149,282,1,1),(1302,149,283,1,0),(1303,150,276,1,0),(1304,150,277,1,1),(1305,150,278,1,1),(1306,150,279,1,1),(1307,150,280,1,0),(1308,150,281,1,0),(1309,150,282,1,0),(1310,150,283,1,0),(1311,151,276,1,0),(1312,151,277,1,0),(1313,151,278,1,1),(1314,151,279,1,1),(1315,151,280,1,1),(1316,151,281,1,1),(1317,151,282,1,0),(1318,151,283,1,1),(1319,152,276,1,0),(1320,152,277,1,0),(1321,152,278,1,0),(1322,152,279,1,1),(1323,152,280,1,1),(1324,152,281,1,1),(1325,152,282,1,1),(1326,152,283,1,1),(1327,153,276,1,1),(1328,153,277,1,0),(1329,153,278,1,0),(1330,153,279,1,0),(1331,153,280,1,1),(1332,153,281,1,1),(1333,153,282,1,0),(1334,153,283,1,0),(1335,154,276,1,1),(1336,154,277,1,1),(1337,154,278,1,0),(1338,154,279,1,1),(1339,154,280,1,0),(1340,154,281,1,1),(1341,154,282,1,0),(1342,154,283,1,0),(1343,155,276,1,1),(1344,155,277,1,0),(1345,155,278,1,1),(1346,155,279,1,1),(1347,155,280,1,0),(1348,155,281,1,1),(1349,155,282,1,0),(1350,155,283,1,1),(1351,156,276,1,0),(1352,156,277,1,1),(1353,156,278,1,1),(1354,156,279,1,0),(1355,156,280,1,1),(1356,156,281,1,0),(1357,156,282,1,1),(1358,156,283,1,0),(1359,157,276,1,0),(1360,157,277,1,0),(1361,157,278,1,1),(1362,157,279,1,1),(1363,157,280,1,1),(1364,157,281,1,1),(1365,157,282,1,1),(1366,157,283,1,0),(1367,158,276,1,1),(1368,158,277,1,1),(1369,158,278,1,0),(1370,158,279,1,0),(1371,158,280,1,1),(1372,158,281,1,0),(1373,158,282,1,1),(1374,158,283,1,0),(1375,159,276,1,1),(1376,159,277,1,1),(1377,159,278,1,0),(1378,159,279,1,1),(1379,159,280,1,0),(1380,159,281,1,1),(1381,159,282,1,1),(1382,159,283,1,0),(1383,160,276,1,0),(1384,160,277,1,1),(1385,160,278,1,1),(1386,160,279,1,1),(1387,160,280,1,1),(1388,160,281,1,0),(1389,160,282,1,0),(1390,160,283,1,1),(1391,161,276,1,1),(1392,161,277,1,1),(1393,161,278,1,0),(1394,161,279,1,1),(1395,161,280,1,0),(1396,161,281,1,0),(1397,161,282,1,0),(1398,161,283,1,1),(1399,162,276,1,1),(1400,162,277,1,0),(1401,162,278,1,1),(1402,162,279,1,1),(1403,162,280,1,1),(1404,162,281,1,0),(1405,162,282,1,0),(1406,162,283,1,0),(1407,163,276,1,1),(1408,163,277,1,0),(1409,163,278,1,0),(1410,163,279,1,0),(1411,163,280,1,0),(1412,163,281,1,0),(1413,163,282,1,0),(1414,163,283,1,0),(1415,164,276,1,0),(1416,164,277,1,0),(1417,164,278,1,0),(1418,164,279,1,0),(1419,164,280,1,1),(1420,164,281,1,0),(1421,164,282,1,0),(1422,164,283,1,0),(1423,165,276,1,0),(1424,165,277,1,0),(1425,165,278,1,0),(1426,165,279,1,1),(1427,165,280,1,0),(1428,165,281,1,1),(1429,165,282,1,0),(1430,165,283,1,0),(1431,166,276,1,1),(1432,166,277,1,1),(1433,166,278,1,0),(1434,166,279,1,1),(1435,166,280,1,0),(1436,166,281,1,0),(1437,166,282,1,0),(1438,166,283,1,1),(1439,167,276,1,0),(1440,167,277,1,1),(1441,167,278,1,0),(1442,167,279,1,1),(1443,167,280,1,1),(1444,167,281,1,1),(1445,167,282,1,1),(1446,167,283,1,0),(1447,168,276,1,0),(1448,168,277,1,1),(1449,168,278,1,0),(1450,168,279,1,0),(1451,168,280,1,0),(1452,168,281,1,0),(1453,168,282,1,0),(1454,168,283,1,0),(1455,169,276,1,1),(1456,169,277,1,1),(1457,169,278,1,1),(1458,169,279,1,1),(1459,169,280,1,0),(1460,169,281,1,0),(1461,169,282,1,0),(1462,169,283,1,1),(1463,170,276,1,1),(1464,170,277,1,1),(1465,170,278,1,0),(1466,170,279,1,0),(1467,170,280,1,1),(1468,170,281,1,0),(1469,170,282,1,1),(1470,170,283,1,1),(1471,171,276,1,0),(1472,171,277,1,0),(1473,171,278,1,0),(1474,171,279,1,0),(1475,171,280,1,1),(1476,171,281,1,0),(1477,171,282,1,0),(1478,171,283,1,0),(1479,172,289,1,0),(1480,172,290,1,1),(1481,172,291,1,0),(1482,172,292,1,1),(1483,172,293,1,1),(1484,172,294,1,0),(1485,173,289,1,1),(1486,173,290,1,0),(1487,173,291,1,0),(1488,173,292,1,1),(1489,173,293,1,1),(1490,173,294,1,1),(1491,174,289,1,0),(1492,174,290,1,1),(1493,174,291,1,0),(1494,174,292,1,0),(1495,174,293,1,0),(1496,174,294,1,0),(1497,175,289,1,1),(1498,175,290,1,1),(1499,175,291,1,1),(1500,175,292,1,0),(1501,175,293,1,1),(1502,175,294,1,0),(1503,176,289,1,1),(1504,176,290,1,0),(1505,176,291,1,0),(1506,176,292,1,0),(1507,176,293,1,0),(1508,176,294,1,0),(1509,177,289,1,1),(1510,177,290,1,1),(1511,177,291,1,0),(1512,177,292,1,1),(1513,177,293,1,1),(1514,177,294,1,1),(1515,178,289,1,0),(1516,178,290,1,0),(1517,178,291,1,1),(1518,178,292,1,0),(1519,178,293,1,0),(1520,178,294,1,0),(1521,179,289,1,1),(1522,179,290,1,0),(1523,179,291,1,0),(1524,179,292,1,0),(1525,179,293,1,0),(1526,179,294,1,0),(1527,180,289,1,1),(1528,180,290,1,0),(1529,180,291,1,0),(1530,180,292,1,0),(1531,180,293,1,0),(1532,180,294,1,1),(1533,181,289,1,1),(1534,181,290,1,1),(1535,181,291,1,0),(1536,181,292,1,0),(1537,181,293,1,0),(1538,181,294,1,1),(1539,182,289,1,1),(1540,182,290,1,1),(1541,182,291,1,0),(1542,182,292,1,1),(1543,182,293,1,1),(1544,182,294,1,1),(1545,183,289,1,1),(1546,183,290,1,0),(1547,183,291,1,1),(1548,183,292,1,1),(1549,183,293,1,0),(1550,183,294,1,0),(1551,184,289,1,1),(1552,184,290,1,1),(1553,184,291,1,0),(1554,184,292,1,1),(1555,184,293,1,1),(1556,184,294,1,0),(1557,185,289,1,1),(1558,185,290,1,0),(1559,185,291,1,0),(1560,185,292,1,0),(1561,185,293,1,0),(1562,185,294,1,1),(1563,186,289,1,1),(1564,186,290,1,1),(1565,186,291,1,0),(1566,186,292,1,1),(1567,186,293,1,0),(1568,186,294,1,0),(1569,187,289,1,0),(1570,187,290,1,1),(1571,187,291,1,0),(1572,187,292,1,1),(1573,187,293,1,1),(1574,187,294,1,0),(1575,188,289,1,1),(1576,188,290,1,1),(1577,188,291,1,0),(1578,188,292,1,0),(1579,188,293,1,1),(1580,188,294,1,0),(1581,189,289,1,0),(1582,189,290,1,0),(1583,189,291,1,0),(1584,189,292,1,1),(1585,189,293,1,0),(1586,189,294,1,0),(1587,190,289,1,0),(1588,190,290,1,0),(1589,190,291,1,1),(1590,190,292,1,0),(1591,190,293,1,1),(1592,190,294,1,1),(1593,191,289,1,1),(1594,191,290,1,1),(1595,191,291,1,1),(1596,191,292,1,1),(1597,191,293,1,0),(1598,191,294,1,1),(1599,192,289,1,1),(1600,192,290,1,1),(1601,192,291,1,0),(1602,192,292,1,0),(1603,192,293,1,1),(1604,192,294,1,1),(1605,193,289,1,1),(1606,193,290,1,0),(1607,193,291,1,0),(1608,193,292,1,1),(1609,193,293,1,1),(1610,193,294,1,1),(1611,194,289,1,1),(1612,194,290,1,1),(1613,194,291,1,0),(1614,194,292,1,1),(1615,194,293,1,0),(1616,194,294,1,1),(1617,195,289,1,0),(1618,195,290,1,1),(1619,195,291,1,1),(1620,195,292,1,1),(1621,195,293,1,1),(1622,195,294,1,0),(1623,196,289,1,1),(1624,196,290,1,1),(1625,196,291,1,1),(1626,196,292,1,1),(1627,196,293,1,0),(1628,196,294,1,0),(1629,197,295,1,1),(1630,197,296,2,2),(1631,197,297,4,2),(1632,197,298,8,6),(1633,198,295,1,1),(1634,198,296,2,0),(1635,198,297,4,1),(1636,198,298,8,3),(1637,199,295,1,0),(1638,199,296,2,2),(1639,199,297,4,3),(1640,199,298,8,2),(1641,200,295,1,1),(1642,200,296,2,0),(1643,200,297,4,4),(1644,200,298,8,8),(1645,201,295,1,1),(1646,201,296,2,0),(1647,201,297,4,4),(1648,201,298,8,1),(1649,202,295,1,0),(1650,202,296,2,2),(1651,202,297,4,0),(1652,202,298,8,6),(1653,203,295,1,0),(1654,203,296,2,2),(1655,203,297,4,0),(1656,203,298,8,2),(1657,204,295,1,0),(1658,204,296,2,2),(1659,204,297,4,1),(1660,204,298,8,4),(1661,205,295,1,0),(1662,205,296,2,2),(1663,205,297,4,3),(1664,205,298,8,2),(1665,206,295,1,1),(1666,206,296,2,2),(1667,206,297,4,2),(1668,206,298,8,0),(1669,207,295,1,0),(1670,207,296,2,2),(1671,207,297,4,3),(1672,207,298,8,7),(1673,208,295,1,0),(1674,208,296,2,1),(1675,208,297,4,2),(1676,208,298,8,0),(1677,209,295,1,1),(1678,209,296,2,1),(1679,209,297,4,4),(1680,209,298,8,6),(1681,210,295,1,0),(1682,210,296,2,2),(1683,210,297,4,4),(1684,210,298,8,2),(1685,211,295,1,0),(1686,211,296,2,1),(1687,211,297,4,3),(1688,211,298,8,6),(1689,212,295,1,1),(1690,212,296,2,1),(1691,212,297,4,2),(1692,212,298,8,4),(1693,213,295,1,0),(1694,213,296,2,2),(1695,213,297,4,1),(1696,213,298,8,5),(1697,214,295,1,1),(1698,214,296,2,1),(1699,214,297,4,0),(1700,214,298,8,4),(1701,215,295,1,0),(1702,215,296,2,2),(1703,215,297,4,0),(1704,215,298,8,1),(1705,216,295,1,0),(1706,216,296,2,2),(1707,216,297,4,2),(1708,216,298,8,0),(1709,217,295,1,1),(1710,217,296,2,1),(1711,217,297,4,0),(1712,217,298,8,0),(1713,218,295,1,1),(1714,218,296,2,2),(1715,218,297,4,1),(1716,218,298,8,6),(1717,219,295,1,1),(1718,219,296,2,2),(1719,219,297,4,4),(1720,219,298,8,0),(1721,220,295,1,1),(1722,220,296,2,0),(1723,220,297,4,1),(1724,220,298,8,4),(1725,221,295,1,1),(1726,221,296,2,0),(1727,221,297,4,1),(1728,221,298,8,8),(1729,222,299,1,0),(1730,222,300,2,2),(1731,222,301,4,0),(1732,222,302,3,3),(1733,223,299,1,1),(1734,223,300,2,2),(1735,223,301,4,4),(1736,223,302,3,1),(1737,224,299,1,0),(1738,224,300,2,2),(1739,224,301,4,4),(1740,224,302,3,3),(1741,225,299,1,0),(1742,225,300,2,2),(1743,225,301,4,3),(1744,225,302,3,1),(1745,226,299,1,0),(1746,226,300,2,2),(1747,226,301,4,4),(1748,226,302,3,0),(1749,227,299,1,0),(1750,227,300,2,0),(1751,227,301,4,1),(1752,227,302,3,1),(1753,228,299,1,0),(1754,228,300,2,2),(1755,228,301,4,1),(1756,228,302,3,1),(1757,229,299,1,1),(1758,229,300,2,2),(1759,229,301,4,2),(1760,229,302,3,0),(1761,230,299,1,0),(1762,230,300,2,2),(1763,230,301,4,2),(1764,230,302,3,0),(1765,231,299,1,1),(1766,231,300,2,1),(1767,231,301,4,0),(1768,231,302,3,2),(1769,232,299,1,1),(1770,232,300,2,2),(1771,232,301,4,2),(1772,232,302,3,2),(1773,233,299,1,0),(1774,233,300,2,2),(1775,233,301,4,3),(1776,233,302,3,1),(1777,234,299,1,1),(1778,234,300,2,1),(1779,234,301,4,4),(1780,234,302,3,1),(1781,235,299,1,0),(1782,235,300,2,1),(1783,235,301,4,0),(1784,235,302,3,1),(1785,236,299,1,1),(1786,236,300,2,0),(1787,236,301,4,3),(1788,236,302,3,0),(1789,237,299,1,1),(1790,237,300,2,0),(1791,237,301,4,0),(1792,237,302,3,0),(1793,238,299,1,1),(1794,238,300,2,0),(1795,238,301,4,1),(1796,238,302,3,1),(1797,239,299,1,1),(1798,239,300,2,0),(1799,239,301,4,2),(1800,239,302,3,2),(1801,240,299,1,1),(1802,240,300,2,2),(1803,240,301,4,2),(1804,240,302,3,1),(1805,241,299,1,1),(1806,241,300,2,1),(1807,241,301,4,0),(1808,241,302,3,1),(1809,242,299,1,0),(1810,242,300,2,0),(1811,242,301,4,1),(1812,242,302,3,1),(1813,243,299,1,1),(1814,243,300,2,1),(1815,243,301,4,1),(1816,243,302,3,1),(1817,244,299,1,0),(1818,244,300,2,1),(1819,244,301,4,1),(1820,244,302,3,2),(1821,245,299,1,0),(1822,245,300,2,1),(1823,245,301,4,1),(1824,245,302,3,0),(1825,246,299,1,0),(1826,246,300,2,0),(1827,246,301,4,1),(1828,246,302,3,1),(1829,247,244,1,0),(1830,247,245,1,0),(1831,247,246,1,1),(1832,247,247,1,1),(1833,247,248,1,1),(1834,248,244,1,0),(1835,248,245,1,0),(1836,248,246,1,0),(1837,248,247,1,0),(1838,248,248,1,1),(1839,249,244,1,1),(1840,249,245,1,0),(1841,249,246,1,0),(1842,249,247,1,1),(1843,249,248,1,0),(1844,250,244,1,0),(1845,250,245,1,1),(1846,250,246,1,1),(1847,250,247,1,1),(1848,250,248,1,1),(1849,251,244,1,1),(1850,251,245,1,0),(1851,251,246,1,1),(1852,251,247,1,1),(1853,251,248,1,1),(1854,252,244,1,0),(1855,252,245,1,0),(1856,252,246,1,1),(1857,252,247,1,1),(1858,252,248,1,0),(1859,253,244,1,0),(1860,253,245,1,0),(1861,253,246,1,1),(1862,253,247,1,0),(1863,253,248,1,0),(1864,254,244,1,0),(1865,254,245,1,0),(1866,254,246,1,0),(1867,254,247,1,0),(1868,254,248,1,1),(1869,255,244,1,0),(1870,255,245,1,1),(1871,255,246,1,0),(1872,255,247,1,0),(1873,255,248,1,0),(1874,256,244,1,1),(1875,256,245,1,1),(1876,256,246,1,0),(1877,256,247,1,1),(1878,256,248,1,1),(1879,257,244,1,0),(1880,257,245,1,1),(1881,257,246,1,1),(1882,257,247,1,1),(1883,257,248,1,1),(1884,258,244,1,1),(1885,258,245,1,1),(1886,258,246,1,1),(1887,258,247,1,0),(1888,258,248,1,0),(1889,259,244,1,1),(1890,259,245,1,0),(1891,259,246,1,0),(1892,259,247,1,0),(1893,259,248,1,0),(1894,260,244,1,0),(1895,260,245,1,0),(1896,260,246,1,0),(1897,260,247,1,0),(1898,260,248,1,0),(1899,261,244,1,1),(1900,261,245,1,0),(1901,261,246,1,1),(1902,261,247,1,1),(1903,261,248,1,1),(1904,262,244,1,1),(1905,262,245,1,1),(1906,262,246,1,0),(1907,262,247,1,1),(1908,262,248,1,1),(1909,263,244,1,0),(1910,263,245,1,0),(1911,263,246,1,1),(1912,263,247,1,0),(1913,263,248,1,1),(1914,264,244,1,0),(1915,264,245,1,1),(1916,264,246,1,0),(1917,264,247,1,0),(1918,264,248,1,0),(1919,265,244,1,1),(1920,265,245,1,1),(1921,265,246,1,1),(1922,265,247,1,1),(1923,265,248,1,1),(1924,266,244,1,1),(1925,266,245,1,1),(1926,266,246,1,1),(1927,266,247,1,1),(1928,266,248,1,1),(1929,267,244,1,0),(1930,267,245,1,0),(1931,267,246,1,1),(1932,267,247,1,0),(1933,267,248,1,0),(1934,268,244,1,1),(1935,268,245,1,0),(1936,268,246,1,0),(1937,268,247,1,1),(1938,268,248,1,1),(1939,269,244,1,1),(1940,269,245,1,1),(1941,269,246,1,1),(1942,269,247,1,0),(1943,269,248,1,1),(1944,270,244,1,1),(1945,270,245,1,0),(1946,270,246,1,1),(1947,270,247,1,0),(1948,270,248,1,0),(1949,271,244,1,0),(1950,271,245,1,1),(1951,271,246,1,1),(1952,271,247,1,0),(1953,271,248,1,1),(1954,272,244,1,0),(1955,272,245,1,1),(1956,272,246,1,0),(1957,272,247,1,1),(1958,272,248,1,1),(1959,273,244,1,1),(1960,273,245,1,1),(1961,273,246,1,0),(1962,273,247,1,1),(1963,273,248,1,1),(1964,274,244,1,0),(1965,274,245,1,1),(1966,274,246,1,1),(1967,274,247,1,1),(1968,274,248,1,1),(1969,275,244,1,0),(1970,275,245,1,0),(1971,275,246,1,0),(1972,275,247,1,0),(1973,275,248,1,1),(1974,276,244,1,1),(1975,276,245,1,1),(1976,276,246,1,0),(1977,276,247,1,0),(1978,276,248,1,1),(1979,277,244,1,0),(1980,277,245,1,1),(1981,277,246,1,1),(1982,277,247,1,0),(1983,277,248,1,0),(1984,278,244,1,1),(1985,278,245,1,0),(1986,278,246,1,0),(1987,278,247,1,0),(1988,278,248,1,1),(1989,279,244,1,0),(1990,279,245,1,0),(1991,279,246,1,0),(1992,279,247,1,0),(1993,279,248,1,1),(1994,280,244,1,1),(1995,280,245,1,0),(1996,280,246,1,0),(1997,280,247,1,1),(1998,280,248,1,0),(1999,281,244,1,1),(2000,281,245,1,1),(2001,281,246,1,0),(2002,281,247,1,1),(2003,281,248,1,1),(2004,282,244,1,1),(2005,282,245,1,0),(2006,282,246,1,1),(2007,282,247,1,1),(2008,282,248,1,1),(2009,283,244,1,1),(2010,283,245,1,0),(2011,283,246,1,1),(2012,283,247,1,1),(2013,283,248,1,1),(2014,284,244,1,0),(2015,284,245,1,0),(2016,284,246,1,1),(2017,284,247,1,1),(2018,284,248,1,1),(2019,285,244,1,0),(2020,285,245,1,1),(2021,285,246,1,1),(2022,285,247,1,1),(2023,285,248,1,0),(2024,286,244,1,1),(2025,286,245,1,0),(2026,286,246,1,0),(2027,286,247,1,0),(2028,286,248,1,1),(2029,287,244,1,1),(2030,287,245,1,0),(2031,287,246,1,0),(2032,287,247,1,1),(2033,287,248,1,0),(2034,288,244,1,1),(2035,288,245,1,0),(2036,288,246,1,1),(2037,288,247,1,0),(2038,288,248,1,0),(2039,289,244,1,0),(2040,289,245,1,0),(2041,289,246,1,0),(2042,289,247,1,0),(2043,289,248,1,0),(2044,290,244,1,0),(2045,290,245,1,0),(2046,290,246,1,1),(2047,290,247,1,0),(2048,290,248,1,1),(2049,291,244,1,1),(2050,291,245,1,0),(2051,291,246,1,0),(2052,291,247,1,0),(2053,291,248,1,1),(2054,292,244,1,0),(2055,292,245,1,1),(2056,292,246,1,1),(2057,292,247,1,0),(2058,292,248,1,0),(2059,293,244,1,0),(2060,293,245,1,1),(2061,293,246,1,0),(2062,293,247,1,0),(2063,293,248,1,1),(2064,294,244,1,1),(2065,294,245,1,0),(2066,294,246,1,1),(2067,294,247,1,0),(2068,294,248,1,1),(2069,295,244,1,0),(2070,295,245,1,0),(2071,295,246,1,1),(2072,295,247,1,1),(2073,295,248,1,0),(2074,296,244,1,1),(2075,296,245,1,1),(2076,296,246,1,0),(2077,296,247,1,1),(2078,296,248,1,0),(2079,297,244,1,0),(2080,297,245,1,0),(2081,297,246,1,1),(2082,297,247,1,1),(2083,297,248,1,0),(2084,298,244,1,0),(2085,298,245,1,0),(2086,298,246,1,0),(2087,298,247,1,0),(2088,298,248,1,0),(2089,299,244,1,0),(2090,299,245,1,1),(2091,299,246,1,1),(2092,299,247,1,1),(2093,299,248,1,0),(2094,300,244,1,0),(2095,300,245,1,1),(2096,300,246,1,0),(2097,300,247,1,0),(2098,300,248,1,1),(2099,301,244,1,0),(2100,301,245,1,1),(2101,301,246,1,1),(2102,301,247,1,1),(2103,301,248,1,1),(2104,302,244,1,1),(2105,302,245,1,1),(2106,302,246,1,1),(2107,302,247,1,0),(2108,302,248,1,0),(2109,303,244,1,0),(2110,303,245,1,0),(2111,303,246,1,0),(2112,303,247,1,1),(2113,303,248,1,0),(2114,304,244,1,0),(2115,304,245,1,0),(2116,304,246,1,0),(2117,304,247,1,1),(2118,304,248,1,0),(2119,305,244,1,0),(2120,305,245,1,0),(2121,305,246,1,1),(2122,305,247,1,0),(2123,305,248,1,1),(2124,306,244,1,1),(2125,306,245,1,1),(2126,306,246,1,1),(2127,306,247,1,0),(2128,306,248,1,1),(2129,307,244,1,0),(2130,307,245,1,0),(2131,307,246,1,0),(2132,307,247,1,1),(2133,307,248,1,1),(2134,308,244,1,0),(2135,308,245,1,1),(2136,308,246,1,1),(2137,308,247,1,1),(2138,308,248,1,1),(2139,309,244,1,1),(2140,309,245,1,1),(2141,309,246,1,1),(2142,309,247,1,1),(2143,309,248,1,0),(2144,310,244,1,0),(2145,310,245,1,0),(2146,310,246,1,0),(2147,310,247,1,1),(2148,310,248,1,1),(2149,311,244,1,1),(2150,311,245,1,0),(2151,311,246,1,1),(2152,311,247,1,0),(2153,311,248,1,1),(2154,312,244,1,1),(2155,312,245,1,1),(2156,312,246,1,1),(2157,312,247,1,0),(2158,312,248,1,0),(2159,313,244,1,0),(2160,313,245,1,0),(2161,313,246,1,0),(2162,313,247,1,1),(2163,313,248,1,0),(2164,314,244,1,1),(2165,314,245,1,0),(2166,314,246,1,0),(2167,314,247,1,1),(2168,314,248,1,0),(2169,315,244,1,1),(2170,315,245,1,0),(2171,315,246,1,1),(2172,315,247,1,1),(2173,315,248,1,0),(2174,316,244,1,1),(2175,316,245,1,1),(2176,316,246,1,1),(2177,316,247,1,1),(2178,316,248,1,0),(2179,317,244,1,0),(2180,317,245,1,1),(2181,317,246,1,0),(2182,317,247,1,1),(2183,317,248,1,1),(2184,318,244,1,1),(2185,318,245,1,0),(2186,318,246,1,1),(2187,318,247,1,1),(2188,318,248,1,0),(2189,319,244,1,1),(2190,319,245,1,1),(2191,319,246,1,0),(2192,319,247,1,0),(2193,319,248,1,1),(2194,320,244,1,0),(2195,320,245,1,1),(2196,320,246,1,0),(2197,320,247,1,1),(2198,320,248,1,1),(2199,321,244,1,0),(2200,321,245,1,0),(2201,321,246,1,0),(2202,321,247,1,0),(2203,321,248,1,1),(2204,322,244,1,0),(2205,322,245,1,1),(2206,322,246,1,1),(2207,322,247,1,1),(2208,322,248,1,1),(2209,323,244,1,0),(2210,323,245,1,0),(2211,323,246,1,1),(2212,323,247,1,0),(2213,323,248,1,0),(2214,324,244,1,1),(2215,324,245,1,1),(2216,324,246,1,0),(2217,324,247,1,0),(2218,324,248,1,0),(2219,325,244,1,1),(2220,325,245,1,1),(2221,325,246,1,1),(2222,325,247,1,0),(2223,325,248,1,1),(2224,326,244,1,0),(2225,326,245,1,1),(2226,326,246,1,1),(2227,326,247,1,1),(2228,326,248,1,1),(2229,327,244,1,1),(2230,327,245,1,1),(2231,327,246,1,0),(2232,327,247,1,1),(2233,327,248,1,0),(2234,328,244,1,1),(2235,328,245,1,1),(2236,328,246,1,1),(2237,328,247,1,0),(2238,328,248,1,0),(2239,329,244,1,1),(2240,329,245,1,0),(2241,329,246,1,0),(2242,329,247,1,1),(2243,329,248,1,0),(2244,330,244,1,1),(2245,330,245,1,0),(2246,330,246,1,0),(2247,330,247,1,1),(2248,330,248,1,0),(2249,331,244,1,0),(2250,331,245,1,0),(2251,331,246,1,1),(2252,331,247,1,0),(2253,331,248,1,1),(2254,332,244,1,1),(2255,332,245,1,1),(2256,332,246,1,1),(2257,332,247,1,1),(2258,332,248,1,1),(2259,333,244,1,1),(2260,333,245,1,0),(2261,333,246,1,0),(2262,333,247,1,1),(2263,333,248,1,1),(2264,334,244,1,0),(2265,334,245,1,1),(2266,334,246,1,0),(2267,334,247,1,1),(2268,334,248,1,0),(2269,335,244,1,0),(2270,335,245,1,0),(2271,335,246,1,1),(2272,335,247,1,1),(2273,335,248,1,1),(2274,336,244,1,1),(2275,336,245,1,0),(2276,336,246,1,1),(2277,336,247,1,0),(2278,336,248,1,0),(2279,337,244,1,0),(2280,337,245,1,0),(2281,337,246,1,1),(2282,337,247,1,1),(2283,337,248,1,1),(2284,338,244,1,0),(2285,338,245,1,1),(2286,338,246,1,1),(2287,338,247,1,0),(2288,338,248,1,0),(2289,339,244,1,0),(2290,339,245,1,1),(2291,339,246,1,1),(2292,339,247,1,0),(2293,339,248,1,1),(2294,340,244,1,0),(2295,340,245,1,0),(2296,340,246,1,1),(2297,340,247,1,1),(2298,340,248,1,0),(2299,341,244,1,0),(2300,341,245,1,0),(2301,341,246,1,1),(2302,341,247,1,1),(2303,341,248,1,1),(2304,342,244,1,1),(2305,342,245,1,1),(2306,342,246,1,0),(2307,342,247,1,0),(2308,342,248,1,0),(2309,343,244,1,1),(2310,343,245,1,1),(2311,343,246,1,1),(2312,343,247,1,1),(2313,343,248,1,1),(2314,344,244,1,1),(2315,344,245,1,1),(2316,344,246,1,1),(2317,344,247,1,1),(2318,344,248,1,1),(2319,345,244,1,1),(2320,345,245,1,0),(2321,345,246,1,0),(2322,345,247,1,1),(2323,345,248,1,1),(2324,346,244,1,0),(2325,346,245,1,0),(2326,346,246,1,0),(2327,346,247,1,0),(2328,346,248,1,1),(2329,350,267,1,0),(2330,350,268,1,0),(2331,350,269,1,1),(2332,350,274,1,1),(2333,350,275,1,0),(2334,350,270,1,0),(2335,350,271,1,0),(2336,350,272,1,0),(2337,350,273,1,0),(2338,351,267,1,0),(2339,351,268,1,0),(2340,351,269,1,1),(2341,351,274,1,1),(2342,351,275,1,1),(2343,351,270,1,0),(2344,351,271,1,0),(2345,351,272,1,1),(2346,351,273,1,0),(2347,352,267,1,0),(2348,352,268,1,1),(2349,352,269,1,0),(2350,352,274,1,1),(2351,352,275,1,1),(2352,352,270,1,1),(2353,352,271,1,1),(2354,352,272,1,1),(2355,352,273,1,1),(2356,353,267,1,1),(2357,353,268,1,0),(2358,353,269,1,0),(2359,353,274,1,0),(2360,353,275,1,0),(2361,353,270,1,0),(2362,353,271,1,1),(2363,353,272,1,0),(2364,353,273,1,0),(2365,354,267,1,0),(2366,354,268,1,0),(2367,354,269,1,1),(2368,354,274,1,0),(2369,354,275,1,0),(2370,354,270,1,0),(2371,354,271,1,1),(2372,354,272,1,0),(2373,354,273,1,1),(2374,355,267,1,1),(2375,355,268,1,1),(2376,355,269,1,1),(2377,355,274,1,0),(2378,355,275,1,1),(2379,355,270,1,0),(2380,355,271,1,0),(2381,355,272,1,0),(2382,355,273,1,1),(2383,356,267,1,1),(2384,356,268,1,0),(2385,356,269,1,1),(2386,356,274,1,1),(2387,356,275,1,1),(2388,356,270,1,1),(2389,356,271,1,1),(2390,356,272,1,1),(2391,356,273,1,1),(2392,357,267,1,1),(2393,357,268,1,0),(2394,357,269,1,0),(2395,357,274,1,0),(2396,357,275,1,0),(2397,357,270,1,1),(2398,357,271,1,1),(2399,357,272,1,1),(2400,357,273,1,0),(2401,358,267,1,1),(2402,358,268,1,0),(2403,358,269,1,1),(2404,358,274,1,1),(2405,358,275,1,1),(2406,358,270,1,1),(2407,358,271,1,0),(2408,358,272,1,0),(2409,358,273,1,0),(2410,359,267,1,0),(2411,359,268,1,0),(2412,359,269,1,1),(2413,359,274,1,0),(2414,359,275,1,1),(2415,359,270,1,0),(2416,359,271,1,0),(2417,359,272,1,1),(2418,359,273,1,0),(2419,360,267,1,1),(2420,360,268,1,0),(2421,360,269,1,1),(2422,360,274,1,1),(2423,360,275,1,0),(2424,360,270,1,1),(2425,360,271,1,1),(2426,360,272,1,1),(2427,360,273,1,1),(2428,361,267,1,0),(2429,361,268,1,0),(2430,361,269,1,1),(2431,361,274,1,0),(2432,361,275,1,1),(2433,361,270,1,1),(2434,361,271,1,1),(2435,361,272,1,0),(2436,361,273,1,1),(2437,362,267,1,1),(2438,362,268,1,0),(2439,362,269,1,1),(2440,362,274,1,1),(2441,362,275,1,0),(2442,362,270,1,0),(2443,362,271,1,1),(2444,362,272,1,0),(2445,362,273,1,1),(2446,363,267,1,0),(2447,363,268,1,1),(2448,363,269,1,1),(2449,363,274,1,0),(2450,363,275,1,0),(2451,363,270,1,0),(2452,363,271,1,0),(2453,363,272,1,1),(2454,363,273,1,0),(2455,364,267,1,1),(2456,364,268,1,1),(2457,364,269,1,1),(2458,364,274,1,1),(2459,364,275,1,0),(2460,364,270,1,0),(2461,364,271,1,1),(2462,364,272,1,0),(2463,364,273,1,0),(2464,365,267,1,1),(2465,365,268,1,1),(2466,365,269,1,0),(2467,365,274,1,0),(2468,365,275,1,0),(2469,365,270,1,1),(2470,365,271,1,1),(2471,365,272,1,1),(2472,365,273,1,0),(2473,366,267,1,1),(2474,366,268,1,0),(2475,366,269,1,1),(2476,366,274,1,1),(2477,366,275,1,1),(2478,366,270,1,1),(2479,366,271,1,1),(2480,366,272,1,1),(2481,366,273,1,0),(2482,367,267,1,1),(2483,367,268,1,0),(2484,367,269,1,1),(2485,367,274,1,1),(2486,367,275,1,1),(2487,367,270,1,0),(2488,367,271,1,0),(2489,367,272,1,1),(2490,367,273,1,0),(2491,368,267,1,0),(2492,368,268,1,1),(2493,368,269,1,0),(2494,368,274,1,1),(2495,368,275,1,0),(2496,368,270,1,0),(2497,368,271,1,1),(2498,368,272,1,0),(2499,368,273,1,0),(2500,369,267,1,0),(2501,369,268,1,1),(2502,369,269,1,0),(2503,369,274,1,1),(2504,369,275,1,1),(2505,369,270,1,1),(2506,369,271,1,1),(2507,369,272,1,1),(2508,369,273,1,1),(2509,370,267,1,1),(2510,370,268,1,0),(2511,370,269,1,0),(2512,370,274,1,1),(2513,370,275,1,1),(2514,370,270,1,0),(2515,370,271,1,1),(2516,370,272,1,0),(2517,370,273,1,1),(2518,371,267,1,0),(2519,371,268,1,0),(2520,371,269,1,0),(2521,371,274,1,1),(2522,371,275,1,1),(2523,371,270,1,1),(2524,371,271,1,1),(2525,371,272,1,0),(2526,371,273,1,1),(2527,372,267,1,0),(2528,372,268,1,0),(2529,372,269,1,0),(2530,372,274,1,0),(2531,372,275,1,1),(2532,372,270,1,1),(2533,372,271,1,1),(2534,372,272,1,0),(2535,372,273,1,1),(2536,373,267,1,1),(2537,373,268,1,0),(2538,373,269,1,0),(2539,373,274,1,0),(2540,373,275,1,1),(2541,373,270,1,1),(2542,373,271,1,0),(2543,373,272,1,1),(2544,373,273,1,0),(2545,374,267,1,0),(2546,374,268,1,1),(2547,374,269,1,1),(2548,374,274,1,0),(2549,374,275,1,0),(2550,374,270,1,0),(2551,374,271,1,1),(2552,374,272,1,1),(2553,374,273,1,1),(2554,349,319,1,0),(2555,349,323,1,1),(2556,349,322,1,1),(2557,349,321,1,1),(2558,349,320,1,0),(2559,375,284,1,0),(2560,375,285,1,0),(2561,375,286,2,2),(2562,375,287,1,0),(2563,375,288,1,1),(2564,376,284,1,1),(2565,376,285,1,1),(2566,376,286,2,2),(2567,376,287,1,0),(2568,376,288,1,1),(2569,377,284,1,0),(2570,377,285,1,0),(2571,377,286,2,2),(2572,377,287,1,0),(2573,377,288,1,0),(2574,378,284,1,1),(2575,378,285,1,0),(2576,378,286,2,2),(2577,378,287,1,1),(2578,378,288,1,0),(2579,379,284,1,0),(2580,379,285,1,0),(2581,379,286,2,1),(2582,379,287,1,0),(2583,379,288,1,1),(2584,380,284,1,1),(2585,380,285,1,0),(2586,380,286,2,0),(2587,380,287,1,1),(2588,380,288,1,1),(2589,381,284,1,0),(2590,381,285,1,1),(2591,381,286,2,0),(2592,381,287,1,1),(2593,381,288,1,0),(2594,382,284,1,0),(2595,382,285,1,0),(2596,382,286,2,0),(2597,382,287,1,0),(2598,382,288,1,0),(2599,383,284,1,0),(2600,383,285,1,1),(2601,383,286,2,0),(2602,383,287,1,1),(2603,383,288,1,0),(2604,384,284,1,1),(2605,384,285,1,0),(2606,384,286,2,2),(2607,384,287,1,1),(2608,384,288,1,0),(2609,385,284,1,1),(2610,385,285,1,1),(2611,385,286,2,1),(2612,385,287,1,1),(2613,385,288,1,0),(2614,386,284,1,1),(2615,386,285,1,0),(2616,386,286,2,2),(2617,386,287,1,1),(2618,386,288,1,1),(2619,387,284,1,1),(2620,387,285,1,0),(2621,387,286,2,2),(2622,387,287,1,0),(2623,387,288,1,1),(2624,388,284,1,0),(2625,388,285,1,1),(2626,388,286,2,0),(2627,388,287,1,0),(2628,388,288,1,0),(2629,389,284,1,1),(2630,389,285,1,0),(2631,389,286,2,1),(2632,389,287,1,1),(2633,389,288,1,1),(2634,390,284,1,1),(2635,390,285,1,1),(2636,390,286,2,0),(2637,390,287,1,0),(2638,390,288,1,1),(2639,391,284,1,0),(2640,391,285,1,1),(2641,391,286,2,2),(2642,391,287,1,0),(2643,391,288,1,0),(2644,392,284,1,1),(2645,392,285,1,1),(2646,392,286,2,1),(2647,392,287,1,0),(2648,392,288,1,1),(2649,393,284,1,1),(2650,393,285,1,0),(2651,393,286,2,2),(2652,393,287,1,0),(2653,393,288,1,1),(2654,394,284,1,0),(2655,394,285,1,0),(2656,394,286,2,1),(2657,394,287,1,0),(2658,394,288,1,1),(2659,395,284,1,0),(2660,395,285,1,1),(2661,395,286,2,0),(2662,395,287,1,0),(2663,395,288,1,0),(2664,396,284,1,1),(2665,396,285,1,1),(2666,396,286,2,2),(2667,396,287,1,1),(2668,396,288,1,0),(2669,397,284,1,0),(2670,397,285,1,0),(2671,397,286,2,0),(2672,397,287,1,1),(2673,397,288,1,1),(2674,398,284,1,0),(2675,398,285,1,1),(2676,398,286,2,2),(2677,398,287,1,1),(2678,398,288,1,1),(2679,399,284,1,1),(2680,399,285,1,0),(2681,399,286,2,2),(2682,399,287,1,1),(2683,399,288,1,1),(2684,401,903,1,0),(2685,401,904,1,1),(2686,401,905,1,0),(2687,401,906,1,0),(2688,401,907,1,0),(2689,401,908,1,0),(2690,401,909,1,0),(2691,401,910,1,1),(2692,401,911,1,1),(2693,401,912,1,1),(2694,402,903,1,0),(2695,402,904,1,1),(2696,402,905,1,0),(2697,402,906,1,1),(2698,402,907,1,0),(2699,402,908,1,0),(2700,402,909,1,1),(2701,402,910,1,1),(2702,402,911,1,1),(2703,402,912,1,0),(2704,403,903,1,1),(2705,403,904,1,0),(2706,403,905,1,1),(2707,403,906,1,0),(2708,403,907,1,0),(2709,403,908,1,0),(2710,403,909,1,0),(2711,403,910,1,1),(2712,403,911,1,1),(2713,403,912,1,0),(2714,404,903,1,0),(2715,404,904,1,1),(2716,404,905,1,1),(2717,404,906,1,1),(2718,404,907,1,0),(2719,404,908,1,0),(2720,404,909,1,0),(2721,404,910,1,1),(2722,404,911,1,0),(2723,404,912,1,1),(2724,405,903,1,1),(2725,405,904,1,1),(2726,405,905,1,0),(2727,405,906,1,1),(2728,405,907,1,1),(2729,405,908,1,0),(2730,405,909,1,0),(2731,405,910,1,0),(2732,405,911,1,1),(2733,405,912,1,1),(2734,406,903,1,0),(2735,406,904,1,1),(2736,406,905,1,1),(2737,406,906,1,1),(2738,406,907,1,1),(2739,406,908,1,1),(2740,406,909,1,1),(2741,406,910,1,0),(2742,406,911,1,1),(2743,406,912,1,0),(2744,407,903,1,0),(2745,407,904,1,1),(2746,407,905,1,1),(2747,407,906,1,1),(2748,407,907,1,0),(2749,407,908,1,1),(2750,407,909,1,0),(2751,407,910,1,1),(2752,407,911,1,0),(2753,407,912,1,1),(2754,408,903,1,0),(2755,408,904,1,0),(2756,408,905,1,0),(2757,408,906,1,1),(2758,408,907,1,0),(2759,408,908,1,1),(2760,408,909,1,0),(2761,408,910,1,0),(2762,408,911,1,1),(2763,408,912,1,0),(2764,409,903,1,0),(2765,409,904,1,1),(2766,409,905,1,1),(2767,409,906,1,0),(2768,409,907,1,0),(2769,409,908,1,1),(2770,409,909,1,0),(2771,409,910,1,1),(2772,409,911,1,0),(2773,409,912,1,0),(2774,410,903,1,0),(2775,410,904,1,0),(2776,410,905,1,1),(2777,410,906,1,0),(2778,410,907,1,0),(2779,410,908,1,0),(2780,410,909,1,0),(2781,410,910,1,1),(2782,410,911,1,0),(2783,410,912,1,1),(2784,411,903,1,0),(2785,411,904,1,1),(2786,411,905,1,1),(2787,411,906,1,1),(2788,411,907,1,0),(2789,411,908,1,1),(2790,411,909,1,0),(2791,411,910,1,0),(2792,411,911,1,0),(2793,411,912,1,1),(2794,412,903,1,0),(2795,412,904,1,1),(2796,412,905,1,0),(2797,412,906,1,1),(2798,412,907,1,1),(2799,412,908,1,1),(2800,412,909,1,0),(2801,412,910,1,1),(2802,412,911,1,0),(2803,412,912,1,1),(2804,413,903,1,1),(2805,413,904,1,0),(2806,413,905,1,1),(2807,413,906,1,1),(2808,413,907,1,1),(2809,413,908,1,1),(2810,413,909,1,0),(2811,413,910,1,0),(2812,413,911,1,1),(2813,413,912,1,0),(2814,414,903,1,0),(2815,414,904,1,0),(2816,414,905,1,1),(2817,414,906,1,1),(2818,414,907,1,1),(2819,414,908,1,0),(2820,414,909,1,0),(2821,414,910,1,0),(2822,414,911,1,0),(2823,414,912,1,0),(2824,415,903,1,0),(2825,415,904,1,1),(2826,415,905,1,0),(2827,415,906,1,1),(2828,415,907,1,0),(2829,415,908,1,1),(2830,415,909,1,1),(2831,415,910,1,0),(2832,415,911,1,0),(2833,415,912,1,1),(2834,416,903,1,0),(2835,416,904,1,0),(2836,416,905,1,1),(2837,416,906,1,1),(2838,416,907,1,1),(2839,416,908,1,1),(2840,416,909,1,0),(2841,416,910,1,0),(2842,416,911,1,0),(2843,416,912,1,0),(2844,417,903,1,1),(2845,417,904,1,0),(2846,417,905,1,1),(2847,417,906,1,0),(2848,417,907,1,1),(2849,417,908,1,0),(2850,417,909,1,0),(2851,417,910,1,0),(2852,417,911,1,0),(2853,417,912,1,1),(2854,418,903,1,0),(2855,418,904,1,1),(2856,418,905,1,0),(2857,418,906,1,0),(2858,418,907,1,1),(2859,418,908,1,1),(2860,418,909,1,1),(2861,418,910,1,0),(2862,418,911,1,1),(2863,418,912,1,0),(2864,419,903,1,1),(2865,419,904,1,0),(2866,419,905,1,1),(2867,419,906,1,0),(2868,419,907,1,1),(2869,419,908,1,1),(2870,419,909,1,1),(2871,419,910,1,1),(2872,419,911,1,0),(2873,419,912,1,0),(2874,420,903,1,0),(2875,420,904,1,0),(2876,420,905,1,1),(2877,420,906,1,1),(2878,420,907,1,1),(2879,420,908,1,1),(2880,420,909,1,1),(2881,420,910,1,0),(2882,420,911,1,0),(2883,420,912,1,0),(2884,421,903,1,0),(2885,421,904,1,1),(2886,421,905,1,1),(2887,421,906,1,1),(2888,421,907,1,0),(2889,421,908,1,0),(2890,421,909,1,1),(2891,421,910,1,0),(2892,421,911,1,0),(2893,421,912,1,1),(2894,422,903,1,1),(2895,422,904,1,1),(2896,422,905,1,1),(2897,422,906,1,1),(2898,422,907,1,1),(2899,422,908,1,1),(2900,422,909,1,1),(2901,422,910,1,1),(2902,422,911,1,0),(2903,422,912,1,0),(2904,423,903,1,1),(2905,423,904,1,0),(2906,423,905,1,0),(2907,423,906,1,0),(2908,423,907,1,0),(2909,423,908,1,0),(2910,423,909,1,1),(2911,423,910,1,0),(2912,423,911,1,0),(2913,423,912,1,1),(2914,424,903,1,0),(2915,424,904,1,0),(2916,424,905,1,1),(2917,424,906,1,1),(2918,424,907,1,0),(2919,424,908,1,0),(2920,424,909,1,1),(2921,424,910,1,0),(2922,424,911,1,0),(2923,424,912,1,1),(2924,425,903,1,1),(2925,425,904,1,0),(2926,425,905,1,0),(2927,425,906,1,0),(2928,425,907,1,0),(2929,425,908,1,0),(2930,425,909,1,0),(2931,425,910,1,0),(2932,425,911,1,1),(2933,425,912,1,0),(2934,426,913,1,0),(2935,426,914,1,0),(2936,426,915,1,0),(2937,426,916,1,0),(2938,426,917,1,1),(2939,426,918,1,1),(2940,426,919,1,0),(2941,426,920,1,0),(2942,426,921,1,0),(2943,426,922,1,1),(2944,427,913,1,0),(2945,427,914,1,0),(2946,427,915,1,1),(2947,427,916,1,0),(2948,427,917,1,0),(2949,427,918,1,0),(2950,427,919,1,1),(2951,427,920,1,0),(2952,427,921,1,0),(2953,427,922,1,0),(2954,428,913,1,1),(2955,428,914,1,1),(2956,428,915,1,0),(2957,428,916,1,0),(2958,428,917,1,1),(2959,428,918,1,0),(2960,428,919,1,1),(2961,428,920,1,1),(2962,428,921,1,1),(2963,428,922,1,0),(2964,429,913,1,0),(2965,429,914,1,1),(2966,429,915,1,1),(2967,429,916,1,1),(2968,429,917,1,0),(2969,429,918,1,0),(2970,429,919,1,0),(2971,429,920,1,0),(2972,429,921,1,1),(2973,429,922,1,1),(2974,430,913,1,0),(2975,430,914,1,0),(2976,430,915,1,1),(2977,430,916,1,0),(2978,430,917,1,1),(2979,430,918,1,0),(2980,430,919,1,0),(2981,430,920,1,0),(2982,430,921,1,0),(2983,430,922,1,0),(2984,431,913,1,1),(2985,431,914,1,0),(2986,431,915,1,1),(2987,431,916,1,1),(2988,431,917,1,0),(2989,431,918,1,0),(2990,431,919,1,1),(2991,431,920,1,1),(2992,431,921,1,1),(2993,431,922,1,1),(2994,432,913,1,0),(2995,432,914,1,1),(2996,432,915,1,0),(2997,432,916,1,1),(2998,432,917,1,1),(2999,432,918,1,0),(3000,432,919,1,1),(3001,432,920,1,1),(3002,432,921,1,1),(3003,432,922,1,1),(3004,433,913,1,0),(3005,433,914,1,1),(3006,433,915,1,1),(3007,433,916,1,0),(3008,433,917,1,0),(3009,433,918,1,1),(3010,433,919,1,0),(3011,433,920,1,1),(3012,433,921,1,1),(3013,433,922,1,0),(3014,434,913,1,0),(3015,434,914,1,0),(3016,434,915,1,0),(3017,434,916,1,1),(3018,434,917,1,0),(3019,434,918,1,0),(3020,434,919,1,1),(3021,434,920,1,0),(3022,434,921,1,1),(3023,434,922,1,1),(3024,435,913,1,0),(3025,435,914,1,0),(3026,435,915,1,1),(3027,435,916,1,1),(3028,435,917,1,0),(3029,435,918,1,1),(3030,435,919,1,1),(3031,435,920,1,0),(3032,435,921,1,0),(3033,435,922,1,0),(3034,436,913,1,0),(3035,436,914,1,1),(3036,436,915,1,0),(3037,436,916,1,1),(3038,436,917,1,0),(3039,436,918,1,0),(3040,436,919,1,1),(3041,436,920,1,1),(3042,436,921,1,1),(3043,436,922,1,0),(3044,437,913,1,1),(3045,437,914,1,0),(3046,437,915,1,0),(3047,437,916,1,1),(3048,437,917,1,1),(3049,437,918,1,0),(3050,437,919,1,1),(3051,437,920,1,0),(3052,437,921,1,0),(3053,437,922,1,0),(3054,438,913,1,0),(3055,438,914,1,0),(3056,438,915,1,1),(3057,438,916,1,0),(3058,438,917,1,0),(3059,438,918,1,1),(3060,438,919,1,1),(3061,438,920,1,0),(3062,438,921,1,0),(3063,438,922,1,1),(3064,439,913,1,0),(3065,439,914,1,1),(3066,439,915,1,0),(3067,439,916,1,0),(3068,439,917,1,1),(3069,439,918,1,0),(3070,439,919,1,1),(3071,439,920,1,0),(3072,439,921,1,0),(3073,439,922,1,0),(3074,440,913,1,1),(3075,440,914,1,1),(3076,440,915,1,0),(3077,440,916,1,0),(3078,440,917,1,0),(3079,440,918,1,0),(3080,440,919,1,0),(3081,440,920,1,1),(3082,440,921,1,1),(3083,440,922,1,1),(3084,441,913,1,1),(3085,441,914,1,0),(3086,441,915,1,1),(3087,441,916,1,0),(3088,441,917,1,0),(3089,441,918,1,1),(3090,441,919,1,1),(3091,441,920,1,0),(3092,441,921,1,1),(3093,441,922,1,0),(3094,442,913,1,0),(3095,442,914,1,1),(3096,442,915,1,1),(3097,442,916,1,0),(3098,442,917,1,0),(3099,442,918,1,0),(3100,442,919,1,1),(3101,442,920,1,0),(3102,442,921,1,0),(3103,442,922,1,1),(3104,443,913,1,1),(3105,443,914,1,0),(3106,443,915,1,0),(3107,443,916,1,1),(3108,443,917,1,1),(3109,443,918,1,1),(3110,443,919,1,0),(3111,443,920,1,1),(3112,443,921,1,1),(3113,443,922,1,1),(3114,444,913,1,0),(3115,444,914,1,0),(3116,444,915,1,0),(3117,444,916,1,1),(3118,444,917,1,0),(3119,444,918,1,1),(3120,444,919,1,1),(3121,444,920,1,1),(3122,444,921,1,0),(3123,444,922,1,0),(3124,445,913,1,0),(3125,445,914,1,1),(3126,445,915,1,0),(3127,445,916,1,0),(3128,445,917,1,1),(3129,445,918,1,0),(3130,445,919,1,0),(3131,445,920,1,0),(3132,445,921,1,1),(3133,445,922,1,1),(3134,446,913,1,1),(3135,446,914,1,0),(3136,446,915,1,0),(3137,446,916,1,1),(3138,446,917,1,1),(3139,446,918,1,1),(3140,446,919,1,1),(3141,446,920,1,0),(3142,446,921,1,1),(3143,446,922,1,0),(3144,447,913,1,0),(3145,447,914,1,1),(3146,447,915,1,0),(3147,447,916,1,1),(3148,447,917,1,1),(3149,447,918,1,0),(3150,447,919,1,0),(3151,447,920,1,1),(3152,447,921,1,0),(3153,447,922,1,0),(3154,448,913,1,0),(3155,448,914,1,1),(3156,448,915,1,1),(3157,448,916,1,0),(3158,448,917,1,0),(3159,448,918,1,0),(3160,448,919,1,0),(3161,448,920,1,0),(3162,448,921,1,0),(3163,448,922,1,1),(3164,449,913,1,0),(3165,449,914,1,0),(3166,449,915,1,0),(3167,449,916,1,1),(3168,449,917,1,1),(3169,449,918,1,0),(3170,449,919,1,0),(3171,449,920,1,1),(3172,449,921,1,0),(3173,449,922,1,1),(3174,450,913,1,0),(3175,450,914,1,1),(3176,450,915,1,0),(3177,450,916,1,1),(3178,450,917,1,1),(3179,450,918,1,1),(3180,450,919,1,0),(3181,450,920,1,0),(3182,450,921,1,1),(3183,450,922,1,1),(3184,451,829,1,1),(3185,451,830,1,1),(3186,451,831,1,0),(3187,451,832,1,0),(3188,451,833,1,1),(3189,451,834,1,0),(3190,451,835,1,0),(3191,451,836,1,1),(3192,451,837,1,1),(3193,452,829,1,0),(3194,452,830,1,1),(3195,452,831,1,0),(3196,452,832,1,0),(3197,452,833,1,0),(3198,452,834,1,1),(3199,452,835,1,0),(3200,452,836,1,1),(3201,452,837,1,1),(3202,453,829,1,1),(3203,453,830,1,1),(3204,453,831,1,1),(3205,453,832,1,1),(3206,453,833,1,1),(3207,453,834,1,1),(3208,453,835,1,0),(3209,453,836,1,1),(3210,453,837,1,0),(3211,454,829,1,1),(3212,454,830,1,1),(3213,454,831,1,1),(3214,454,832,1,1),(3215,454,833,1,0),(3216,454,834,1,0),(3217,454,835,1,0),(3218,454,836,1,0),(3219,454,837,1,0),(3220,455,829,1,0),(3221,455,830,1,1),(3222,455,831,1,0),(3223,455,832,1,0),(3224,455,833,1,1),(3225,455,834,1,0),(3226,455,835,1,0),(3227,455,836,1,0),(3228,455,837,1,1),(3229,456,829,1,1),(3230,456,830,1,1),(3231,456,831,1,1),(3232,456,832,1,0),(3233,456,833,1,0),(3234,456,834,1,0),(3235,456,835,1,1),(3236,456,836,1,0),(3237,456,837,1,0),(3238,457,829,1,0),(3239,457,830,1,1),(3240,457,831,1,0),(3241,457,832,1,1),(3242,457,833,1,0),(3243,457,834,1,1),(3244,457,835,1,1),(3245,457,836,1,1),(3246,457,837,1,1),(3247,458,829,1,0),(3248,458,830,1,0),(3249,458,831,1,0),(3250,458,832,1,0),(3251,458,833,1,1),(3252,458,834,1,0),(3253,458,835,1,1),(3254,458,836,1,0),(3255,458,837,1,1),(3256,459,829,1,0),(3257,459,830,1,1),(3258,459,831,1,1),(3259,459,832,1,0),(3260,459,833,1,0),(3261,459,834,1,1),(3262,459,835,1,0),(3263,459,836,1,1),(3264,459,837,1,1),(3265,460,829,1,0),(3266,460,830,1,1),(3267,460,831,1,0),(3268,460,832,1,1),(3269,460,833,1,0),(3270,460,834,1,0),(3271,460,835,1,0),(3272,460,836,1,0),(3273,460,837,1,0),(3274,461,829,1,1),(3275,461,830,1,1),(3276,461,831,1,0),(3277,461,832,1,1),(3278,461,833,1,0),(3279,461,834,1,1),(3280,461,835,1,1),(3281,461,836,1,0),(3282,461,837,1,1),(3283,462,829,1,1),(3284,462,830,1,0),(3285,462,831,1,1),(3286,462,832,1,0),(3287,462,833,1,0),(3288,462,834,1,1),(3289,462,835,1,0),(3290,462,836,1,0),(3291,462,837,1,1),(3292,463,829,1,0),(3293,463,830,1,1),(3294,463,831,1,1),(3295,463,832,1,1),(3296,463,833,1,1),(3297,463,834,1,0),(3298,463,835,1,0),(3299,463,836,1,1),(3300,463,837,1,0),(3301,464,829,1,1),(3302,464,830,1,1),(3303,464,831,1,0),(3304,464,832,1,1),(3305,464,833,1,1),(3306,464,834,1,0),(3307,464,835,1,0),(3308,464,836,1,1),(3309,464,837,1,1),(3310,465,829,1,0),(3311,465,830,1,0),(3312,465,831,1,1),(3313,465,832,1,0),(3314,465,833,1,1),(3315,465,834,1,1),(3316,465,835,1,1),(3317,465,836,1,1),(3318,465,837,1,1),(3319,466,829,1,0),(3320,466,830,1,0),(3321,466,831,1,1),(3322,466,832,1,0),(3323,466,833,1,1),(3324,466,834,1,1),(3325,466,835,1,0),(3326,466,836,1,1),(3327,466,837,1,1),(3328,467,829,1,0),(3329,467,830,1,0),(3330,467,831,1,0),(3331,467,832,1,0),(3332,467,833,1,1),(3333,467,834,1,1),(3334,467,835,1,0),(3335,467,836,1,1),(3336,467,837,1,0),(3337,468,829,1,0),(3338,468,830,1,0),(3339,468,831,1,0),(3340,468,832,1,1),(3341,468,833,1,0),(3342,468,834,1,1),(3343,468,835,1,0),(3344,468,836,1,1),(3345,468,837,1,0),(3346,469,829,1,1),(3347,469,830,1,0),(3348,469,831,1,1),(3349,469,832,1,0),(3350,469,833,1,1),(3351,469,834,1,0),(3352,469,835,1,1),(3353,469,836,1,0),(3354,469,837,1,0),(3355,470,829,1,1),(3356,470,830,1,0),(3357,470,831,1,0),(3358,470,832,1,0),(3359,470,833,1,0),(3360,470,834,1,0),(3361,470,835,1,0),(3362,470,836,1,1),(3363,470,837,1,0),(3364,471,829,1,0),(3365,471,830,1,0),(3366,471,831,1,0),(3367,471,832,1,0),(3368,471,833,1,1),(3369,471,834,1,0),(3370,471,835,1,1),(3371,471,836,1,0),(3372,471,837,1,0),(3373,472,829,1,0),(3374,472,830,1,0),(3375,472,831,1,1),(3376,472,832,1,0),(3377,472,833,1,1),(3378,472,834,1,0),(3379,472,835,1,0),(3380,472,836,1,0),(3381,472,837,1,1),(3382,473,829,1,1),(3383,473,830,1,0),(3384,473,831,1,0),(3385,473,832,1,0),(3386,473,833,1,0),(3387,473,834,1,1),(3388,473,835,1,1),(3389,473,836,1,1),(3390,473,837,1,0),(3391,474,829,1,0),(3392,474,830,1,0),(3393,474,831,1,1),(3394,474,832,1,1),(3395,474,833,1,0),(3396,474,834,1,0),(3397,474,835,1,1),(3398,474,836,1,1),(3399,474,837,1,1),(3400,475,829,1,0),(3401,475,830,1,0),(3402,475,831,1,1),(3403,475,832,1,1),(3404,475,833,1,0),(3405,475,834,1,1),(3406,475,835,1,0),(3407,475,836,1,1),(3408,475,837,1,0),(3409,476,818,1,1),(3410,476,819,1,0),(3411,476,820,1,1),(3412,476,821,1,1),(3413,476,822,1,0),(3414,476,823,1,1),(3415,476,824,1,0),(3416,476,825,1,1),(3417,476,826,1,1),(3418,477,818,1,0),(3419,477,819,1,1),(3420,477,820,1,0),(3421,477,821,1,1),(3422,477,822,1,0),(3423,477,823,1,1),(3424,477,824,1,1),(3425,477,825,1,0),(3426,477,826,1,1),(3427,478,818,1,0),(3428,478,819,1,1),(3429,478,820,1,0),(3430,478,821,1,1),(3431,478,822,1,1),(3432,478,823,1,0),(3433,478,824,1,0),(3434,478,825,1,0),(3435,478,826,1,0),(3436,479,818,1,1),(3437,479,819,1,1),(3438,479,820,1,1),(3439,479,821,1,1),(3440,479,822,1,1),(3441,479,823,1,1),(3442,479,824,1,1),(3443,479,825,1,0),(3444,479,826,1,0),(3445,480,818,1,1),(3446,480,819,1,1),(3447,480,820,1,1),(3448,480,821,1,0),(3449,480,822,1,0),(3450,480,823,1,1),(3451,480,824,1,0),(3452,480,825,1,0),(3453,480,826,1,0),(3454,481,818,1,0),(3455,481,819,1,1),(3456,481,820,1,1),(3457,481,821,1,1),(3458,481,822,1,0),(3459,481,823,1,0),(3460,481,824,1,1),(3461,481,825,1,1),(3462,481,826,1,1),(3463,482,818,1,1),(3464,482,819,1,0),(3465,482,820,1,0),(3466,482,821,1,1),(3467,482,822,1,0),(3468,482,823,1,0),(3469,482,824,1,0),(3470,482,825,1,0),(3471,482,826,1,1),(3472,483,818,1,0),(3473,483,819,1,0),(3474,483,820,1,0),(3475,483,821,1,0),(3476,483,822,1,0),(3477,483,823,1,1),(3478,483,824,1,1),(3479,483,825,1,0),(3480,483,826,1,0),(3481,484,818,1,0),(3482,484,819,1,0),(3483,484,820,1,1),(3484,484,821,1,0),(3485,484,822,1,0),(3486,484,823,1,0),(3487,484,824,1,0),(3488,484,825,1,0),(3489,484,826,1,1),(3490,485,818,1,0),(3491,485,819,1,0),(3492,485,820,1,1),(3493,485,821,1,1),(3494,485,822,1,0),(3495,485,823,1,1),(3496,485,824,1,0),(3497,485,825,1,0),(3498,485,826,1,1),(3499,486,818,1,0),(3500,486,819,1,0),(3501,486,820,1,0),(3502,486,821,1,1),(3503,486,822,1,0),(3504,486,823,1,0),(3505,486,824,1,1),(3506,486,825,1,0),(3507,486,826,1,1),(3508,487,818,1,0),(3509,487,819,1,1),(3510,487,820,1,1),(3511,487,821,1,1),(3512,487,822,1,1),(3513,487,823,1,1),(3514,487,824,1,1),(3515,487,825,1,0),(3516,487,826,1,0),(3517,488,818,1,1),(3518,488,819,1,0),(3519,488,820,1,0),(3520,488,821,1,0),(3521,488,822,1,0),(3522,488,823,1,0),(3523,488,824,1,1),(3524,488,825,1,0),(3525,488,826,1,1),(3526,489,818,1,0),(3527,489,819,1,1),(3528,489,820,1,0),(3529,489,821,1,1),(3530,489,822,1,1),(3531,489,823,1,1),(3532,489,824,1,0),(3533,489,825,1,0),(3534,489,826,1,0),(3535,490,818,1,1),(3536,490,819,1,1),(3537,490,820,1,1),(3538,490,821,1,1),(3539,490,822,1,1),(3540,490,823,1,1),(3541,490,824,1,1),(3542,490,825,1,1),(3543,490,826,1,0),(3544,491,818,1,0),(3545,491,819,1,1),(3546,491,820,1,0),(3547,491,821,1,0),(3548,491,822,1,0),(3549,491,823,1,0),(3550,491,824,1,0),(3551,491,825,1,0),(3552,491,826,1,0),(3553,492,818,1,0),(3554,492,819,1,0),(3555,492,820,1,0),(3556,492,821,1,0),(3557,492,822,1,1),(3558,492,823,1,1),(3559,492,824,1,1),(3560,492,825,1,1),(3561,492,826,1,0),(3562,493,818,1,1),(3563,493,819,1,1),(3564,493,820,1,0),(3565,493,821,1,0),(3566,493,822,1,0),(3567,493,823,1,0),(3568,493,824,1,0),(3569,493,825,1,1),(3570,493,826,1,1),(3571,494,818,1,1),(3572,494,819,1,0),(3573,494,820,1,1),(3574,494,821,1,0),(3575,494,822,1,0),(3576,494,823,1,1),(3577,494,824,1,1),(3578,494,825,1,0),(3579,494,826,1,1),(3580,495,818,1,1),(3581,495,819,1,0),(3582,495,820,1,0),(3583,495,821,1,0),(3584,495,822,1,1),(3585,495,823,1,0),(3586,495,824,1,0),(3587,495,825,1,1),(3588,495,826,1,0),(3589,496,818,1,0),(3590,496,819,1,0),(3591,496,820,1,0),(3592,496,821,1,0),(3593,496,822,1,1),(3594,496,823,1,1),(3595,496,824,1,0),(3596,496,825,1,0),(3597,496,826,1,1),(3598,497,818,1,0),(3599,497,819,1,1),(3600,497,820,1,1),(3601,497,821,1,0),(3602,497,822,1,0),(3603,497,823,1,0),(3604,497,824,1,0),(3605,497,825,1,0),(3606,497,826,1,0),(3607,498,818,1,0),(3608,498,819,1,0),(3609,498,820,1,0),(3610,498,821,1,0),(3611,498,822,1,1),(3612,498,823,1,0),(3613,498,824,1,1),(3614,498,825,1,1),(3615,498,826,1,0),(3616,499,818,1,0),(3617,499,819,1,1),(3618,499,820,1,1),(3619,499,821,1,1),(3620,499,822,1,0),(3621,499,823,1,0),(3622,499,824,1,0),(3623,499,825,1,1),(3624,499,826,1,1),(3625,500,818,1,1),(3626,500,819,1,0),(3627,500,820,1,1),(3628,500,821,1,1),(3629,500,822,1,0),(3630,500,823,1,0),(3631,500,824,1,1),(3632,500,825,1,0),(3633,500,826,1,0),(3634,501,903,1,1),(3635,501,904,1,0),(3636,501,905,1,0),(3637,501,906,1,0),(3638,501,907,1,1),(3639,501,908,1,0),(3640,501,909,1,1),(3641,501,910,1,0),(3642,501,911,1,1),(3643,501,912,1,1),(3644,502,903,1,1),(3645,502,904,1,0),(3646,502,905,1,1),(3647,502,906,1,1),(3648,502,907,1,1),(3649,502,908,1,1),(3650,502,909,1,0),(3651,502,910,1,1),(3652,502,911,1,0),(3653,502,912,1,1),(3654,503,903,1,1),(3655,503,904,1,0),(3656,503,905,1,0),(3657,503,906,1,0),(3658,503,907,1,0),(3659,503,908,1,0),(3660,503,909,1,1),(3661,503,910,1,1),(3662,503,911,1,0),(3663,503,912,1,1),(3664,504,903,1,0),(3665,504,904,1,1),(3666,504,905,1,1),(3667,504,906,1,1),(3668,504,907,1,0),(3669,504,908,1,1),(3670,504,909,1,0),(3671,504,910,1,0),(3672,504,911,1,0),(3673,504,912,1,1),(3674,505,903,1,0),(3675,505,904,1,0),(3676,505,905,1,0),(3677,505,906,1,1),(3678,505,907,1,1),(3679,505,908,1,0),(3680,505,909,1,0),(3681,505,910,1,0),(3682,505,911,1,0),(3683,505,912,1,1),(3684,506,903,1,0),(3685,506,904,1,1),(3686,506,905,1,1),(3687,506,906,1,0),(3688,506,907,1,0),(3689,506,908,1,0),(3690,506,909,1,0),(3691,506,910,1,0),(3692,506,911,1,1),(3693,506,912,1,0),(3694,507,903,1,1),(3695,507,904,1,1),(3696,507,905,1,0),(3697,507,906,1,0),(3698,507,907,1,1),(3699,507,908,1,0),(3700,507,909,1,0),(3701,507,910,1,1),(3702,507,911,1,0),(3703,507,912,1,1),(3704,508,903,1,1),(3705,508,904,1,1),(3706,508,905,1,0),(3707,508,906,1,1),(3708,508,907,1,0),(3709,508,908,1,0),(3710,508,909,1,0),(3711,508,910,1,1),(3712,508,911,1,0),(3713,508,912,1,0),(3714,509,903,1,1),(3715,509,904,1,1),(3716,509,905,1,0),(3717,509,906,1,0),(3718,509,907,1,1),(3719,509,908,1,0),(3720,509,909,1,0),(3721,509,910,1,1),(3722,509,911,1,0),(3723,509,912,1,0),(3724,510,903,1,1),(3725,510,904,1,1),(3726,510,905,1,0),(3727,510,906,1,1),(3728,510,907,1,1),(3729,510,908,1,1),(3730,510,909,1,1),(3731,510,910,1,0),(3732,510,911,1,1),(3733,510,912,1,0),(3734,511,903,1,1),(3735,511,904,1,0),(3736,511,905,1,1),(3737,511,906,1,0),(3738,511,907,1,0),(3739,511,908,1,1),(3740,511,909,1,0),(3741,511,910,1,0),(3742,511,911,1,0),(3743,511,912,1,1),(3744,512,903,1,1),(3745,512,904,1,1),(3746,512,905,1,1),(3747,512,906,1,1),(3748,512,907,1,0),(3749,512,908,1,0),(3750,512,909,1,0),(3751,512,910,1,0),(3752,512,911,1,0),(3753,512,912,1,1),(3754,513,903,1,0),(3755,513,904,1,0),(3756,513,905,1,1),(3757,513,906,1,1),(3758,513,907,1,0),(3759,513,908,1,0),(3760,513,909,1,0),(3761,513,910,1,1),(3762,513,911,1,1),(3763,513,912,1,1),(3764,514,903,1,0),(3765,514,904,1,0),(3766,514,905,1,0),(3767,514,906,1,1),(3768,514,907,1,0),(3769,514,908,1,0),(3770,514,909,1,0),(3771,514,910,1,1),(3772,514,911,1,0),(3773,514,912,1,0),(3774,515,903,1,1),(3775,515,904,1,0),(3776,515,905,1,0),(3777,515,906,1,1),(3778,515,907,1,0),(3779,515,908,1,0),(3780,515,909,1,1),(3781,515,910,1,0),(3782,515,911,1,0),(3783,515,912,1,0),(3784,516,903,1,0),(3785,516,904,1,0),(3786,516,905,1,0),(3787,516,906,1,0),(3788,516,907,1,1),(3789,516,908,1,1),(3790,516,909,1,0),(3791,516,910,1,1),(3792,516,911,1,0),(3793,516,912,1,1),(3794,517,903,1,0),(3795,517,904,1,1),(3796,517,905,1,1),(3797,517,906,1,0),(3798,517,907,1,0),(3799,517,908,1,1),(3800,517,909,1,1),(3801,517,910,1,1),(3802,517,911,1,0),(3803,517,912,1,0),(3804,518,903,1,0),(3805,518,904,1,0),(3806,518,905,1,0),(3807,518,906,1,0),(3808,518,907,1,0),(3809,518,908,1,1),(3810,518,909,1,1),(3811,518,910,1,1),(3812,518,911,1,1),(3813,518,912,1,0),(3814,519,903,1,1),(3815,519,904,1,1),(3816,519,905,1,1),(3817,519,906,1,1),(3818,519,907,1,0),(3819,519,908,1,1),(3820,519,909,1,1),(3821,519,910,1,1),(3822,519,911,1,1),(3823,519,912,1,0),(3824,520,903,1,0),(3825,520,904,1,1),(3826,520,905,1,0),(3827,520,906,1,1),(3828,520,907,1,0),(3829,520,908,1,1),(3830,520,909,1,1),(3831,520,910,1,0),(3832,520,911,1,0),(3833,520,912,1,0),(3834,521,903,1,1),(3835,521,904,1,0),(3836,521,905,1,0),(3837,521,906,1,0),(3838,521,907,1,1),(3839,521,908,1,1),(3840,521,909,1,1),(3841,521,910,1,1),(3842,521,911,1,1),(3843,521,912,1,0),(3844,522,903,1,0),(3845,522,904,1,0),(3846,522,905,1,0),(3847,522,906,1,1),(3848,522,907,1,0),(3849,522,908,1,0),(3850,522,909,1,0),(3851,522,910,1,1),(3852,522,911,1,1),(3853,522,912,1,0),(3854,523,903,1,0),(3855,523,904,1,1),(3856,523,905,1,0),(3857,523,906,1,1),(3858,523,907,1,0),(3859,523,908,1,0),(3860,523,909,1,0),(3861,523,910,1,1),(3862,523,911,1,1),(3863,523,912,1,0),(3864,524,903,1,1),(3865,524,904,1,0),(3866,524,905,1,0),(3867,524,906,1,0),(3868,524,907,1,0),(3869,524,908,1,1),(3870,524,909,1,0),(3871,524,910,1,1),(3872,524,911,1,1),(3873,524,912,1,1),(3874,525,903,1,0),(3875,525,904,1,0),(3876,525,905,1,1),(3877,525,906,1,1),(3878,525,907,1,0),(3879,525,908,1,0),(3880,525,909,1,1),(3881,525,910,1,0),(3882,525,911,1,1),(3883,525,912,1,1),(3884,526,913,1,0),(3885,526,914,1,1),(3886,526,915,1,1),(3887,526,916,1,1),(3888,526,917,1,1),(3889,526,918,1,1),(3890,526,919,1,1),(3891,526,920,1,0),(3892,526,921,1,1),(3893,526,922,1,0),(3894,527,913,1,0),(3895,527,914,1,0),(3896,527,915,1,0),(3897,527,916,1,1),(3898,527,917,1,1),(3899,527,918,1,0),(3900,527,919,1,0),(3901,527,920,1,0),(3902,527,921,1,1),(3903,527,922,1,0),(3904,528,913,1,1),(3905,528,914,1,0),(3906,528,915,1,1),(3907,528,916,1,0),(3908,528,917,1,1),(3909,528,918,1,0),(3910,528,919,1,1),(3911,528,920,1,0),(3912,528,921,1,0),(3913,528,922,1,1),(3914,529,913,1,1),(3915,529,914,1,0),(3916,529,915,1,0),(3917,529,916,1,0),(3918,529,917,1,1),(3919,529,918,1,1),(3920,529,919,1,1),(3921,529,920,1,0),(3922,529,921,1,1),(3923,529,922,1,1),(3924,530,913,1,0),(3925,530,914,1,1),(3926,530,915,1,1),(3927,530,916,1,1),(3928,530,917,1,1),(3929,530,918,1,1),(3930,530,919,1,0),(3931,530,920,1,0),(3932,530,921,1,0),(3933,530,922,1,1),(3934,531,913,1,0),(3935,531,914,1,1),(3936,531,915,1,1),(3937,531,916,1,1),(3938,531,917,1,0),(3939,531,918,1,0),(3940,531,919,1,0),(3941,531,920,1,1),(3942,531,921,1,1),(3943,531,922,1,1),(3944,532,913,1,0),(3945,532,914,1,1),(3946,532,915,1,1),(3947,532,916,1,1),(3948,532,917,1,0),(3949,532,918,1,1),(3950,532,919,1,0),(3951,532,920,1,1),(3952,532,921,1,0),(3953,532,922,1,1),(3954,533,913,1,0),(3955,533,914,1,0),(3956,533,915,1,0),(3957,533,916,1,0),(3958,533,917,1,1),(3959,533,918,1,1),(3960,533,919,1,0),(3961,533,920,1,1),(3962,533,921,1,0),(3963,533,922,1,1),(3964,534,913,1,1),(3965,534,914,1,0),(3966,534,915,1,1),(3967,534,916,1,0),(3968,534,917,1,1),(3969,534,918,1,0),(3970,534,919,1,1),(3971,534,920,1,0),(3972,534,921,1,1),(3973,534,922,1,1),(3974,535,913,1,1),(3975,535,914,1,1),(3976,535,915,1,0),(3977,535,916,1,0),(3978,535,917,1,1),(3979,535,918,1,1),(3980,535,919,1,1),(3981,535,920,1,0),(3982,535,921,1,0),(3983,535,922,1,1),(3984,536,913,1,1),(3985,536,914,1,1),(3986,536,915,1,1),(3987,536,916,1,0),(3988,536,917,1,1),(3989,536,918,1,0),(3990,536,919,1,0),(3991,536,920,1,0),(3992,536,921,1,0),(3993,536,922,1,0),(3994,537,913,1,0),(3995,537,914,1,0),(3996,537,915,1,0),(3997,537,916,1,0),(3998,537,917,1,1),(3999,537,918,1,0),(4000,537,919,1,1),(4001,537,920,1,1),(4002,537,921,1,1),(4003,537,922,1,0),(4004,538,913,1,0),(4005,538,914,1,0),(4006,538,915,1,0),(4007,538,916,1,1),(4008,538,917,1,0),(4009,538,918,1,0),(4010,538,919,1,1),(4011,538,920,1,1),(4012,538,921,1,1),(4013,538,922,1,0),(4014,539,913,1,0),(4015,539,914,1,0),(4016,539,915,1,1),(4017,539,916,1,0),(4018,539,917,1,1),(4019,539,918,1,1),(4020,539,919,1,1),(4021,539,920,1,0),(4022,539,921,1,1),(4023,539,922,1,1),(4024,540,913,1,1),(4025,540,914,1,0),(4026,540,915,1,0),(4027,540,916,1,1),(4028,540,917,1,1),(4029,540,918,1,0),(4030,540,919,1,0),(4031,540,920,1,1),(4032,540,921,1,1),(4033,540,922,1,1),(4034,541,913,1,1),(4035,541,914,1,1),(4036,541,915,1,1),(4037,541,916,1,0),(4038,541,917,1,0),(4039,541,918,1,1),(4040,541,919,1,0),(4041,541,920,1,1),(4042,541,921,1,1),(4043,541,922,1,0),(4044,542,913,1,0),(4045,542,914,1,0),(4046,542,915,1,1),(4047,542,916,1,0),(4048,542,917,1,0),(4049,542,918,1,0),(4050,542,919,1,0),(4051,542,920,1,1),(4052,542,921,1,1),(4053,542,922,1,0),(4054,543,913,1,0),(4055,543,914,1,1),(4056,543,915,1,0),(4057,543,916,1,1),(4058,543,917,1,1),(4059,543,918,1,1),(4060,543,919,1,1),(4061,543,920,1,0),(4062,543,921,1,1),(4063,543,922,1,1),(4064,544,913,1,1),(4065,544,914,1,1),(4066,544,915,1,0),(4067,544,916,1,0),(4068,544,917,1,0),(4069,544,918,1,1),(4070,544,919,1,1),(4071,544,920,1,0),(4072,544,921,1,1),(4073,544,922,1,0),(4074,545,913,1,1),(4075,545,914,1,0),(4076,545,915,1,0),(4077,545,916,1,1),(4078,545,917,1,1),(4079,545,918,1,0),(4080,545,919,1,1),(4081,545,920,1,0),(4082,545,921,1,0),(4083,545,922,1,1),(4084,546,913,1,0),(4085,546,914,1,0),(4086,546,915,1,1),(4087,546,916,1,1),(4088,546,917,1,1),(4089,546,918,1,0),(4090,546,919,1,1),(4091,546,920,1,0),(4092,546,921,1,0),(4093,546,922,1,0),(4094,547,913,1,1),(4095,547,914,1,1),(4096,547,915,1,0),(4097,547,916,1,1),(4098,547,917,1,1),(4099,547,918,1,1),(4100,547,919,1,1),(4101,547,920,1,1),(4102,547,921,1,0),(4103,547,922,1,1),(4104,548,913,1,0),(4105,548,914,1,1),(4106,548,915,1,1),(4107,548,916,1,1),(4108,548,917,1,0),(4109,548,918,1,1),(4110,548,919,1,0),(4111,548,920,1,1),(4112,548,921,1,0),(4113,548,922,1,0),(4114,549,913,1,0),(4115,549,914,1,0),(4116,549,915,1,0),(4117,549,916,1,1),(4118,549,917,1,0),(4119,549,918,1,0),(4120,549,919,1,0),(4121,549,920,1,0),(4122,549,921,1,0),(4123,549,922,1,0),(4124,550,913,1,0),(4125,550,914,1,1),(4126,550,915,1,0),(4127,550,916,1,0),(4128,550,917,1,1),(4129,550,918,1,0),(4130,550,919,1,1),(4131,550,920,1,1),(4132,550,921,1,0),(4133,550,922,1,0),(4134,551,829,1,1),(4135,551,830,1,0),(4136,551,831,1,1),(4137,551,832,1,0),(4138,551,833,1,0),(4139,551,834,1,0),(4140,551,835,1,1),(4141,551,836,1,0),(4142,551,837,1,1),(4143,552,829,1,0),(4144,552,830,1,1),(4145,552,831,1,1),(4146,552,832,1,0),(4147,552,833,1,0),(4148,552,834,1,1),(4149,552,835,1,0),(4150,552,836,1,1),(4151,552,837,1,1),(4152,553,829,1,1),(4153,553,830,1,1),(4154,553,831,1,1),(4155,553,832,1,0),(4156,553,833,1,0),(4157,553,834,1,0),(4158,553,835,1,0),(4159,553,836,1,1),(4160,553,837,1,0),(4161,554,829,1,0),(4162,554,830,1,1),(4163,554,831,1,1),(4164,554,832,1,0),(4165,554,833,1,1),(4166,554,834,1,1),(4167,554,835,1,1),(4168,554,836,1,0),(4169,554,837,1,0),(4170,555,829,1,0),(4171,555,830,1,1),(4172,555,831,1,0),(4173,555,832,1,1),(4174,555,833,1,1),(4175,555,834,1,0),(4176,555,835,1,1),(4177,555,836,1,0),(4178,555,837,1,1),(4179,556,829,1,1),(4180,556,830,1,0),(4181,556,831,1,1),(4182,556,832,1,0),(4183,556,833,1,1),(4184,556,834,1,0),(4185,556,835,1,1),(4186,556,836,1,1),(4187,556,837,1,1),(4188,557,829,1,1),(4189,557,830,1,1),(4190,557,831,1,0),(4191,557,832,1,0),(4192,557,833,1,1),(4193,557,834,1,1),(4194,557,835,1,1),(4195,557,836,1,1),(4196,557,837,1,1),(4197,558,829,1,0),(4198,558,830,1,1),(4199,558,831,1,1),(4200,558,832,1,0),(4201,558,833,1,0),(4202,558,834,1,0),(4203,558,835,1,1),(4204,558,836,1,1),(4205,558,837,1,0),(4206,559,829,1,0),(4207,559,830,1,0),(4208,559,831,1,1),(4209,559,832,1,1),(4210,559,833,1,0),(4211,559,834,1,0),(4212,559,835,1,0),(4213,559,836,1,0),(4214,559,837,1,0),(4215,560,829,1,0),(4216,560,830,1,1),(4217,560,831,1,1),(4218,560,832,1,0),(4219,560,833,1,0),(4220,560,834,1,1),(4221,560,835,1,0),(4222,560,836,1,0),(4223,560,837,1,1),(4224,561,829,1,1),(4225,561,830,1,0),(4226,561,831,1,0),(4227,561,832,1,1),(4228,561,833,1,1),(4229,561,834,1,1),(4230,561,835,1,0),(4231,561,836,1,0),(4232,561,837,1,0),(4233,562,829,1,0),(4234,562,830,1,0),(4235,562,831,1,1),(4236,562,832,1,0),(4237,562,833,1,0),(4238,562,834,1,1),(4239,562,835,1,1),(4240,562,836,1,1),(4241,562,837,1,0),(4242,563,829,1,0),(4243,563,830,1,0),(4244,563,831,1,1),(4245,563,832,1,0),(4246,563,833,1,1),(4247,563,834,1,1),(4248,563,835,1,1),(4249,563,836,1,0),(4250,563,837,1,0),(4251,564,829,1,1),(4252,564,830,1,0),(4253,564,831,1,0),(4254,564,832,1,0),(4255,564,833,1,0),(4256,564,834,1,0),(4257,564,835,1,0),(4258,564,836,1,0),(4259,564,837,1,1),(4260,565,829,1,1),(4261,565,830,1,1),(4262,565,831,1,1),(4263,565,832,1,0),(4264,565,833,1,0),(4265,565,834,1,1),(4266,565,835,1,0),(4267,565,836,1,1),(4268,565,837,1,0),(4269,566,829,1,1),(4270,566,830,1,0),(4271,566,831,1,1),(4272,566,832,1,1),(4273,566,833,1,0),(4274,566,834,1,0),(4275,566,835,1,1),(4276,566,836,1,1),(4277,566,837,1,1),(4278,567,829,1,1),(4279,567,830,1,0),(4280,567,831,1,0),(4281,567,832,1,0),(4282,567,833,1,0),(4283,567,834,1,0),(4284,567,835,1,1),(4285,567,836,1,0),(4286,567,837,1,0),(4287,568,829,1,0),(4288,568,830,1,1),(4289,568,831,1,1),(4290,568,832,1,1),(4291,568,833,1,0),(4292,568,834,1,0),(4293,568,835,1,1),(4294,568,836,1,1),(4295,568,837,1,1),(4296,569,829,1,0),(4297,569,830,1,0),(4298,569,831,1,0),(4299,569,832,1,1),(4300,569,833,1,1),(4301,569,834,1,1),(4302,569,835,1,1),(4303,569,836,1,0),(4304,569,837,1,1),(4305,570,829,1,1),(4306,570,830,1,1),(4307,570,831,1,1),(4308,570,832,1,1),(4309,570,833,1,0),(4310,570,834,1,1),(4311,570,835,1,1),(4312,570,836,1,1),(4313,570,837,1,1),(4314,571,829,1,1),(4315,571,830,1,1),(4316,571,831,1,1),(4317,571,832,1,0),(4318,571,833,1,0),(4319,571,834,1,0),(4320,571,835,1,1),(4321,571,836,1,1),(4322,571,837,1,0),(4323,572,829,1,1),(4324,572,830,1,0),(4325,572,831,1,1),(4326,572,832,1,1),(4327,572,833,1,1),(4328,572,834,1,1),(4329,572,835,1,1),(4330,572,836,1,0),(4331,572,837,1,0),(4332,573,829,1,0),(4333,573,830,1,0),(4334,573,831,1,1),(4335,573,832,1,1),(4336,573,833,1,1),(4337,573,834,1,1),(4338,573,835,1,0),(4339,573,836,1,1),(4340,573,837,1,1),(4341,574,829,1,0),(4342,574,830,1,0),(4343,574,831,1,1),(4344,574,832,1,0),(4345,574,833,1,0),(4346,574,834,1,1),(4347,574,835,1,1),(4348,574,836,1,0),(4349,574,837,1,0),(4350,575,829,1,0),(4351,575,830,1,0),(4352,575,831,1,0),(4353,575,832,1,0),(4354,575,833,1,0),(4355,575,834,1,0),(4356,575,835,1,0),(4357,575,836,1,0),(4358,575,837,1,1),(4359,576,818,1,0),(4360,576,819,1,0),(4361,576,820,1,0),(4362,576,821,1,0),(4363,576,822,1,1),(4364,576,823,1,1),(4365,576,824,1,0),(4366,576,825,1,1),(4367,576,826,1,1),(4368,577,818,1,1),(4369,577,819,1,0),(4370,577,820,1,1),(4371,577,821,1,0),(4372,577,822,1,1),(4373,577,823,1,0),(4374,577,824,1,0),(4375,577,825,1,1),(4376,577,826,1,1),(4377,578,818,1,0),(4378,578,819,1,0),(4379,578,820,1,1),(4380,578,821,1,0),(4381,578,822,1,1),(4382,578,823,1,1),(4383,578,824,1,1),(4384,578,825,1,0),(4385,578,826,1,0),(4386,579,818,1,1),(4387,579,819,1,0),(4388,579,820,1,1),(4389,579,821,1,0),(4390,579,822,1,1),(4391,579,823,1,1),(4392,579,824,1,1),(4393,579,825,1,1),(4394,579,826,1,1),(4395,580,818,1,0),(4396,580,819,1,1),(4397,580,820,1,1),(4398,580,821,1,1),(4399,580,822,1,0),(4400,580,823,1,0),(4401,580,824,1,0),(4402,580,825,1,0),(4403,580,826,1,0),(4404,581,818,1,1),(4405,581,819,1,1),(4406,581,820,1,0),(4407,581,821,1,1),(4408,581,822,1,0),(4409,581,823,1,1),(4410,581,824,1,1),(4411,581,825,1,1),(4412,581,826,1,0),(4413,582,818,1,0),(4414,582,819,1,1),(4415,582,820,1,1),(4416,582,821,1,0),(4417,582,822,1,1),(4418,582,823,1,0),(4419,582,824,1,0),(4420,582,825,1,0),(4421,582,826,1,1),(4422,583,818,1,0),(4423,583,819,1,0),(4424,583,820,1,0),(4425,583,821,1,1),(4426,583,822,1,1),(4427,583,823,1,1),(4428,583,824,1,1),(4429,583,825,1,0),(4430,583,826,1,1),(4431,584,818,1,0),(4432,584,819,1,0),(4433,584,820,1,1),(4434,584,821,1,0),(4435,584,822,1,1),(4436,584,823,1,1),(4437,584,824,1,0),(4438,584,825,1,1),(4439,584,826,1,1),(4440,585,818,1,1),(4441,585,819,1,1),(4442,585,820,1,1),(4443,585,821,1,1),(4444,585,822,1,1),(4445,585,823,1,1),(4446,585,824,1,1),(4447,585,825,1,0),(4448,585,826,1,0),(4449,586,818,1,0),(4450,586,819,1,1),(4451,586,820,1,0),(4452,586,821,1,0),(4453,586,822,1,1),(4454,586,823,1,1),(4455,586,824,1,0),(4456,586,825,1,0),(4457,586,826,1,1),(4458,587,818,1,1),(4459,587,819,1,0),(4460,587,820,1,0),(4461,587,821,1,1),(4462,587,822,1,0),(4463,587,823,1,0),(4464,587,824,1,1),(4465,587,825,1,0),(4466,587,826,1,1),(4467,588,818,1,0),(4468,588,819,1,1),(4469,588,820,1,0),(4470,588,821,1,1),(4471,588,822,1,0),(4472,588,823,1,0),(4473,588,824,1,1),(4474,588,825,1,0),(4475,588,826,1,0),(4476,589,818,1,1),(4477,589,819,1,0),(4478,589,820,1,0),(4479,589,821,1,0),(4480,589,822,1,0),(4481,589,823,1,1),(4482,589,824,1,0),(4483,589,825,1,0),(4484,589,826,1,0),(4485,590,818,1,0),(4486,590,819,1,0),(4487,590,820,1,0),(4488,590,821,1,0),(4489,590,822,1,1),(4490,590,823,1,0),(4491,590,824,1,0),(4492,590,825,1,1),(4493,590,826,1,1),(4494,591,818,1,1),(4495,591,819,1,1),(4496,591,820,1,0),(4497,591,821,1,1),(4498,591,822,1,0),(4499,591,823,1,0),(4500,591,824,1,0),(4501,591,825,1,1),(4502,591,826,1,0),(4503,592,818,1,1),(4504,592,819,1,0),(4505,592,820,1,0),(4506,592,821,1,0),(4507,592,822,1,1),(4508,592,823,1,0),(4509,592,824,1,0),(4510,592,825,1,0),(4511,592,826,1,1),(4512,593,818,1,0),(4513,593,819,1,0),(4514,593,820,1,1),(4515,593,821,1,0),(4516,593,822,1,0),(4517,593,823,1,0),(4518,593,824,1,1),(4519,593,825,1,0),(4520,593,826,1,0),(4521,594,818,1,0),(4522,594,819,1,0),(4523,594,820,1,0),(4524,594,821,1,1),(4525,594,822,1,1),(4526,594,823,1,1),(4527,594,824,1,1),(4528,594,825,1,0),(4529,594,826,1,1),(4530,595,818,1,0),(4531,595,819,1,1),(4532,595,820,1,1),(4533,595,821,1,1),(4534,595,822,1,0),(4535,595,823,1,0),(4536,595,824,1,1),(4537,595,825,1,0),(4538,595,826,1,0),(4539,596,818,1,0),(4540,596,819,1,1),(4541,596,820,1,0),(4542,596,821,1,1),(4543,596,822,1,1),(4544,596,823,1,0),(4545,596,824,1,0),(4546,596,825,1,0),(4547,596,826,1,1),(4548,597,818,1,1),(4549,597,819,1,0),(4550,597,820,1,1),(4551,597,821,1,0),(4552,597,822,1,0),(4553,597,823,1,1),(4554,597,824,1,1),(4555,597,825,1,1),(4556,597,826,1,0),(4557,598,818,1,1),(4558,598,819,1,1),(4559,598,820,1,0),(4560,598,821,1,1),(4561,598,822,1,1),(4562,598,823,1,1),(4563,598,824,1,1),(4564,598,825,1,0),(4565,598,826,1,1),(4566,599,818,1,0),(4567,599,819,1,1),(4568,599,820,1,1),(4569,599,821,1,1),(4570,599,822,1,1),(4571,599,823,1,0),(4572,599,824,1,1),(4573,599,825,1,0),(4574,599,826,1,0),(4575,600,818,1,1),(4576,600,819,1,0),(4577,600,820,1,0),(4578,600,821,1,1),(4579,600,822,1,0),(4580,600,823,1,1),(4581,600,824,1,0),(4582,600,825,1,1),(4583,600,826,1,0),(4584,601,923,1,0),(4585,601,924,1,1),(4586,601,925,1,1),(4587,601,926,1,0),(4588,601,927,1,1),(4589,601,928,1,1),(4590,601,929,1,1),(4591,601,930,1,0),(4592,601,931,1,1),(4593,601,932,1,1),(4594,602,923,1,0),(4595,602,924,1,0),(4596,602,925,1,1),(4597,602,926,1,1),(4598,602,927,1,1),(4599,602,928,1,1),(4600,602,929,1,0),(4601,602,930,1,0),(4602,602,931,1,0),(4603,602,932,1,1),(4604,603,923,1,1),(4605,603,924,1,0),(4606,603,925,1,0),(4607,603,926,1,0),(4608,603,927,1,1),(4609,603,928,1,1),(4610,603,929,1,1),(4611,603,930,1,0),(4612,603,931,1,0),(4613,603,932,1,1),(4614,604,923,1,1),(4615,604,924,1,1),(4616,604,925,1,0),(4617,604,926,1,1),(4618,604,927,1,0),(4619,604,928,1,0),(4620,604,929,1,1),(4621,604,930,1,1),(4622,604,931,1,1),(4623,604,932,1,0),(4624,605,923,1,0),(4625,605,924,1,0),(4626,605,925,1,0),(4627,605,926,1,1),(4628,605,927,1,0),(4629,605,928,1,1),(4630,605,929,1,1),(4631,605,930,1,0),(4632,605,931,1,1),(4633,605,932,1,1),(4634,606,923,1,0),(4635,606,924,1,1),(4636,606,925,1,0),(4637,606,926,1,1),(4638,606,927,1,1),(4639,606,928,1,1),(4640,606,929,1,1),(4641,606,930,1,0),(4642,606,931,1,0),(4643,606,932,1,1),(4644,607,923,1,0),(4645,607,924,1,0),(4646,607,925,1,0),(4647,607,926,1,0),(4648,607,927,1,1),(4649,607,928,1,0),(4650,607,929,1,0),(4651,607,930,1,1),(4652,607,931,1,0),(4653,607,932,1,0),(4654,608,923,1,0),(4655,608,924,1,1),(4656,608,925,1,0),(4657,608,926,1,1),(4658,608,927,1,0),(4659,608,928,1,1),(4660,608,929,1,0),(4661,608,930,1,1),(4662,608,931,1,1),(4663,608,932,1,1),(4664,609,923,1,0),(4665,609,924,1,0),(4666,609,925,1,1),(4667,609,926,1,0),(4668,609,927,1,0),(4669,609,928,1,1),(4670,609,929,1,1),(4671,609,930,1,1),(4672,609,931,1,0),(4673,609,932,1,0),(4674,610,923,1,1),(4675,610,924,1,0),(4676,610,925,1,0),(4677,610,926,1,0),(4678,610,927,1,1),(4679,610,928,1,0),(4680,610,929,1,0),(4681,610,930,1,1),(4682,610,931,1,0),(4683,610,932,1,1),(4684,611,923,1,1),(4685,611,924,1,0),(4686,611,925,1,1),(4687,611,926,1,0),(4688,611,927,1,1),(4689,611,928,1,0),(4690,611,929,1,0),(4691,611,930,1,1),(4692,611,931,1,0),(4693,611,932,1,1),(4694,612,923,1,0),(4695,612,924,1,0),(4696,612,925,1,1),(4697,612,926,1,1),(4698,612,927,1,0),(4699,612,928,1,1),(4700,612,929,1,1),(4701,612,930,1,1),(4702,612,931,1,1),(4703,612,932,1,0),(4704,613,923,1,0),(4705,613,924,1,0),(4706,613,925,1,1),(4707,613,926,1,0),(4708,613,927,1,0),(4709,613,928,1,0),(4710,613,929,1,1),(4711,613,930,1,0),(4712,613,931,1,1),(4713,613,932,1,1),(4714,614,923,1,0),(4715,614,924,1,0),(4716,614,925,1,0),(4717,614,926,1,1),(4718,614,927,1,0),(4719,614,928,1,0),(4720,614,929,1,1),(4721,614,930,1,0),(4722,614,931,1,1),(4723,614,932,1,0),(4724,615,923,1,0),(4725,615,924,1,0),(4726,615,925,1,0),(4727,615,926,1,1),(4728,615,927,1,1),(4729,615,928,1,0),(4730,615,929,1,1),(4731,615,930,1,1),(4732,615,931,1,0),(4733,615,932,1,0),(4734,616,923,1,1),(4735,616,924,1,1),(4736,616,925,1,1),(4737,616,926,1,0),(4738,616,927,1,0),(4739,616,928,1,0),(4740,616,929,1,0),(4741,616,930,1,0),(4742,616,931,1,1),(4743,616,932,1,1),(4744,617,923,1,1),(4745,617,924,1,1),(4746,617,925,1,0),(4747,617,926,1,1),(4748,617,927,1,1),(4749,617,928,1,0),(4750,617,929,1,1),(4751,617,930,1,1),(4752,617,931,1,0),(4753,617,932,1,1),(4754,618,923,1,0),(4755,618,924,1,0),(4756,618,925,1,0),(4757,618,926,1,1),(4758,618,927,1,1),(4759,618,928,1,0),(4760,618,929,1,0),(4761,618,930,1,0),(4762,618,931,1,1),(4763,618,932,1,1),(4764,619,923,1,0),(4765,619,924,1,0),(4766,619,925,1,0),(4767,619,926,1,0),(4768,619,927,1,1),(4769,619,928,1,0),(4770,619,929,1,0),(4771,619,930,1,0),(4772,619,931,1,0),(4773,619,932,1,0),(4774,620,923,1,1),(4775,620,924,1,1),(4776,620,925,1,1),(4777,620,926,1,1),(4778,620,927,1,1),(4779,620,928,1,1),(4780,620,929,1,1),(4781,620,930,1,0),(4782,620,931,1,1),(4783,620,932,1,1),(4784,621,923,1,0),(4785,621,924,1,0),(4786,621,925,1,1),(4787,621,926,1,1),(4788,621,927,1,1),(4789,621,928,1,1),(4790,621,929,1,1),(4791,621,930,1,1),(4792,621,931,1,0),(4793,621,932,1,1),(4794,622,923,1,1),(4795,622,924,1,1),(4796,622,925,1,1),(4797,622,926,1,0),(4798,622,927,1,0),(4799,622,928,1,1),(4800,622,929,1,1),(4801,622,930,1,0),(4802,622,931,1,1),(4803,622,932,1,0),(4804,623,923,1,1),(4805,623,924,1,0),(4806,623,925,1,1),(4807,623,926,1,0),(4808,623,927,1,1),(4809,623,928,1,0),(4810,623,929,1,0),(4811,623,930,1,0),(4812,623,931,1,0),(4813,623,932,1,1),(4814,624,923,1,1),(4815,624,924,1,1),(4816,624,925,1,0),(4817,624,926,1,1),(4818,624,927,1,0),(4819,624,928,1,1),(4820,624,929,1,0),(4821,624,930,1,1),(4822,624,931,1,0),(4823,624,932,1,0),(4824,625,923,1,0),(4825,625,924,1,0),(4826,625,925,1,1),(4827,625,926,1,1),(4828,625,927,1,1),(4829,625,928,1,0),(4830,625,929,1,1),(4831,625,930,1,1),(4832,625,931,1,1),(4833,625,932,1,0),(4834,626,923,1,1),(4835,626,924,1,1),(4836,626,925,1,0),(4837,626,926,1,0),(4838,626,927,1,0),(4839,626,928,1,0),(4840,626,929,1,1),(4841,626,930,1,0),(4842,626,931,1,1),(4843,626,932,1,0),(4844,627,923,1,0),(4845,627,924,1,1),(4846,627,925,1,1),(4847,627,926,1,0),(4848,627,927,1,1),(4849,627,928,1,0),(4850,627,929,1,0),(4851,627,930,1,1),(4852,627,931,1,1),(4853,627,932,1,0),(4854,628,923,1,0),(4855,628,924,1,0),(4856,628,925,1,1),(4857,628,926,1,0),(4858,628,927,1,1),(4859,628,928,1,0),(4860,628,929,1,0),(4861,628,930,1,0),(4862,628,931,1,1),(4863,628,932,1,1),(4864,629,923,1,1),(4865,629,924,1,0),(4866,629,925,1,0),(4867,629,926,1,0),(4868,629,927,1,1),(4869,629,928,1,0),(4870,629,929,1,0),(4871,629,930,1,0),(4872,629,931,1,1),(4873,629,932,1,1),(4874,630,923,1,0),(4875,630,924,1,0),(4876,630,925,1,1),(4877,630,926,1,1),(4878,630,927,1,1),(4879,630,928,1,0),(4880,630,929,1,1),(4881,630,930,1,0),(4882,630,931,1,0),(4883,630,932,1,0),(4884,631,923,1,0),(4885,631,924,1,1),(4886,631,925,1,0),(4887,631,926,1,0),(4888,631,927,1,1),(4889,631,928,1,1),(4890,631,929,1,1),(4891,631,930,1,0),(4892,631,931,1,0),(4893,631,932,1,0),(4894,632,923,1,0),(4895,632,924,1,0),(4896,632,925,1,0),(4897,632,926,1,0),(4898,632,927,1,1),(4899,632,928,1,1),(4900,632,929,1,1),(4901,632,930,1,1),(4902,632,931,1,1),(4903,632,932,1,1),(4904,633,923,1,0),(4905,633,924,1,0),(4906,633,925,1,0),(4907,633,926,1,1),(4908,633,927,1,1),(4909,633,928,1,1),(4910,633,929,1,0),(4911,633,930,1,1),(4912,633,931,1,0),(4913,633,932,1,0),(4914,634,923,1,0),(4915,634,924,1,0),(4916,634,925,1,0),(4917,634,926,1,0),(4918,634,927,1,0),(4919,634,928,1,0),(4920,634,929,1,0),(4921,634,930,1,1),(4922,634,931,1,0),(4923,634,932,1,0),(4924,635,923,1,1),(4925,635,924,1,0),(4926,635,925,1,0),(4927,635,926,1,0),(4928,635,927,1,1),(4929,635,928,1,1),(4930,635,929,1,0),(4931,635,930,1,0),(4932,635,931,1,1),(4933,635,932,1,1),(4934,636,923,1,1),(4935,636,924,1,1),(4936,636,925,1,1),(4937,636,926,1,0),(4938,636,927,1,0),(4939,636,928,1,1),(4940,636,929,1,0),(4941,636,930,1,1),(4942,636,931,1,1),(4943,636,932,1,0),(4944,637,923,1,1),(4945,637,924,1,1),(4946,637,925,1,0),(4947,637,926,1,0),(4948,637,927,1,0),(4949,637,928,1,1),(4950,637,929,1,0),(4951,637,930,1,1),(4952,637,931,1,1),(4953,637,932,1,0),(4954,638,923,1,1),(4955,638,924,1,1),(4956,638,925,1,0),(4957,638,926,1,0),(4958,638,927,1,0),(4959,638,928,1,1),(4960,638,929,1,0),(4961,638,930,1,0),(4962,638,931,1,0),(4963,638,932,1,0),(4964,639,923,1,1),(4965,639,924,1,1),(4966,639,925,1,0),(4967,639,926,1,1),(4968,639,927,1,0),(4969,639,928,1,1),(4970,639,929,1,0),(4971,639,930,1,1),(4972,639,931,1,1),(4973,639,932,1,1),(4974,640,923,1,0),(4975,640,924,1,1),(4976,640,925,1,0),(4977,640,926,1,1),(4978,640,927,1,1),(4979,640,928,1,1),(4980,640,929,1,0),(4981,640,930,1,1),(4982,640,931,1,1),(4983,640,932,1,1),(4984,641,923,1,1),(4985,641,924,1,1),(4986,641,925,1,0),(4987,641,926,1,1),(4988,641,927,1,1),(4989,641,928,1,1),(4990,641,929,1,0),(4991,641,930,1,1),(4992,641,931,1,0),(4993,641,932,1,1),(4994,642,923,1,0),(4995,642,924,1,0),(4996,642,925,1,1),(4997,642,926,1,1),(4998,642,927,1,0),(4999,642,928,1,0),(5000,642,929,1,0),(5001,642,930,1,1),(5002,642,931,1,0),(5003,642,932,1,1),(5004,643,923,1,0),(5005,643,924,1,1),(5006,643,925,1,1),(5007,643,926,1,1),(5008,643,927,1,0),(5009,643,928,1,0),(5010,643,929,1,0),(5011,643,930,1,1),(5012,643,931,1,0),(5013,643,932,1,1),(5014,644,923,1,0),(5015,644,924,1,0),(5016,644,925,1,0),(5017,644,926,1,1),(5018,644,927,1,0),(5019,644,928,1,0),(5020,644,929,1,0),(5021,644,930,1,1),(5022,644,931,1,1),(5023,644,932,1,1),(5024,645,923,1,1),(5025,645,924,1,0),(5026,645,925,1,0),(5027,645,926,1,0),(5028,645,927,1,1),(5029,645,928,1,1),(5030,645,929,1,0),(5031,645,930,1,0),(5032,645,931,1,0),(5033,645,932,1,1),(5034,646,923,1,1),(5035,646,924,1,1),(5036,646,925,1,0),(5037,646,926,1,1),(5038,646,927,1,1),(5039,646,928,1,1),(5040,646,929,1,0),(5041,646,930,1,0),(5042,646,931,1,1),(5043,646,932,1,0),(5044,647,923,1,1),(5045,647,924,1,1),(5046,647,925,1,1),(5047,647,926,1,1),(5048,647,927,1,0),(5049,647,928,1,1),(5050,647,929,1,1),(5051,647,930,1,1),(5052,647,931,1,0),(5053,647,932,1,0),(5054,648,923,1,1),(5055,648,924,1,0),(5056,648,925,1,1),(5057,648,926,1,0),(5058,648,927,1,0),(5059,648,928,1,0),(5060,648,929,1,0),(5061,648,930,1,1),(5062,648,931,1,1),(5063,648,932,1,1),(5064,649,923,1,0),(5065,649,924,1,0),(5066,649,925,1,0),(5067,649,926,1,0),(5068,649,927,1,0),(5069,649,928,1,0),(5070,649,929,1,1),(5071,649,930,1,0),(5072,649,931,1,0),(5073,649,932,1,0),(5074,650,923,1,1),(5075,650,924,1,0),(5076,650,925,1,1),(5077,650,926,1,1),(5078,650,927,1,1),(5079,650,928,1,1),(5080,650,929,1,0),(5081,650,930,1,1),(5082,650,931,1,1),(5083,650,932,1,0),(5084,651,933,1,0),(5085,651,934,1,1),(5086,651,935,1,0),(5087,651,936,1,0),(5088,651,937,1,0),(5089,651,938,1,0),(5090,651,939,1,1),(5091,651,940,1,1),(5092,651,941,1,1),(5093,651,942,1,1),(5094,652,933,1,1),(5095,652,934,1,0),(5096,652,935,1,0),(5097,652,936,1,0),(5098,652,937,1,1),(5099,652,938,1,1),(5100,652,939,1,0),(5101,652,940,1,1),(5102,652,941,1,1),(5103,652,942,1,1),(5104,653,933,1,0),(5105,653,934,1,1),(5106,653,935,1,0),(5107,653,936,1,0),(5108,653,937,1,1),(5109,653,938,1,0),(5110,653,939,1,0),(5111,653,940,1,0),(5112,653,941,1,1),(5113,653,942,1,1),(5114,654,933,1,0),(5115,654,934,1,0),(5116,654,935,1,0),(5117,654,936,1,1),(5118,654,937,1,0),(5119,654,938,1,0),(5120,654,939,1,0),(5121,654,940,1,0),(5122,654,941,1,1),(5123,654,942,1,1),(5124,655,933,1,0),(5125,655,934,1,1),(5126,655,935,1,0),(5127,655,936,1,1),(5128,655,937,1,1),(5129,655,938,1,0),(5130,655,939,1,0),(5131,655,940,1,1),(5132,655,941,1,0),(5133,655,942,1,0),(5134,656,933,1,1),(5135,656,934,1,1),(5136,656,935,1,1),(5137,656,936,1,1),(5138,656,937,1,0),(5139,656,938,1,1),(5140,656,939,1,0),(5141,656,940,1,1),(5142,656,941,1,0),(5143,656,942,1,0),(5144,657,933,1,1),(5145,657,934,1,0),(5146,657,935,1,0),(5147,657,936,1,0),(5148,657,937,1,0),(5149,657,938,1,0),(5150,657,939,1,1),(5151,657,940,1,0),(5152,657,941,1,1),(5153,657,942,1,0),(5154,658,933,1,0),(5155,658,934,1,1),(5156,658,935,1,0),(5157,658,936,1,0),(5158,658,937,1,1),(5159,658,938,1,0),(5160,658,939,1,1),(5161,658,940,1,0),(5162,658,941,1,0),(5163,658,942,1,1),(5164,659,933,1,1),(5165,659,934,1,1),(5166,659,935,1,0),(5167,659,936,1,1),(5168,659,937,1,0),(5169,659,938,1,1),(5170,659,939,1,0),(5171,659,940,1,1),(5172,659,941,1,0),(5173,659,942,1,0),(5174,660,933,1,0),(5175,660,934,1,0),(5176,660,935,1,0),(5177,660,936,1,0),(5178,660,937,1,1),(5179,660,938,1,1),(5180,660,939,1,1),(5181,660,940,1,1),(5182,660,941,1,1),(5183,660,942,1,0),(5184,661,933,1,0),(5185,661,934,1,1),(5186,661,935,1,0),(5187,661,936,1,0),(5188,661,937,1,1),(5189,661,938,1,0),(5190,661,939,1,0),(5191,661,940,1,1),(5192,661,941,1,0),(5193,661,942,1,0),(5194,662,933,1,1),(5195,662,934,1,0),(5196,662,935,1,1),(5197,662,936,1,1),(5198,662,937,1,1),(5199,662,938,1,1),(5200,662,939,1,1),(5201,662,940,1,0),(5202,662,941,1,1),(5203,662,942,1,1),(5204,663,933,1,1),(5205,663,934,1,0),(5206,663,935,1,1),(5207,663,936,1,1),(5208,663,937,1,1),(5209,663,938,1,0),(5210,663,939,1,0),(5211,663,940,1,0),(5212,663,941,1,0),(5213,663,942,1,0),(5214,664,933,1,1),(5215,664,934,1,0),(5216,664,935,1,1),(5217,664,936,1,0),(5218,664,937,1,1),(5219,664,938,1,0),(5220,664,939,1,1),(5221,664,940,1,0),(5222,664,941,1,0),(5223,664,942,1,0),(5224,665,933,1,0),(5225,665,934,1,1),(5226,665,935,1,0),(5227,665,936,1,1),(5228,665,937,1,0),(5229,665,938,1,0),(5230,665,939,1,0),(5231,665,940,1,1),(5232,665,941,1,0),(5233,665,942,1,1),(5234,666,933,1,1),(5235,666,934,1,0),(5236,666,935,1,0),(5237,666,936,1,1),(5238,666,937,1,1),(5239,666,938,1,1),(5240,666,939,1,1),(5241,666,940,1,1),(5242,666,941,1,1),(5243,666,942,1,0),(5244,667,933,1,1),(5245,667,934,1,1),(5246,667,935,1,1),(5247,667,936,1,0),(5248,667,937,1,0),(5249,667,938,1,1),(5250,667,939,1,1),(5251,667,940,1,1),(5252,667,941,1,0),(5253,667,942,1,0),(5254,668,933,1,0),(5255,668,934,1,1),(5256,668,935,1,1),(5257,668,936,1,0),(5258,668,937,1,0),(5259,668,938,1,0),(5260,668,939,1,0),(5261,668,940,1,1),(5262,668,941,1,1),(5263,668,942,1,0),(5264,669,933,1,0),(5265,669,934,1,1),(5266,669,935,1,0),(5267,669,936,1,0),(5268,669,937,1,0),(5269,669,938,1,1),(5270,669,939,1,0),(5271,669,940,1,0),(5272,669,941,1,0),(5273,669,942,1,1),(5274,670,933,1,0),(5275,670,934,1,0),(5276,670,935,1,1),(5277,670,936,1,1),(5278,670,937,1,0),(5279,670,938,1,0),(5280,670,939,1,0),(5281,670,940,1,0),(5282,670,941,1,1),(5283,670,942,1,0),(5284,671,933,1,0),(5285,671,934,1,0),(5286,671,935,1,0),(5287,671,936,1,1),(5288,671,937,1,1),(5289,671,938,1,1),(5290,671,939,1,0),(5291,671,940,1,0),(5292,671,941,1,1),(5293,671,942,1,1),(5294,672,933,1,1),(5295,672,934,1,1),(5296,672,935,1,0),(5297,672,936,1,1),(5298,672,937,1,1),(5299,672,938,1,1),(5300,672,939,1,1),(5301,672,940,1,1),(5302,672,941,1,0),(5303,672,942,1,1),(5304,673,933,1,0),(5305,673,934,1,0),(5306,673,935,1,0),(5307,673,936,1,0),(5308,673,937,1,0),(5309,673,938,1,1),(5310,673,939,1,1),(5311,673,940,1,1),(5312,673,941,1,0),(5313,673,942,1,0),(5314,674,933,1,1),(5315,674,934,1,0),(5316,674,935,1,1),(5317,674,936,1,0),(5318,674,937,1,0),(5319,674,938,1,0),(5320,674,939,1,1),(5321,674,940,1,0),(5322,674,941,1,1),(5323,674,942,1,1),(5324,675,933,1,1),(5325,675,934,1,0),(5326,675,935,1,1),(5327,675,936,1,0),(5328,675,937,1,0),(5329,675,938,1,1),(5330,675,939,1,1),(5331,675,940,1,1),(5332,675,941,1,1),(5333,675,942,1,0),(5334,676,933,1,1),(5335,676,934,1,1),(5336,676,935,1,1),(5337,676,936,1,0),(5338,676,937,1,0),(5339,676,938,1,0),(5340,676,939,1,0),(5341,676,940,1,0),(5342,676,941,1,0),(5343,676,942,1,1),(5344,677,933,1,0),(5345,677,934,1,0),(5346,677,935,1,0),(5347,677,936,1,1),(5348,677,937,1,0),(5349,677,938,1,0),(5350,677,939,1,1),(5351,677,940,1,1),(5352,677,941,1,1),(5353,677,942,1,0),(5354,678,933,1,0),(5355,678,934,1,1),(5356,678,935,1,1),(5357,678,936,1,0),(5358,678,937,1,1),(5359,678,938,1,1),(5360,678,939,1,0),(5361,678,940,1,0),(5362,678,941,1,0),(5363,678,942,1,1),(5364,679,933,1,0),(5365,679,934,1,0),(5366,679,935,1,1),(5367,679,936,1,0),(5368,679,937,1,1),(5369,679,938,1,0),(5370,679,939,1,0),(5371,679,940,1,1),(5372,679,941,1,0),(5373,679,942,1,1),(5374,680,933,1,1),(5375,680,934,1,0),(5376,680,935,1,1),(5377,680,936,1,0),(5378,680,937,1,1),(5379,680,938,1,1),(5380,680,939,1,1),(5381,680,940,1,0),(5382,680,941,1,1),(5383,680,942,1,1),(5384,681,933,1,0),(5385,681,934,1,0),(5386,681,935,1,0),(5387,681,936,1,1),(5388,681,937,1,1),(5389,681,938,1,0),(5390,681,939,1,1),(5391,681,940,1,1),(5392,681,941,1,1),(5393,681,942,1,0),(5394,682,933,1,0),(5395,682,934,1,0),(5396,682,935,1,0),(5397,682,936,1,1),(5398,682,937,1,1),(5399,682,938,1,0),(5400,682,939,1,0),(5401,682,940,1,1),(5402,682,941,1,1),(5403,682,942,1,1),(5404,683,933,1,1),(5405,683,934,1,1),(5406,683,935,1,0),(5407,683,936,1,1),(5408,683,937,1,1),(5409,683,938,1,0),(5410,683,939,1,0),(5411,683,940,1,1),(5412,683,941,1,1),(5413,683,942,1,1),(5414,684,933,1,0),(5415,684,934,1,0),(5416,684,935,1,0),(5417,684,936,1,1),(5418,684,937,1,1),(5419,684,938,1,0),(5420,684,939,1,0),(5421,684,940,1,0),(5422,684,941,1,0),(5423,684,942,1,0),(5424,685,933,1,1),(5425,685,934,1,0),(5426,685,935,1,0),(5427,685,936,1,0),(5428,685,937,1,1),(5429,685,938,1,0),(5430,685,939,1,1),(5431,685,940,1,0),(5432,685,941,1,0),(5433,685,942,1,0),(5434,686,933,1,0),(5435,686,934,1,1),(5436,686,935,1,1),(5437,686,936,1,1),(5438,686,937,1,0),(5439,686,938,1,1),(5440,686,939,1,0),(5441,686,940,1,1),(5442,686,941,1,1),(5443,686,942,1,0),(5444,687,933,1,0),(5445,687,934,1,1),(5446,687,935,1,0),(5447,687,936,1,0),(5448,687,937,1,1),(5449,687,938,1,0),(5450,687,939,1,1),(5451,687,940,1,0),(5452,687,941,1,1),(5453,687,942,1,1),(5454,688,933,1,1),(5455,688,934,1,1),(5456,688,935,1,0),(5457,688,936,1,0),(5458,688,937,1,1),(5459,688,938,1,0),(5460,688,939,1,1),(5461,688,940,1,0),(5462,688,941,1,1),(5463,688,942,1,1),(5464,689,933,1,0),(5465,689,934,1,1),(5466,689,935,1,0),(5467,689,936,1,0),(5468,689,937,1,0),(5469,689,938,1,1),(5470,689,939,1,0),(5471,689,940,1,0),(5472,689,941,1,0),(5473,689,942,1,1),(5474,690,933,1,0),(5475,690,934,1,0),(5476,690,935,1,0),(5477,690,936,1,1),(5478,690,937,1,1),(5479,690,938,1,1),(5480,690,939,1,1),(5481,690,940,1,0),(5482,690,941,1,1),(5483,690,942,1,0),(5484,691,933,1,0),(5485,691,934,1,0),(5486,691,935,1,0),(5487,691,936,1,1),(5488,691,937,1,0),(5489,691,938,1,0),(5490,691,939,1,0),(5491,691,940,1,1),(5492,691,941,1,1),(5493,691,942,1,1),(5494,692,933,1,0),(5495,692,934,1,1),(5496,692,935,1,1),(5497,692,936,1,0),(5498,692,937,1,0),(5499,692,938,1,0),(5500,692,939,1,1),(5501,692,940,1,0),(5502,692,941,1,0),(5503,692,942,1,1),(5504,693,933,1,1),(5505,693,934,1,1),(5506,693,935,1,0),(5507,693,936,1,1),(5508,693,937,1,1),(5509,693,938,1,0),(5510,693,939,1,1),(5511,693,940,1,0),(5512,693,941,1,0),(5513,693,942,1,0),(5514,694,933,1,0),(5515,694,934,1,0),(5516,694,935,1,1),(5517,694,936,1,0),(5518,694,937,1,1),(5519,694,938,1,0),(5520,694,939,1,1),(5521,694,940,1,0),(5522,694,941,1,0),(5523,694,942,1,1),(5524,695,933,1,0),(5525,695,934,1,1),(5526,695,935,1,1),(5527,695,936,1,1),(5528,695,937,1,1),(5529,695,938,1,0),(5530,695,939,1,1),(5531,695,940,1,1),(5532,695,941,1,1),(5533,695,942,1,0),(5534,696,933,1,1),(5535,696,934,1,0),(5536,696,935,1,1),(5537,696,936,1,0),(5538,696,937,1,0),(5539,696,938,1,0),(5540,696,939,1,1),(5541,696,940,1,0),(5542,696,941,1,1),(5543,696,942,1,0),(5544,697,933,1,0),(5545,697,934,1,0),(5546,697,935,1,0),(5547,697,936,1,0),(5548,697,937,1,1),(5549,697,938,1,0),(5550,697,939,1,1),(5551,697,940,1,0),(5552,697,941,1,1),(5553,697,942,1,0),(5554,698,933,1,0),(5555,698,934,1,0),(5556,698,935,1,0),(5557,698,936,1,1),(5558,698,937,1,0),(5559,698,938,1,1),(5560,698,939,1,1),(5561,698,940,1,1),(5562,698,941,1,1),(5563,698,942,1,0),(5564,699,933,1,1),(5565,699,934,1,1),(5566,699,935,1,0),(5567,699,936,1,1),(5568,699,937,1,1),(5569,699,938,1,0),(5570,699,939,1,1),(5571,699,940,1,0),(5572,699,941,1,0),(5573,699,942,1,1),(5574,700,933,1,0),(5575,700,934,1,1),(5576,700,935,1,0),(5577,700,936,1,1),(5578,700,937,1,1),(5579,700,938,1,1),(5580,700,939,1,1),(5581,700,940,1,1),(5582,700,941,1,1),(5583,700,942,1,0),(5584,701,829,1,1),(5585,701,830,1,0),(5586,701,831,1,1),(5587,701,832,1,0),(5588,701,833,1,1),(5589,701,834,1,0),(5590,701,835,1,0),(5591,701,836,1,1),(5592,701,837,1,1),(5593,702,829,1,0),(5594,702,830,1,1),(5595,702,831,1,1),(5596,702,832,1,1),(5597,702,833,1,0),(5598,702,834,1,1),(5599,702,835,1,0),(5600,702,836,1,1),(5601,702,837,1,1),(5602,703,829,1,1),(5603,703,830,1,1),(5604,703,831,1,1),(5605,703,832,1,1),(5606,703,833,1,0),(5607,703,834,1,0),(5608,703,835,1,0),(5609,703,836,1,1),(5610,703,837,1,0),(5611,704,829,1,0),(5612,704,830,1,1),(5613,704,831,1,0),(5614,704,832,1,1),(5615,704,833,1,1),(5616,704,834,1,0),(5617,704,835,1,1),(5618,704,836,1,1),(5619,704,837,1,0),(5620,705,829,1,0),(5621,705,830,1,0),(5622,705,831,1,1),(5623,705,832,1,0),(5624,705,833,1,1),(5625,705,834,1,0),(5626,705,835,1,1),(5627,705,836,1,0),(5628,705,837,1,1),(5629,706,829,1,0),(5630,706,830,1,0),(5631,706,831,1,1),(5632,706,832,1,1),(5633,706,833,1,0),(5634,706,834,1,0),(5635,706,835,1,1),(5636,706,836,1,0),(5637,706,837,1,1),(5638,707,829,1,1),(5639,707,830,1,0),(5640,707,831,1,1),(5641,707,832,1,0),(5642,707,833,1,0),(5643,707,834,1,1),(5644,707,835,1,1),(5645,707,836,1,1),(5646,707,837,1,1),(5647,708,829,1,1),(5648,708,830,1,0),(5649,708,831,1,1),(5650,708,832,1,1),(5651,708,833,1,1),(5652,708,834,1,0),(5653,708,835,1,1),(5654,708,836,1,1),(5655,708,837,1,1),(5656,709,829,1,0),(5657,709,830,1,1),(5658,709,831,1,0),(5659,709,832,1,1),(5660,709,833,1,1),(5661,709,834,1,1),(5662,709,835,1,1),(5663,709,836,1,0),(5664,709,837,1,0),(5665,710,829,1,0),(5666,710,830,1,1),(5667,710,831,1,1),(5668,710,832,1,0),(5669,710,833,1,0),(5670,710,834,1,0),(5671,710,835,1,1),(5672,710,836,1,0),(5673,710,837,1,1),(5674,711,829,1,1),(5675,711,830,1,0),(5676,711,831,1,1),(5677,711,832,1,0),(5678,711,833,1,0),(5679,711,834,1,0),(5680,711,835,1,1),(5681,711,836,1,0),(5682,711,837,1,1),(5683,712,829,1,1),(5684,712,830,1,1),(5685,712,831,1,0),(5686,712,832,1,1),(5687,712,833,1,0),(5688,712,834,1,1),(5689,712,835,1,1),(5690,712,836,1,0),(5691,712,837,1,0),(5692,713,829,1,0),(5693,713,830,1,0),(5694,713,831,1,1),(5695,713,832,1,0),(5696,713,833,1,1),(5697,713,834,1,1),(5698,713,835,1,0),(5699,713,836,1,0),(5700,713,837,1,1),(5701,714,829,1,0),(5702,714,830,1,1),(5703,714,831,1,1),(5704,714,832,1,1),(5705,714,833,1,1),(5706,714,834,1,1),(5707,714,835,1,1),(5708,714,836,1,0),(5709,714,837,1,0),(5710,715,829,1,1),(5711,715,830,1,1),(5712,715,831,1,0),(5713,715,832,1,1),(5714,715,833,1,1),(5715,715,834,1,1),(5716,715,835,1,1),(5717,715,836,1,0),(5718,715,837,1,0),(5719,716,829,1,1),(5720,716,830,1,0),(5721,716,831,1,0),(5722,716,832,1,1),(5723,716,833,1,1),(5724,716,834,1,1),(5725,716,835,1,1),(5726,716,836,1,1),(5727,716,837,1,1),(5728,717,829,1,0),(5729,717,830,1,1),(5730,717,831,1,0),(5731,717,832,1,0),(5732,717,833,1,1),(5733,717,834,1,0),(5734,717,835,1,1),(5735,717,836,1,1),(5736,717,837,1,0),(5737,718,829,1,0),(5738,718,830,1,1),(5739,718,831,1,0),(5740,718,832,1,1),(5741,718,833,1,1),(5742,718,834,1,0),(5743,718,835,1,1),(5744,718,836,1,1),(5745,718,837,1,1),(5746,719,829,1,0),(5747,719,830,1,0),(5748,719,831,1,1),(5749,719,832,1,1),(5750,719,833,1,1),(5751,719,834,1,1),(5752,719,835,1,1),(5753,719,836,1,1),(5754,719,837,1,0),(5755,720,829,1,1),(5756,720,830,1,0),(5757,720,831,1,0),(5758,720,832,1,1),(5759,720,833,1,1),(5760,720,834,1,0),(5761,720,835,1,1),(5762,720,836,1,0),(5763,720,837,1,1),(5764,721,829,1,1),(5765,721,830,1,1),(5766,721,831,1,1),(5767,721,832,1,1),(5768,721,833,1,1),(5769,721,834,1,0),(5770,721,835,1,1),(5771,721,836,1,1),(5772,721,837,1,1),(5773,722,829,1,0),(5774,722,830,1,1),(5775,722,831,1,0),(5776,722,832,1,1),(5777,722,833,1,0),(5778,722,834,1,1),(5779,722,835,1,0),(5780,722,836,1,0),(5781,722,837,1,1),(5782,723,829,1,1),(5783,723,830,1,1),(5784,723,831,1,1),(5785,723,832,1,1),(5786,723,833,1,0),(5787,723,834,1,0),(5788,723,835,1,1),(5789,723,836,1,1),(5790,723,837,1,0),(5791,724,829,1,1),(5792,724,830,1,1),(5793,724,831,1,0),(5794,724,832,1,0),(5795,724,833,1,0),(5796,724,834,1,0),(5797,724,835,1,1),(5798,724,836,1,1),(5799,724,837,1,1),(5800,725,829,1,1),(5801,725,830,1,0),(5802,725,831,1,0),(5803,725,832,1,1),(5804,725,833,1,0),(5805,725,834,1,0),(5806,725,835,1,1),(5807,725,836,1,0),(5808,725,837,1,1),(5809,726,974,1,1),(5810,726,975,1,1),(5811,726,976,1,1),(5812,726,977,1,1),(5813,726,978,1,1),(5814,726,979,1,1),(5815,726,980,1,1),(5816,726,981,1,1),(5817,726,982,1,1),(5824,727,316,1,0),(5825,727,317,1,0),(5826,727,318,1,0),(5827,728,NULL,1,0),(5828,728,NULL,1,0),(5829,728,NULL,1,0),(5830,728,NULL,1,0),(5831,728,NULL,1,0),(5832,728,NULL,1,0),(5833,728,NULL,1,0),(5834,728,NULL,1,0),(5835,728,NULL,1,0),(5836,728,NULL,1,0),(5837,728,NULL,1,0),(5842,729,923,1,0),(5843,729,924,1,0),(5844,729,925,1,0),(5845,729,926,1,0),(5846,729,927,1,0),(5847,729,928,1,0),(5848,729,929,1,0),(5849,729,930,1,0),(5850,729,931,1,0),(5851,729,932,1,0),(5857,730,923,1,1),(5858,730,924,1,1),(5859,730,925,1,0),(5860,730,926,1,1),(5861,730,927,1,1),(5862,730,928,1,0),(5863,730,929,1,1),(5864,730,930,1,0),(5865,730,931,1,0),(5866,730,932,1,0),(5867,731,923,1,1),(5868,731,924,1,1),(5869,731,925,1,0),(5870,731,926,1,0),(5871,731,927,1,1),(5872,731,928,1,1),(5873,731,929,1,0),(5874,731,930,1,1),(5875,731,931,1,1),(5876,731,932,1,0),(5877,732,923,1,1),(5878,732,924,1,1),(5879,732,925,1,0),(5880,732,926,1,0),(5881,732,927,1,1),(5882,732,928,1,1),(5883,732,929,1,1),(5884,732,930,1,0),(5885,732,931,1,1),(5886,732,932,1,0),(5887,733,923,1,1),(5888,733,924,1,0),(5889,733,925,1,0),(5890,733,926,1,0),(5891,733,927,1,1),(5892,733,928,1,1),(5893,733,929,1,1),(5894,733,930,1,1),(5895,733,931,1,0),(5896,733,932,1,0),(5897,734,923,1,1),(5898,734,924,1,0),(5899,734,925,1,1),(5900,734,926,1,0),(5901,734,927,1,0),(5902,734,928,1,0),(5903,734,929,1,1),(5904,734,930,1,0),(5905,734,931,1,0),(5906,734,932,1,1),(5907,735,923,1,0),(5908,735,924,1,1),(5909,735,925,1,0),(5910,735,926,1,1),(5911,735,927,1,1),(5912,735,928,1,0),(5913,735,929,1,1),(5914,735,930,1,1),(5915,735,931,1,1),(5916,735,932,1,1),(5917,736,923,1,0),(5918,736,924,1,1),(5919,736,925,1,0),(5920,736,926,1,1),(5921,736,927,1,1),(5922,736,928,1,0),(5923,736,929,1,0),(5924,736,930,1,0),(5925,736,931,1,1),(5926,736,932,1,0),(5927,737,923,1,1),(5928,737,924,1,0),(5929,737,925,1,1),(5930,737,926,1,1),(5931,737,927,1,1),(5932,737,928,1,1),(5933,737,929,1,0),(5934,737,930,1,1),(5935,737,931,1,0),(5936,737,932,1,0),(5937,738,923,1,0),(5938,738,924,1,1),(5939,738,925,1,1),(5940,738,926,1,0),(5941,738,927,1,1),(5942,738,928,1,0),(5943,738,929,1,1),(5944,738,930,1,1),(5945,738,931,1,0),(5946,738,932,1,1),(5947,739,923,1,1),(5948,739,924,1,0),(5949,739,925,1,1),(5950,739,926,1,0),(5951,739,927,1,0),(5952,739,928,1,1),(5953,739,929,1,1),(5954,739,930,1,1),(5955,739,931,1,0),(5956,739,932,1,0),(5957,740,923,1,0),(5958,740,924,1,1),(5959,740,925,1,1),(5960,740,926,1,1),(5961,740,927,1,1),(5962,740,928,1,0),(5963,740,929,1,1),(5964,740,930,1,1),(5965,740,931,1,0),(5966,740,932,1,1),(5967,741,923,1,0),(5968,741,924,1,0),(5969,741,925,1,1),(5970,741,926,1,1),(5971,741,927,1,0),(5972,741,928,1,1),(5973,741,929,1,1),(5974,741,930,1,0),(5975,741,931,1,1),(5976,741,932,1,0),(5977,742,923,1,1),(5978,742,924,1,0),(5979,742,925,1,0),(5980,742,926,1,1),(5981,742,927,1,0),(5982,742,928,1,1),(5983,742,929,1,0),(5984,742,930,1,1),(5985,742,931,1,0),(5986,742,932,1,0),(5987,743,923,1,1),(5988,743,924,1,1),(5989,743,925,1,1),(5990,743,926,1,0),(5991,743,927,1,1),(5992,743,928,1,1),(5993,743,929,1,1),(5994,743,930,1,0),(5995,743,931,1,0),(5996,743,932,1,0),(5997,744,923,1,0),(5998,744,924,1,0),(5999,744,925,1,0),(6000,744,926,1,1),(6001,744,927,1,1),(6002,744,928,1,1),(6003,744,929,1,0),(6004,744,930,1,0),(6005,744,931,1,1),(6006,744,932,1,0),(6007,745,923,1,1),(6008,745,924,1,0),(6009,745,925,1,1),(6010,745,926,1,1),(6011,745,927,1,0),(6012,745,928,1,0),(6013,745,929,1,1),(6014,745,930,1,0),(6015,745,931,1,0),(6016,745,932,1,1),(6017,746,923,1,0),(6018,746,924,1,0),(6019,746,925,1,1),(6020,746,926,1,0),(6021,746,927,1,0),(6022,746,928,1,1),(6023,746,929,1,1),(6024,746,930,1,0),(6025,746,931,1,0),(6026,746,932,1,1),(6027,747,923,1,1),(6028,747,924,1,1),(6029,747,925,1,1),(6030,747,926,1,0),(6031,747,927,1,0),(6032,747,928,1,1),(6033,747,929,1,1),(6034,747,930,1,1),(6035,747,931,1,0),(6036,747,932,1,1),(6037,748,923,1,1),(6038,748,924,1,1),(6039,748,925,1,1),(6040,748,926,1,1),(6041,748,927,1,1),(6042,748,928,1,1),(6043,748,929,1,0),(6044,748,930,1,0),(6045,748,931,1,1),(6046,748,932,1,0),(6047,749,923,1,0),(6048,749,924,1,1),(6049,749,925,1,0),(6050,749,926,1,1),(6051,749,927,1,1),(6052,749,928,1,0),(6053,749,929,1,1),(6054,749,930,1,0),(6055,749,931,1,0),(6056,749,932,1,1),(6057,750,923,1,1),(6058,750,924,1,1),(6059,750,925,1,0),(6060,750,926,1,1),(6061,750,927,1,0),(6062,750,928,1,0),(6063,750,929,1,1),(6064,750,930,1,1),(6065,750,931,1,0),(6066,750,932,1,1),(6067,751,923,1,1),(6068,751,924,1,0),(6069,751,925,1,1),(6070,751,926,1,1),(6071,751,927,1,0),(6072,751,928,1,1),(6073,751,929,1,0),(6074,751,930,1,0),(6075,751,931,1,1),(6076,751,932,1,0),(6077,752,923,1,1),(6078,752,924,1,0),(6079,752,925,1,1),(6080,752,926,1,0),(6081,752,927,1,1),(6082,752,928,1,1),(6083,752,929,1,0),(6084,752,930,1,1),(6085,752,931,1,0),(6086,752,932,1,1),(6087,753,923,1,1),(6088,753,924,1,1),(6089,753,925,1,0),(6090,753,926,1,1),(6091,753,927,1,0),(6092,753,928,1,0),(6093,753,929,1,1),(6094,753,930,1,1),(6095,753,931,1,0),(6096,753,932,1,1),(6097,754,923,1,1),(6098,754,924,1,0),(6099,754,925,1,1),(6100,754,926,1,1),(6101,754,927,1,0),(6102,754,928,1,0),(6103,754,929,1,0),(6104,754,930,1,0),(6105,754,931,1,1),(6106,754,932,1,0),(6107,755,983,1,1),(6108,755,984,1,0),(6109,755,985,1,1),(6110,756,983,1,1),(6111,756,984,1,1),(6112,756,985,1,0),(6113,757,983,1,1),(6114,757,984,1,0),(6115,757,985,1,1),(6116,758,983,1,1),(6117,758,984,1,1),(6118,758,985,1,1),(6119,759,983,1,0),(6120,759,984,1,0),(6121,759,985,1,0),(6122,760,983,1,1),(6123,760,984,1,1),(6124,760,985,1,0),(6125,761,983,1,0),(6126,761,984,1,0),(6127,761,985,1,1),(6128,762,983,1,0),(6129,762,984,1,1),(6130,762,985,1,1),(6131,763,983,1,0),(6132,763,984,1,1),(6133,763,985,1,0),(6134,764,983,1,0),(6135,764,984,1,0),(6136,764,985,1,1),(6137,765,983,1,0),(6138,765,984,1,1),(6139,765,985,1,1),(6140,766,983,1,1),(6141,766,984,1,0),(6142,766,985,1,1),(6143,767,983,1,0),(6144,767,984,1,1),(6145,767,985,1,1),(6146,768,983,1,0),(6147,768,984,1,0),(6148,768,985,1,0),(6149,769,983,1,0),(6150,769,984,1,1),(6151,769,985,1,0),(6152,770,983,1,1),(6153,770,984,1,1),(6154,770,985,1,0),(6155,771,983,1,0),(6156,771,984,1,1),(6157,771,985,1,0),(6158,772,983,1,1),(6159,772,984,1,1),(6160,772,985,1,1),(6161,773,983,1,1),(6162,773,984,1,1),(6163,773,985,1,1),(6164,774,983,1,0),(6165,774,984,1,0),(6166,774,985,1,1),(6167,775,983,1,1),(6168,775,984,1,0),(6169,775,985,1,1),(6170,776,983,1,1),(6171,776,984,1,1),(6172,776,985,1,1),(6173,777,983,1,0),(6174,777,984,1,0),(6175,777,985,1,1),(6176,778,983,1,0),(6177,778,984,1,0),(6178,778,985,1,1),(6179,779,983,1,1),(6180,779,984,1,1),(6181,779,985,1,1),(6182,780,983,1,1),(6183,780,984,1,1),(6184,780,985,1,0),(6185,781,953,1,1),(6186,781,954,1,0),(6187,781,955,1,0),(6188,781,956,1,1),(6189,781,957,1,0),(6190,781,958,1,1),(6191,781,959,1,1),(6192,781,960,1,0),(6193,781,961,1,0),(6194,781,962,1,1),(6195,781,963,1,0),(6196,781,964,1,1),(6197,782,953,1,1),(6198,782,954,1,0),(6199,782,955,1,1),(6200,782,956,1,1),(6201,782,957,1,1),(6202,782,958,1,0),(6203,782,959,1,0),(6204,782,960,1,1),(6205,782,961,1,1),(6206,782,962,1,1),(6207,782,963,1,1),(6208,782,964,1,1),(6209,783,953,1,1),(6210,783,954,1,0),(6211,783,955,1,1),(6212,783,956,1,0),(6213,783,957,1,0),(6214,783,958,1,1),(6215,783,959,1,1),(6216,783,960,1,0),(6217,783,961,1,1),(6218,783,962,1,0),(6219,783,963,1,1),(6220,783,964,1,1),(6221,784,953,1,1),(6222,784,954,1,1),(6223,784,955,1,1),(6224,784,956,1,1),(6225,784,957,1,0),(6226,784,958,1,1),(6227,784,959,1,1),(6228,784,960,1,1),(6229,784,961,1,0),(6230,784,962,1,1),(6231,784,963,1,0),(6232,784,964,1,1),(6233,785,953,1,0),(6234,785,954,1,1),(6235,785,955,1,0),(6236,785,956,1,0),(6237,785,957,1,1),(6238,785,958,1,1),(6239,785,959,1,1),(6240,785,960,1,1),(6241,785,961,1,1),(6242,785,962,1,0),(6243,785,963,1,0),(6244,785,964,1,1),(6245,786,953,1,1),(6246,786,954,1,0),(6247,786,955,1,1),(6248,786,956,1,1),(6249,786,957,1,0),(6250,786,958,1,0),(6251,786,959,1,0),(6252,786,960,1,0),(6253,786,961,1,1),(6254,786,962,1,1),(6255,786,963,1,1),(6256,786,964,1,1),(6257,787,953,1,0),(6258,787,954,1,0),(6259,787,955,1,1),(6260,787,956,1,0),(6261,787,957,1,0),(6262,787,958,1,1),(6263,787,959,1,0),(6264,787,960,1,1),(6265,787,961,1,1),(6266,787,962,1,0),(6267,787,963,1,1),(6268,787,964,1,0),(6269,788,953,1,1),(6270,788,954,1,1),(6271,788,955,1,1),(6272,788,956,1,1),(6273,788,957,1,1),(6274,788,958,1,0),(6275,788,959,1,1),(6276,788,960,1,1),(6277,788,961,1,0),(6278,788,962,1,1),(6279,788,963,1,0),(6280,788,964,1,1),(6281,789,953,1,0),(6282,789,954,1,0),(6283,789,955,1,0),(6284,789,956,1,1),(6285,789,957,1,0),(6286,789,958,1,1),(6287,789,959,1,1),(6288,789,960,1,1),(6289,789,961,1,1),(6290,789,962,1,1),(6291,789,963,1,0),(6292,789,964,1,0),(6293,790,953,1,1),(6294,790,954,1,1),(6295,790,955,1,0),(6296,790,956,1,1),(6297,790,957,1,1),(6298,790,958,1,1),(6299,790,959,1,1),(6300,790,960,1,1),(6301,790,961,1,0),(6302,790,962,1,0),(6303,790,963,1,1),(6304,790,964,1,1),(6305,791,953,1,1),(6306,791,954,1,0),(6307,791,955,1,1),(6308,791,956,1,1),(6309,791,957,1,1),(6310,791,958,1,0),(6311,791,959,1,0),(6312,791,960,1,0),(6313,791,961,1,1),(6314,791,962,1,0),(6315,791,963,1,1),(6316,791,964,1,0),(6317,792,953,1,0),(6318,792,954,1,0),(6319,792,955,1,1),(6320,792,956,1,1),(6321,792,957,1,1),(6322,792,958,1,0),(6323,792,959,1,0),(6324,792,960,1,0),(6325,792,961,1,1),(6326,792,962,1,1),(6327,792,963,1,0),(6328,792,964,1,1),(6329,793,953,1,0),(6330,793,954,1,1),(6331,793,955,1,1),(6332,793,956,1,0),(6333,793,957,1,0),(6334,793,958,1,0),(6335,793,959,1,0),(6336,793,960,1,1),(6337,793,961,1,1),(6338,793,962,1,0),(6339,793,963,1,0),(6340,793,964,1,1),(6341,794,953,1,1),(6342,794,954,1,1),(6343,794,955,1,0),(6344,794,956,1,0),(6345,794,957,1,0),(6346,794,958,1,1),(6347,794,959,1,1),(6348,794,960,1,1),(6349,794,961,1,0),(6350,794,962,1,0),(6351,794,963,1,1),(6352,794,964,1,0),(6353,795,953,1,1),(6354,795,954,1,1),(6355,795,955,1,0),(6356,795,956,1,0),(6357,795,957,1,1),(6358,795,958,1,1),(6359,795,959,1,0),(6360,795,960,1,0),(6361,795,961,1,0),(6362,795,962,1,1),(6363,795,963,1,0),(6364,795,964,1,0),(6365,796,953,1,1),(6366,796,954,1,0),(6367,796,955,1,1),(6368,796,956,1,0),(6369,796,957,1,0),(6370,796,958,1,0),(6371,796,959,1,0),(6372,796,960,1,0),(6373,796,961,1,0),(6374,796,962,1,0),(6375,796,963,1,0),(6376,796,964,1,1),(6377,797,953,1,0),(6378,797,954,1,0),(6379,797,955,1,1),(6380,797,956,1,0),(6381,797,957,1,1),(6382,797,958,1,0),(6383,797,959,1,0),(6384,797,960,1,1),(6385,797,961,1,1),(6386,797,962,1,1),(6387,797,963,1,1),(6388,797,964,1,1),(6389,798,953,1,0),(6390,798,954,1,0),(6391,798,955,1,0),(6392,798,956,1,1),(6393,798,957,1,1),(6394,798,958,1,1),(6395,798,959,1,0),(6396,798,960,1,1),(6397,798,961,1,0),(6398,798,962,1,0),(6399,798,963,1,0),(6400,798,964,1,1),(6401,799,953,1,0),(6402,799,954,1,1),(6403,799,955,1,0),(6404,799,956,1,0),(6405,799,957,1,0),(6406,799,958,1,0),(6407,799,959,1,0),(6408,799,960,1,0),(6409,799,961,1,1),(6410,799,962,1,1),(6411,799,963,1,0),(6412,799,964,1,0),(6413,800,953,1,1),(6414,800,954,1,1),(6415,800,955,1,0),(6416,800,956,1,0),(6417,800,957,1,1),(6418,800,958,1,1),(6419,800,959,1,1),(6420,800,960,1,0),(6421,800,961,1,0),(6422,800,962,1,1),(6423,800,963,1,0),(6424,800,964,1,0),(6425,801,953,1,0),(6426,801,954,1,1),(6427,801,955,1,0),(6428,801,956,1,1),(6429,801,957,1,0),(6430,801,958,1,0),(6431,801,959,1,1),(6432,801,960,1,0),(6433,801,961,1,0),(6434,801,962,1,0),(6435,801,963,1,1),(6436,801,964,1,1),(6437,802,953,1,0),(6438,802,954,1,0),(6439,802,955,1,0),(6440,802,956,1,1),(6441,802,957,1,1),(6442,802,958,1,1),(6443,802,959,1,0),(6444,802,960,1,0),(6445,802,961,1,1),(6446,802,962,1,0),(6447,802,963,1,0),(6448,802,964,1,1),(6449,803,953,1,0),(6450,803,954,1,1),(6451,803,955,1,0),(6452,803,956,1,1),(6453,803,957,1,1),(6454,803,958,1,0),(6455,803,959,1,0),(6456,803,960,1,1),(6457,803,961,1,0),(6458,803,962,1,0),(6459,803,963,1,0),(6460,803,964,1,1),(6461,804,953,1,1),(6462,804,954,1,1),(6463,804,955,1,0),(6464,804,956,1,1),(6465,804,957,1,1),(6466,804,958,1,1),(6467,804,959,1,1),(6468,804,960,1,0),(6469,804,961,1,1),(6470,804,962,1,0),(6471,804,963,1,0),(6472,804,964,1,0),(6473,805,953,1,1),(6474,805,954,1,1),(6475,805,955,1,1),(6476,805,956,1,0),(6477,805,957,1,0),(6478,805,958,1,0),(6479,805,959,1,1),(6480,805,960,1,1),(6481,805,961,1,1),(6482,805,962,1,1),(6483,805,963,1,1),(6484,805,964,1,0),(6485,806,953,1,0),(6486,806,954,1,1),(6487,806,955,1,1),(6488,806,956,1,1),(6489,806,957,1,1),(6490,806,958,1,1),(6491,806,959,1,0),(6492,806,960,1,0),(6493,806,961,1,1),(6494,806,962,1,0),(6495,806,963,1,1),(6496,806,964,1,1),(6497,807,953,1,1),(6498,807,954,1,1),(6499,807,955,1,0),(6500,807,956,1,0),(6501,807,957,1,1),(6502,807,958,1,1),(6503,807,959,1,0),(6504,807,960,1,0),(6505,807,961,1,0),(6506,807,962,1,1),(6507,807,963,1,0),(6508,807,964,1,1),(6509,808,953,1,0),(6510,808,954,1,0),(6511,808,955,1,1),(6512,808,956,1,0),(6513,808,957,1,0),(6514,808,958,1,0),(6515,808,959,1,1),(6516,808,960,1,0),(6517,808,961,1,1),(6518,808,962,1,1),(6519,808,963,1,0),(6520,808,964,1,0),(6521,809,953,1,0),(6522,809,954,1,0),(6523,809,955,1,0),(6524,809,956,1,0),(6525,809,957,1,1),(6526,809,958,1,1),(6527,809,959,1,0),(6528,809,960,1,1),(6529,809,961,1,0),(6530,809,962,1,0),(6531,809,963,1,0),(6532,809,964,1,1),(6533,810,953,1,1),(6534,810,954,1,0),(6535,810,955,1,1),(6536,810,956,1,0),(6537,810,957,1,0),(6538,810,958,1,1),(6539,810,959,1,0),(6540,810,960,1,0),(6541,810,961,1,1),(6542,810,962,1,1),(6543,810,963,1,0),(6544,810,964,1,0),(6545,811,953,1,1),(6546,811,954,1,1),(6547,811,955,1,0),(6548,811,956,1,1),(6549,811,957,1,1),(6550,811,958,1,1),(6551,811,959,1,1),(6552,811,960,1,1),(6553,811,961,1,1),(6554,811,962,1,0),(6555,811,963,1,0),(6556,811,964,1,1),(6557,812,953,1,0),(6558,812,954,1,1),(6559,812,955,1,1),(6560,812,956,1,1),(6561,812,957,1,0),(6562,812,958,1,0),(6563,812,959,1,0),(6564,812,960,1,1),(6565,812,961,1,1),(6566,812,962,1,1),(6567,812,963,1,1),(6568,812,964,1,0),(6569,813,953,1,1),(6570,813,954,1,0),(6571,813,955,1,1),(6572,813,956,1,1),(6573,813,957,1,1),(6574,813,958,1,1),(6575,813,959,1,0),(6576,813,960,1,1),(6577,813,961,1,1),(6578,813,962,1,0),(6579,813,963,1,1),(6580,813,964,1,1),(6581,814,953,1,1),(6582,814,954,1,1),(6583,814,955,1,0),(6584,814,956,1,1),(6585,814,957,1,0),(6586,814,958,1,1),(6587,814,959,1,0),(6588,814,960,1,0),(6589,814,961,1,0),(6590,814,962,1,0),(6591,814,963,1,1),(6592,814,964,1,1),(6593,815,953,1,0),(6594,815,954,1,1),(6595,815,955,1,1),(6596,815,956,1,1),(6597,815,957,1,1),(6598,815,958,1,0),(6599,815,959,1,0),(6600,815,960,1,1),(6601,815,961,1,0),(6602,815,962,1,0),(6603,815,963,1,1),(6604,815,964,1,0),(6605,816,953,1,1),(6606,816,954,1,0),(6607,816,955,1,0),(6608,816,956,1,1),(6609,816,957,1,1),(6610,816,958,1,1),(6611,816,959,1,0),(6612,816,960,1,0),(6613,816,961,1,0),(6614,816,962,1,1),(6615,816,963,1,0),(6616,816,964,1,1),(6617,817,953,1,1),(6618,817,954,1,1),(6619,817,955,1,1),(6620,817,956,1,0),(6621,817,957,1,1),(6622,817,958,1,0),(6623,817,959,1,1),(6624,817,960,1,0),(6625,817,961,1,1),(6626,817,962,1,1),(6627,817,963,1,0),(6628,817,964,1,0),(6629,818,953,1,0),(6630,818,954,1,1),(6631,818,955,1,1),(6632,818,956,1,1),(6633,818,957,1,1),(6634,818,958,1,1),(6635,818,959,1,1),(6636,818,960,1,1),(6637,818,961,1,0),(6638,818,962,1,1),(6639,818,963,1,1),(6640,818,964,1,0),(6641,819,953,1,0),(6642,819,954,1,1),(6643,819,955,1,1),(6644,819,956,1,0),(6645,819,957,1,1),(6646,819,958,1,0),(6647,819,959,1,0),(6648,819,960,1,0),(6649,819,961,1,0),(6650,819,962,1,1),(6651,819,963,1,1),(6652,819,964,1,1),(6653,820,953,1,0),(6654,820,954,1,0),(6655,820,955,1,1),(6656,820,956,1,1),(6657,820,957,1,0),(6658,820,958,1,0),(6659,820,959,1,1),(6660,820,960,1,1),(6661,820,961,1,1),(6662,820,962,1,1),(6663,820,963,1,1),(6664,820,964,1,0),(6665,821,953,1,1),(6666,821,954,1,1),(6667,821,955,1,0),(6668,821,956,1,1),(6669,821,957,1,0),(6670,821,958,1,0),(6671,821,959,1,1),(6672,821,960,1,1),(6673,821,961,1,1),(6674,821,962,1,1),(6675,821,963,1,1),(6676,821,964,1,1),(6677,822,953,1,1),(6678,822,954,1,1),(6679,822,955,1,0),(6680,822,956,1,1),(6681,822,957,1,1),(6682,822,958,1,0),(6683,822,959,1,1),(6684,822,960,1,1),(6685,822,961,1,0),(6686,822,962,1,1),(6687,822,963,1,0),(6688,822,964,1,0),(6689,823,953,1,1),(6690,823,954,1,1),(6691,823,955,1,0),(6692,823,956,1,1),(6693,823,957,1,1),(6694,823,958,1,1),(6695,823,959,1,0),(6696,823,960,1,1),(6697,823,961,1,1),(6698,823,962,1,0),(6699,823,963,1,0),(6700,823,964,1,1),(6701,824,953,1,0),(6702,824,954,1,0),(6703,824,955,1,1),(6704,824,956,1,0),(6705,824,957,1,1),(6706,824,958,1,1),(6707,824,959,1,1),(6708,824,960,1,0),(6709,824,961,1,1),(6710,824,962,1,0),(6711,824,963,1,0),(6712,824,964,1,1),(6713,825,953,1,1),(6714,825,954,1,0),(6715,825,955,1,1),(6716,825,956,1,1),(6717,825,957,1,1),(6718,825,958,1,0),(6719,825,959,1,0),(6720,825,960,1,1),(6721,825,961,1,0),(6722,825,962,1,0),(6723,825,963,1,0),(6724,825,964,1,1),(6725,826,953,1,0),(6726,826,954,1,1),(6727,826,955,1,1),(6728,826,956,1,1),(6729,826,957,1,1),(6730,826,958,1,0),(6731,826,959,1,1),(6732,826,960,1,1),(6733,826,961,1,1),(6734,826,962,1,0),(6735,826,963,1,0),(6736,826,964,1,0),(6737,827,953,1,1),(6738,827,954,1,1),(6739,827,955,1,0),(6740,827,956,1,1),(6741,827,957,1,1),(6742,827,958,1,1),(6743,827,959,1,1),(6744,827,960,1,0),(6745,827,961,1,0),(6746,827,962,1,1),(6747,827,963,1,1),(6748,827,964,1,1),(6749,828,953,1,1),(6750,828,954,1,0),(6751,828,955,1,1),(6752,828,956,1,1),(6753,828,957,1,0),(6754,828,958,1,1),(6755,828,959,1,1),(6756,828,960,1,0),(6757,828,961,1,0),(6758,828,962,1,0),(6759,828,963,1,1),(6760,828,964,1,1),(6761,829,953,1,1),(6762,829,954,1,0),(6763,829,955,1,0),(6764,829,956,1,0),(6765,829,957,1,1),(6766,829,958,1,0),(6767,829,959,1,0),(6768,829,960,1,1),(6769,829,961,1,1),(6770,829,962,1,0),(6771,829,963,1,0),(6772,829,964,1,1),(6773,830,953,1,1),(6774,830,954,1,1),(6775,830,955,1,1),(6776,830,956,1,0),(6777,830,957,1,1),(6778,830,958,1,0),(6779,830,959,1,1),(6780,830,960,1,0),(6781,830,961,1,1),(6782,830,962,1,0),(6783,830,963,1,0),(6784,830,964,1,1),(6785,831,818,1,1),(6786,831,819,1,0),(6787,831,820,1,0),(6788,831,821,1,0),(6789,831,822,1,0),(6790,831,823,1,0),(6791,831,824,1,0),(6792,831,825,1,0),(6793,831,826,1,0),(6800,832,810,1,1),(6801,832,811,4,3),(6802,832,812,2,0),(6803,833,810,1,0),(6804,833,811,4,1),(6805,833,812,2,2),(6806,834,810,1,0),(6807,834,811,4,0),(6808,834,812,2,2),(6809,835,810,1,0),(6810,835,811,4,4),(6811,835,812,2,1),(6812,836,810,1,0),(6813,836,811,4,4),(6814,836,812,2,2),(6815,837,810,1,1),(6816,837,811,4,3),(6817,837,812,2,1),(6818,838,810,1,0),(6819,838,811,4,2),(6820,838,812,2,2),(6821,839,810,1,1),(6822,839,811,4,1),(6823,839,812,2,2),(6824,840,810,1,0),(6825,840,811,4,2),(6826,840,812,2,1),(6827,841,810,1,0),(6828,841,811,4,3),(6829,841,812,2,1),(6830,842,810,1,1),(6831,842,811,4,0),(6832,842,812,2,1),(6833,843,810,1,0),(6834,843,811,4,2),(6835,843,812,2,1),(6836,844,810,1,1),(6837,844,811,4,1),(6838,844,812,2,0),(6839,845,810,1,0),(6840,845,811,4,4),(6841,845,812,2,1),(6842,846,810,1,0),(6843,846,811,4,1),(6844,846,812,2,1),(6845,847,810,1,1),(6846,847,811,4,3),(6847,847,812,2,2),(6848,848,810,1,1),(6849,848,811,4,2),(6850,848,812,2,1),(6851,849,810,1,1),(6852,849,811,4,4),(6853,849,812,2,2),(6854,850,810,1,1),(6855,850,811,4,0),(6856,850,812,2,1),(6857,851,810,1,1),(6858,851,811,4,3),(6859,851,812,2,0),(6860,852,810,1,0),(6861,852,811,4,0),(6862,852,812,2,2),(6863,853,810,1,0),(6864,853,811,4,0),(6865,853,812,2,0),(6866,854,810,1,1),(6867,854,811,4,1),(6868,854,812,2,0),(6869,855,810,1,0),(6870,855,811,4,2),(6871,855,812,2,2),(6872,856,810,1,1),(6873,856,811,4,0),(6874,856,812,2,1),(6875,857,810,1,0),(6876,857,811,4,3),(6877,857,812,2,0),(6878,858,810,1,1),(6879,858,811,4,2),(6880,858,812,2,0),(6881,859,810,1,0),(6882,859,811,4,3),(6883,859,812,2,2),(6884,860,810,1,1),(6885,860,811,4,2),(6886,860,812,2,0),(6887,861,810,1,1),(6888,861,811,4,3),(6889,861,812,2,0),(6890,862,810,1,1),(6891,862,811,4,3),(6892,862,812,2,0),(6893,863,810,1,0),(6894,863,811,4,2),(6895,863,812,2,0),(6896,864,810,1,1),(6897,864,811,4,2),(6898,864,812,2,2),(6899,865,810,1,0),(6900,865,811,4,2),(6901,865,812,2,1),(6902,866,810,1,1),(6903,866,811,4,3),(6904,866,812,2,1),(6905,867,810,1,0),(6906,867,811,4,3),(6907,867,812,2,0),(6908,868,810,1,1),(6909,868,811,4,4),(6910,868,812,2,1),(6911,869,810,1,1),(6912,869,811,4,4),(6913,869,812,2,0),(6914,870,810,1,1),(6915,870,811,4,4),(6916,870,812,2,1),(6917,871,810,1,1),(6918,871,811,4,1),(6919,871,812,2,2),(6920,872,810,1,1),(6921,872,811,4,4),(6922,872,812,2,2),(6923,873,810,1,0),(6924,873,811,4,2),(6925,873,812,2,1),(6926,874,810,1,0),(6927,874,811,4,2),(6928,874,812,2,0),(6929,875,810,1,0),(6930,875,811,4,0),(6931,875,812,2,1),(6932,876,810,1,1),(6933,876,811,4,1),(6934,876,812,2,2),(6935,877,810,1,1),(6936,877,811,4,0),(6937,877,812,2,2),(6938,878,810,1,1),(6939,878,811,4,4),(6940,878,812,2,1),(6941,879,810,1,1),(6942,879,811,4,0),(6943,879,812,2,2),(6944,880,810,1,1),(6945,880,811,4,2),(6946,880,812,2,2),(6947,881,810,1,0),(6948,881,811,4,4),(6949,881,812,2,2),(6950,882,818,1,0),(6951,882,819,1,0),(6952,882,820,1,0),(6953,882,821,1,0),(6954,882,822,1,0),(6955,882,823,1,0),(6956,882,824,1,0),(6957,882,825,1,0),(6958,882,826,1,0),(6965,883,986,1,1),(6966,883,987,1,0),(6967,883,988,1,0),(6968,884,986,1,1),(6969,884,987,1,0),(6970,884,988,1,1),(6971,885,986,1,0),(6972,885,987,1,1),(6973,885,988,1,1),(6974,886,986,1,0),(6975,886,987,1,0),(6976,886,988,1,0),(6977,887,986,1,1),(6978,887,987,1,0),(6979,887,988,1,1),(6980,888,986,1,1),(6981,888,987,1,1),(6982,888,988,1,0),(6983,889,986,1,1),(6984,889,987,1,1),(6985,889,988,1,0),(6986,890,986,1,0),(6987,890,987,1,0),(6988,890,988,1,0),(6989,891,986,1,0),(6990,891,987,1,0),(6991,891,988,1,0),(6992,892,986,1,0),(6993,892,987,1,1),(6994,892,988,1,1),(6995,893,986,1,0),(6996,893,987,1,0),(6997,893,988,1,0),(6998,894,986,1,0),(6999,894,987,1,0),(7000,894,988,1,0),(7001,895,986,1,0),(7002,895,987,1,0),(7003,895,988,1,1),(7004,896,986,1,0),(7005,896,987,1,1),(7006,896,988,1,1),(7007,897,986,1,1),(7008,897,987,1,1),(7009,897,988,1,1),(7010,898,986,1,0),(7011,898,987,1,0),(7012,898,988,1,1),(7013,899,986,1,1),(7014,899,987,1,1),(7015,899,988,1,1),(7016,900,986,1,0),(7017,900,987,1,1),(7018,900,988,1,0),(7019,901,986,1,1),(7020,901,987,1,0),(7021,901,988,1,1),(7022,902,986,1,0),(7023,902,987,1,1),(7024,902,988,1,1),(7025,903,986,1,1),(7026,903,987,1,0),(7027,903,988,1,1),(7028,904,986,1,1),(7029,904,987,1,0),(7030,904,988,1,1),(7031,905,986,1,0),(7032,905,987,1,1),(7033,905,988,1,0),(7034,906,986,1,1),(7035,906,987,1,0),(7036,906,988,1,0),(7037,907,986,1,1),(7038,907,987,1,0),(7039,907,988,1,0),(7040,908,986,1,0),(7041,908,987,1,0),(7042,908,988,1,1),(7043,909,986,1,0),(7044,909,987,1,0),(7045,909,988,1,0),(7046,910,986,1,1),(7047,910,987,1,1),(7048,910,988,1,1),(7049,911,986,1,0),(7050,911,987,1,1),(7051,911,988,1,1),(7052,912,986,1,0),(7053,912,987,1,1),(7054,912,988,1,1),(7055,913,986,1,0),(7056,913,987,1,1),(7057,913,988,1,1),(7058,914,986,1,1),(7059,914,987,1,1),(7060,914,988,1,0),(7061,915,986,1,0),(7062,915,987,1,0),(7063,915,988,1,0),(7064,916,986,1,1),(7065,916,987,1,0),(7066,916,988,1,1),(7067,917,986,1,0),(7068,917,987,1,0),(7069,917,988,1,0),(7070,918,986,1,0),(7071,918,987,1,0),(7072,918,988,1,0),(7073,919,986,1,0),(7074,919,987,1,1),(7075,919,988,1,1),(7076,920,986,1,0),(7077,920,987,1,1),(7078,920,988,1,0),(7079,921,986,1,0),(7080,921,987,1,0),(7081,921,988,1,1),(7082,922,986,1,0),(7083,922,987,1,1),(7084,922,988,1,0),(7085,923,986,1,1),(7086,923,987,1,0),(7087,923,988,1,0),(7088,924,986,1,1),(7089,924,987,1,0),(7090,924,988,1,0),(7091,925,986,1,1),(7092,925,987,1,0),(7093,925,988,1,0),(7094,926,986,1,0),(7095,926,987,1,1),(7096,926,988,1,0),(7097,927,986,1,0),(7098,927,987,1,0),(7099,927,988,1,0),(7100,928,986,1,1),(7101,928,987,1,1),(7102,928,988,1,1),(7103,929,986,1,0),(7104,929,987,1,1),(7105,929,988,1,1),(7106,930,986,1,1),(7107,930,987,1,1),(7108,930,988,1,0),(7109,931,986,1,1),(7110,931,987,1,0),(7111,931,988,1,0),(7112,932,986,1,1),(7113,932,987,1,0),(7114,932,988,1,0),(7115,933,986,1,1),(7116,933,987,1,0),(7117,933,988,1,1),(7118,934,986,1,1),(7119,934,987,1,0),(7120,934,988,1,0),(7121,935,986,1,1),(7122,935,987,1,1),(7123,935,988,1,1),(7124,936,986,1,0),(7125,936,987,1,1),(7126,936,988,1,1),(7127,937,986,1,0),(7128,937,987,1,1),(7129,937,988,1,1),(7130,938,986,1,1),(7131,938,987,1,1),(7132,938,988,1,1),(7133,939,986,1,0),(7134,939,987,1,0),(7135,939,988,1,0),(7136,940,986,1,1),(7137,940,987,1,0),(7138,940,988,1,0),(7139,941,986,1,0),(7140,941,987,1,1),(7141,941,988,1,0),(7142,942,986,1,0),(7143,942,987,1,0),(7144,942,988,1,1),(7145,943,986,1,0),(7146,943,987,1,1),(7147,943,988,1,1),(7148,944,986,1,0),(7149,944,987,1,1),(7150,944,988,1,0),(7151,945,986,1,0),(7152,945,987,1,1),(7153,945,988,1,0),(7154,946,986,1,0),(7155,946,987,1,0),(7156,946,988,1,0),(7157,947,986,1,0),(7158,947,987,1,1),(7159,947,988,1,1),(7160,948,986,1,0),(7161,948,987,1,0),(7162,948,988,1,1),(7163,949,986,1,1),(7164,949,987,1,1),(7165,949,988,1,1),(7166,950,986,1,1),(7167,950,987,1,0),(7168,950,988,1,1),(7169,951,986,1,0),(7170,951,987,1,0),(7171,951,988,1,0),(7172,952,986,1,1),(7173,952,987,1,0),(7174,952,988,1,1),(7175,953,986,1,1),(7176,953,987,1,1),(7177,953,988,1,0),(7178,954,986,1,0),(7179,954,987,1,0),(7180,954,988,1,1),(7181,955,986,1,1),(7182,955,987,1,1),(7183,955,988,1,0),(7184,956,986,1,1),(7185,956,987,1,0),(7186,956,988,1,1),(7187,957,986,1,0),(7188,957,987,1,0),(7189,957,988,1,1),(7190,958,986,1,1),(7191,958,987,1,1),(7192,958,988,1,1);

/*Table structure for table `taker_test_map` */

DROP TABLE IF EXISTS `taker_test_map`;

CREATE TABLE `taker_test_map` (
  `taker_test_map_id` int(11) NOT NULL AUTO_INCREMENT,
  `test_id` int(11) DEFAULT NULL,
  `user_id` int(11) DEFAULT NULL,
  `taker_test_map_starttime` datetime NOT NULL,
  `taker_test_map_endtime` datetime NOT NULL,
  `taker_test_map_desc` text COLLATE utf8_unicode_ci COMMENT 'comments',
  PRIMARY KEY (`taker_test_map_id`),
  KEY `fk_taker_of_test` (`user_id`),
  KEY `fk_test_in_the_mapping_with_taker` (`test_id`),
  CONSTRAINT `fk_taker_of_test` FOREIGN KEY (`user_id`) REFERENCES `user` (`user_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_test_in_the_mapping_with_taker` FOREIGN KEY (`test_id`) REFERENCES `test` (`test_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=959 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `taker_test_map` */

insert  into `taker_test_map`(`taker_test_map_id`,`test_id`,`user_id`,`taker_test_map_starttime`,`taker_test_map_endtime`,`taker_test_map_desc`) values (1,4,1,'2016-01-24 07:15:48','2016-01-24 07:20:07',''),(2,5,1,'2015-11-27 20:19:10','2015-11-29 20:22:23',''),(3,1,1,'2016-01-24 07:20:32','2016-01-24 08:43:56',''),(4,6,1,'2015-11-27 20:41:10','2015-11-28 02:09:41',''),(5,7,1,'2015-12-19 02:59:10','2015-12-19 19:39:10',''),(6,8,1,'2015-12-19 03:15:34','2015-12-19 04:45:34',''),(7,9,1,'2015-12-03 14:34:19','2015-12-03 16:04:19',''),(8,2,1,'2015-12-28 05:28:43','2015-12-28 06:58:43',''),(9,10,1,'2015-12-19 03:15:19','2015-12-19 19:55:19',''),(10,12,1,'2015-12-29 06:31:32','2015-12-29 06:32:03',''),(11,13,3,'2015-12-28 06:18:54','2015-12-28 06:19:09',''),(12,11,3,'2015-12-28 05:37:03','2015-12-28 05:37:04',''),(13,13,12,'2015-12-28 05:42:19','2015-12-28 05:43:04',''),(14,11,12,'2015-12-28 05:42:06','2015-12-28 06:12:06',''),(15,14,7,'2016-01-01 15:44:28','2016-01-01 16:14:28',''),(16,14,3,'2015-12-31 23:23:37','2015-12-31 23:24:43',''),(17,14,8,'2016-01-01 15:45:51','2016-01-01 15:46:24',''),(18,15,13,'2016-01-03 20:50:18','2016-01-03 20:50:44',''),(19,16,13,'2016-01-04 22:35:08','2016-01-04 23:05:08',''),(21,1,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(22,1,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(23,1,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(24,1,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(25,1,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(26,1,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(27,1,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(28,1,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(29,1,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(30,1,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(31,1,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(32,1,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(33,1,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(34,1,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(35,1,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(36,1,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(37,1,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(38,1,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(39,1,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(40,1,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(41,1,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(42,1,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(43,1,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(44,1,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(45,1,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(46,1,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(47,2,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(48,2,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(49,2,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(50,2,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(51,2,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(52,2,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(53,2,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(54,2,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(55,2,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(56,2,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(57,2,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(58,2,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(59,2,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(60,2,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(61,2,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(62,2,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(63,2,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(64,2,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(65,2,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(66,2,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(67,2,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(68,2,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(69,2,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(70,2,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(71,2,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(72,3,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(73,3,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(74,3,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(75,3,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(76,3,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(77,3,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(78,3,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(79,3,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(80,3,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(81,3,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(82,3,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(83,3,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(84,3,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(85,3,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(86,3,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(87,3,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(88,3,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(89,3,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(90,3,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(91,3,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(92,3,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(93,3,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(94,3,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(95,3,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(96,3,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(97,4,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(98,4,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(99,4,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(100,4,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(101,4,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(102,4,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(103,4,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(104,4,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(105,4,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(106,4,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(107,4,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(108,4,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(109,4,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(110,4,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(111,4,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(112,4,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(113,4,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(114,4,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(115,4,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(116,4,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(117,4,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(118,4,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(119,4,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(120,4,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(121,4,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(122,5,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(123,5,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(124,5,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(125,5,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(126,5,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(127,5,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(128,5,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(129,5,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(130,5,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(131,5,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(132,5,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(133,5,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(134,5,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(135,5,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(136,5,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(137,5,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(138,5,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(139,5,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(140,5,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(141,5,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(142,5,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(143,5,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(144,5,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(145,5,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(146,5,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(147,6,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(148,6,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(149,6,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(150,6,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(151,6,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(152,6,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(153,6,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(154,6,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(155,6,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(156,6,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(157,6,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(158,6,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(159,6,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(160,6,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(161,6,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(162,6,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(163,6,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(164,6,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(165,6,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(166,6,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(167,6,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(168,6,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(169,6,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(170,6,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(171,6,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(172,7,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(173,7,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(174,7,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(175,7,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(176,7,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(177,7,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(178,7,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(179,7,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(180,7,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(181,7,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(182,7,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(183,7,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(184,7,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(185,7,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(186,7,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(187,7,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(188,7,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(189,7,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(190,7,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(191,7,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(192,7,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(193,7,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(194,7,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(195,7,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(196,7,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(197,8,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(198,8,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(199,8,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(200,8,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(201,8,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(202,8,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(203,8,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(204,8,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(205,8,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(206,8,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(207,8,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(208,8,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(209,8,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(210,8,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(211,8,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(212,8,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(213,8,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(214,8,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(215,8,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(216,8,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(217,8,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(218,8,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(219,8,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(220,8,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(221,8,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(222,12,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(223,12,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(224,12,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(225,12,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(226,12,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(227,12,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(228,12,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(229,12,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(230,12,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(231,12,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(232,12,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(233,12,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(234,12,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(235,12,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(236,12,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(237,12,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(238,12,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(239,12,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(240,12,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(241,12,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(242,12,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(243,12,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(244,12,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(245,12,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(246,12,NULL,'2016-01-24 00:00:00','2016-01-24 00:00:00',NULL),(247,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(248,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(249,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(250,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(251,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(252,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(253,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(254,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(255,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(256,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(257,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(258,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(259,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(260,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(261,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(262,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(263,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(264,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(265,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(266,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(267,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(268,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(269,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(270,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(271,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(272,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(273,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(274,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(275,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(276,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(277,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(278,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(279,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(280,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(281,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(282,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(283,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(284,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(285,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(286,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(287,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(288,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(289,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(290,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(291,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(292,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(293,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(294,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(295,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(296,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(297,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(298,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(299,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(300,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(301,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(302,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(303,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(304,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(305,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(306,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(307,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(308,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(309,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(310,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(311,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(312,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(313,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(314,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(315,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(316,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(317,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(318,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(319,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(320,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(321,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(322,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(323,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(324,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(325,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(326,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(327,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(328,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(329,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(330,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(331,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(332,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(333,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(334,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(335,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(336,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(337,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(338,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(339,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(340,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(341,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(342,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(343,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(344,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(345,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(346,2,NULL,'2016-01-30 00:00:00','2016-01-30 00:00:00',NULL),(347,1,14,'2016-03-17 13:21:15','2016-03-17 15:21:15',''),(348,14,14,'2016-03-17 13:21:19','2016-03-17 13:51:19',''),(349,16,14,'2016-03-17 13:21:23','2016-03-17 13:32:42',''),(350,5,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(351,5,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(352,5,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(353,5,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(354,5,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(355,5,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(356,5,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(357,5,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(358,5,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(359,5,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(360,5,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(361,5,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(362,5,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(363,5,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(364,5,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(365,5,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(366,5,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(367,5,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(368,5,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(369,5,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(370,5,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(371,5,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(372,5,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(373,5,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(374,5,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(375,3,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(376,3,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(377,3,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(378,3,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(379,3,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(380,3,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(381,3,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(382,3,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(383,3,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(384,3,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(385,3,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(386,3,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(387,3,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(388,3,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(389,3,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(390,3,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(391,3,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(392,3,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(393,3,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(394,3,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(395,3,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(396,3,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(397,3,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(398,3,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(399,3,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(400,18,1,'2016-03-17 23:54:40','2016-03-18 01:54:40',''),(401,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(402,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(403,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(404,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(405,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(406,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(407,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(408,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(409,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(410,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(411,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(412,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(413,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(414,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(415,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(416,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(417,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(418,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(419,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(420,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(421,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(422,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(423,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(424,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(425,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(426,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(427,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(428,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(429,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(430,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(431,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(432,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(433,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(434,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(435,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(436,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(437,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(438,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(439,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(440,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(441,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(442,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(443,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(444,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(445,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(446,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(447,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(448,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(449,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(450,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(451,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(452,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(453,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(454,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(455,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(456,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(457,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(458,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(459,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(460,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(461,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(462,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(463,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(464,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(465,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(466,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(467,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(468,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(469,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(470,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(471,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(472,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(473,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(474,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(475,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(476,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(477,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(478,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(479,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(480,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(481,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(482,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(483,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(484,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(485,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(486,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(487,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(488,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(489,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(490,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(491,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(492,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(493,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(494,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(495,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(496,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(497,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(498,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(499,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(500,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(501,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(502,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(503,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(504,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(505,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(506,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(507,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(508,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(509,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(510,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(511,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(512,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(513,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(514,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(515,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(516,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(517,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(518,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(519,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(520,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(521,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(522,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(523,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(524,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(525,17,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(526,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(527,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(528,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(529,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(530,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(531,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(532,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(533,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(534,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(535,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(536,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(537,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(538,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(539,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(540,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(541,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(542,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(543,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(544,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(545,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(546,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(547,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(548,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(549,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(550,18,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(551,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(552,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(553,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(554,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(555,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(556,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(557,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(558,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(559,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(560,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(561,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(562,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(563,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(564,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(565,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(566,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(567,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(568,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(569,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(570,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(571,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(572,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(573,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(574,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(575,26,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(576,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(577,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(578,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(579,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(580,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(581,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(582,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(583,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(584,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(585,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(586,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(587,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(588,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(589,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(590,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(591,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(592,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(593,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(594,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(595,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(596,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(597,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(598,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(599,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(600,28,NULL,'2016-03-17 00:00:00','2016-03-17 00:00:00',NULL),(601,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(602,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(603,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(604,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(605,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(606,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(607,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(608,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(609,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(610,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(611,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(612,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(613,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(614,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(615,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(616,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(617,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(618,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(619,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(620,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(621,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(622,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(623,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(624,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(625,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(626,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(627,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(628,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(629,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(630,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(631,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(632,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(633,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(634,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(635,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(636,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(637,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(638,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(639,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(640,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(641,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(642,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(643,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(644,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(645,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(646,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(647,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(648,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(649,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(650,21,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(651,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(652,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(653,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(654,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(655,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(656,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(657,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(658,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(659,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(660,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(661,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(662,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(663,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(664,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(665,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(666,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(667,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(668,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(669,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(670,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(671,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(672,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(673,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(674,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(675,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(676,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(677,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(678,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(679,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(680,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(681,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(682,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(683,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(684,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(685,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(686,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(687,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(688,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(689,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(690,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(691,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(692,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(693,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(694,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(695,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(696,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(697,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(698,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(699,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(700,22,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(701,26,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(702,26,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(703,26,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(704,26,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(705,26,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(706,26,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(707,26,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(708,26,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(709,26,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(710,26,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(711,26,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(712,26,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(713,26,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(714,26,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(715,26,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(716,26,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(717,26,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(718,26,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(719,26,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(720,26,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(721,26,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(722,26,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(723,26,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(724,26,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(725,26,NULL,'2016-03-18 00:00:00','2016-03-18 00:00:00',NULL),(726,27,14,'2016-03-19 09:02:54','2016-03-19 09:03:45',''),(727,15,14,'2016-03-19 09:13:35','2016-03-19 09:43:35',''),(728,20,1,'2016-03-21 02:21:19','2016-03-21 02:21:26',''),(729,21,1,'2016-03-21 02:22:13','2016-03-21 03:22:21',''),(730,21,NULL,'2016-03-21 00:00:00','2016-03-21 00:00:00',NULL),(731,21,NULL,'2016-03-21 00:00:00','2016-03-21 00:00:00',NULL),(732,21,NULL,'2016-03-21 00:00:00','2016-03-21 00:00:00',NULL),(733,21,NULL,'2016-03-21 00:00:00','2016-03-21 00:00:00',NULL),(734,21,NULL,'2016-03-21 00:00:00','2016-03-21 00:00:00',NULL),(735,21,NULL,'2016-03-21 00:00:00','2016-03-21 00:00:00',NULL),(736,21,NULL,'2016-03-21 00:00:00','2016-03-21 00:00:00',NULL),(737,21,NULL,'2016-03-21 00:00:00','2016-03-21 00:00:00',NULL),(738,21,NULL,'2016-03-21 00:00:00','2016-03-21 00:00:00',NULL),(739,21,NULL,'2016-03-21 00:00:00','2016-03-21 00:00:00',NULL),(740,21,NULL,'2016-03-21 00:00:00','2016-03-21 00:00:00',NULL),(741,21,NULL,'2016-03-21 00:00:00','2016-03-21 00:00:00',NULL),(742,21,NULL,'2016-03-21 00:00:00','2016-03-21 00:00:00',NULL),(743,21,NULL,'2016-03-21 00:00:00','2016-03-21 00:00:00',NULL),(744,21,NULL,'2016-03-21 00:00:00','2016-03-21 00:00:00',NULL),(745,21,NULL,'2016-03-21 00:00:00','2016-03-21 00:00:00',NULL),(746,21,NULL,'2016-03-21 00:00:00','2016-03-21 00:00:00',NULL),(747,21,NULL,'2016-03-21 00:00:00','2016-03-21 00:00:00',NULL),(748,21,NULL,'2016-03-21 00:00:00','2016-03-21 00:00:00',NULL),(749,21,NULL,'2016-03-21 00:00:00','2016-03-21 00:00:00',NULL),(750,21,NULL,'2016-03-21 00:00:00','2016-03-21 00:00:00',NULL),(751,21,NULL,'2016-03-21 00:00:00','2016-03-21 00:00:00',NULL),(752,21,NULL,'2016-03-21 00:00:00','2016-03-21 00:00:00',NULL),(753,21,NULL,'2016-03-21 00:00:00','2016-03-21 00:00:00',NULL),(754,21,NULL,'2016-03-21 00:00:00','2016-03-21 00:00:00',NULL),(755,30,1,'2016-03-23 11:09:56','2016-03-23 11:10:41',''),(756,30,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(757,30,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(758,30,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(759,30,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(760,30,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(761,30,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(762,30,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(763,30,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(764,30,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(765,30,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(766,30,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(767,30,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(768,30,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(769,30,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(770,30,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(771,30,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(772,30,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(773,30,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(774,30,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(775,30,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(776,30,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(777,30,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(778,30,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(779,30,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(780,30,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(781,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(782,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(783,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(784,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(785,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(786,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(787,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(788,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(789,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(790,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(791,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(792,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(793,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(794,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(795,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(796,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(797,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(798,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(799,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(800,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(801,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(802,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(803,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(804,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(805,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(806,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(807,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(808,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(809,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(810,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(811,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(812,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(813,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(814,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(815,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(816,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(817,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(818,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(819,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(820,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(821,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(822,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(823,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(824,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(825,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(826,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(827,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(828,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(829,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(830,24,NULL,'2016-03-23 00:00:00','2016-03-23 00:00:00',NULL),(831,28,14,'2016-03-23 16:11:05','2016-03-23 18:11:05',''),(832,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(833,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(834,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(835,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(836,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(837,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(838,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(839,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(840,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(841,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(842,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(843,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(844,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(845,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(846,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(847,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(848,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(849,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(850,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(851,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(852,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(853,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(854,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(855,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(856,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(857,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(858,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(859,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(860,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(861,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(862,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(863,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(864,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(865,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(866,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(867,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(868,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(869,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(870,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(871,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(872,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(873,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(874,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(875,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(876,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(877,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(878,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(879,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(880,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(881,9,NULL,'2016-03-24 00:00:00','2016-03-24 00:00:00',NULL),(882,28,1,'2016-03-25 16:51:47','2016-03-25 18:51:47',''),(883,31,1,'2016-03-25 16:53:20','2016-03-25 17:13:20',''),(884,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(885,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(886,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(887,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(888,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(889,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(890,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(891,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(892,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(893,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(894,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(895,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(896,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(897,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(898,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(899,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(900,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(901,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(902,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(903,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(904,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(905,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(906,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(907,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(908,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(909,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(910,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(911,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(912,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(913,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(914,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(915,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(916,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(917,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(918,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(919,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(920,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(921,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(922,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(923,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(924,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(925,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(926,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(927,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(928,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(929,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(930,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(931,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(932,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(933,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(934,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(935,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(936,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(937,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(938,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(939,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(940,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(941,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(942,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(943,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(944,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(945,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(946,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(947,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(948,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(949,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(950,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(951,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(952,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(953,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(954,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(955,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(956,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(957,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL),(958,31,NULL,'2016-03-25 00:00:00','2016-03-25 00:00:00',NULL);

/*Table structure for table `takersolution_component` */

DROP TABLE IF EXISTS `takersolution_component`;

CREATE TABLE `takersolution_component` (
  `takersolution_component_id` int(11) NOT NULL AUTO_INCREMENT,
  `curr_item_id` int(11) DEFAULT NULL,
  `next_item_id` int(11) DEFAULT NULL,
  `fill_value` text COLLATE utf8_unicode_ci,
  `taker_solution_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`takersolution_component_id`),
  KEY `fk_components_of_taker_solution` (`taker_solution_id`),
  KEY `fk_currentitem_in_the_solution` (`next_item_id`),
  KEY `fk_nextitem_in_the_solution` (`curr_item_id`),
  CONSTRAINT `fk_components_of_taker_solution` FOREIGN KEY (`taker_solution_id`) REFERENCES `taker_solution` (`taker_solution_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_currentitem_in_the_solution` FOREIGN KEY (`next_item_id`) REFERENCES `question_item` (`item_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_nextitem_in_the_solution` FOREIGN KEY (`curr_item_id`) REFERENCES `question_item` (`item_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=442 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `takersolution_component` */

insert  into `takersolution_component`(`takersolution_component_id`,`curr_item_id`,`next_item_id`,`fill_value`,`taker_solution_id`) values (44,NULL,NULL,'5',19),(45,1110,NULL,NULL,20),(46,1115,NULL,NULL,21),(47,1117,NULL,NULL,22),(48,1126,NULL,NULL,23),(49,1130,NULL,NULL,24),(50,1123,NULL,NULL,25),(51,1140,NULL,NULL,26),(52,1136,NULL,NULL,27),(276,1246,1252,NULL,63),(277,1247,1253,NULL,63),(278,1248,1251,NULL,63),(279,1249,1250,NULL,63),(280,NULL,NULL,'sort',64),(281,NULL,NULL,'N',65),(282,NULL,NULL,'O(n)',66),(312,1246,1250,NULL,83),(313,1247,1251,NULL,83),(314,1248,1252,NULL,83),(315,1249,1253,NULL,83),(316,NULL,NULL,NULL,84),(317,NULL,NULL,NULL,85),(318,NULL,NULL,NULL,86),(319,NULL,NULL,'deded',87),(320,1229,NULL,NULL,88),(321,1232,NULL,NULL,88),(322,1234,NULL,NULL,89),(323,1237,NULL,NULL,89),(324,1238,NULL,NULL,90),(325,1241,NULL,NULL,90),(326,1257,NULL,NULL,91),(327,1261,NULL,NULL,92),(328,1264,NULL,NULL,92),(329,1266,NULL,NULL,93),(330,1270,NULL,NULL,94),(331,NULL,NULL,'3',95),(332,1276,NULL,NULL,96),(333,1280,NULL,NULL,97),(334,1257,NULL,NULL,98),(335,1261,NULL,NULL,99),(336,1264,NULL,NULL,99),(337,1265,NULL,NULL,100),(338,1269,NULL,NULL,101),(339,NULL,NULL,'5',102),(340,1275,NULL,NULL,103),(341,1279,NULL,NULL,104),(370,NULL,NULL,'insertion sort ',131),(371,NULL,NULL,'3',132),(372,NULL,NULL,'O(n)',133),(395,1048,NULL,NULL,139),(396,1051,NULL,NULL,139),(397,NULL,NULL,'Insertion sort',140),(398,NULL,NULL,'N-1',141),(399,NULL,NULL,NULL,142),(400,1079,NULL,NULL,147),(401,1080,NULL,NULL,147),(402,1081,NULL,NULL,147),(403,1082,NULL,NULL,147),(404,NULL,NULL,NULL,148),(405,NULL,NULL,NULL,150),(406,NULL,NULL,NULL,151),(407,NULL,NULL,NULL,152),(408,NULL,NULL,NULL,152),(417,NULL,NULL,NULL,162),(418,NULL,NULL,NULL,163),(419,1291,1294,NULL,2554),(420,1292,1297,NULL,2554),(421,1310,NULL,NULL,2555),(422,1306,NULL,NULL,2556),(423,1303,NULL,NULL,2557),(424,3863,NULL,NULL,5809),(425,3866,NULL,NULL,5810),(426,3871,NULL,NULL,5811),(427,3875,NULL,NULL,5812),(428,3879,NULL,NULL,5813),(429,3882,NULL,NULL,5814),(430,3888,NULL,NULL,5815),(431,3892,NULL,NULL,5816),(432,3894,NULL,NULL,5817),(433,3897,NULL,NULL,6107),(434,3900,NULL,NULL,6107),(435,3906,NULL,NULL,6109),(436,3901,NULL,NULL,6108),(437,3902,NULL,NULL,6108),(438,3904,NULL,NULL,6108),(439,3903,NULL,NULL,6108),(440,3401,NULL,NULL,6785),(441,NULL,NULL,NULL,6965);

/*Table structure for table `test` */

DROP TABLE IF EXISTS `test`;

CREATE TABLE `test` (
  `test_id` int(11) NOT NULL AUTO_INCREMENT,
  `course_id` int(11) DEFAULT NULL,
  `user_id` int(11) DEFAULT NULL,
  `test_code` char(10) COLLATE utf8_unicode_ci NOT NULL,
  `test_header` text COLLATE utf8_unicode_ci NOT NULL,
  `test_footer` text COLLATE utf8_unicode_ci NOT NULL,
  `test_desc` text COLLATE utf8_unicode_ci,
  `test_creation_time` datetime DEFAULT NULL,
  `test_start_time` datetime NOT NULL,
  `test_end_time` datetime NOT NULL,
  `test_duration` int(11) NOT NULL COMMENT 'in minutes\n            ',
  PRIMARY KEY (`test_id`),
  KEY `fk_creator_of_test` (`user_id`),
  KEY `fk_test_for_course` (`course_id`),
  CONSTRAINT `fk_creator_of_test` FOREIGN KEY (`user_id`) REFERENCES `user` (`user_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_test_for_course` FOREIGN KEY (`course_id`) REFERENCES `course` (`course_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=32 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `test` */

insert  into `test`(`test_id`,`course_id`,`user_id`,`test_code`,`test_header`,`test_footer`,`test_desc`,`test_creation_time`,`test_start_time`,`test_end_time`,`test_duration`) values (1,2,1,'CTDL001','<p>Mở đầu</p>','<p>Kết thúc rồi</p>','<p>Làm bài thi nào</p>','2015-10-28 12:10:28','2015-11-24 00:00:00','2016-03-31 00:00:00',120),(2,2,1,'012','<p>qqqq</p>','<p>eee</p>','','2015-10-28 12:10:00','2015-10-29 00:00:00','2016-03-31 00:00:00',90),(3,2,1,'qww2','<p>dewd</p>','<p>wqqww</p>','<p>qw</p>','2015-10-31 02:10:17','2015-10-30 00:00:00','2016-03-31 00:00:00',123),(4,2,1,'CTDL_EX01','<p>ĐỀ THI KẾT THÚC HỌC PHẦN</p>','<p>GIÁM THỊ KHÔNG GIẢI THÍCH GÌ THÊM</p>','','2015-11-20 22:11:45','2015-11-20 00:00:00','2016-03-31 00:00:00',120),(5,2,1,'CTDL005','<p>aaa</p>','<p>bbb</p>','<p>ccc</p>','2015-11-27 13:11:28','2015-11-26 00:00:00','2016-03-31 00:00:00',120),(6,2,1,'CTDL006','<p>KẾT THÚC HỌC PHẦN</p>','<p><br></p>','','2015-11-27 20:11:28','2015-11-22 00:00:00','2016-03-31 00:00:00',90),(7,2,1,'CTDL007','<p>aaaa</p>','<p>bbb</p>','<p>ccc</p>','2015-12-01 06:12:57','2015-11-30 00:00:00','2016-03-31 00:00:00',1000),(8,2,1,'CTDL008','<p>aaa</p>','<p>bbb</p>','<p>ccc</p>','2015-12-02 11:12:24','2015-12-01 00:00:00','2016-03-31 00:00:00',90),(9,2,1,'CTDL009','<p>AAA</p>','<p>BBB</p>','<p>CCC</p>','2015-12-03 13:12:46','2015-12-02 00:00:00','2016-03-31 00:00:00',90),(10,2,1,'CTDL10','<p>ABC</p>','<p>DEF</p>','<p>123</p>','2015-12-03 14:12:48','2015-12-01 00:00:00','2016-03-31 00:00:00',1000),(11,2,3,'test','<p>hello</p>','<p>hello</p>','','2015-12-16 14:12:38','2015-12-17 00:00:00','2016-03-31 00:00:00',30),(12,2,1,'CTDL01','<p>AAA</p>','<p>BBB</p>','<p>CCC</p>','2015-12-19 02:12:08','2015-12-17 00:00:00','2016-03-31 00:00:00',90),(13,2,3,'123','<p>1213131</p>','<p>131312</p>','<p>121213</p>','2015-12-26 05:12:41','2015-12-17 00:00:00','2016-03-31 00:00:00',30),(14,2,7,'CTDL-GT-15','<p>Hello</p>','<p>Bye</p>','','2015-12-28 12:12:16','2015-12-29 00:00:00','2016-03-31 00:00:00',30),(15,2,13,'KTLT-2015','<p>KTLT-2015-bai kiem tra</p>','<p>KTLT-2015-bai kiem tra<br></p>','','2016-01-02 23:01:40','2016-01-03 00:00:00','2016-03-31 00:00:00',30),(16,2,13,'KTLT-2014','<p>KTLT-2015 - thi cuoi ky</p>','<p>KTLT-2015 - thi cuoi ky</p>','','2016-01-03 11:01:27','2016-01-03 00:00:00','2016-03-31 00:00:00',30),(17,4,1,'MMT001','<p>Mở đầu</p>','<p>Kết thúc rồi</p>','<p>Làm bài thi nào</p>','2016-03-17 19:03:01','2016-03-01 00:00:00','2016-04-25 00:00:00',120),(18,4,1,'MMT002','<p>Mở đầu</p>','<p>Kết thúc rồi</p>','<p>Làm bài thi nào</p>','2016-03-17 20:03:00','2016-03-08 00:00:00','2016-04-25 00:00:00',120),(19,4,1,'MMT003','<p>Mở đầu</p>','<p>Kết thúc rồi</p>','<p>Làm bài thi nào</p>','2016-03-17 20:03:25','2016-03-06 00:00:00','2016-04-25 00:00:00',120),(20,4,1,'MMT004','<p>Mở đầu</p>','<p>Kết thúc rồi</p>','<p>Làm bài thi nào</p>','2016-03-17 20:03:29','2016-03-15 00:00:00','2016-04-25 00:00:00',120),(21,1,1,'JAVA001','<p>Mở đầu</p>','<p>Kết thúc rồi</p>','<p>Làm bài thi nào</p>','2016-03-17 20:03:31','2016-03-08 00:00:00','2016-04-25 00:00:00',120),(22,1,1,'JAVA002','<p>Mở đầu</p>','<p>Kết thúc rồi</p>','<p>Làm bài thi nào</p>','2016-03-17 20:03:27','2016-03-01 00:00:00','2016-04-25 00:00:00',120),(23,1,1,'JAVA003','<p>Mở đầu</p>','<p>Kết thúc</p>','<p>Làm bài thi nào</p>','2016-03-17 20:03:05','2016-03-09 00:00:00','2016-04-25 00:00:00',120),(24,1,1,'JAVA004','<p>Mở đầu<br></p>','<p>Kết thúc rồi</p>','<p>Làm bài thi nào</p>','2016-03-17 20:03:43','2016-03-11 00:00:00','2016-04-25 00:00:00',120),(25,3,1,'KTLT001','<p>Mở đầu</p>','<p>Kết thúc rồi</p>','<p>Làm bài thi nào</p>','2016-03-17 20:03:12','2016-03-11 00:00:00','2016-04-25 00:00:00',120),(26,3,1,'KTLT002','<p>Mở đầu</p>','<p>Kết thúc rồi</p>','<p>Làm bài thi nào</p>','2016-03-17 20:03:01','2016-03-08 00:00:00','2016-04-25 00:00:00',90),(27,3,1,'KTLT003','<p>Mở đầu</p>','<p>Kết thúc rồi</p>','<p>Làm bài thi nào</p>','2016-03-17 20:03:15','2016-03-07 00:00:00','2016-04-25 00:00:00',90),(28,3,1,'KTLT004','<p>Mở đầu</p>','<p>Kết thúc rồi</p>','<p>Làm bài thi nào</p>','2016-03-17 20:03:02','2016-03-15 00:00:00','2016-04-25 00:00:00',120),(29,3,1,'KTLT01','<p>BEGIN</p>','<p>END</p>','<p>LUCK FOR YOU</p>','2016-03-17 22:03:45','2016-03-15 00:00:00','2016-03-31 00:00:00',90),(30,3,1,'KTLT30','<p>Bắt đầu</p>','<p>Chúc làm bài tốt</p>','<p>Giám thị không giải thich gì thêm</p>','2016-03-23 11:03:11','2016-03-07 00:00:00','2016-03-29 00:00:00',30),(31,2,1,'40','<p>qwedq</p>','<p>qưeqwe</p>','<p>ưqee</p>','2016-03-25 16:03:27','2016-03-24 00:00:00','2016-03-30 00:00:00',20);

/*Table structure for table `test_access_mode` */

DROP TABLE IF EXISTS `test_access_mode`;

CREATE TABLE `test_access_mode` (
  `test_access_mode_id` int(11) NOT NULL AUTO_INCREMENT,
  `test_id` int(11) DEFAULT NULL,
  `accessor_id` int(11) DEFAULT NULL,
  `previlege_id` int(11) DEFAULT NULL,
  `grantor_id` int(11) DEFAULT NULL,
  `role_id` int(11) DEFAULT NULL,
  `test_access_mode_granted_date` date NOT NULL,
  `test_access_mode_valid_startdate` date NOT NULL,
  `test_access_mode_valid_enddate` date DEFAULT NULL,
  `test_access_mode_valid_starttime` time NOT NULL,
  `test_access_mode_valid_endtime` time DEFAULT NULL,
  `test_access_mode_is_disabled` tinyint(1) NOT NULL,
  `test_access_mode_desc` text COLLATE utf8_unicode_ci,
  PRIMARY KEY (`test_access_mode_id`),
  KEY `fk_accessing_modes_of_users_for_tests` (`accessor_id`),
  KEY `fk_granting_access_mode` (`grantor_id`),
  KEY `fk_previleges_of_accessing_mode` (`previlege_id`),
  KEY `fk_roles_of_accessing_mode` (`role_id`),
  KEY `fk_test_being_accessed` (`test_id`),
  CONSTRAINT `fk_accessing_modes_of_users_for_tests` FOREIGN KEY (`accessor_id`) REFERENCES `user` (`user_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_granting_access_mode` FOREIGN KEY (`grantor_id`) REFERENCES `user` (`user_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_previleges_of_accessing_mode` FOREIGN KEY (`previlege_id`) REFERENCES `previlege` (`previlege_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_roles_of_accessing_mode` FOREIGN KEY (`role_id`) REFERENCES `role` (`role_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_test_being_accessed` FOREIGN KEY (`test_id`) REFERENCES `test` (`test_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `test_access_mode` */

/*Table structure for table `test_comment_relationship` */

DROP TABLE IF EXISTS `test_comment_relationship`;

CREATE TABLE `test_comment_relationship` (
  `test_comment_relationship_id` int(11) NOT NULL AUTO_INCREMENT,
  `parent_test_comment_id` int(11) DEFAULT NULL,
  `child_test_comment_id` int(11) DEFAULT NULL,
  `test_comment_relationship_desc` text COLLATE utf8_unicode_ci,
  PRIMARY KEY (`test_comment_relationship_id`),
  KEY `fk_child_of_test_comment_relationship` (`child_test_comment_id`),
  KEY `fk_parent_of_test_comment_relationship` (`parent_test_comment_id`),
  CONSTRAINT `fk_child_of_test_comment_relationship` FOREIGN KEY (`child_test_comment_id`) REFERENCES `test_comment` (`test_review_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_parent_of_test_comment_relationship` FOREIGN KEY (`parent_test_comment_id`) REFERENCES `test_comment` (`test_review_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `test_comment_relationship` */

/*Table structure for table `test_question_map` */

DROP TABLE IF EXISTS `test_question_map`;

CREATE TABLE `test_question_map` (
  `test_question_map_id` int(11) NOT NULL AUTO_INCREMENT,
  `editmode_question_id` int(11) DEFAULT NULL,
  `test_section_id` int(11) DEFAULT NULL,
  `testmode_question_id` int(11) DEFAULT NULL,
  `test_question_map_score` double NOT NULL,
  `test_question_map_desc` text COLLATE utf8_unicode_ci,
  PRIMARY KEY (`test_question_map_id`),
  KEY `fk_edit_mode_question_in_the_mapping_with_test_section` (`editmode_question_id`),
  KEY `fk_testsection_in_the_mapping_with_question` (`test_section_id`),
  KEY `fk_test_mode_question_in_test` (`testmode_question_id`),
  CONSTRAINT `fk_edit_mode_question_in_the_mapping_with_test_section` FOREIGN KEY (`editmode_question_id`) REFERENCES `question` (`question_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_testsection_in_the_mapping_with_question` FOREIGN KEY (`test_section_id`) REFERENCES `test_section` (`test_section_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_test_mode_question_in_test` FOREIGN KEY (`testmode_question_id`) REFERENCES `question` (`question_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=288 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `test_question_map` */

insert  into `test_question_map`(`test_question_map_id`,`editmode_question_id`,`test_section_id`,`testmode_question_id`,`test_question_map_score`,`test_question_map_desc`) values (1,NULL,1,240,1,NULL),(2,NULL,1,241,1,NULL),(3,NULL,1,242,1,NULL),(4,NULL,2,244,1,NULL),(5,NULL,2,245,1,NULL),(6,NULL,2,246,1,NULL),(7,NULL,2,247,1,NULL),(8,NULL,2,248,1,NULL),(11,NULL,4,284,1,NULL),(12,NULL,4,285,1,NULL),(13,NULL,4,286,2,NULL),(14,NULL,6,287,1,NULL),(21,NULL,6,288,1,NULL),(22,NULL,1,243,1,NULL),(23,NULL,7,249,1,NULL),(24,NULL,7,250,1,NULL),(25,NULL,7,251,1,NULL),(26,NULL,7,252,1,NULL),(27,NULL,7,253,1,NULL),(28,NULL,7,254,1,NULL),(29,NULL,7,255,1,NULL),(30,NULL,7,256,1,NULL),(31,NULL,7,257,1,NULL),(32,NULL,7,258,1,NULL),(33,NULL,7,259,1,NULL),(34,NULL,7,260,1,NULL),(35,NULL,8,262,1,NULL),(36,NULL,7,261,1,NULL),(37,NULL,8,263,1,NULL),(38,NULL,8,264,1,NULL),(39,NULL,8,265,1,NULL),(40,NULL,8,266,1,NULL),(42,NULL,10,267,1,NULL),(43,NULL,10,268,1,NULL),(44,NULL,10,269,1,NULL),(45,NULL,11,274,1,NULL),(46,NULL,11,275,1,NULL),(47,NULL,10,270,1,NULL),(48,NULL,10,271,1,NULL),(49,NULL,10,272,1,NULL),(50,NULL,10,273,1,NULL),(51,NULL,12,276,1,NULL),(52,NULL,12,277,1,NULL),(53,NULL,12,278,1,NULL),(54,NULL,12,279,1,NULL),(55,NULL,12,280,1,NULL),(56,NULL,12,281,1,NULL),(57,NULL,12,282,1,NULL),(58,NULL,12,283,1,NULL),(59,NULL,13,289,1,NULL),(60,NULL,13,290,1,NULL),(61,NULL,13,291,1,NULL),(62,NULL,13,292,1,NULL),(63,NULL,13,293,1,NULL),(64,NULL,13,294,1,NULL),(65,NULL,14,295,1,NULL),(66,NULL,14,296,2,NULL),(67,NULL,14,297,4,NULL),(68,NULL,14,298,8,NULL),(69,NULL,16,806,1,NULL),(70,NULL,16,807,1,NULL),(71,NULL,16,808,1,NULL),(72,NULL,17,809,1,NULL),(73,NULL,19,299,1,NULL),(74,NULL,19,300,2,NULL),(75,NULL,19,301,4,NULL),(76,NULL,19,302,3,NULL),(81,NULL,27,304,1,NULL),(82,NULL,27,305,1,NULL),(83,NULL,27,306,1,NULL),(84,NULL,27,307,1,NULL),(85,NULL,28,308,1,NULL),(86,NULL,28,309,1,NULL),(87,NULL,28,310,1,NULL),(88,NULL,28,311,1,NULL),(89,NULL,28,312,1,NULL),(90,NULL,28,313,1,NULL),(91,NULL,28,314,1,NULL),(92,NULL,29,316,1,NULL),(93,NULL,29,317,1,NULL),(94,NULL,29,318,1,NULL),(104,NULL,34,319,1,NULL),(108,NULL,34,320,1,NULL),(109,NULL,34,321,1,NULL),(110,NULL,34,322,1,NULL),(111,NULL,34,323,1,NULL),(112,NULL,18,810,1,NULL),(113,NULL,18,811,4,NULL),(114,NULL,18,812,2,NULL),(117,NULL,40,903,1,NULL),(118,NULL,40,904,1,NULL),(119,NULL,40,905,1,NULL),(120,NULL,40,906,1,NULL),(121,NULL,40,907,1,NULL),(122,NULL,40,908,1,NULL),(123,NULL,40,909,1,NULL),(124,NULL,40,910,1,NULL),(125,NULL,40,911,1,NULL),(126,NULL,40,912,1,NULL),(127,NULL,42,913,1,NULL),(128,NULL,42,914,1,NULL),(129,NULL,42,915,1,NULL),(130,NULL,42,916,1,NULL),(131,NULL,42,917,1,NULL),(132,NULL,42,918,1,NULL),(133,NULL,42,919,1,NULL),(134,NULL,42,920,1,NULL),(135,NULL,42,921,1,NULL),(136,NULL,42,922,1,NULL),(147,714,44,NULL,1,NULL),(148,704,44,NULL,1,NULL),(149,709,44,NULL,1,NULL),(150,606,44,NULL,1,NULL),(151,610,44,NULL,1,NULL),(152,622,44,NULL,1,NULL),(153,558,44,NULL,1,NULL),(154,559,44,NULL,1,NULL),(155,572,44,NULL,1,NULL),(156,717,44,NULL,1,NULL),(157,704,44,NULL,1,NULL),(158,NULL,45,923,1,NULL),(159,NULL,45,924,1,NULL),(160,NULL,45,925,1,NULL),(161,NULL,45,926,1,NULL),(162,NULL,45,927,1,NULL),(163,NULL,45,928,1,NULL),(164,NULL,45,929,1,NULL),(165,NULL,45,930,1,NULL),(166,NULL,45,931,1,NULL),(167,NULL,45,932,1,NULL),(168,NULL,46,933,1,NULL),(169,NULL,46,934,1,NULL),(170,NULL,46,935,1,NULL),(171,NULL,46,936,1,NULL),(172,NULL,46,937,1,NULL),(173,NULL,46,938,1,NULL),(174,NULL,46,939,1,NULL),(175,NULL,46,940,1,NULL),(176,NULL,46,941,1,NULL),(177,NULL,46,942,1,NULL),(178,NULL,47,943,1,NULL),(179,NULL,47,944,1,NULL),(180,NULL,47,945,1,NULL),(181,NULL,47,946,1,NULL),(182,NULL,47,947,1,NULL),(183,NULL,47,948,1,NULL),(184,NULL,47,949,1,NULL),(185,NULL,47,950,1,NULL),(186,NULL,47,951,1,NULL),(187,NULL,47,952,1,NULL),(188,NULL,48,953,1,NULL),(189,NULL,48,954,1,NULL),(190,NULL,48,955,1,NULL),(191,NULL,48,956,1,NULL),(192,NULL,48,957,1,NULL),(193,NULL,48,958,1,NULL),(194,NULL,48,959,1,NULL),(195,NULL,48,960,1,NULL),(196,NULL,48,961,1,NULL),(197,NULL,48,962,1,NULL),(198,NULL,48,963,1,NULL),(199,NULL,48,964,1,NULL),(200,NULL,49,965,1,NULL),(201,NULL,49,966,1,NULL),(202,NULL,49,967,1,NULL),(203,NULL,49,968,1,NULL),(204,NULL,49,969,1,NULL),(205,NULL,49,970,1,NULL),(206,NULL,49,971,1,NULL),(207,NULL,49,972,1,NULL),(208,NULL,49,973,1,NULL),(209,NULL,50,829,1,NULL),(210,NULL,50,830,1,NULL),(211,NULL,50,831,1,NULL),(212,NULL,50,832,1,NULL),(213,NULL,50,833,1,NULL),(214,NULL,50,834,1,NULL),(215,NULL,50,835,1,NULL),(216,NULL,50,836,1,NULL),(217,NULL,50,837,1,NULL),(218,NULL,51,974,1,NULL),(219,NULL,51,975,1,NULL),(220,NULL,51,976,1,NULL),(221,NULL,51,977,1,NULL),(222,NULL,51,978,1,NULL),(223,NULL,51,979,1,NULL),(224,NULL,51,980,1,NULL),(225,NULL,51,981,1,NULL),(226,NULL,51,982,1,NULL),(227,NULL,52,818,1,NULL),(228,NULL,52,819,1,NULL),(229,NULL,52,820,1,NULL),(230,NULL,52,821,1,NULL),(231,NULL,52,822,1,NULL),(232,NULL,52,823,1,NULL),(233,NULL,52,824,1,NULL),(234,NULL,52,825,1,NULL),(235,NULL,52,826,1,NULL),(236,NULL,53,338,1,NULL),(237,NULL,53,359,1,NULL),(238,NULL,53,364,1,NULL),(239,NULL,53,397,1,NULL),(240,NULL,53,457,1,NULL),(241,NULL,53,477,1,NULL),(242,NULL,53,480,1,NULL),(243,NULL,53,486,1,NULL),(244,NULL,53,496,1,NULL),(245,NULL,53,498,1,NULL),(246,NULL,53,511,1,NULL),(247,NULL,53,525,1,NULL),(248,NULL,53,533,1,NULL),(249,NULL,53,547,1,NULL),(250,NULL,53,830,1,NULL),(251,558,54,NULL,1,NULL),(252,567,54,NULL,1,NULL),(253,577,54,NULL,1,NULL),(254,584,54,NULL,1,NULL),(255,590,54,NULL,1,NULL),(256,592,54,NULL,1,NULL),(257,598,54,NULL,1,NULL),(258,608,54,NULL,1,NULL),(259,626,54,NULL,1,NULL),(260,629,54,NULL,1,NULL),(261,640,54,NULL,1,NULL),(262,653,54,NULL,1,NULL),(263,654,54,NULL,1,NULL),(264,663,54,NULL,1,NULL),(265,675,54,NULL,1,NULL),(266,689,54,NULL,1,NULL),(267,691,54,NULL,1,NULL),(268,708,54,NULL,1,NULL),(269,711,54,NULL,1,NULL),(270,715,54,NULL,1,NULL),(271,716,54,NULL,1,NULL),(272,913,54,NULL,1,NULL),(273,921,54,NULL,1,NULL),(282,53,55,983,1,NULL),(283,56,55,984,1,NULL),(284,401,55,985,1,NULL),(285,55,56,986,1,NULL),(286,82,56,987,1,NULL),(287,121,56,988,1,NULL);

/*Table structure for table `test_review` */

DROP TABLE IF EXISTS `test_review`;

CREATE TABLE `test_review` (
  `test_review_id` int(11) NOT NULL AUTO_INCREMENT,
  `test_review_parent_id` int(11) DEFAULT NULL,
  `user_id` int(11) NOT NULL,
  `test_id` int(11) NOT NULL,
  `test_review_code` int(1) NOT NULL DEFAULT '0' COMMENT '0: not yet decision, 1: dis-approved, 3: approved, 2: need modify',
  `test_review_desc` text COLLATE utf8_unicode_ci,
  `test_review_time` datetime DEFAULT NULL,
  PRIMARY KEY (`test_review_id`),
  KEY `test_review_parent_id` (`test_review_parent_id`),
  KEY `user_id` (`user_id`),
  KEY `test_id` (`test_id`),
  CONSTRAINT `test_review_ibfk_1` FOREIGN KEY (`test_review_parent_id`) REFERENCES `test_review` (`test_review_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `test_review_ibfk_2` FOREIGN KEY (`user_id`) REFERENCES `user` (`user_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `test_review_ibfk_3` FOREIGN KEY (`test_id`) REFERENCES `test` (`test_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=58 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `test_review` */

insert  into `test_review`(`test_review_id`,`test_review_parent_id`,`user_id`,`test_id`,`test_review_code`,`test_review_desc`,`test_review_time`) values (1,NULL,1,1,3,'','2015-11-13 23:01:37'),(2,NULL,1,2,3,'','2015-11-13 23:06:28'),(3,NULL,1,4,3,'','2015-11-20 22:51:57'),(4,NULL,1,5,3,'','2015-11-27 13:24:49'),(5,NULL,1,6,3,'','2015-11-27 20:40:31'),(6,NULL,1,3,3,'','2015-11-28 03:06:21'),(7,NULL,1,7,3,'','2015-12-03 13:28:48'),(8,NULL,1,8,3,'','2015-12-04 23:31:17'),(9,NULL,1,12,3,'','2015-12-19 02:44:15'),(10,NULL,3,11,0,'','2015-12-26 05:30:28'),(11,NULL,3,11,3,'','2015-12-26 05:30:35'),(12,NULL,3,13,3,'','2015-12-26 05:34:20'),(13,NULL,7,14,3,'','2015-12-28 12:11:16'),(14,NULL,13,15,3,'','2016-01-02 23:19:16'),(15,NULL,13,16,3,'','2016-01-03 11:47:35'),(16,NULL,1,10,3,'','2016-03-17 01:42:18'),(17,NULL,1,9,3,'','2016-03-17 11:44:36'),(18,NULL,1,17,0,'','2016-03-17 20:48:33'),(21,NULL,1,28,3,'','2016-03-17 20:51:24'),(24,NULL,1,26,3,'','2016-03-17 20:51:53'),(30,NULL,1,17,0,'','2016-03-17 22:19:05'),(48,NULL,1,17,3,'<p>ok</p>','2016-03-17 23:45:35'),(49,NULL,1,18,3,'','2016-03-17 23:54:18'),(50,NULL,1,21,3,'','2016-03-18 00:24:00'),(51,NULL,1,22,3,'','2016-03-18 00:24:21'),(52,NULL,1,23,3,'','2016-03-18 00:24:32'),(53,NULL,1,24,3,'','2016-03-18 00:24:52'),(54,NULL,1,25,3,'','2016-03-18 00:25:02'),(55,NULL,1,27,3,'','2016-03-18 00:25:18'),(56,NULL,1,30,3,'','2016-03-23 11:09:35'),(57,NULL,1,31,3,'','2016-03-25 16:52:54');

/*Table structure for table `test_section` */

DROP TABLE IF EXISTS `test_section`;

CREATE TABLE `test_section` (
  `test_section_id` int(11) NOT NULL AUTO_INCREMENT,
  `test_id` int(11) DEFAULT NULL,
  `test_section_code` char(10) COLLATE utf8_unicode_ci DEFAULT NULL,
  `test_section_desc` text COLLATE utf8_unicode_ci,
  `test_section_order` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`test_section_id`),
  KEY `fk_parts_of_test` (`test_id`),
  CONSTRAINT `fk_parts_of_test` FOREIGN KEY (`test_id`) REFERENCES `test` (`test_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=57 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `test_section` */

insert  into `test_section`(`test_section_id`,`test_id`,`test_section_code`,`test_section_desc`,`test_section_order`) values (1,1,'','',1),(2,2,'','',3),(3,2,'','<p>esdffres</p>',1),(4,3,'','<p>1`2`121`</p>',1),(6,3,'','<p>asDAWSd<img src=\"data/tmp/1/tmp1446234544.gif\" alt=\"ASa\" width=\"807\" height=\"142\"></p>',3),(7,4,'','<p>PHẦN CƠ BẢN</p>',1),(8,4,'','<p>PHẦN NÂNG CAO</p>',3),(10,5,'','',1),(11,5,'','',3),(12,6,'','<p>PHẦN A</p>',1),(13,7,'','',1),(14,8,'','',1),(16,10,'','<p>Phần A</p>',1),(17,10,'','<p>Phần B</p>',3),(18,9,'','<p>A</p>',1),(19,12,'','',1),(24,11,'','',1),(27,13,'','',1),(28,14,'','',1),(29,15,'','',1),(34,16,'','',1),(40,17,'','',1),(42,18,'','',1),(44,20,'','',1),(45,21,'','',1),(46,22,'','',1),(47,23,'','',1),(48,24,'','',1),(49,25,'','',1),(50,26,'','',1),(51,27,'','',1),(52,28,'','',1),(53,29,'',NULL,1),(54,19,'',NULL,1),(55,30,'','<p>PHẦN A</p>',1),(56,31,'',NULL,1);

/*Table structure for table `test_taker_comment` */

DROP TABLE IF EXISTS `test_taker_comment`;

CREATE TABLE `test_taker_comment` (
  `test_taker_comment_id` int(11) NOT NULL AUTO_INCREMENT,
  `taker_test_map_id` int(11) DEFAULT NULL,
  `test_taker_comment_date` date NOT NULL,
  `test_taker_comment_time` time DEFAULT NULL,
  `test_taker_comment_desc` text COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`test_taker_comment_id`),
  KEY `fk_comments_from_test_taker_for_the_test` (`taker_test_map_id`),
  CONSTRAINT `fk_comments_from_test_taker_for_the_test` FOREIGN KEY (`taker_test_map_id`) REFERENCES `taker_test_map` (`taker_test_map_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `test_taker_comment` */

/*Table structure for table `test_taker_comment_relationship` */

DROP TABLE IF EXISTS `test_taker_comment_relationship`;

CREATE TABLE `test_taker_comment_relationship` (
  `test_taker_comment_relationship_id` int(11) NOT NULL AUTO_INCREMENT,
  `parent_test_taker_comment_id` int(11) DEFAULT NULL,
  `child_test_taker_comment_id` int(11) DEFAULT NULL,
  `test_taker_comment_relationship_desc` text COLLATE utf8_unicode_ci,
  PRIMARY KEY (`test_taker_comment_relationship_id`),
  KEY `fk_child_of_test_taker_comment_relationship` (`child_test_taker_comment_id`),
  KEY `fk_parent_of_test_taker_comment_relationship` (`parent_test_taker_comment_id`),
  CONSTRAINT `fk_child_of_test_taker_comment_relationship` FOREIGN KEY (`child_test_taker_comment_id`) REFERENCES `test_taker_comment` (`test_taker_comment_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_parent_of_test_taker_comment_relationship` FOREIGN KEY (`parent_test_taker_comment_id`) REFERENCES `test_taker_comment` (`test_taker_comment_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `test_taker_comment_relationship` */

/*Table structure for table `topic` */

DROP TABLE IF EXISTS `topic`;

CREATE TABLE `topic` (
  `topic_id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `parent_topic_id` int(11) DEFAULT NULL,
  `topic_code` char(20) COLLATE utf8_unicode_ci NOT NULL,
  `topic_name` char(200) COLLATE utf8_unicode_ci NOT NULL,
  `topic_desc` text COLLATE utf8_unicode_ci,
  PRIMARY KEY (`topic_id`),
  KEY `fk_creator_of_topics` (`user_id`),
  KEY `fk_subtopic` (`parent_topic_id`),
  CONSTRAINT `fk_creator_of_topics` FOREIGN KEY (`user_id`) REFERENCES `user` (`user_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_subtopic` FOREIGN KEY (`parent_topic_id`) REFERENCES `topic` (`topic_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `topic` */

insert  into `topic`(`topic_id`,`user_id`,`parent_topic_id`,`topic_code`,`topic_name`,`topic_desc`) values (1,1,NULL,'B2','Tìm kiếm nhị phân','<p>Các câu hỏi liên quan đến giải thuật tìm kiếm nhị phân</p>'),(2,1,NULL,'01','Các câu cơ bản','');

/*Table structure for table `topic_access_mode` */

DROP TABLE IF EXISTS `topic_access_mode`;

CREATE TABLE `topic_access_mode` (
  `topic_access_mode_id` int(11) NOT NULL AUTO_INCREMENT,
  `topic_id` int(11) DEFAULT NULL,
  `accessor_id` int(11) DEFAULT NULL,
  `role_id` int(11) DEFAULT NULL,
  `previlege_id` int(11) DEFAULT NULL,
  `grantor_id` int(11) DEFAULT NULL,
  `topic_access_mode_granted_date` date NOT NULL,
  `topic_access_mode_valid_startdate` date NOT NULL,
  `topic_access_mode_valid_enddate` date DEFAULT NULL,
  `topic_access_mode_valid_starttime` time NOT NULL,
  `topic_access_mode_valid_endtime` time DEFAULT NULL,
  `topic_access_mode_is_disabled` tinyint(1) NOT NULL,
  `topic_access_mode_desc` text COLLATE utf8_unicode_ci,
  PRIMARY KEY (`topic_access_mode_id`),
  KEY `fk_previlege__user_can_use` (`previlege_id`),
  KEY `fk_roles__user_can_apply` (`role_id`),
  KEY `fk_topic_which_users_want_to_access` (`topic_id`),
  KEY `fk_user__who_grant_the_access_to_topic` (`grantor_id`),
  KEY `fk_user__who_want_to_access_topics` (`accessor_id`),
  CONSTRAINT `fk_previlege__user_can_use` FOREIGN KEY (`previlege_id`) REFERENCES `previlege` (`previlege_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_roles__user_can_apply` FOREIGN KEY (`role_id`) REFERENCES `role` (`role_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_topic_which_users_want_to_access` FOREIGN KEY (`topic_id`) REFERENCES `topic` (`topic_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_user__who_grant_the_access_to_topic` FOREIGN KEY (`grantor_id`) REFERENCES `user` (`user_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_user__who_want_to_access_topics` FOREIGN KEY (`accessor_id`) REFERENCES `user` (`user_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `topic_access_mode` */

/*Table structure for table `umi_peoi_map` */

DROP TABLE IF EXISTS `umi_peoi_map`;

CREATE TABLE `umi_peoi_map` (
  `upm_id` int(11) NOT NULL AUTO_INCREMENT,
  `peoi_id` int(11) DEFAULT NULL,
  `umi_id` int(11) DEFAULT NULL,
  `pmv_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`upm_id`),
  KEY `fk_mission_in_the_relationship_with_peo` (`umi_id`),
  KEY `fk_peo_in_the_relationship_with_mission` (`peoi_id`),
  KEY `fk_version_of_peo_mission_map` (`pmv_id`),
  CONSTRAINT `fk_mission_in_the_relationship_with_peo` FOREIGN KEY (`umi_id`) REFERENCES `univ_mission_item` (`umi_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_peo_in_the_relationship_with_mission` FOREIGN KEY (`peoi_id`) REFERENCES `peo_item` (`peoi_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_version_of_peo_mission_map` FOREIGN KEY (`pmv_id`) REFERENCES `peo_mission_map_version` (`pmv_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `umi_peoi_map` */

insert  into `umi_peoi_map`(`upm_id`,`peoi_id`,`umi_id`,`pmv_id`) values (2,2,10,NULL),(4,3,9,NULL),(5,3,11,NULL),(6,4,9,NULL),(7,4,10,NULL),(9,4,11,NULL);

/*Table structure for table `univ_mission` */

DROP TABLE IF EXISTS `univ_mission`;

CREATE TABLE `univ_mission` (
  `um_id` int(11) NOT NULL AUTO_INCREMENT,
  `univ_id` int(11) DEFAULT NULL,
  `um_code` char(10) COLLATE utf8_unicode_ci NOT NULL COMMENT 'for examples:\n            mission 1\n            mission 2\n            ',
  `um_date` date NOT NULL COMMENT 'introduced date',
  `um_isused` tinyint(1) NOT NULL,
  PRIMARY KEY (`um_id`),
  KEY `fk_mission_version_of_universities` (`univ_id`),
  CONSTRAINT `fk_mission_version_of_universities` FOREIGN KEY (`univ_id`) REFERENCES `university` (`univ_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `univ_mission` */

insert  into `univ_mission`(`um_id`,`univ_id`,`um_code`,`um_date`,`um_isused`) values (1,1,'1','2011-01-01',1),(2,2,'01','2016-01-15',1);

/*Table structure for table `univ_mission_item` */

DROP TABLE IF EXISTS `univ_mission_item`;

CREATE TABLE `univ_mission_item` (
  `umi_id` int(11) NOT NULL AUTO_INCREMENT,
  `um_id` int(11) DEFAULT NULL,
  `umi_code` char(5) COLLATE utf8_unicode_ci NOT NULL COMMENT 'ex: um1, um2, etc\n            ',
  `umi_desc_vn` text COLLATE utf8_unicode_ci NOT NULL,
  `umi_desc_en` text COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`umi_id`),
  KEY `fk_university_mission` (`um_id`),
  CONSTRAINT `fk_university_mission` FOREIGN KEY (`um_id`) REFERENCES `univ_mission` (`um_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `univ_mission_item` */

insert  into `univ_mission_item`(`umi_id`,`um_id`,`umi_code`,`umi_desc_vn`,`umi_desc_en`) values (7,1,'011M','<h4>A. Tầm nhìn</h4><p>Đến năm 2015, Trường Đại học Quốc tế có những nền tảng cơ bản của một Đại học Nghiên cứu (Research University) với đội ngũ giảng viên hùng hậu, giỏi chuyên môn, tâm huyết với nghề nghiệp; đội ngũ cán bộ quản lý mạnh, tâm huyết, chuyên nghiệp; đội ngũ cán bộ quản lý mạnh, tâm huyết, chuyên nghiệp;&nbsp;lực lượng sinh viên giỏi, chất lượng cao và thành công trong sự nghiệp; phương thức quản lý đại học tiên tiến theo các thông lệ quốc tế; cơ sở vật chất hiện đại, đầy đủ và đồng bộ phục vụ giảng dạy và nghiên cứu; và các công trình nghiên cứu trọng điểm và các dự án chuyển giao công nghệ có giá trị trong các lĩnh vực khoa học, kỹ thuật, công nghệ, kinh tế gắn liền với sự phát triển của Thành phố Hồ Chí Minh và cả nước.&nbsp;</p><h4>B. Sứ mạng</h4><ul><li>Trong phạm vi ĐHQG-HCM, trường Đại học Quốc tế đóng vai trò là một bộ phận đột phá, phát triển nhanh lên phía trước, đạt chuẩn khu vực và quốc tế ở mọi mặt hoạt động. Bộ phận đi trước này là nhân tố tích cực tác động trở lại và hỗ trợ các đơn vị khác cùng đi lên, tiến tới sự phát triển toàn cục của ĐHQG-HCM.</li><li>Giảng dạy chất lượng cao bậc đại học và sau đại học các lĩnh vực Khoa học, Kỹ thuật, Kinh tế, Quản lý và những lĩnh vực phục vụ cho nhu cầu phát triển và công nghiệp hóa của Việt Nam.</li><li>Tiến hành việc nghiên cứu khoa học bao gồm cả nghiên cứu cơ bản và nghiên cứu ứng dụng, chuyển giao công nghệ cho công nghiệp và xã hội.</li><li>Sử dụng trí tuệ và năng lực chuyên môn để phục vụ cho cộng đồng và công nghiệp Việt Nam.</li></ul><h4>C. Mục tiêu</h4><p>Mục tiêu của Trường ĐHQT là trở thành một trong những trường đại học nghiên cứu hàng đầu tại Việt Nam và trong khu vực, có khả năng đào tạo và cung cấp nguồn nhân lực chất lượng cao nhằm đáp ứng được nhu cầu phát triển và hội nhập của đất nước.</p><h4>D. Mục tiêu ngắn hạn</h4><p>Trước mắt, trường ĐHQT sẽ sớm xây dựng Chiến lược phát triển trường giai đọan 5 năm và 10 năm tới. Xây dựng và đưa ra vận hành chính sách mới về tiền lương, hệ thống qui trình, qui định công tác, hệ thống các Bảng mô tả công việc và chức năng của toàn trường, qui định tuyển dụng viên chức và giáo viên theo chuẩn mực quốc tế.</p><p>Trường ĐHQT cũng sẽ kiên quyết rà sóat, cải tiến CTĐT theo chuẩn mực quốc tế, tiệm cận với các trường hàng đầu thế giới, trước mắt là các trường xếp hạng cao của hệ thống ĐH Hoa kỳ, đảm bảo liên thông và tương đương hòan tòan với các trường này, hợp tác bình đẳng và các bên cùng có lợi. Thực hiện tòan bộ công việc cần thiết để liên kết về đào tạo và nghiên cứu khoa học với các ĐH này trong thời gian sớm nhất.</p><p>Trường ĐHQT sẽ ban hành chính sách đào tạo cán bộ viên chức ngắn hạn và dài hạn, đảm bảo 100% cán bộ, viên chức, Giáo viên đều kinh qua các khóa đào tạo chuyên nghiệp trong và ngòai nước, nhanh chóng tạo ra sự thay đổi về chất trong công việc.</p>','<h4>A. Vision</h4><p>By the year 2015, the Vietnam National University HCMC – International University will have proudly laid the basic foundation of a research university with an experienced, proficient and devoted faculty, professional and committed managerial staff. Elite graduates with successful careers with international standards will be the target.&nbsp;Additionally, modern facilities will be available for teaching and research purposes. Key research and economic technology transfer projects that are closely aligned with regional and national development will be in place.&nbsp;</p><h4>B. Missions</h4><p>Organizationally in the structure of Vietnam National University – HCMC, International University is a breakthrough division with progressive development at regional and international standards in all aspects of operation. This innovative division is a catalyst that inspires and assists other divisions in the advancement toward the development of Vietnam National University – HCMC as a whole.&nbsp;The University offers:</p><ul><li>High-quality graduate and undergraduate education in the areas of science, engineering, economics, management, and other areas, which largely contribute to the development and industrialization of Vietnam.</li><li>Excellent research including basic and applied research, social and industrial technology transfer.</li><li>Utilization of intellectual resources and professional knowledge for the community and industrial sector of Vietnam.</li></ul><p>C. In the short term</p><p>The International University strives to become a moderately sized, research oriented university, with an international work and study environment, where a strong faculty and staff provide quality training in key subjects to a highly motivated student body of Vietnamese and International learners and whose reputation as a top-level institute of higher learning attracts top-notch learners, researchers and lecturers.</p><p>The International University will soon create a development strategy for the next 5 years and 10 years which will introduce and implement new policies on salary, clarify systems of process, provide work and function descriptions for the whole university, and establish international standards for the recruitment of staff and faculty.</p><p>The International University will also review and improve the training program with the goal of providing our students with an international standard education, approaching the quality of world’s top universities. The intermediate goal will be to match the academic standards of top tier American universities, so as to permit transfers of credits and allow for future collaboration to be based on the principles of equal cooperation and mutual benefit.</p><p>The International University will establish policies to ensure that 100% of staff and faculty will be afforded the opportunity to receive domestic and overseas professional training, with the goal of insuring that the training provided, research conducted and administrative support given are of the highest possible quality.</p>'),(9,2,'UM1','<p>Nguồn nhân lực chất lượng cao</p>','<h4>High quality human resources</h4>'),(10,2,'UM2','<p>Nuôi dưỡng tài năng</p>','<h4>Nourishes talents</h4>'),(11,2,'UM3','<p>Đóng góp hiệu quả vào sự phát triển kinh tế xã hội của đất nước</p>','<p>Contributing &nbsp;effectively &nbsp;to &nbsp;the &nbsp;socioeconomic development of the country</p>');

/*Table structure for table `university` */

DROP TABLE IF EXISTS `university`;

CREATE TABLE `university` (
  `univ_id` int(10) NOT NULL AUTO_INCREMENT,
  `univ_code` char(10) COLLATE utf8_unicode_ci NOT NULL,
  `univ_name_vn` text COLLATE utf8_unicode_ci NOT NULL,
  `univ_name_en` text COLLATE utf8_unicode_ci NOT NULL,
  `univ_name_short` char(10) COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`univ_id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `university` */

insert  into `university`(`univ_id`,`univ_code`,`univ_name_vn`,`univ_name_en`,`univ_name_short`) values (1,'01','Trường Đại học Quốc tế, Đại học Quốc gia Thành phố Hồ Chí Minh','Ho Chi Minh City International University','IU'),(2,'02','Trường Đại học Bách khoa, Đại học Quốc gia Thành phố Hồ Chí Minh','Ho Chi Minh City University of Technology','HCMUT'),(3,'03','Trường Đại học Dân lập Ngoại ngữ - Tin học TP. Hồ Chí Minh',' Ho Chi Minh City University of Foreign Languages – Information Technology','HUFLIT');

/*Table structure for table `user` */

DROP TABLE IF EXISTS `user`;

CREATE TABLE `user` (
  `user_id` int(11) NOT NULL AUTO_INCREMENT,
  `user_code` char(10) COLLATE utf8_unicode_ci DEFAULT NULL,
  `user_first_name` char(100) COLLATE utf8_unicode_ci NOT NULL,
  `user_last_name` char(100) COLLATE utf8_unicode_ci DEFAULT NULL,
  `user_email` char(100) COLLATE utf8_unicode_ci DEFAULT NULL,
  `user_mobile` char(12) COLLATE utf8_unicode_ci DEFAULT NULL,
  `user_birthdate` date DEFAULT NULL,
  `user_address` text COLLATE utf8_unicode_ci,
  PRIMARY KEY (`user_id`)
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `user` */

insert  into `user`(`user_id`,`user_code`,`user_first_name`,`user_last_name`,`user_email`,`user_mobile`,`user_birthdate`,`user_address`) values (1,'admin','Trần','Trâm','admin@test.com','0123456789','2000-01-09','341 Dien Bien Phu P14 Q3'),(2,'abc123','aaa','sdkjds',NULL,NULL,NULL,NULL),(3,'51103305','thang','huu',NULL,NULL,NULL,NULL),(4,'admin','admin','admin',NULL,NULL,NULL,NULL),(5,'admin1234','admin1234','admin1234',NULL,NULL,NULL,NULL),(6,'admin12345','admin12345','admin12345',NULL,NULL,NULL,NULL),(7,'123','thang','huu',NULL,NULL,NULL,NULL),(8,'51103302','thang','huu',NULL,NULL,NULL,NULL),(9,'51103303','thang','huu',NULL,NULL,NULL,NULL),(10,'4223','wef','wef',NULL,NULL,NULL,NULL),(11,'12345','123','123',NULL,NULL,NULL,NULL),(12,'1234','1234','1234',NULL,NULL,NULL,NULL),(13,'51100123','thang','thang',NULL,NULL,NULL,NULL),(14,'sv123','Sinh','Vien',NULL,NULL,NULL,NULL);

/*Table structure for table `user_account` */

DROP TABLE IF EXISTS `user_account`;

CREATE TABLE `user_account` (
  `account_id` char(100) COLLATE utf8_unicode_ci NOT NULL,
  `user_id` int(11) NOT NULL,
  `account_password` text COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`account_id`),
  KEY `user_id` (`user_id`),
  CONSTRAINT `user_account_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `user` (`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `user_account` */

insert  into `user_account`(`account_id`,`user_id`,`account_password`) values ('123',7,'e10adc3949ba59abbe56e057f20f883e'),('1234',12,'81dc9bdb52d04dc20036dbd8313ed055'),('12345',11,'202cb962ac59075b964b07152d234b70'),('4223',10,'7a491152d7854d5f3c7b0bc5bbc5dcef'),('51100123',13,'e10adc3949ba59abbe56e057f20f883e'),('51103302',8,'e10adc3949ba59abbe56e057f20f883e'),('51103303',9,'e10adc3949ba59abbe56e057f20f883e'),('51103305',3,'e10adc3949ba59abbe56e057f20f883e'),('abc123',2,'827ccb0eea8a706c4c34a16891f84e7b'),('admin',4,'c93ccd78b2076528346216b3b2f701e6'),('admin1234',5,'c93ccd78b2076528346216b3b2f701e6'),('admin12345',6,'7488e331b8b64e5794da3fa4eb10ad5d'),('sinh',14,'6ab7967e1fd599257c0a05c88f217d0e'),('tram',1,'adf47922f0bdb6b9a520ed2d43622d14');

/*Table structure for table `user_account_role_map` */

DROP TABLE IF EXISTS `user_account_role_map`;

CREATE TABLE `user_account_role_map` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL COMMENT 'Người cấp quyền',
  `account_id` char(100) COLLATE utf8_unicode_ci NOT NULL COMMENT 'Acc được cấp quyền',
  `role_id` int(11) NOT NULL,
  `granted_date` date DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `user_id` (`user_id`),
  KEY `account_id` (`account_id`),
  KEY `role_id` (`role_id`),
  CONSTRAINT `user_account_role_map_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `user` (`user_id`),
  CONSTRAINT `user_account_role_map_ibfk_2` FOREIGN KEY (`account_id`) REFERENCES `user_account` (`account_id`),
  CONSTRAINT `user_account_role_map_ibfk_3` FOREIGN KEY (`role_id`) REFERENCES `role` (`role_id`)
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `user_account_role_map` */

insert  into `user_account_role_map`(`id`,`user_id`,`account_id`,`role_id`,`granted_date`) values (1,1,'tram',2,'2015-12-14'),(2,1,'tram',5,'2015-12-14'),(5,1,'admin12345',2,'2015-12-14'),(6,14,'sinh',1,'2015-12-16'),(10,3,'12345',1,'2015-12-19'),(11,3,'1234',1,'2015-12-28'),(12,8,'51100123',2,'2016-01-02');

/*Table structure for table `user_course_devmap` */

DROP TABLE IF EXISTS `user_course_devmap`;

CREATE TABLE `user_course_devmap` (
  `user_course_devmap_id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) DEFAULT NULL,
  `course_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`user_course_devmap_id`),
  KEY `fk_course_being_developed` (`course_id`),
  KEY `fk_creator_of_course` (`user_id`),
  CONSTRAINT `fk_course_being_developed` FOREIGN KEY (`course_id`) REFERENCES `course` (`course_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_creator_of_course` FOREIGN KEY (`user_id`) REFERENCES `user` (`user_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `user_course_devmap` */

/* Procedure structure for procedure `analyzeQuestion` */

/*!50003 DROP PROCEDURE IF EXISTS  `analyzeQuestion` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `analyzeQuestion`(IN p_test_id INT(11),IN tname CHAR(128))
proc: BEGIN
	DECLARE error INT DEFAULT 0;
	DECLARE takecount INT(11);
	DECLARE takelimit INT(11);
	DECLARE takestart INT(11);
	DECLARE CONTINUE HANDLER FOR 1146 SET error=1146;
	SET @q=CONCAT('DROP TABLE IF EXISTS ',tname);
	PREPARE stmt FROM @q;
	IF error<>1146 THEN
		EXECUTE stmt;
	END IF;
	
	SET @q=CONCAT('CREATE TABLE ',tname,' LIKE `question`');
	PREPARE stmt FROM @q;EXECUTE stmt;
	
	SET @q=CONCAT('INSERT INTO ',tname,'(
		SELECT A.*
		FROM question A
			JOIN test_question_map ON (question_id=testmode_question_id)
			JOIN test_section USING(test_section_id)
		WHERE test_id=',p_test_id,'
	)');
	PREPARE stmt FROM @q;EXECUTE stmt;
	
	/*Độ khó của câu hỏi*/
	SET @q=CONCAT('ALTER TABLE ',tname,'
		ADD COLUMN total_max DOUBLE DEFAULT 0,
		ADD COLUMN total_cur DOUBLE DEFAULT 0');
	PREPARE stmt FROM @q;EXECUTE stmt;
	
	SET @q=CONCAT('INSERT INTO ',tname,' (question_id,total_cur,total_max)
		SELECT question_id, SUM(mark_cur), SUM(mark_max)
		FROM taker_test_map
			JOIN taker_solution USING (taker_test_map_id)
		WHERE test_id=',p_test_id,'
		GROUP BY question_id
	ON DUPLICATE KEY UPDATE total_cur=VALUES(total_cur),total_max=VALUES(total_max)');
	PREPARE stmt FROM @q;EXECUTE stmt;
	
	SET @q=CONCAT('UPDATE ',tname,' SET difficulty=total_cur/total_max');
	PREPARE stmt FROM @q;EXECUTE stmt;
	
	/*Độ phân tán*/
	SET @q=CONCAT('ALTER TABLE ',tname,'
		ADD COLUMN low_right INT DEFAULT 0,
		ADD COLUMN high_right INT DEFAULT 0');
	SELECT COUNT(*) FROM taker_test_map WHERE test_id=p_test_id INTO takecount;
	SET takelimit = 0.27*takecount;
	SET takestart=takecount-takelimit;
	IF takelimit>0 THEN
		DROP TEMPORARY TABLE IF EXISTS _take_result_order;
		DROP TEMPORARY TABLE IF EXISTS _take_low;
		DROP TEMPORARY TABLE IF EXISTS _take_high;
		CREATE TEMPORARY TABLE _take_result_order(
			SELECT taker_test_map_id, SUM(mark_max) AS mark
			FROM taker_test_map
				JOIN taker_solution USING (taker_test_map_id)
			WHERE test_id=p_test_id
			GROUP BY taker_test_map_id
			ORDER BY SUM(mark_max)
		);
		CREATE TEMPORARY TABLE _take_low(
			SELECT taker_test_map_id
			FROM _take_result_order
			LIMIT 0,takelimit
		);
		CREATE TEMPORARY TABLE _take_high(
			SELECT taker_test_map_id
			FROM _take_result_order
			LIMIT takestart,takelimit
		);
		PREPARE stmt FROM @q;EXECUTE stmt;
		SET @q=CONCAT('INSERT INTO ',tname,' (question_id,low_right)
			SELECT question_id, SUM(IF(mark_max=mark_cur,1,0))
			FROM _take_low
				JOIN taker_solution USING (taker_test_map_id)
			GROUP BY question_id
		ON DUPLICATE KEY UPDATE low_right=VALUES(low_right)');
		PREPARE stmt FROM @q;EXECUTE stmt;
		SET @q=CONCAT('INSERT INTO ',tname,' (question_id,high_right)
			SELECT question_id, SUM(IF(mark_max=mark_cur,1,0))
			FROM _take_high
				JOIN taker_solution USING (taker_test_map_id)
			GROUP BY question_id
		ON DUPLICATE KEY UPDATE high_right=VALUES(high_right)');
		PREPARE stmt FROM @q;EXECUTE stmt;
		SET @q=CONCAT('UPDATE ',tname,' SET discrimination=(high_right-low_right)/',takelimit);
		PREPARE stmt FROM @q;EXECUTE stmt;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `C2SOI_map_pivot` */

/*!50003 DROP PROCEDURE IF EXISTS  `C2SOI_map_pivot` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `C2SOI_map_pivot`(
	IN p_edu_program_id INT(11)
)
BEGIN
	SET @pivotcolumn=NULL;
	SELECT GROUP_CONCAT('MAX(IF(M.soi_id=',SOI.soi_id,',M.csim_level,0) ) AS SOI_',SOI.soi_id,'_',SOI.soi_code) INTO @pivotcolumn
	FROM student_outcome SO
		JOIN student_outcome_item SOI USING(so_id)
	WHERE edu_program_id=p_edu_program_id AND SO.so_isused;
	
	SET @sql = CONCAT('
	SELECT C.*,',@pivotcolumn,'
	FROM course C
		JOIN program_course_map PCM ON (C.course_id=PCM.course_id AND PCM.edu_program_id=',p_edu_program_id,')
		JOIN course_outcome CO ON (C.course_id=CO.course_id AND CO.co_isused)
		JOIN course_outcome_item COI USING (co_id)
		LEFT JOIN coi_soi_map M USING(coi_id)
	GROUP BY C.course_id
	');
	/*SELECT @sql;*/
	PREPARE stmt FROM @sql;
	EXECUTE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `checkPrevilege` */

/*!50003 DROP PROCEDURE IF EXISTS  `checkPrevilege` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `checkPrevilege`(IN p_account_id INT(11), IN p_previlege_code CHAR(100))
proc_label: BEGIN
	DECLARE listPrevilege CHAR(255) DEFAULT '';
	DECLARE p_id INT(11);
	SELECT `previlege_id` FROM `previlege` WHERE previlege_code=p_previlege_code INTO p_id;
	IF p_id IS NOT NULL THEN
		set listPrevilege = p_id;
	ELSE
		SELECT 0 as verified;
		leave proc_label;
	end if;
	WHILE p_id is not null DO
		SELECT `parent_previlege_id` FROM `previlege_relstionship` WHERE `child_previlege_id`=p_id INTO p_id;
		if p_id is not null then
			SET listPrevilege = concat(listPrevilege,",",p_id);
		end if;
	END WHILE;
	set @q=concat('SELECT COUNT(role_id) as verified
		FROM `user_account_role_map`
			join role_previlege_map using(role_id)
		WHERE account_id=p_account_id AND previlege_id IN (',listPrevilege,')');
	PREPARE stmt FROM @q;EXECUTE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `clearPrevilege` */

/*!50003 DROP PROCEDURE IF EXISTS  `clearPrevilege` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `clearPrevilege`(IN p_session_id CHAR(33))
BEGIN
	DECLARE tname CHAR(128);
	SET tname=CONCAT('`_tmp',YEAR(NOW()),MONTH(NOW()),'_previlege_',p_session_id,'`');
	SET @q=CONCAT('DROP TABLE IF EXISTS ',tname);
	PREPARE stmt FROM @q;EXECUTE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `COI2SOI_map_pivot` */

/*!50003 DROP PROCEDURE IF EXISTS  `COI2SOI_map_pivot` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `COI2SOI_map_pivot`(
	IN p_co_id INT(11),
	IN p_edu_program_id INT(11)
)
BEGIN
	SET @pivotcolumn=NULL;
	SELECT GROUP_CONCAT('SUM(IF(CSIM.soi_id=',SOI.soi_id,',CSIM.csim_level,0)) AS SOI_',SOI.soi_id,'_',SOI.soi_code) INTO @pivotcolumn
	FROM student_outcome SO
		JOIN student_outcome_item SOI USING(so_id)
	WHERE edu_program_id=p_edu_program_id AND SO.so_isused;
	
	SET @sql = CONCAT('
	SELECT COI.coi_id,COI.coi_code,COI.coi_desc_vn,COI.coi_desc_en,',@pivotcolumn,'
	FROM course_outcome_item COI
		LEFT JOIN coi_soi_map CSIM USING(coi_id)
	WHERE COI.co_id=',p_co_id,'
	GROUP BY COI.coi_id
	');
	PREPARE stmt FROM @sql;
	EXECUTE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `CO_map_column` */

/*!50003 DROP PROCEDURE IF EXISTS  `CO_map_column` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CO_map_column`(IN p_course_id INT(11))
BEGIN
	SELECT CONCAT('COI_',COI.coi_id,'_',COI.coi_code) as `name`, COI.*
	FROM course_outcome CO
		JOIN course_outcome_item COI USING(co_id)
	WHERE course_id=p_course_id AND CO.co_isused;
END */$$
DELIMITER ;

/* Procedure structure for procedure `CO_map_pivot` */

/*!50003 DROP PROCEDURE IF EXISTS  `CO_map_pivot` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CO_map_pivot`(
	IN p_course_id INT(11),
	IN p_parent_content_id INT(11)
)
BEGIN
	SET @pivotcolumn=NULL;
	SELECT GROUP_CONCAT('SUM(IF(CM.coi_id=',COI.coi_id,',1,0)) AS COI_',COI.coi_id,'_',COI.coi_code) INTO @pivotcolumn
	FROM course_outcome CO
		JOIN course_outcome_item COI USING(co_id)
	WHERE course_id=p_course_id AND CO.co_isused;
	IF p_parent_content_id=0 OR p_parent_content_id IS NULL THEN
		SET @pcc=' IS NULL';
	ELSE
		SET @pcc=CONCAT('=',p_parent_content_id);
	END IF;
	SET @sql = CONCAT('
	SELECT CC.course_content_id as id,CC.course_parentcontent_id as pid, CC.course_content_name as `text`,',@pivotcolumn,'
	FROM course_content CC
		JOIN course_outcome CO ON (CC.course_id=CO.course_id)
		JOIN course_outcome_item COI ON (CO.co_id=COI.co_id)
		LEFT JOIN cco_map CM ON (CM.cc_id=CC.course_content_id AND COI.coi_id=CM.coi_id)
	WHERE CC.course_id=',p_course_id,' AND CC.course_parentcontent_id',@pcc,' AND CO.co_isused
	GROUP BY CC.course_content_id
	ORDER BY CC.course_content_order
	');
	PREPARE stmt FROM @sql;
	EXECUTE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `createRandTest` */

/*!50003 DROP PROCEDURE IF EXISTS  `createRandTest` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `createRandTest`(IN p_test_id INT(11), IN p_qcount INT(11), IN p_overwrite INT(1))
proclabel: BEGIN
	DECLARE vcourseid INT(11) DEFAULT 0;
	DECLARE vid INT(11) DEFAULT 0;
	DECLARE vflag INT(11) DEFAULT 0;
	DECLARE vtsid INT(11) DEFAULT 0;
	DECLARE vcoiid INT(11) DEFAULT 0;
	DECLARE vqcount INT(11) DEFAULT 0;
	DECLARE vtotal INT(11) DEFAULT 0;
	DECLARE vnumcoi INT(11) DEFAULT 0;
	DECLARE vnumques INT(11) DEFAULT 0;
	DECLARE vtotalques INT(11) DEFAULT 0;
	
	SELECT course_id FROM `test` WHERE test_id=p_test_id INTO vcourseid;
	SELECT test_id FROM taker_test_map WHERE test_id=p_test_id LIMIT 1 INTO vid;
	/*Thoát nếu đã có người thi*/
	IF vid>0  THEN
		SELECT CONCAT('Đề thi #',p_test_id,' đã có bài thi') AS msg;
		LEAVE proclabel;
	END IF;
	SET vid=0;
	SELECT test_section_id FROM test_section WHERE test_id=p_test_id LIMIT 1 INTO vid;
	IF vid>0 THEN
		IF p_overwrite=0 THEN
			/*Thoát nếu test đã có nội dung*/
			SELECT CONCAT('Đề thi #',p_test_id,' đã có nội dung') AS msg;
			LEAVE proclabel;
		ELSE
			/*Xóa nội dung cũ*/
			DELETE test_question_map
				FROM test_section JOIN test_question_map USING(test_section_id)
				WHERE test_id=p_test_id;
			DELETE test_section
				FROM test_section
				WHERE test_id=p_test_id;
		END IF;
	END IF;
	
	DROP TABLE IF EXISTS _genrandtest;
	CREATE TABLE _genrandtest(
		SELECT coi_id, COUNT(question_id) AS qcount, 0 AS flag, 0 AS total
		FROM qco_map
			JOIN course_outcome_item USING(coi_id)
			JOIN course_outcome USING (co_id)
		WHERE course_id=vcourseid AND co_isused
		GROUP BY coi_id
	);
	DELETE FROM _genrandtest WHERE qcount=0;
	SELECT COUNT(*) FROM _genrandtest INTO vnumcoi;
	IF vnumcoi=0 THEN
		SELECT CONCAT('Môn học chưa có câu hỏi được gắn Chuẩn đầu ra') AS msg;
		LEAVE proclabel;
	END IF;
	DROP TABLE IF EXISTS _test_ques;
	CREATE TABLE _test_ques(
		question_id INT(11) PRIMARY KEY
	)ENGINE=MYISAM;
	SET vnumcoi=IF(p_qcount>vnumcoi,p_qcount/vnumcoi,1);
	analyzeNumQues:
	WHILE vtotalques<p_qcount DO
		SET vcoiid=0;
		SELECT coi_id, qcount, total
			FROM _genrandtest
			WHERE flag=vflag AND qcount>total
			LIMIT 1
			INTO vcoiid,vqcount,vtotal;
		IF vcoiid=0 THEN
			SET vflag=vflag+1;
			SELECT COUNT(*) FROM _genrandtest WHERE qcount>total INTO vcoiid;
			IF vcoiid=0 THEN
				LEAVE analyzeNumQues;
			END IF;
		ELSE
			IF vnumcoi>p_qcount-vtotalques THEN
				SET vnumcoi=p_qcount-vtotalques;
			END IF;
			IF vflag=0 THEN
				IF vqcount>vnumcoi THEN
					UPDATE _genrandtest SET flag=flag+1,total=vnumcoi WHERE coi_id=vcoiid;
					SET vtotalques=vtotalques+vnumcoi;
				ELSE
					UPDATE _genrandtest SET flag=flag+1,total=vqcount WHERE coi_id=vcoiid;
					SET vtotalques=vtotalques+vqcount;
				END IF;
			ELSE
				UPDATE _genrandtest SET flag=flag+1,total=total+1 WHERE coi_id=vcoiid;
				SET vtotalques=vtotalques+1;
			END IF;
		END IF;
	END WHILE;
	DROP TABLE IF EXISTS _genquestest;
	CREATE TABLE _genquestest(
		coi_id INT(11),
		question_id INT(11) PRIMARY KEY
	)ENGINE=MYISAM;
	SET vtotalques=0;
	genques:
	WHILE vtotalques<p_qcount DO
		SET vcoiid=0;
		SELECT coi_id,total FROM _genrandtest WHERE total>0 LIMIT 1 INTO vcoiid,vtotal;
		IF vcoiid=0 THEN
			LEAVE genques;
		END IF;
		DELETE FROM _genrandtest WHERE coi_id=vcoiid;
		INSERT IGNORE INTO _genquestest
			SELECT coi_id,question_id
			FROM qco_map
			WHERE coi_id=vcoiid
			ORDER BY RAND()
			LIMIT vtotal;
		SET vtotalques=vtotalques+ROW_COUNT();
	END WHILE;
	INSERT INTO test_section SET test_id=p_test_id,test_section_code='',test_section_order=1;
	SET vtsid=LAST_INSERT_ID();
	INSERT INTO test_question_map (test_section_id,editmode_question_id,test_question_map_score)
		SELECT vtsid,question_id,1
		FROM _genquestest;
	SELECT p_qcount AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `getPrevilege` */

/*!50003 DROP PROCEDURE IF EXISTS  `getPrevilege` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `getPrevilege`(IN p_account_id CHAR(100),IN p_session_id CHAR(33))
proc: BEGIN
	DECLARE tname CHAR(128);
	DECLARE rcount INT(11);
	DECLARE texists INT(1) DEFAULT 1;
	DECLARE CONTINUE HANDLER FOR 1146 SET texists=0;/*Table not exists*/
	SET tname=CONCAT('`_tmp',YEAR(NOW()),MONTH(NOW()),'_previlege_',p_session_id,'`');
	SET @q=CONCAT('SELECT * FROM ',tname,' JOIN `previlege` USING (previlege_id)');
	PREPARE stmt FROM @q;
	
	IF texists=0 THEN
		SET @q=CONCAT('CREATE TABLE ',tname,'(
					previlege_id INT(11) PRIMARY KEY
				)ENGINE=MYISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci');				
		PREPARE stmt FROM @q;EXECUTE stmt;
	
		SET @q=CONCAT('INSERT IGNORE INTO ',tname,'(
			SELECT previlege_id
			FROM user_account_role_map
				JOIN role_previlege_map USING(role_id)
				JOIN `previlege` USING (previlege_id)
			WHERE account_id=\'',p_account_id,'\'
		)');
		PREPARE stmt FROM @q;EXECUTE stmt;
		SET rcount=ROW_COUNT();
		WHILE rcount>0 DO
			SET @q=CONCAT('INSERT IGNORE INTO ',tname,'(
				SELECT child_previlege_id
				FROM previlege_relstionship
					JOIN ',tname,' ON (parent_previlege_id=previlege_id)
			)');
			SET rcount=ROW_COUNT();
		END WHILE;
		SET @q=CONCAT('SELECT * FROM ',tname,' JOIN `previlege` USING (previlege_id)');
		PREPARE stmt FROM @q;
	END IF;
	EXECUTE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `PEO_map_column` */

/*!50003 DROP PROCEDURE IF EXISTS  `PEO_map_column` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `PEO_map_column`(IN p_edu_program_id INT(11))
BEGIN
	SELECT CONCAT('PEOI_',PEOI.peoi_id,'_',PEOI.peoi_code) AS `name`, PEOI.*
	FROM peo
		JOIN peo_item PEOI USING(peo_id)
	WHERE edu_program_id=p_edu_program_id AND peo.peo_isused;
END */$$
DELIMITER ;

/* Procedure structure for procedure `pivotUMColumn` */

/*!50003 DROP PROCEDURE IF EXISTS  `pivotUMColumn` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `pivotUMColumn`(IN p_epid INT(11))
BEGIN
	SELECT CONCAT('UMI_',UMI.umi_id,'_',UMI.umi_code) AS `name`, UMI.*
	FROM univ_mission UM
		JOIN univ_mission_item UMI USING(um_id)
		JOIN faculty USING(univ_id)
		JOIN educational_program USING (faculty_id)
	WHERE edu_program_id=p_epid AND UM.um_isused;
END */$$
DELIMITER ;

/* Procedure structure for procedure `pivotUMTableByPEO` */

/*!50003 DROP PROCEDURE IF EXISTS  `pivotUMTableByPEO` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `pivotUMTableByPEO`(
	IN p_peo_id INT(11),
	IN p_edu_program_id INT(11)
)
BEGIN
	SET @pivotcolumn=NULL;
	SELECT GROUP_CONCAT('SUM(IF(M.umi_id=',UMI.umi_id,',1,0)) AS UMI_',UMI.umi_id,'_',UMI.umi_code) INTO @pivotcolumn
	FROM univ_mission UM
		JOIN univ_mission_item UMI USING(um_id)
		JOIN faculty USING(univ_id)
		JOIN educational_program USING (faculty_id)
	WHERE edu_program_id=p_edu_program_id AND UM.um_isused;
	
	SET @sql = CONCAT('
	SELECT P.*,',@pivotcolumn,'
	FROM peo_item P
		LEFT JOIN umi_peoi_map M USING(peoi_id)
	GROUP BY P.peoi_id
	');
	PREPARE stmt FROM @sql;
	EXECUTE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `Q2COI_map_pivot` */

/*!50003 DROP PROCEDURE IF EXISTS  `Q2COI_map_pivot` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `Q2COI_map_pivot`(
	IN p_course_id INT(11),
	IN p_question_ids TEXT
)
BEGIN
	SET @pivotcolumn=NULL;
	SELECT GROUP_CONCAT('SUM(IF(CM.coi_id=',COI.coi_id,',1,0)) AS COI_',COI.coi_id,'_',COI.coi_code) INTO @pivotcolumn
	FROM course_outcome CO
		JOIN course_outcome_item COI USING(co_id)
	WHERE course_id=p_course_id AND CO.co_isused;
	SET @sql = CONCAT('
	SELECT A.question_id, question_type_code as `type`, CONCAT(user_first_name,\' \',user_last_name) as `name`,
		bloom_level_desc as bloom, A.question_desc as `desc`,
		',@pivotcolumn,'
	FROM question A
		JOIN question_type_dict USING (question_type_id)
		JOIN `user` USING (user_id)
		JOIN bloom_level USING (bloom_level_id)
		JOIN course_outcome CO ON (A.course_id=CO.course_id)
		JOIN course_outcome_item COI ON (CO.co_id=COI.co_id)
		LEFT JOIN qco_map CM ON (A.question_id=CM.question_id AND COI.coi_id=CM.coi_id)
	WHERE A.course_id=',p_course_id,' AND CO.co_isused AND A.question_id in (',p_question_ids,')
	GROUP BY A.question_id
	');
	PREPARE stmt FROM @sql;
	EXECUTE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `report7` */

/*!50003 DROP PROCEDURE IF EXISTS  `report7` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `report7`(IN p_test_id INT(11),IN p_course_id INT(11))
BEGIN
	/*
	CC_CO_R4TR = Test result - course outcome - ratio
	1. Table _report_7cc
	2. Table _report_7coi
	3. Table _report_7data có CC,CO,rate,total
	*/
	drop table if exists _report_7cc;
	DROP TABLE IF EXISTS _report_7coi;
	DROP TABLE IF EXISTS _report_7data;
	CREATE TABLE _report_7cc(
		course_content_id INT(11) primary key,
		pcc_id INT(11)
	)ENGINE=MYISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
	insert into _report_7cc(
		select course_content_id,course_parentcontent_id
		from course_content
		where course_id=p_course_id
	);
	CREATE TABLE _report_7coi(
		coi_id INT(11) PRIMARY KEY
	)ENGINE=MYISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
	insert into _report_7coi(
		select coi_id
		from course_outcome join course_outcome_item using(co_id)
		where co_isused and course_id=p_course_id
	);
	CREATE TABLE _report_7data(
		course_content_id int(11),
		coi_id int(11),
		rate float default -1,
		total int(11) default 0,
		primary key(course_content_id,coi_id)
	)ENGINE=MYISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
	
	/*Đếm số lần làm bài thi*/
	SELECT COUNT(*) FROM taker_test_map WHERE test_id=p_test_id INTO @takecount;
	
	/*Thêm các rows kèm theo total vào _report_7data*/
	insert into _report_7data(
		SELECT course_content_id, coi_id, 0, SUM(test_question_map_score)*@takecount
		FROM test_section
			JOIN test_question_map USING (test_section_id)
			JOIN qco_map ON (testmode_question_id = question_id)
			JOIN question USING (question_id)
			JOIN _report_7coi USING (coi_id)
		WHERE course_content_id IS NOT NULL AND test_id=p_test_id
		GROUP BY course_content_id,coi_id
	);
	
	/*Tính số điểm đạt được*/
	drop table if exists _report_7tmp;
	create temporary table _report_7tmp(
		SELECT course_content_id, coi_id, SUM(mark_cur) AS score
		FROM taker_test_map
			JOIN taker_solution USING (taker_test_map_id)
			JOIN qco_map USING (question_id)
			JOIN question USING (question_id)
			JOIN _report_7coi USING (coi_id)
		WHERE course_content_id IS NOT NULL AND test_id=p_test_id
		GROUP BY course_content_id,coi_id
	);
	SELECT COUNT(*) FROM _report_7tmp INTO @count;
	WHILE @count>0 DO
		SELECT * FROM _report_7tmp LIMIT 1 INTO @cc_id,@coi_id,@score;
		DELETE FROM _report_7tmp WHERE course_content_id=@cc_id AND coi_id=@coi_id;
		SET @count=@count-1;
		UPDATE _report_7data SET rate=@score*100.0/total WHERE course_content_id=@cc_id AND coi_id=@coi_id AND total>0;
	END WHILE;
END */$$
DELIMITER ;

/* Procedure structure for procedure `report7cc2co` */

/*!50003 DROP PROCEDURE IF EXISTS  `report7cc2co` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `report7cc2co`()
BEGIN
	declare vId1 INT(11);
	DECLARE vId2 INT(11);
	DECLARE vRate float;
	DECLARE done INT DEFAULT FALSE;
	DECLARE cursor_coi CURSOR FOR SELECT coi_id FROM _report_7coi;
	DECLARE cursor_data CURSOR FOR SELECT course_content_id,coi_id,rate FROM _report_7data;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
	DROP TABLE IF EXISTS _report_7cc2co;
	/*Khởi tạo bảng với các rows*/
	CREATE TABLE _report_7cc2co(
		course_content_id INT(11) PRIMARY KEY
	)ENGINE=MYISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
	insert into _report_7cc2co(
		select course_content_id from _report_7cc
	);
	/*Thêm các cột là coi_id*/
	OPEN cursor_coi;
	read_loop: LOOP
		FETCH cursor_coi INTO vId1;
		IF done THEN
			LEAVE read_loop;
		END IF;
		set @q=concat('ALTER TABLE _report_7cc2co ADD COLUMN `',vId1,'` FLOAT DEFAULT 0');
		PREPARE stmt FROM @q;EXECUTE stmt;
	END LOOP;
	CLOSE cursor_coi;
	/*Cập nhật dữ liệu vào các cột*/
	set done=false;
	OPEN cursor_data;
	read_loop: LOOP
		FETCH cursor_data INTO vId1,vId2,vRate;
		IF done THEN
			LEAVE read_loop;
		END IF;
		SET @q=CONCAT('UPDATE _report_7cc2co SET `',vId2,'`=',vRate,' WHERE course_content_id=',vId1);
		PREPARE stmt FROM @q;EXECUTE stmt;
	END LOOP;
	CLOSE cursor_data;
END */$$
DELIMITER ;

/* Procedure structure for procedure `report7co2cc` */

/*!50003 DROP PROCEDURE IF EXISTS  `report7co2cc` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `report7co2cc`()
BEGIN
	declare vId1 INT(11);
	DECLARE vId2 INT(11);
	DECLARE vRate float;
	DECLARE done INT DEFAULT FALSE;
	DECLARE cursor_cc CURSOR FOR SELECT course_content_id FROM _report_7cc;
	DECLARE cursor_data CURSOR FOR SELECT course_content_id,coi_id,rate FROM _report_7data;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
	DROP TABLE IF EXISTS _report_7co2cc;
	/*Khởi tạo bảng với các rows*/
	CREATE TABLE _report_7co2cc(
		coi_id INT(11) PRIMARY KEY
	)ENGINE=MYISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
	insert into _report_7co2cc(
		select coi_id from _report_7coi
	);
	/*Thêm các cột là cc_id*/
	OPEN cursor_cc;
	read_loop: LOOP
		FETCH cursor_cc INTO vId1;
		IF done THEN
			LEAVE read_loop;
		END IF;
		set @q=concat('ALTER TABLE _report_7co2cc ADD COLUMN `',vId1,'` FLOAT DEFAULT 0');
		PREPARE stmt FROM @q;EXECUTE stmt;
	END LOOP;
	CLOSE cursor_cc;
	/*Cập nhật dữ liệu vào các cột*/
	set done=false;
	OPEN cursor_data;
	read_loop: LOOP
		FETCH cursor_data INTO vId1,vId2,vRate;
		IF done THEN
			LEAVE read_loop;
		END IF;
		SET @q=CONCAT('UPDATE _report_7co2cc SET `',vId1,'`=',vRate,' WHERE coi_id=',vId2);
		PREPARE stmt FROM @q;EXECUTE stmt;
	END LOOP;
	CLOSE cursor_data;
	/*Tính tổng các nội dung cha = sum(nội dung con)*/
	drop table if exists _report_7tmp;
	create temporary table _report_7tmp(
		SELECT pcc_id, GROUP_CONCAT('`',course_content_id,'`' SEPARATOR '+') AS col
		FROM _report_7cc
		GROUP BY pcc_id
		ORDER BY pcc_id DESC
	);
	repeat
		select * from _report_7tmp limit 1 into @pcc_id,@col;
		delete from _report_7tmp where pcc_id=@pcc_id;
		if @pcc_id is NOT null then
			set @q=concat('UPDATE _report_7co2cc SET `',@pcc_id,'`=',@col);
			PREPARE stmt FROM @q;EXECUTE stmt;
		end if;
	until @pcc_id is null end repeat;
END */$$
DELIMITER ;

/* Procedure structure for procedure `report8` */

/*!50003 DROP PROCEDURE IF EXISTS  `report8` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `report8`(IN p_course_id INT(11))
BEGIN
	/*
	CC_CO_R4TR = Test result - course outcome - ratio
	1. Table _report_8coi
	2. Table _report_8soi
	3. Table _report_8data có COI,SOI,rate,mark_cur,mark_max
	*/
	DROP TABLE IF EXISTS _report_8soi;
	DROP TABLE IF EXISTS _report_8coi;
	DROP TABLE IF EXISTS _report_8data;
	CREATE TABLE _report_8coi(
		coi_id INT(11) PRIMARY KEY
	)ENGINE=MYISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
	INSERT INTO _report_8coi(
		SELECT coi_id
		FROM course_outcome JOIN course_outcome_item USING(co_id)
		WHERE co_isused AND course_id=p_course_id
	);
	CREATE TABLE _report_8soi(
		soi_id INT(11) PRIMARY KEY
	)ENGINE=MYISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
	INSERT INTO _report_8soi(
		SELECT DISTINCT soi_id AS soi_id
		FROM program_course_map
			JOIN educational_program USING (edu_program_id)
			JOIN student_outcome USING (edu_program_id)
			JOIN student_outcome_item USING(so_id)
		WHERE course_id=p_course_id AND so_isused
	);
	CREATE TABLE _report_8data(
		soi_id INT(11),
		coi_id INT(11),
		rate FLOAT DEFAULT -1,
		mark_cur INT(11) DEFAULT 0,
		mark_max INT(11) DEFAULT 0,
		PRIMARY KEY(soi_id,coi_id)
	)ENGINE=MYISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
	
	INSERT INTO _report_8data
		SELECT soi_id, coi_id, -1, SUM(mark_cur), SUM(mark_max)
		FROM test
			JOIN taker_test_map USING(test_id)
			JOIN taker_solution USING (taker_test_map_id)
			JOIN qco_map USING (question_id)
			JOIN question USING (question_id)/*add*/
			JOIN bloom_level USING (bloom_level_id)/*add*/
			JOIN _report_8coi USING (coi_id)/*Join này cần thiết để giới hạn coi_id có nghĩa*/
			JOIN coi_soi_map USING (coi_id)
			JOIN _report_8soi USING (soi_id)/*Join này cần thiết để giới hạn soi_id có nghĩa*/
		WHERE test.course_id=p_course_id AND csim_level<=bloom_level_code/*add*/
		GROUP BY soi_id,coi_id;
	UPDATE _report_8data
		SET rate = mark_cur*100/mark_max
		WHERE mark_max>0;
	ALTER TABLE _report_8data
		DROP COLUMN mark_cur,
		DROP COLUMN mark_max;
END */$$
DELIMITER ;

/* Procedure structure for procedure `report8coi2soi` */

/*!50003 DROP PROCEDURE IF EXISTS  `report8coi2soi` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `report8coi2soi`()
BEGIN
	declare vsoi_id INT(11);
	DECLARE vcoi_id INT(11);
	DECLARE vrate float;
	DECLARE done INT DEFAULT FALSE;
	DECLARE cursor_soi CURSOR FOR SELECT soi_id FROM _report_8soi;
	DECLARE cursor_data CURSOR FOR SELECT soi_id,coi_id,rate FROM _report_8data;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
	DROP TABLE IF EXISTS _report_8coi2soi;
	/*Khởi tạo bảng với các rows*/
	CREATE TABLE _report_8coi2soi(
		coi_id INT(11) PRIMARY KEY
	)ENGINE=MYISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
	insert into _report_8coi2soi(
		select coi_id from _report_8coi
	);
	/*Thêm các cột là soi_id*/
	OPEN cursor_soi;
	read_loop: LOOP
		FETCH cursor_soi INTO vsoi_id;
		IF done THEN
			LEAVE read_loop;
		END IF;
		set @q=concat('ALTER TABLE _report_8coi2soi ADD COLUMN `',vsoi_id,'` FLOAT DEFAULT 0');
		PREPARE stmt FROM @q;EXECUTE stmt;
	END LOOP;
	CLOSE cursor_soi;
	/*Cập nhật dữ liệu vào các cột*/
	set done=false;
	OPEN cursor_data;
	read_loop: LOOP
		FETCH cursor_data INTO vsoi_id,vcoi_id,vrate;
		IF done THEN
			LEAVE read_loop;
		END IF;
		SET @q=CONCAT('UPDATE _report_8coi2soi SET `',vsoi_id,'`=',vrate,' WHERE coi_id=',vcoi_id);
		PREPARE stmt FROM @q;EXECUTE stmt;
	END LOOP;
	CLOSE cursor_data;
END */$$
DELIMITER ;

/* Procedure structure for procedure `report8soi2coi` */

/*!50003 DROP PROCEDURE IF EXISTS  `report8soi2coi` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `report8soi2coi`()
BEGIN
	declare vcoi_id INT(11);
	DECLARE vsoi_id INT(11);
	DECLARE vrate float;
	DECLARE done INT DEFAULT FALSE;
	DECLARE cursor_coi CURSOR FOR SELECT coi_id FROM _report_8coi;
	DECLARE cursor_data CURSOR FOR SELECT soi_id,coi_id,rate FROM _report_8data;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
	DROP TABLE IF EXISTS _report_8soi2coi;
	/*Khởi tạo bảng với các rows*/
	CREATE TABLE _report_8soi2coi(
		soi_id INT(11) PRIMARY KEY
	)ENGINE=MYISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
	insert into _report_8soi2coi(
		select soi_id from _report_8soi
	);
	/*Thêm các cột là coi_id*/
	OPEN cursor_coi;
	read_loop: LOOP
		FETCH cursor_coi INTO vcoi_id;
		IF done THEN
			LEAVE read_loop;
		END IF;
		set @q=concat('ALTER TABLE _report_8soi2coi ADD COLUMN `',vcoi_id,'` FLOAT DEFAULT 0');
		PREPARE stmt FROM @q;EXECUTE stmt;
	END LOOP;
	CLOSE cursor_coi;
	/*Cập nhật dữ liệu vào các cột*/
	set done=false;
	OPEN cursor_data;
	read_loop: LOOP
		FETCH cursor_data INTO vsoi_id,vcoi_id,vrate;
		IF done THEN
			LEAVE read_loop;
		END IF;
		SET @q=CONCAT('UPDATE _report_8soi2coi SET `',vcoi_id,'`=',vrate,' WHERE soi_id=',vsoi_id);
		PREPARE stmt FROM @q;EXECUTE stmt;
	END LOOP;
	CLOSE cursor_data;
END */$$
DELIMITER ;

/* Procedure structure for procedure `report9` */

/*!50003 DROP PROCEDURE IF EXISTS  `report9` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `report9`(IN p_edu_pro_id INT(11))
BEGIN
	/*
	CC_CO_R4TR = Test result - course outcome - ratio
	1. Table _report_9course
	2. Table _report_9soi
	3. Table _report_9data có course,SOI,rate,mark_cur,mark_max
	*/
	DROP TABLE IF EXISTS _report_9soi;
	DROP TABLE IF EXISTS _report_9course;
	DROP TABLE IF EXISTS _report_9data;
	CREATE TABLE _report_9course(
		course_id INT(11) PRIMARY KEY
	)ENGINE=MYISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
	INSERT INTO _report_9course(
		SELECT course_id
		FROM program_course_map
		WHERE edu_program_id=p_edu_pro_id
	);
	CREATE TABLE _report_9soi(
		soi_id INT(11) PRIMARY KEY
	)ENGINE=MYISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
	INSERT INTO _report_9soi(
		SELECT DISTINCT soi_id AS soi_id
		FROM student_outcome
			JOIN student_outcome_item USING(so_id)
		WHERE edu_program_id=p_edu_pro_id AND so_isused
	);
	CREATE TABLE _report_9data(
		soi_id INT(11),
		course_id INT(11),
		rate FLOAT DEFAULT -1,
		mark_cur INT(11) DEFAULT 0,
		mark_max INT(11) DEFAULT 0,
		PRIMARY KEY(soi_id,course_id)
	)ENGINE=MYISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
	
	INSERT INTO _report_9data
		SELECT soi_id, course_id, -1, SUM(mark_cur), SUM(mark_max)
		FROM test
			join taker_test_map using(test_id)
			JOIN taker_solution USING (taker_test_map_id)
			JOIN qco_map USING (question_id)
			JOIN _report_9course USING (course_id)/*Join này cần thiết để giới hạn course_id có nghĩa*/
			JOIN coi_soi_map using (coi_id)
			join _report_9soi USING (soi_id)/*Join này cần thiết để giới hạn soi_id có nghĩa*/
		GROUP BY soi_id,course_id;
	UPDATE _report_9data
		SET rate = mark_cur*100/mark_max
		WHERE mark_max>0;
	ALTER TABLE _report_9data
		DROP COLUMN mark_cur,
		DROP COLUMN mark_max;
END */$$
DELIMITER ;

/* Procedure structure for procedure `report9course2soi` */

/*!50003 DROP PROCEDURE IF EXISTS  `report9course2soi` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `report9course2soi`()
BEGIN
	declare vsoi_id INT(11);
	DECLARE vcourse_id INT(11);
	DECLARE vrate float;
	DECLARE done INT DEFAULT FALSE;
	DECLARE cursor_soi CURSOR FOR SELECT soi_id FROM _report_9soi;
	DECLARE cursor_data CURSOR FOR SELECT soi_id,course_id,rate FROM _report_9data;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
	DROP TABLE IF EXISTS _report_9course2soi;
	/*Khởi tạo bảng với các rows*/
	CREATE TABLE _report_9course2soi(
		course_id INT(11) PRIMARY KEY
	)ENGINE=MYISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
	insert into _report_9course2soi(
		select course_id from _report_9course
	);
	/*Thêm các cột là soi_id*/
	OPEN cursor_soi;
	read_loop: LOOP
		FETCH cursor_soi INTO vsoi_id;
		IF done THEN
			LEAVE read_loop;
		END IF;
		set @q=concat('ALTER TABLE _report_9course2soi ADD COLUMN `',vsoi_id,'` FLOAT DEFAULT 0');
		PREPARE stmt FROM @q;EXECUTE stmt;
	END LOOP;
	CLOSE cursor_soi;
	/*Cập nhật dữ liệu vào các cột*/
	set done=false;
	OPEN cursor_data;
	read_loop: LOOP
		FETCH cursor_data INTO vsoi_id,vcourse_id,vrate;
		IF done THEN
			LEAVE read_loop;
		END IF;
		SET @q=CONCAT('UPDATE _report_9course2soi SET `',vsoi_id,'`=',vrate,' WHERE course_id=',vcourse_id);
		PREPARE stmt FROM @q;EXECUTE stmt;
	END LOOP;
	CLOSE cursor_data;
END */$$
DELIMITER ;

/* Procedure structure for procedure `report9soi2course` */

/*!50003 DROP PROCEDURE IF EXISTS  `report9soi2course` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `report9soi2course`()
BEGIN
	declare vcourse_id INT(11);
	DECLARE vsoi_id INT(11);
	DECLARE vrate float;
	DECLARE done INT DEFAULT FALSE;
	DECLARE cursor_course CURSOR FOR SELECT course_id FROM _report_9course;
	DECLARE cursor_data CURSOR FOR SELECT soi_id,course_id,rate FROM _report_9data;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
	DROP TABLE IF EXISTS _report_9soi2course;
	/*Khởi tạo bảng với các rows*/
	CREATE TABLE _report_9soi2course(
		soi_id INT(11) PRIMARY KEY
	)ENGINE=MYISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
	insert into _report_9soi2course(
		select soi_id from _report_9soi
	);
	/*Thêm các cột là course_id*/
	OPEN cursor_course;
	read_loop: LOOP
		FETCH cursor_course INTO vcourse_id;
		IF done THEN
			LEAVE read_loop;
		END IF;
		set @q=concat('ALTER TABLE _report_9soi2course ADD COLUMN `',vcourse_id,'` FLOAT DEFAULT 0');
		PREPARE stmt FROM @q;EXECUTE stmt;
	END LOOP;
	CLOSE cursor_course;
	/*Cập nhật dữ liệu vào các cột*/
	set done=false;
	OPEN cursor_data;
	read_loop: LOOP
		FETCH cursor_data INTO vsoi_id,vcourse_id,vrate;
		IF done THEN
			LEAVE read_loop;
		END IF;
		SET @q=CONCAT('UPDATE _report_9soi2course SET `',vcourse_id,'`=',vrate,' WHERE soi_id=',vsoi_id);
		PREPARE stmt FROM @q;EXECUTE stmt;
	END LOOP;
	CLOSE cursor_data;
END */$$
DELIMITER ;

/* Procedure structure for procedure `report_CC_CO_R4T` */

/*!50003 DROP PROCEDURE IF EXISTS  `report_CC_CO_R4T` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `report_CC_CO_R4T`(IN p_test_id INT(11))
BEGIN
	/*Course content - course outcome - ratio for a test*/
	DROP TABLE IF EXISTS _cc_co_r4t_data;
	DROP TABLE IF EXISTS _cc_co_r4t_cc_coi;
	DROP TABLE IF EXISTS _cc_co_r4t_coi;
	CREATE TABLE _cc_co_r4t_data(
		course_content_id INT(11) PRIMARY KEY,
		total INT(11)
	)ENGINE=MYISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
	/*Xác định course_id*/
	SELECT course_id from test where test_id=p_test_id into @course_id;
	/*Xác định tổng số điểm của đề thi = tổng điểm của các câu hỏi trong đề, nếu câu hỏi thuộc n CO thì điểm của câu đó được tính n lần*/
	SELECT SUM(test_question_map_score)
	FROM test
		JOIN test_section USING (test_id)
		JOIN test_question_map USING (test_section_id)
		JOIN qco_map ON (testmode_question_id = qco_map.question_id)
		JOIN question USING (question_id)
		JOIN course_outcome_item USING (coi_id)
		JOIN course_outcome USING (co_id)
	WHERE co_isused AND test_id=p_test_id AND course_content_id IS NOT NULL
	GROUP BY test_id INTO @total;
	INSERT INTO _cc_co_r4t_data (
		SELECT course_content_id, @total
		FROM course_content
		WHERE course_id=@course_id
	);
	/*Add column for _cc_co_r4t_data, each coi_id have a column: coi_<id>*/
	CREATE TEMPORARY TABLE _cc_co_r4t_coi
		SELECT coi_id
		FROM course_outcome
			join course_outcome_item using(co_id)
		where course_id=@course_id AND co_isused;
	SELECT COUNT(*) FROM _cc_co_r4t_coi INTO @count;
	WHILE @count>0 DO
		SELECT coi_id FROM _cc_co_r4t_coi LIMIT 1 INTO @coi_id;
		DELETE FROM _cc_co_r4t_coi WHERE coi_id=@coi_id;
		SET @count=@count-1;
		SET @q = CONCAT('ALTER TABLE _cc_co_r4t_data ADD COLUMN coi_',@coi_id,' INT(11) DEFAULT 0');
		PREPARE stmt FROM @q;EXECUTE stmt;
	END WHILE;
	/*cc_co_r4t_countq*/
	CREATE TEMPORARY TABLE _cc_co_r4t_cc_coi
		SELECT course_content_id, coi_id, SUM(test_question_map_score) AS total
		FROM `test`
			JOIN test_section USING (test_id)
			JOIN test_question_map USING (test_section_id)
			JOIN qco_map ON (testmode_question_id = qco_map.question_id)
			JOIN question USING (question_id)
			JOIN course_outcome_item USING (coi_id)
			JOIN course_outcome USING (co_id)
		WHERE co_isused AND test_id=p_test_id AND course_content_id is not null
		GROUP BY course_content_id,coi_id;
	/*Update number question for each coi in _cc_co_r4t_data*/
	SELECT COUNT(*) FROM _cc_co_r4t_cc_coi INTO @count;
	WHILE @count>0 DO
		SELECT * FROM _cc_co_r4t_cc_coi LIMIT 1 INTO @cc_id,@coi_id,@total;
		DELETE FROM _cc_co_r4t_cc_coi WHERE course_content_id=@cc_id AND coi_id=@coi_id;
		SET @count=@count-1;
		SET @q = CONCAT('UPDATE _cc_co_r4t_data SET coi_',@coi_id,'=',@total,' WHERE course_content_id=',@cc_id);
		PREPARE stmt FROM @q;EXECUTE stmt;
	END WHILE;
END */$$
DELIMITER ;

/* Procedure structure for procedure `report_TRCOR` */

/*!50003 DROP PROCEDURE IF EXISTS  `report_TRCOR` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `report_TRCOR`(IN p_course_id INT(11))
BEGIN
	/*TRCOR = Test result - course outcome - ratio*/
	DROP TABLE IF EXISTS _report_trcor;
	DROP TABLE IF EXISTS _report_trcor_data;
	DROP TABLE IF EXISTS _trcor_test_coi;
	DROP TABLE IF EXISTS _trcor_coi;
	DROP TABLE IF EXISTS _trcor_answer;
	CREATE TABLE _report_trcor(
		test_id INT(11) PRIMARY KEY,
		number_taker INT(11)
	)ENGINE=MYISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
	CREATE TEMPORARY TABLE _report_trcor_data(
		test_id INT(11),
		coi_id INT(11),
		rate float default 0,
		total int(11) default 0,
		PRIMARY KEY(test_id,coi_id)
	)ENGINE=MYISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
	INSERT INTO _report_trcor (
		SELECT test_id, COUNT(taker_test_map_id) AS number_taker
		FROM `test`
			JOIN taker_test_map USING(test_id)
		WHERE course_id=p_course_id
		group by test_id
	);
	/*TRCOR_countq*/
	CREATE TEMPORARY TABLE _trcor_test_coi
		SELECT A.test_id, coi_id, coi_code, COUNT(coi_id) AS count_question
		FROM `test` A
		    JOIN test_section USING (test_id)
		    JOIN test_question_map USING (test_section_id)
		    JOIN qco_map ON (testmode_question_id = qco_map.question_id)
		    JOIN course_outcome_item USING (coi_id)
		    JOIN course_outcome B USING (co_id)
		WHERE co_isused AND A.course_id=p_course_id AND B.course_id=A.course_id
		GROUP BY A.test_id,coi_id;
	CREATE TEMPORARY TABLE _trcor_coi
		SELECT DISTINCT coi_id,coi_code FROM _trcor_test_coi;
	/*Add column for _report_trcor, each coi_id have two column: coi_id_rq, coi_id_nq*/
	SELECT COUNT(*) FROM _trcor_coi INTO @count;
	WHILE @count>0 DO
		SELECT coi_id,coi_code FROM _trcor_coi LIMIT 1 INTO @coi_id,@coi_code;
		DELETE FROM _trcor_coi WHERE coi_id=@coi_id;
		SET @count=@count-1;
		SET @q = CONCAT('ALTER TABLE _report_trcor ADD COLUMN coi_',@coi_id,'_rq INT(11) DEFAULT 0',
			', ADD COLUMN coi_',@coi_id,'_nq INT(11) DEFAULT 0',
			', ADD COLUMN coi_',@coi_id,'_rate float DEFAULT -1');
		PREPARE stmt FROM @q;EXECUTE stmt;
	END WHILE;
	/*Update number question for each coi in _report_trcor*/
	SELECT COUNT(*) FROM _trcor_test_coi INTO @count;
	WHILE @count>0 DO
		SELECT * FROM _trcor_test_coi LIMIT 1 INTO @test_id,@coi_id,@coi_code,@nq;
		DELETE FROM _trcor_test_coi WHERE test_id=@test_id AND coi_id=@coi_id;
		SET @count=@count-1;
		SET @q = CONCAT('UPDATE _report_trcor SET coi_',@coi_id,'_nq=',@nq,'*number_taker WHERE test_id=',@test_id);
		PREPARE stmt FROM @q;EXECUTE stmt;
		SELECT number_taker from _report_trcor where test_id=@test_id into @number_taker;
		INSERT INTO _report_trcor_data SET test_id=@test_id, coi_id=@coi_id,total=@nq*@number_taker;
	END WHILE;
	
	CREATE TEMPORARY TABLE _trcor_answer
		SELECT A.test_id, coi_id, coi_code, COUNT(coi_id) AS count_question
		FROM `test` A
			JOIN `taker_test_map` USING (test_id)
			JOIN `taker_solution` USING (`taker_test_map_id`)
			JOIN qco_map USING (question_id)
			JOIN course_outcome_item USING (coi_id)
			JOIN course_outcome B USING (co_id)
		WHERE co_isused AND A.course_id=p_course_id AND B.course_id=A.course_id AND mark_max=mark_cur
		GROUP BY A.test_id,coi_id;
	/*Update number right answer for each coi in _report_trcor*/
	SELECT COUNT(*) FROM _trcor_answer INTO @count;
	WHILE @count>0 DO
		SELECT * FROM _trcor_answer LIMIT 1 INTO @test_id,@coi_id,@coi_code,@rq;
		DELETE FROM _trcor_answer WHERE test_id=@test_id AND coi_id=@coi_id;
		SET @count=@count-1;
		SET @q = CONCAT('UPDATE _report_trcor SET coi_',@coi_id,'_rq=',@rq,',coi_',@coi_id,'_rate=',@rq*100.0,'/coi_',@coi_id,'_nq WHERE test_id=',@test_id);
		PREPARE stmt FROM @q;EXECUTE stmt;
		UPDATE _report_trcor_data SET rate=@rq*100.0/total WHERE test_id=@test_id AND coi_id=@coi_id;
	END WHILE;
	/*Chuyển table _report_trcor_data thành COI_ID=Row heading, TEST_ID=Column heading, Rate=Value*/
	DROP TABLE IF EXISTS _report_trcor_chart;
	CREATE TABLE _report_trcor_chart(
		coi_id INT(11) primary key,
		coi_code CHAR(5)
	)ENGINE=MYISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
	insert into _report_trcor_chart (
		select distinct coi_id,coi_code
		from course_outcome_item JOIN _report_trcor_data using (coi_id)
	);
	drop table if exists _report_test_column;
	create temporary table _report_test_column(
		select distinct test_code
		from test join _report_trcor_data using(test_id)
	);
	SELECT COUNT(*) FROM _report_test_column INTO @count;
	WHILE @count>0 DO
		SELECT * FROM _report_test_column LIMIT 1 INTO @test_code;
		DELETE FROM _report_test_column WHERE test_code=@test_code;
		SET @count=@count-1;
		SET @q = CONCAT('ALTER TABLE _report_trcor_chart ADD COLUMN `',@test_code,'` float default 0');
		PREPARE stmt FROM @q;EXECUTE stmt;
	END WHILE;
	SELECT COUNT(*) FROM _report_trcor_data INTO @count;
	WHILE @count>0 DO
		SELECT test_id,test_code,coi_id,rate
			FROM _report_trcor_data join test using (test_id)
			LIMIT 1
			INTO @test_id,@test_code,@coi_id,@rate;
		DELETE FROM _report_trcor_data WHERE test_id=@test_id AND coi_id=@coi_id;
		SET @count=@count-1;
		SET @q = CONCAT('UPDATE _report_trcor_chart SET `',@test_code,'`=',@rate,' WHERE coi_id=',@coi_id);
		PREPARE stmt FROM @q;EXECUTE stmt;
	END WHILE;
END */$$
DELIMITER ;

/* Procedure structure for procedure `SOI2PEOI_map_pivot` */

/*!50003 DROP PROCEDURE IF EXISTS  `SOI2PEOI_map_pivot` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `SOI2PEOI_map_pivot`(
	IN p_so_id INT(11),
	IN p_edu_program_id INT(11)
)
BEGIN
	SET @pivotcolumn=NULL;
	SELECT GROUP_CONCAT('SUM(IF(M.peoi_id=',PEOI.peoi_id,',1,0)) AS PEOI_',PEOI.peoi_id,'_',PEOI.peoi_code) INTO @pivotcolumn
	FROM peo
		JOIN peo_item PEOI USING(peo_id)
	WHERE edu_program_id=p_edu_program_id AND peo.peo_isused;
	
	SET @sql = CONCAT('
	SELECT SOI.*,',@pivotcolumn,'
	FROM student_outcome_item SOI
		LEFT JOIN peoi_soi_map M USING(soi_id)
	WHERE SOI.so_id=',p_so_id,'
	GROUP BY SOI.soi_id
	');
	PREPARE stmt FROM @sql;
	EXECUTE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `SO_map_column` */

/*!50003 DROP PROCEDURE IF EXISTS  `SO_map_column` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `SO_map_column`(IN p_edu_program_id INT(11))
BEGIN
	SELECT CONCAT('SOI_',SOI.soi_id,'_',SOI.soi_code) as `name`, SOI.*
	FROM student_outcome SO
		JOIN student_outcome_item SOI USING(so_id)
	WHERE edu_program_id=p_edu_program_id AND SO.so_isused;
END */$$
DELIMITER ;

/*Table structure for table `_view_question_in_course` */

DROP TABLE IF EXISTS `_view_question_in_course`;

/*!50001 DROP VIEW IF EXISTS `_view_question_in_course` */;
/*!50001 DROP TABLE IF EXISTS `_view_question_in_course` */;

/*!50001 CREATE TABLE  `_view_question_in_course`(
 `course_content_id` int(11) ,
 `course_id` int(11) ,
 `question_id` int(11) ,
 `question_type_id` int(11) ,
 `user_id` int(11) ,
 `bloom_level_id` int(11) ,
 `question_desc` text ,
 `question_in_test` tinyint(1) 
)*/;

/*View structure for view _view_question_in_course */

/*!50001 DROP TABLE IF EXISTS `_view_question_in_course` */;
/*!50001 DROP VIEW IF EXISTS `_view_question_in_course` */;

/*!50001 CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `_view_question_in_course` AS (select `b`.`course_content_id` AS `course_content_id`,`b`.`course_id` AS `course_id`,`a`.`question_id` AS `question_id`,`a`.`question_type_id` AS `question_type_id`,`a`.`user_id` AS `user_id`,`a`.`bloom_level_id` AS `bloom_level_id`,`a`.`question_desc` AS `question_desc`,`a`.`question_in_test` AS `question_in_test` from ((((`question` `a` join `qgroup_question_map` on((`a`.`question_id` = `qgroup_question_map`.`question_id`))) join `question_group` on((`qgroup_question_map`.`question_group_id` = `question_group`.`question_group_id`))) join `qgroup_content_map` on((`qgroup_question_map`.`question_group_id` = `qgroup_content_map`.`question_group_id`))) join `course_content` `b` on((`qgroup_content_map`.`course_content_id` = `b`.`course_content_id`))) group by `a`.`question_id`) */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
